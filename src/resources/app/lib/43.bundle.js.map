{"version":3,"sources":["webpack:///./node_modules/@theia/output/src/browser/output-context-menu.ts","webpack:///./node_modules/@theia/output/src/browser/output-contribution.ts"],"names":[],"mappings":"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","file":"43.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { injectable } from 'inversify';\nimport { MenuPath } from '@theia/core/lib/common';\nimport { MonacoContextMenuService } from '@theia/monaco/lib/browser/monaco-context-menu';\n\nexport namespace OutputContextMenu {\n    export const MENU_PATH: MenuPath = ['output_context_menu'];\n    export const TEXT_EDIT_GROUP = [...MENU_PATH, '0_text_edit_group'];\n    export const COMMAND_GROUP = [...MENU_PATH, '1_command_group'];\n    export const WIDGET_GROUP = [...MENU_PATH, '2_widget_group'];\n}\n\n@injectable()\nexport class OutputContextMenuService extends MonacoContextMenuService {\n\n    protected menuPath(): MenuPath {\n        return OutputContextMenu.MENU_PATH;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Widget } from '@theia/core/lib/browser/widgets/widget';\nimport { MaybePromise } from '@theia/core/lib/common/types';\nimport { CommonCommands, quickCommand, OpenHandler, open, OpenerOptions, OpenerService } from '@theia/core/lib/browser';\nimport { CommandRegistry, MenuModelRegistry, CommandService } from '@theia/core/lib/common';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { OutputWidget } from './output-widget';\nimport { OutputContextMenu } from './output-context-menu';\nimport { OutputUri } from '../common/output-uri';\nimport { ClipboardService } from '@theia/core/lib/browser/clipboard-service';\nimport { OutputChannelManager } from '../common/output-channel';\nimport { OutputCommands } from './output-commands';\n\n@injectable()\nexport class OutputContribution extends AbstractViewContribution<OutputWidget> implements OpenHandler {\n\n    @inject(ClipboardService)\n    protected readonly clipboardService: ClipboardService;\n\n    @inject(CommandService)\n    protected readonly commandService: CommandService;\n\n    @inject(OutputChannelManager)\n    protected readonly outputChannelManager: OutputChannelManager;\n\n    @inject(OpenerService)\n    protected readonly openerService: OpenerService;\n\n    readonly id: string = `${OutputWidget.ID}-opener`;\n\n    constructor() {\n        super({\n            widgetId: OutputWidget.ID,\n            widgetName: 'Output',\n            defaultWidgetOptions: {\n                area: 'bottom'\n            },\n            toggleCommandId: 'output:toggle',\n            toggleKeybinding: 'CtrlCmd+Shift+U'\n        });\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.outputChannelManager.onChannelWasShown(({ name, preserveFocus }) =>\n            open(this.openerService, OutputUri.create(name), { activate: !preserveFocus, reveal: true }));\n    }\n\n    registerCommands(registry: CommandRegistry): void {\n        super.registerCommands(registry);\n        registry.registerCommand(OutputCommands.CLEAR__WIDGET, {\n            isEnabled: arg => {\n                if (arg instanceof Widget) {\n                    return arg instanceof OutputWidget;\n                }\n                return this.shell.currentWidget instanceof OutputWidget;\n            },\n            isVisible: arg => {\n                if (arg instanceof Widget) {\n                    return arg instanceof OutputWidget;\n                }\n                return this.shell.currentWidget instanceof OutputWidget;\n            },\n            execute: () => {\n                this.widget.then(widget => {\n                    this.withWidget(widget, output => {\n                        output.clear();\n                        return true;\n                    });\n                });\n            }\n        });\n        registry.registerCommand(OutputCommands.LOCK__WIDGET, {\n            isEnabled: widget => this.withWidget(widget, output => !output.isLocked),\n            isVisible: widget => this.withWidget(widget, output => !output.isLocked),\n            execute: widget => this.withWidget(widget, output => {\n                output.lock();\n                return true;\n            })\n        });\n        registry.registerCommand(OutputCommands.UNLOCK__WIDGET, {\n            isEnabled: widget => this.withWidget(widget, output => output.isLocked),\n            isVisible: widget => this.withWidget(widget, output => output.isLocked),\n            execute: widget => this.withWidget(widget, output => {\n                output.unlock();\n                return true;\n            })\n        });\n        registry.registerCommand(OutputCommands.COPY_ALL, {\n            execute: () => {\n                const textToCopy = this.tryGetWidget()?.getText();\n                if (textToCopy) {\n                    this.clipboardService.writeText(textToCopy);\n                }\n            }\n        });\n    }\n\n    registerMenus(registry: MenuModelRegistry): void {\n        super.registerMenus(registry);\n        registry.registerMenuAction(OutputContextMenu.TEXT_EDIT_GROUP, {\n            commandId: CommonCommands.COPY.id\n        });\n        registry.registerMenuAction(OutputContextMenu.TEXT_EDIT_GROUP, {\n            commandId: OutputCommands.COPY_ALL.id,\n            label: 'Copy All'\n        });\n        registry.registerMenuAction(OutputContextMenu.COMMAND_GROUP, {\n            commandId: quickCommand.id,\n            label: 'Find Command...'\n        });\n        registry.registerMenuAction(OutputContextMenu.WIDGET_GROUP, {\n            commandId: OutputCommands.CLEAR__WIDGET.id,\n            label: 'Clear Output'\n        });\n    }\n\n    canHandle(uri: URI): MaybePromise<number> {\n        return OutputUri.is(uri) ? 200 : 0;\n    }\n\n    async open(uri: URI, options?: OpenerOptions): Promise<OutputWidget> {\n        if (!OutputUri.is(uri)) {\n            throw new Error(`Expected '${OutputUri.SCHEME}' URI scheme. Got: ${uri} instead.`);\n        }\n        const widget = await this.openView(options);\n        return widget;\n    }\n\n    protected withWidget(\n        widget: Widget | undefined = this.tryGetWidget(),\n        predicate: (output: OutputWidget) => boolean = () => true\n    ): boolean | false {\n        return widget instanceof OutputWidget ? predicate(widget) : false;\n    }\n}\n"],"sourceRoot":""}