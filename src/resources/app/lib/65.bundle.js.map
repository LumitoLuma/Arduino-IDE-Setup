{"version":3,"sources":["webpack:///./node_modules/@theia/markers/src/browser/marker-tree-label-provider.ts","webpack:///./node_modules/@theia/markers/src/browser/problem/problem-container.ts","webpack:///./node_modules/@theia/markers/src/browser/problem/problem-decorator.ts","webpack:///./node_modules/@theia/markers/src/browser/problem/problem-frontend-module.ts","webpack:///./node_modules/@theia/markers/src/browser/problem/problem-layout-migrations.ts","webpack:///./node_modules/@theia/markers/src/browser/problem/problem-tabbar-decorator.ts","webpack:///./node_modules/@theia/markers/src/browser/style/index.css?6894","webpack:///./node_modules/@theia/navigator/src/browser/navigator-decorator-service.ts","webpack:///./node_modules/@theia/workspace/src/browser/index.ts","webpack:///./node_modules/@theia/markers/src/browser/style/index.css"],"names":[],"mappings":"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","file":"65.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { LabelProvider, LabelProviderContribution, DidChangeLabelEvent } from '@theia/core/lib/browser/label-provider';\nimport { MarkerInfoNode } from './marker-tree';\nimport { TreeLabelProvider } from '@theia/core/lib/browser/tree/tree-label-provider';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\n\n@injectable()\nexport class MarkerTreeLabelProvider implements LabelProviderContribution {\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(TreeLabelProvider)\n    protected readonly treeLabelProvider: TreeLabelProvider;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    canHandle(element: object): number {\n        return MarkerInfoNode.is(element) ?\n            this.treeLabelProvider.canHandle(element) + 1 :\n            0;\n    }\n\n    getIcon(node: MarkerInfoNode): string {\n        return this.labelProvider.getIcon(node.uri);\n    }\n\n    getName(node: MarkerInfoNode): string {\n        return this.labelProvider.getName(node.uri);\n    }\n\n    getLongName(node: MarkerInfoNode): string {\n        const description: string[] = [];\n        const rootUri = this.workspaceService.getWorkspaceRootUri(node.uri);\n        // In a multiple-root workspace include the root name to the label before the parent directory.\n        if (this.workspaceService.isMultiRootWorkspaceOpened && rootUri) {\n            description.push(this.labelProvider.getName(rootUri));\n        }\n        // If the given resource is not at the workspace root, include the parent directory to the label.\n        if (rootUri && rootUri.toString() !== node.uri.parent.toString()) {\n            description.push(this.labelProvider.getLongName(node.uri.parent));\n        }\n        // Get the full path of a resource which does not exist in the given workspace.\n        if (!rootUri) {\n            description.push(this.labelProvider.getLongName(node.uri.parent.withScheme('markers')));\n        }\n        return description.join(' ● ');\n    }\n\n    getDescription(node: MarkerInfoNode): string {\n        return this.labelProvider.getLongName(node.uri.parent);\n    }\n\n    affects(node: MarkerInfoNode, event: DidChangeLabelEvent): boolean {\n        return event.affects(node.uri) || event.affects(node.uri.parent);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces, Container } from 'inversify';\nimport { MarkerOptions } from '../marker-tree';\nimport { ProblemWidget } from './problem-widget';\nimport { ProblemTreeModel, ProblemTree } from './problem-tree-model';\nimport { TreeWidget, TreeProps, defaultTreeProps, TreeModel, createTreeContainer, TreeModelImpl, TreeImpl, Tree } from '@theia/core/lib/browser';\nimport { PROBLEM_KIND } from '../../common/problem-marker';\n\nexport const PROBLEM_TREE_PROPS = <TreeProps>{\n    ...defaultTreeProps,\n    contextMenuPath: [PROBLEM_KIND],\n    globalSelection: true\n};\n\nexport const PROBLEM_OPTIONS = <MarkerOptions>{\n    kind: 'problem'\n};\n\nexport function createProblemTreeContainer(parent: interfaces.Container): Container {\n    const child = createTreeContainer(parent);\n\n    child.unbind(TreeImpl);\n    child.bind(ProblemTree).toSelf();\n    child.rebind(Tree).toService(ProblemTree);\n\n    child.unbind(TreeWidget);\n    child.bind(ProblemWidget).toSelf();\n\n    child.unbind(TreeModelImpl);\n    child.bind(ProblemTreeModel).toSelf();\n    child.rebind(TreeModel).toService(ProblemTreeModel);\n\n    child.rebind(TreeProps).toConstantValue(PROBLEM_TREE_PROPS);\n    child.bind(MarkerOptions).toConstantValue(PROBLEM_OPTIONS);\n    return child;\n}\n\nexport function createProblemWidget(parent: interfaces.Container): ProblemWidget {\n    return createProblemTreeContainer(parent).get(ProblemWidget);\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { Diagnostic, DiagnosticSeverity } from 'vscode-languageserver-types';\nimport URI from '@theia/core/lib/common/uri';\nimport { notEmpty } from '@theia/core/lib/common/objects';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { Tree } from '@theia/core/lib/browser/tree/tree';\nimport { DepthFirstTreeIterator } from '@theia/core/lib/browser/tree/tree-iterator';\nimport { TreeDecorator, TreeDecoration } from '@theia/core/lib/browser/tree/tree-decorator';\nimport { FileStatNode } from '@theia/filesystem/lib/browser';\nimport { Marker } from '../../common/marker';\nimport { ProblemManager } from './problem-manager';\nimport { ProblemPreferences, ProblemConfiguration } from './problem-preferences';\nimport { PreferenceChangeEvent } from '@theia/core/lib/browser';\nimport { ProblemUtils } from './problem-utils';\n\n@injectable()\nexport class ProblemDecorator implements TreeDecorator {\n\n    @inject(ProblemPreferences)\n    protected problemPreferences: ProblemPreferences;\n\n    readonly id = 'theia-problem-decorator';\n\n    protected readonly emitter: Emitter<(tree: Tree) => Map<string, TreeDecoration.Data>>;\n\n    constructor(@inject(ProblemManager) protected readonly problemManager: ProblemManager) {\n        this.emitter = new Emitter();\n        this.problemManager.onDidChangeMarkers(() => this.fireDidChangeDecorations((tree: Tree) => this.collectDecorators(tree)));\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.problemPreferences.onPreferenceChanged((event: PreferenceChangeEvent<ProblemConfiguration>) => {\n            const { preferenceName } = event;\n            if (preferenceName === 'problems.decorations.enabled') {\n                this.fireDidChangeDecorations((tree: Tree) => this.collectDecorators(tree));\n            }\n        });\n    }\n\n    async decorations(tree: Tree): Promise<Map<string, TreeDecoration.Data>> {\n        return this.collectDecorators(tree);\n    }\n\n    get onDidChangeDecorations(): Event<(tree: Tree) => Map<string, TreeDecoration.Data>> {\n        return this.emitter.event;\n    }\n\n    protected fireDidChangeDecorations(event: (tree: Tree) => Map<string, TreeDecoration.Data>): void {\n        this.emitter.fire(event);\n    }\n\n    protected collectDecorators(tree: Tree): Map<string, TreeDecoration.Data> {\n\n        const result = new Map();\n\n        // If the tree root is undefined or the preference for the decorations is disabled, return an empty result map.\n        if (tree.root === undefined || !this.problemPreferences['problems.decorations.enabled']) {\n            return result;\n        }\n        const markers = this.appendContainerMarkers(tree, this.collectMarkers(tree));\n        for (const node of new DepthFirstTreeIterator(tree.root)) {\n            const nodeUri = FileStatNode.getUri(node);\n            if (nodeUri) {\n                const marker = markers.get(nodeUri);\n                if (marker) {\n                    result.set(node.id, marker);\n                }\n            }\n        }\n        return new Map(Array.from(result.entries()).map(m => [m[0], this.toDecorator(m[1])] as [string, TreeDecoration.Data]));\n    }\n\n    protected appendContainerMarkers(tree: Tree, markers: Marker<Diagnostic>[]): Map<string, Marker<Diagnostic>> {\n        const result: Map<string, Marker<Diagnostic>> = new Map();\n        // We traverse up and assign the diagnostic to the container directory.\n        // Note, instead of stopping at the WS root, we traverse up the driver root.\n        // We will filter them later based on the expansion state of the tree.\n        for (const [uri, marker] of new Map(markers.map(m => [new URI(m.uri), m] as [URI, Marker<Diagnostic>])).entries()) {\n            const uriString = uri.toString();\n            result.set(uriString, marker);\n            let parentUri: URI | undefined = uri.parent;\n            while (parentUri && !parentUri.path.isRoot) {\n                const parentUriString = parentUri.toString();\n                const existing = result.get(parentUriString);\n                // Make sure the highest diagnostic severity (smaller number) will be propagated to the container directory.\n                if (existing === undefined || this.compare(marker, existing) < 0) {\n                    result.set(parentUriString, {\n                        data: marker.data,\n                        uri: parentUriString,\n                        owner: marker.owner,\n                        kind: marker.kind\n                    });\n                    parentUri = parentUri.parent;\n                } else {\n                    parentUri = undefined;\n                }\n            }\n        }\n        return result;\n    }\n\n    protected collectMarkers(tree: Tree): Marker<Diagnostic>[] {\n        return Array.from(this.problemManager.getUris())\n            .map(uri => new URI(uri))\n            .map(uri => this.problemManager.findMarkers({ uri }))\n            .map(markers => markers.sort(this.compare.bind(this)))\n            .map(markers => markers.shift())\n            .filter(notEmpty)\n            .filter(this.filterMarker.bind(this));\n    }\n\n    protected toDecorator(marker: Marker<Diagnostic>): TreeDecoration.Data {\n        const position = TreeDecoration.IconOverlayPosition.BOTTOM_RIGHT;\n        const icon = this.getOverlayIcon(marker);\n        const color = this.getOverlayIconColor(marker);\n        const priority = this.getPriority(marker);\n        return {\n            priority,\n            fontData: {\n                color,\n            },\n            iconOverlay: {\n                position,\n                icon,\n                color,\n                background: {\n                    shape: 'circle',\n                    color: 'transparent'\n                }\n            },\n        };\n    }\n\n    protected getOverlayIcon(marker: Marker<Diagnostic>): string {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 'times-circle';\n            case 2: return 'exclamation-circle';\n            case 3: return 'info-circle';\n            default: return 'hand-o-up';\n        }\n    }\n\n    protected getOverlayIconColor(marker: Marker<Diagnostic>): TreeDecoration.Color {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 'var(--theia-editorError-foreground)';\n            case 2: return 'var(--theia-editorWarning-foreground)';\n            case 3: return 'var(--theia-editorInfo-foreground)';\n            default: return 'var(--theia-successBackground)';\n        }\n    }\n\n    /**\n     * Get the decoration for a given marker diagnostic.\n     * Markers with higher severity have a higher priority and should be displayed.\n     * @param marker the diagnostic marker.\n     */\n    protected getPriority(marker: Marker<Diagnostic>): number {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 30; // Errors.\n            case 2: return 20; // Warnings.\n            case 3: return 10; // Infos.\n            default: return 0;\n        }\n    }\n\n    /**\n     * Returns `true` if the diagnostic (`data`) of the marker argument has `Error`, `Warning`, or `Information` severity.\n     * Otherwise, returns `false`.\n     */\n    protected filterMarker(marker: Marker<Diagnostic>): boolean {\n        const { severity } = marker.data;\n        return severity === DiagnosticSeverity.Error\n            || severity === DiagnosticSeverity.Warning\n            || severity === DiagnosticSeverity.Information;\n    }\n\n    protected compare(left: Marker<Diagnostic>, right: Marker<Diagnostic>): number {\n        return ProblemDecorator.severityCompare(left, right);\n    }\n\n}\n\nexport namespace ProblemDecorator {\n\n    // Highest severities (errors) come first, then the others. Undefined severities treated as the last ones.\n    export const severityCompare = ProblemUtils.severityCompare;\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport '../../../src/browser/style/index.css';\n\nimport { ContainerModule } from 'inversify';\nimport { ProblemWidget, PROBLEMS_WIDGET_ID } from './problem-widget';\nimport { ProblemContribution } from './problem-contribution';\nimport { createProblemWidget } from './problem-container';\nimport { FrontendApplicationContribution, bindViewContribution, ApplicationShellLayoutMigration, LabelProviderContribution } from '@theia/core/lib/browser';\nimport { ProblemManager } from './problem-manager';\nimport { WidgetFactory } from '@theia/core/lib/browser/widget-manager';\nimport { NavigatorTreeDecorator } from '@theia/navigator/lib/browser/navigator-decorator-service';\nimport { ProblemDecorator } from './problem-decorator';\nimport { ProblemTabBarDecorator } from './problem-tabbar-decorator';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { ProblemLayoutVersion3Migration } from './problem-layout-migrations';\nimport { TabBarDecorator } from '@theia/core/lib/browser/shell/tab-bar-decorator';\nimport { bindProblemPreferences } from './problem-preferences';\nimport { MarkerTreeLabelProvider } from '../marker-tree-label-provider';\n\nexport default new ContainerModule(bind => {\n    bindProblemPreferences(bind);\n\n    bind(ProblemManager).toSelf().inSingletonScope();\n\n    bind(ProblemWidget).toDynamicValue(ctx =>\n        createProblemWidget(ctx.container)\n    );\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: PROBLEMS_WIDGET_ID,\n        createWidget: () => context.container.get<ProblemWidget>(ProblemWidget)\n    }));\n    bind(ApplicationShellLayoutMigration).to(ProblemLayoutVersion3Migration).inSingletonScope();\n\n    bindViewContribution(bind, ProblemContribution);\n    bind(FrontendApplicationContribution).toService(ProblemContribution);\n    bind(TabBarToolbarContribution).toService(ProblemContribution);\n\n    bind(ProblemDecorator).toSelf().inSingletonScope();\n    bind(NavigatorTreeDecorator).toService(ProblemDecorator);\n    bind(ProblemTabBarDecorator).toSelf().inSingletonScope();\n    bind(TabBarDecorator).toService(ProblemTabBarDecorator);\n\n    bind(MarkerTreeLabelProvider).toSelf().inSingletonScope();\n    bind(LabelProviderContribution).toService(MarkerTreeLabelProvider);\n});\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { ApplicationShellLayoutMigration, WidgetDescription } from '@theia/core/lib/browser/shell/shell-layout-restorer';\nimport { PROBLEM_KIND } from '../../common/problem-marker';\nimport { PROBLEMS_WIDGET_ID } from './problem-widget';\n\n@injectable()\nexport class ProblemLayoutVersion3Migration implements ApplicationShellLayoutMigration {\n    readonly layoutVersion = 3.0;\n    onWillInflateWidget(desc: WidgetDescription): WidgetDescription | undefined {\n        if (desc.constructionOptions.factoryId === PROBLEM_KIND) {\n            desc.constructionOptions.factoryId = PROBLEMS_WIDGET_ID;\n            return desc;\n        }\n        return undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { Diagnostic, DiagnosticSeverity } from 'vscode-languageserver-types';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { Title, Widget } from '@phosphor/widgets';\nimport { WidgetDecoration } from '@theia/core/lib/browser/widget-decoration';\nimport { TabBarDecorator } from '@theia/core/lib/browser/shell/tab-bar-decorator';\nimport { Marker } from '../../common/marker';\nimport { ProblemManager } from './problem-manager';\nimport { ProblemPreferences, ProblemConfiguration } from './problem-preferences';\nimport { PreferenceChangeEvent, Navigatable } from '@theia/core/lib/browser';\n\n@injectable()\nexport class ProblemTabBarDecorator implements TabBarDecorator {\n\n    readonly id = 'theia-problem-tabbar-decorator';\n\n    protected readonly emitter = new Emitter<void>();\n\n    @inject(ProblemPreferences)\n    protected readonly preferences: ProblemPreferences;\n\n    @inject(ProblemManager)\n    protected readonly problemManager: ProblemManager;\n\n    @postConstruct()\n    protected init(): void {\n        this.problemManager.onDidChangeMarkers(() => this.fireDidChangeDecorations());\n        this.preferences.onPreferenceChanged(event => this.handlePreferenceChange(event));\n    }\n\n    decorate(title: Title<Widget>): WidgetDecoration.Data[] {\n        const widget = title.owner;\n        if (Navigatable.is(widget)) {\n            const resourceUri = widget.getResourceUri();\n            if (resourceUri) {\n                // Get the list of problem markers for the given resource URI.\n                const markers: Marker<Diagnostic>[] = this.problemManager.findMarkers({ uri: resourceUri });\n                // If no markers are available, return early.\n                if (markers.length === 0) {\n                    return [];\n                }\n                // Store the marker with the highest severity.\n                let maxSeverity: Marker<Diagnostic> | undefined;\n                // Iterate over available markers to determine that which has the highest severity.\n                // Only display a decoration if an error or warning marker is available.\n                for (const marker of markers) {\n                    // Break early if an error marker is present, since it represents the highest severity.\n                    if (marker.data.severity === DiagnosticSeverity.Error) {\n                        maxSeverity = marker;\n                        break;\n                    } else if (marker.data.severity === DiagnosticSeverity.Warning) {\n                        maxSeverity = marker;\n                    }\n                }\n                // Decorate the tabbar with the highest marker severity if available.\n                return maxSeverity ? [this.toDecorator(maxSeverity)] : [];\n            }\n        }\n        return [];\n    }\n\n    get onDidChangeDecorations(): Event<void> {\n        return this.emitter.event;\n    }\n\n    protected fireDidChangeDecorations(): void {\n        this.emitter.fire(undefined);\n    }\n\n    /**\n     * Handle changes in preference.\n     * @param {PreferenceChangeEvent<ProblemConfiguration>} event The event of the changes in preference.\n     */\n    protected async handlePreferenceChange(event: PreferenceChangeEvent<ProblemConfiguration>): Promise<void> {\n        const { preferenceName } = event;\n        if (preferenceName === 'problems.decorations.tabbar.enabled') {\n            this.fireDidChangeDecorations();\n        }\n    }\n\n    /**\n     * Convert a diagnostic marker to a decorator.\n     * @param {Marker<Diagnostic>} marker A diagnostic marker.\n     * @returns {WidgetDecoration.Data} The decoration data.\n     */\n    protected toDecorator(marker: Marker<Diagnostic>): WidgetDecoration.Data {\n        const position = WidgetDecoration.IconOverlayPosition.BOTTOM_RIGHT;\n        const icon = this.getOverlayIcon(marker);\n        const color = this.getOverlayIconColor(marker);\n        return {\n            iconOverlay: {\n                position,\n                icon,\n                color,\n                background: {\n                    shape: 'circle',\n                    color: 'transparent'\n                }\n            }\n        };\n    }\n\n    /**\n     * Get the appropriate overlay icon for decoration.\n     * @param {Marker<Diagnostic>} marker A diagnostic marker.\n     * @returns {string} A string representing the overlay icon class.\n     */\n    protected getOverlayIcon(marker: Marker<Diagnostic>): string {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 'times-circle';\n            case 2: return 'exclamation-circle';\n            case 3: return 'info-circle';\n            default: return 'hand-o-up';\n        }\n    }\n\n    /**\n     * Get the appropriate overlay icon color for decoration.\n     * @param {Marker<Diagnostic>} marker A diagnostic marker.\n     * @returns {WidgetDecoration.Color} The decoration color.\n     */\n    protected getOverlayIconColor(marker: Marker<Diagnostic>): WidgetDecoration.Color {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 'var(--theia-editorError-foreground)';\n            case 2: return 'var(--theia-editorWarning-foreground)';\n            case 3: return 'var(--theia-editorInfo-foreground)';\n            default: return 'var(--theia-successBackground)';\n        }\n    }\n\n}\n","\nvar content = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./index.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, named } from 'inversify';\nimport { ContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { TreeDecorator, AbstractTreeDecoratorService } from '@theia/core/lib/browser/tree/tree-decorator';\n\n/**\n * Symbol for all decorators that would like to contribute into the navigator.\n */\nexport const NavigatorTreeDecorator = Symbol('NavigatorTreeDecorator');\n\n/**\n * Decorator service for the navigator.\n */\n@injectable()\nexport class NavigatorDecoratorService extends AbstractTreeDecoratorService {\n\n    constructor(@inject(ContributionProvider) @named(NavigatorTreeDecorator) protected readonly contributions: ContributionProvider<TreeDecorator>) {\n        super(contributions.getContributions());\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './workspace-commands';\nexport * from './workspace-service';\nexport * from './workspace-frontend-contribution';\nexport * from './workspace-frontend-module';\nexport * from './workspace-preferences';\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2017 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-marker-container {\\n    font-size: var(--theia-ui-font-size1);\\n}\\n\\n.theia-side-panel .theia-marker-container .noMarkers {\\n    padding-left: 19px;\\n}\\n\\n.theia-marker-container .markerNode,\\n.theia-marker-container .markerFileNode {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.theia-marker-container .markerNode,\\n.theia-marker-container .markerFileNode {\\n    width: calc(100% - 32px);\\n}\\n\\n.theia-marker-container .markerNode div,\\n.theia-marker-container .markerFileNode div {\\n    margin-right: 5px;\\n}\\n\\n.theia-marker-container .markerFileNode .name,\\n.theia-marker-container .markerFileNode .path {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n}\\n\\n.theia-marker-container .markerFileNode .path {\\n    font-size: var(--theia-ui-font-size0);\\n    color: var(--theia-descriptionForeground);\\n    align-self: flex-end;\\n    white-space: nowrap;\\n}\\n\\n.theia-marker-container .error {\\n    color: var(--theia-editorError-foreground);\\n}\\n\\n.theia-marker-container .warning {\\n    color: var(--theia-editorWarning-foreground);\\n}\\n\\n.theia-marker-container .information {\\n    color: var(--theia-editorInfo-foreground);\\n}\\n\\n.theia-marker-container .hint {\\n    color: var(--theia-successBackground);\\n}\\n\\n.theia-marker-container .markerNode .position,\\n.theia-marker-container .markerNode .owner {\\n    color: var(--theia-descriptionForeground);\\n    white-space: nowrap;\\n    margin-left: 5px;\\n}\\n\\n.theia-marker-container .markerNode .message {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n}\\n\\n.problem-tab-icon::before {\\n    content: \\\"\\\\F06A\\\"\\n}\\n\\n.theia-marker-container .row-button-container {\\n    display: none;\\n}\\n\\n.theia-marker-container .theia-TreeNodeContent:hover .row-button-container {\\n    display: flex;\\n    justify-content: flex-end;\\n    flex: 1;\\n    align-items: center;\\n    align-self: center;\\n}\\n\\n.theia-marker-container .row-button-container .remove-node {\\n    background-image: var(--theia-icon-close);\\n    width: 15px;\\n    height: 15px;\\n}\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}