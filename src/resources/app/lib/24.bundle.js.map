{"version":3,"sources":["webpack:///./node_modules/@theia/core/src/browser/widgets/alert-message.tsx","webpack:///./node_modules/@theia/scm/src/browser/scm-avatar-service.ts","webpack:///./node_modules/@theia/scm/src/browser/scm-context-key-service.ts","webpack:///./node_modules/@theia/scm/src/browser/scm-input.ts","webpack:///./node_modules/@theia/scm/src/browser/scm-repository.ts","webpack:///./node_modules/@theia/scm/src/browser/scm-service.ts"],"names":[],"mappings":"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","file":"24.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport React = require('react');\n\nexport type MessageType = keyof AlertMessageIcon;\n\ninterface AlertMessageIcon {\n    INFO: string;\n    SUCCESS: string;\n    WARNING: string;\n    ERROR: string;\n}\n\nconst AlertMessageIcon = {\n    INFO: 'fa fa-info-circle',\n    SUCCESS: 'fa fa-check-circle',\n    WARNING: 'fa fa-exclamation-circle',\n    ERROR: 'fa fa-times-circle'\n};\n\nexport interface AlertMessageProps {\n    type: MessageType;\n    header: string;\n}\n\nexport class AlertMessage extends React.Component<AlertMessageProps> {\n\n    render(): React.ReactNode {\n        return <div className='theia-alert-message-container'>\n            <div className={`theia-${this.props.type.toLowerCase()}-alert`}>\n                <div className='theia-message-header'>\n                    <i className={AlertMessageIcon[this.props.type]}></i>&nbsp;\n                    {this.props.header}\n                </div>\n                <div className='theia-message-content'>{this.props.children}</div>\n            </div>\n        </div>;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { Md5 } from 'ts-md5';\n\n@injectable()\nexport class ScmAvatarService {\n\n    async getAvatar(email: string): Promise<string> {\n        const hash = Md5.hashStr(email);\n        return `https://www.gravatar.com/avatar/${hash}?d=robohash`;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { ContextKeyService, ContextKey } from '@theia/core/lib/browser/context-key-service';\n\n@injectable()\nexport class ScmContextKeyService {\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    protected _scmProvider: ContextKey<string | undefined>;\n    get scmProvider(): ContextKey<string | undefined> {\n        return this._scmProvider;\n    }\n\n    protected _scmResourceGroup: ContextKey<string | undefined>;\n    get scmResourceGroup(): ContextKey<string | undefined> {\n        return this._scmResourceGroup;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this._scmProvider = this.contextKeyService.createKey<string | undefined>('scmProvider', undefined);\n        this._scmResourceGroup = this.contextKeyService.createKey<string | undefined>('scmResourceGroup', undefined);\n    }\n\n    match(expression: string | undefined): boolean {\n        return !expression || this.contextKeyService.match(expression);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as debounce from 'p-debounce';\nimport { Disposable, DisposableCollection, Emitter } from '@theia/core/lib/common';\nimport { JSONExt, JSONObject } from '@phosphor/coreutils/lib/json';\n\nexport interface ScmInputIssue {\n    message: string;\n    type: 'info' | 'success' | 'warning' | 'error';\n}\n\nexport interface ScmInputValidator {\n    (value: string): Promise<ScmInputIssue | undefined>;\n}\n\nexport interface ScmInputOptions {\n    placeholder?: string\n    validator?: ScmInputValidator\n}\n\nexport interface ScmInputData {\n    value?: string\n    issue?: ScmInputIssue\n}\n\nexport class ScmInput implements Disposable {\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange = this.onDidChangeEmitter.event;\n    protected fireDidChange(): void {\n        this.onDidChangeEmitter.fire(undefined);\n    }\n\n    protected readonly onDidFocusEmitter = new Emitter<void>();\n    readonly onDidFocus = this.onDidFocusEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection(\n        this.onDidChangeEmitter,\n        this.onDidFocusEmitter\n    );\n\n    constructor(\n        protected readonly options: ScmInputOptions = {}\n    ) { }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    protected _placeholder = this.options.placeholder;\n    get placeholder(): string | undefined {\n        return this._placeholder;\n    }\n    set placeholder(placeholder: string | undefined) {\n        if (this._placeholder === placeholder) {\n            return;\n        }\n        this._placeholder = placeholder;\n        this.fireDidChange();\n    }\n\n    protected _value: string | undefined;\n    get value(): string {\n        return this._value || '';\n    }\n    set value(value: string) {\n        if (this.value === value) {\n            return;\n        }\n        this._value = value;\n        this.fireDidChange();\n        this.validate();\n    }\n\n    protected _issue: ScmInputIssue | undefined;\n    get issue(): ScmInputIssue | undefined {\n        return this._issue;\n    }\n    set issue(issue: ScmInputIssue | undefined) {\n        if (JSONExt.deepEqual(<JSONObject>(this._issue || {}), <JSONObject>(issue || {}))) {\n            return;\n        }\n        this._issue = issue;\n        this.fireDidChange();\n    }\n\n    validate = debounce(async (): Promise<void> => {\n        if (this.options.validator) {\n            this.issue = await this.options.validator(this.value);\n        }\n    }, 200);\n\n    focus(): void {\n        this.onDidFocusEmitter.fire(undefined);\n    }\n\n    toJSON(): ScmInputData {\n        return {\n            value: this._value,\n            issue: this._issue\n        };\n    }\n\n    fromJSON(data: ScmInputData | any): void {\n        if (this._value !== undefined) {\n            return;\n        }\n        if ('value' in data) {\n            this._value = data.value;\n            this._issue = data.issue;\n            this.fireDidChange();\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Disposable, DisposableCollection, Emitter } from '@theia/core/lib/common';\nimport { ScmInput, ScmInputOptions } from './scm-input';\nimport { ScmProvider } from './scm-provider';\n\nexport interface ScmProviderOptions {\n    input?: ScmInputOptions\n}\n\nexport class ScmRepository implements Disposable {\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange = this.onDidChangeEmitter.event;\n    protected fireDidChange(): void {\n        this.onDidChangeEmitter.fire(undefined);\n    }\n\n    protected readonly toDispose = new DisposableCollection(this.onDidChangeEmitter);\n\n    readonly input: ScmInput;\n\n    constructor(\n        readonly provider: ScmProvider,\n        protected readonly options: ScmProviderOptions = {}\n    ) {\n        this.toDispose.pushAll([\n            this.provider,\n            this.input = new ScmInput(options.input),\n            this.input.onDidChange(() => this.fireDidChange())\n        ]);\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { DisposableCollection, Emitter } from '@theia/core/lib/common';\nimport { injectable, inject } from 'inversify';\nimport { ScmContextKeyService } from './scm-context-key-service';\nimport { ScmRepository, ScmProviderOptions } from './scm-repository';\nimport { ScmCommand, ScmProvider } from './scm-provider';\nimport URI from '@theia/core/lib/common/uri';\n\n@injectable()\nexport class ScmService {\n\n    @inject(ScmContextKeyService)\n    protected readonly contextKeys: ScmContextKeyService;\n\n    protected readonly _repositories = new Map<string, ScmRepository>();\n    protected _selectedRepository: ScmRepository | undefined;\n\n    protected readonly onDidChangeSelectedRepositoryEmitter = new Emitter<ScmRepository | undefined>();\n    readonly onDidChangeSelectedRepository = this.onDidChangeSelectedRepositoryEmitter.event;\n\n    protected readonly onDidAddRepositoryEmitter = new Emitter<ScmRepository>();\n    readonly onDidAddRepository = this.onDidAddRepositoryEmitter.event;\n\n    protected readonly onDidRemoveRepositoryEmitter = new Emitter<ScmRepository>();\n    readonly onDidRemoveRepository = this.onDidAddRepositoryEmitter.event;\n\n    protected readonly onDidChangeStatusBarCommandsEmitter = new Emitter<ScmCommand[]>();\n    readonly onDidChangeStatusBarCommands = this.onDidChangeStatusBarCommandsEmitter.event;\n    protected fireDidChangeStatusBarCommands(): void {\n        this.onDidChangeStatusBarCommandsEmitter.fire(this.statusBarCommands);\n    }\n    get statusBarCommands(): ScmCommand[] {\n        const repository = this.selectedRepository;\n        return repository && repository.provider.statusBarCommands || [];\n    }\n\n    get repositories(): ScmRepository[] {\n        return [...this._repositories.values()];\n    }\n\n    get selectedRepository(): ScmRepository | undefined {\n        return this._selectedRepository;\n    }\n\n    protected readonly toDisposeOnSelected = new DisposableCollection();\n    set selectedRepository(repository: ScmRepository | undefined) {\n        if (this._selectedRepository === repository) {\n            return;\n        }\n        this.toDisposeOnSelected.dispose();\n        this._selectedRepository = repository;\n        if (this._selectedRepository) {\n            if (this._selectedRepository.provider.onDidChangeStatusBarCommands) {\n                this.toDisposeOnSelected.push(this._selectedRepository.provider.onDidChangeStatusBarCommands(() => this.fireDidChangeStatusBarCommands()));\n            }\n        }\n        this.onDidChangeSelectedRepositoryEmitter.fire(this._selectedRepository);\n        this.fireDidChangeStatusBarCommands();\n    }\n\n    findRepository(uri: URI): ScmRepository | undefined {\n        const reposSorted = this.repositories.sort(\n            (ra: ScmRepository, rb: ScmRepository) => rb.provider.rootUri.length - ra.provider.rootUri.length\n        );\n        return reposSorted.find(repo => new URI(repo.provider.rootUri).isEqualOrParent(uri));\n    }\n\n    registerScmProvider(provider: ScmProvider, options: ScmProviderOptions = {}): ScmRepository {\n        const key = provider.id + ':' + provider.rootUri;\n        if (this._repositories.has(key)) {\n            throw new Error(`${provider.label} provider for '${provider.rootUri}' already exists.`);\n        }\n        const repository = new ScmRepository(provider, options);\n        const dispose = repository.dispose;\n        repository.dispose = () => {\n            this._repositories.delete(key);\n            dispose.bind(repository)();\n            this.onDidRemoveRepositoryEmitter.fire(repository);\n            if (this._selectedRepository === repository) {\n                this.selectedRepository = this._repositories.values().next().value;\n            }\n        };\n        this._repositories.set(key, repository);\n        this.onDidAddRepositoryEmitter.fire(repository);\n        if (this._repositories.size === 1) {\n            this.selectedRepository = repository;\n        }\n        return repository;\n    }\n\n}\n"],"sourceRoot":""}