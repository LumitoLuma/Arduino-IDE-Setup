{"version":3,"sources":["webpack:///./node_modules/@theia/terminal/src/browser/base/terminal-service.ts","webpack:///./node_modules/@theia/terminal/src/browser/base/terminal-widget.ts","webpack:///./node_modules/@theia/terminal/src/browser/search/terminal-search-widget.tsx","webpack:///./node_modules/@theia/terminal/src/browser/terminal-contribution.ts","webpack:///./node_modules/@theia/terminal/src/browser/terminal-copy-on-selection-handler.ts","webpack:///./node_modules/@theia/terminal/src/browser/terminal-preferences.ts","webpack:///./node_modules/@theia/terminal/src/browser/terminal-theme-service.ts","webpack:///./node_modules/@theia/terminal/src/browser/terminal-widget-impl.ts","webpack:///./node_modules/@theia/terminal/src/common/base-terminal-protocol.ts","webpack:///./node_modules/@theia/terminal/src/common/shell-terminal-protocol.ts","webpack:///./node_modules/@theia/terminal/src/common/terminal-protocol.ts","webpack:///./node_modules/@theia/terminal/src/common/terminal-watcher.ts","webpack:///./node_modules/@theia/terminal/src/browser/style/terminal-search.css?e6a4","webpack:///./node_modules/@theia/terminal/src/browser/style/terminal-search.css","webpack:///FitAddon/webpack/universalModuleDefinition","webpack:///FitAddon/webpack/bootstrap","webpack:///FitAddon/src/FitAddon.ts","webpack:///SearchAddon/webpack/universalModuleDefinition","webpack:///SearchAddon/webpack/bootstrap","webpack:///SearchAddon/src/SearchAddon.ts","webpack:////webpack/universalModuleDefinition","webpack:////webpack/bootstrap","webpack:////src/common/EventEmitter.ts","webpack:////src/common/services/Services.ts","webpack:////src/common/Lifecycle.ts","webpack:////src/common/buffer/Constants.ts","webpack:////src/common/buffer/CellData.ts","webpack:////src/browser/services/Services.ts","webpack:////src/common/buffer/AttributeData.ts","webpack:////src/browser/Lifecycle.ts","webpack:////src/common/input/TextDecoder.ts","webpack:////src/browser/renderer/atlas/Constants.ts","webpack:////src/browser/Color.ts","webpack:////src/common/Platform.ts","webpack:////src/common/data/EscapeSequences.ts","webpack:////src/browser/renderer/BaseRenderLayer.ts","webpack:////src/common/services/ServiceRegistry.ts","webpack:////src/common/TypedArrayUtils.ts","webpack:////src/common/buffer/BufferLine.ts","webpack:////src/browser/Dom.ts","webpack:////src/browser/LocalizableStrings.ts","webpack:////src/common/InputHandler.ts","webpack:////src/common/data/Charsets.ts","webpack:////src/common/parser/Params.ts","webpack:////src/common/parser/OscParser.ts","webpack:////src/common/parser/Constants.ts","webpack:////src/common/parser/DcsParser.ts","webpack:////src/browser/renderer/atlas/CharAtlasCache.ts","webpack:////src/browser/renderer/atlas/CharAtlasUtils.ts","webpack:////src/browser/ColorManager.ts","webpack:////src/browser/renderer/RendererUtils.ts","webpack:////src/browser/renderer/CharacterJoinerRegistry.ts","webpack:////src/browser/input/Mouse.ts","webpack:////src/browser/RenderDebouncer.ts","webpack:////src/browser/ScreenDprMonitor.ts","webpack:////src/common/Clone.ts","webpack:////src/browser/public/Terminal.ts","webpack:////src/browser/Terminal.ts","webpack:////src/browser/input/CompositionHelper.ts","webpack:////src/browser/Viewport.ts","webpack:////src/browser/Clipboard.ts","webpack:////src/common/parser/EscapeSequenceParser.ts","webpack:////src/browser/renderer/Renderer.ts","webpack:////src/browser/renderer/TextRenderLayer.ts","webpack:////src/browser/renderer/GridCache.ts","webpack:////src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack:////src/browser/renderer/atlas/BaseCharAtlas.ts","webpack:////src/browser/ColorContrastCache.ts","webpack:////src/browser/renderer/atlas/LRUMap.ts","webpack:////src/browser/renderer/SelectionRenderLayer.ts","webpack:////src/browser/renderer/CursorRenderLayer.ts","webpack:////src/browser/renderer/LinkRenderLayer.ts","webpack:////src/browser/Linkifier.ts","webpack:////src/browser/services/SelectionService.ts","webpack:////src/browser/selection/SelectionModel.ts","webpack:////src/browser/input/MoveToCell.ts","webpack:////src/browser/services/SoundService.ts","webpack:////src/browser/MouseZoneManager.ts","webpack:////src/browser/AccessibilityManager.ts","webpack:////src/browser/renderer/dom/DomRenderer.ts","webpack:////src/browser/renderer/dom/DomRendererRowFactory.ts","webpack:////src/common/input/Keyboard.ts","webpack:////src/browser/services/RenderService.ts","webpack:////src/browser/services/CharSizeService.ts","webpack:////src/browser/services/MouseService.ts","webpack:////src/browser/Linkifier2.ts","webpack:////src/browser/services/CoreBrowserService.ts","webpack:////src/common/CoreTerminal.ts","webpack:////src/common/services/InstantiationService.ts","webpack:////src/common/services/LogService.ts","webpack:////src/common/services/BufferService.ts","webpack:////src/common/buffer/BufferSet.ts","webpack:////src/common/buffer/Buffer.ts","webpack:////src/common/CircularList.ts","webpack:////src/common/buffer/BufferReflow.ts","webpack:////src/common/buffer/Marker.ts","webpack:////src/common/services/OptionsService.ts","webpack:////src/common/services/CoreService.ts","webpack:////src/common/services/CoreMouseService.ts","webpack:////src/common/services/DirtyRowService.ts","webpack:////src/common/services/UnicodeService.ts","webpack:////src/common/input/UnicodeV6.ts","webpack:////src/common/services/CharsetService.ts","webpack:////src/common/WindowsMode.ts","webpack:////src/common/input/WriteBuffer.ts","webpack:////src/browser/public/AddonManager.ts"],"names":["root","factory","module","exports","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","activate","terminal","this","_terminal","dispose","fit","dims","proposeDimensions","core","_core","rows","cols","_renderService","clear","resize","element","parentElement","parentElementStyle","getComputedStyle","parentElementHeight","parseInt","getPropertyValue","parentElementWidth","Math","max","elementStyle","availableHeight","availableWidth","viewport","scrollBarWidth","floor","dimensions","actualCellWidth","actualCellHeight","FitAddon","_linesCacheTimeoutId","findNext","term","searchOptions","Error","length","clearSelection","currentSelection","startCol","startRow","hasSelection","incremental","getSelectionPosition","endRow","startColumn","endColumn","_initLinesCache","searchPosition","result","_findInLine","y","buffer","baseY","_selectResult","findPrevious","row","col","_linesCache","Array","_cursorMoveListener","onCursorMove","_destroyLinesCache","_resizeListener","onResize","clearTimeout","setTimeout","undefined","_isWholeWord","searchIndex","line","indexOf","isReverseSearch","firstLine","getLine","isWrapped","stringLine","_translateBufferLineToStringWithWrap","searchTerm","caseSensitive","toLowerCase","searchStringLine","resultIndex","regex","searchRegex","RegExp","foundTerm","exec","slice","lastIndex","lastIndexOf","wholeWord","cell","getCell","char","getChars","getWidth","lineIndex","trimRight","lineWrapsToNext","lineString","nextLine","translateToString","substring","select","viewportY","scrollLines","SearchAddon","_listeners","_disposed","_event","listener","push","splice","fire","arg1","arg2","queue","EventEmitter","from","to","e","IBufferService","createDecorator","ICoreMouseService","ICoreService","ICharsetService","IDirtyRowService","IInstantiationService","ILogService","IOptionsService","IUnicodeService","_disposables","_isDisposed","register","unregister","index","disposeArray","disposables","Disposable","array","DEFAULT_COLOR","DEFAULT_ATTR","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CODE_INDEX","NULL_CELL_CHAR","NULL_CELL_WIDTH","NULL_CELL_CODE","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","content","fg","bg","extended","ExtendedAttrs","combinedData","fromCharData","obj","CellData","setFromCharData","isCombined","stringFromCodePoint","getCode","charCodeAt","combined","code","second","getAsCharData","AttributeData","ICharSizeService","ICoreBrowserService","IMouseService","IRenderService","ISelectionService","ISoundService","toColorRGB","fromColorRGB","clone","newObj","isInverse","isBold","isUnderline","isBlink","isInvisible","isItalic","isDim","getFgColorMode","getBgColorMode","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","getFgColor","getBgColor","hasExtendedAttrs","updateExtended","isEmpty","getUnderlineColor","underlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","underlineStyle","node","type","handler","options","addEventListener","disposed","removeEventListener","codePoint","String","fromCharCode","data","start","end","codepoint","_interim","decode","input","target","size","startPos","StringToUtf32","interim","Uint8Array","fill","byte1","byte2","byte3","byte4","discardInterim","cp","pos","tmp","missing","fourStop","Utf8ToUtf32","INVERTED_DEFAULT_COLOR","DIM_OPACITY","CHAR_ATLAS_CELL_SPACING","channels","rgb","rgba","toPaddedHex","toString","contrastRatio","l1","l2","toCss","g","b","a","toRgba","color","blend","css","fgR","fgG","fgB","bgR","bgG","bgB","round","isOpaque","ensureContrastRatio","ratio","toColor","opaque","rgbaColor","toChannels","opacity","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","ceil","increaseLuminance","min","bgL","fgL","isNode","navigator","userAgent","platform","contains","arr","el","isFirefox","isSafari","test","isMac","isIpad","isIphone","isWindows","isLinux","C0","NUL","SOH","STX","ETX","EOT","ENQ","ACK","BEL","BS","HT","LF","VT","FF","CR","SO","SI","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","ESC","FS","GS","RS","US","SP","DEL","C1","PAD","HOP","BPH","NBH","IND","NEL","SSA","ESA","HTS","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","_container","id","zIndex","_alpha","_colors","_rendererId","_bufferService","_optionsService","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","bold","dim","italic","_canvas","document","createElement","classList","add","style","_initCanvas","appendChild","removeElementFromParent","_charAtlas","_ctx","throwIfFalsy","getContext","alpha","_clearAll","onOptionsChanged","onBlur","onFocus","onGridChanged","onSelectionChanged","columnSelectMode","setColors","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","acquireCharAtlas","warmUp","scaledCellWidth","scaledCellHeight","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","width","scaledCanvasWidth","height","scaledCanvasHeight","canvasWidth","canvasHeight","_fillCells","x","fillRect","_fillBottomLineAtCells","devicePixelRatio","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","fillStyle","background","_clearCells","_fillCharTrueColor","font","_getFont","textBaseline","_clipRow","fillText","_drawChars","contrastColor","_getContrastColor","_drawUncachedChars","drawBoldTextInBrightColors","draw","fgOverride","save","join","ansi","foreground","globalAlpha","restore","beginPath","rect","clip","fontWeightBold","fontWeight","fontSize","fontFamily","minimumContrastRatio","adjustedColor","contrastCache","getColor","fgColor","fgColorMode","bgColor","bgColorMode","temp","temp2","_resolveBackgroundRgba","_resolveForegroundRgba","setColor","inverse","BaseRenderLayer","storeServiceDependency","serviceRegistry","Map","ctor","has","decorator","arguments","set","fillFallback","constructor","DEFAULT_ATTR_DATA","freeze","fillCellData","_combined","_extendedAttrs","_data","Uint32Array","setCell","hasWidth","getFg","getBg","hasContent","getCodePoint","getString","loadCell","startIndex","setCellFromCodePoint","eAttrs","addCodepointToCell","insertCells","eraseAttr","deleteCells","replaceCells","subarray","keys","copyFrom","newLine","BufferLine","getTrimmedLength","copyCellsFrom","src","srcCol","destCol","applyInReverse","srcData","srcCombinedKeys","endCol","elements","removeChild","promptLabel","tooMuchOutput","WindowsOptionsReportType","GLEVEL","paramToWindowOption","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_coreService","_logService","hook","params","put","concat","unhook","success","utf32ToString","triggerDataEvent","pt","scrollTop","scrollBottom","cursorStyle","cursorBlink","debug","_charsetService","_dirtyRowService","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","_stringDecoder","_utf8Decoder","_workCell","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestScroll","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onCursorMove","_onLineFeed","_onScroll","_onTitleChange","setCsiHandlerFallback","ident","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","action","setDcsHandlerFallback","payload","setPrintHandler","print","setCsiHandler","final","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","bell","lineFeed","carriageReturn","backspace","tab","shiftOut","shiftIn","tabSet","setOscHandler","OscHandler","setTitle","setIconName","setEscHandler","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","CHARSETS","screenAlignmentPattern","setErrorHandler","state","error","setDcsHandler","DECRQSS","event","parse","cursorStartX","cursorStartY","clearRange","len","chWidth","charset","screenReaderMode","wraparoundMode","decPrivateModes","wraparound","insertMode","modes","curAttr","bufferRow","lines","ybase","markDirty","wcwidth","ch","_eraseAttrData","getNullCell","precedingCodepoint","addCsiHandler","callback","addDcsHandler","DcsHandler","addEscHandler","addOscHandler","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","origin","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","_resetBufferLine","j","scrollBackSize","trimStart","ydisp","scrollBottomRowsOffset","scrollBottomAbsolute","getBlankLine","markRangeDirty","_is","termName","applicationCursorKeys","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeProtocol","sendFocus","activeEncoding","isCursorHidden","buffers","activateAltBuffer","isCursorInitialized","bracketedPasteMode","activateNormalBuffer","_updateAttrColor","c1","c2","c3","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","_processUnderline","reset","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","top","GET_WIN_SIZE_PIXELS","GET_CELL_SIZE_PIXELS","shift","pop","_savedCharset","collectAndFlag","scrollRegionHeight","shiftElements","level","yOffset","markAllDirty","InputHandler","maxLength","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","values","Params","k","addSubParam","addParam","newParams","res","idx","getSubParamsAll","addDigit","store","cur","_state","_id","_handlers","_handlerFb","addHandler","handlerList","handlerIndex","setHandler","clearHandler","setHandlerFallback","_start","handlers","_put","_end","OscParser","_handler","_hitLimit","PAYLOAD_LIMIT","ret","EMPTY_HANDLERS","_active","_ident","DcsParser","_params","charAtlasCache","rendererId","colors","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","clonedColors","cursor","cursorAccent","selection","allowTransparency","colorCode","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","v","canvas","ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","ColorContrastCache","selectionTransparent","selectionOpaque","onOptionsChange","setTheme","theme","_parseColor","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","fallback","console","warn","getImageData","split","map","component","Number","ColorManager","firstCell","_width","JoinedCellData","_characterJoiners","_nextCharacterJoinerId","registerCharacterJoiner","joiner","deregisterCharacterJoiner","joinerId","getJoinedCharacters","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","joinedRanges","_getJoinedRanges","endIndex","lineData","text","joinerRanges","CharacterJoinerRegistry","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","newRange","inRange","range","getCoordsRelativeToElement","getBoundingClientRect","clientX","left","clientY","colCount","rowCount","hasValidCharSize","isSelection","coords","_renderCallback","_animationFrame","cancelAnimationFrame","refresh","rowStart","rowEnd","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","RenderDebouncer","_currentDevicePixelRatio","setListener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","ScreenDprMonitor","val","depth","clonedObject","isArray","Terminal","_addonManager","AddonManager","_checkProposedApi","optionsService","allowProposedApi","onLineFeed","onSelectionChange","onData","onBinary","onTitleChange","onScroll","onKey","onRender","ParserApi","UnicodeApi","textarea","BufferNamespaceApi","markers","blur","focus","columns","_verifyIntegers","open","parent","attachCustomKeyEventHandler","customKeyEventHandler","registerLinkMatcher","deregisterLinkMatcher","matcherId","registerLinkProvider","linkProvider","registerMarker","cursorYOffset","addMarker","column","getSelection","selectAll","selectLines","amount","scrollPages","pageCount","scrollToTop","scrollToBottom","scrollToLine","write","writeUtf8","writeln","paste","getOption","setOption","loadAddon","addon","Strings","Infinity","isNaN","_buffer","init","BufferLineApiView","_buffers","_onBufferChange","_normal","BufferApiView","normal","_alternate","alt","onBufferActivate","active","alternate","_line","registerCsiHandler","registerDcsHandler","registerEscHandler","registerOscHandler","provider","unicodeService","versions","activeVersion","version","browser","Browser","_keyDownHandled","_onKey","_onRender","_onSelectionChange","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_setup","linkifier","_instantiationService","createInstance","Linkifier","linkifier2","Linkifier2","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestReset","onRequestScroll","scroll","onRequestWindowsOptionsReport","_reportWindowsOptions","forwardEvent","onA11yChar","onA11yTab","_afterResize","_customKeyEventHandler","parentNode","preventScroll","_updateOptions","_charSizeService","measure","setRenderer","_createRenderer","syncScrollArea","_accessibilityManager","AccessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","ev","updateCursorStyle","_showCursor","_onTextAreaBlur","remove","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cellHeight","lineHeight","cursorTop","cursorLeft","_initGlobal","_bindKeys","addDisposableDomListener","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","button","rightClickHandler","screenElement","rightClickSelectsWord","moveTextAreaUnderMouseCursor","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","updateCompositionElements","_queueLinkification","body","_document","ownerDocument","dir","setAttribute","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","tabIndex","coreBrowserService","CoreBrowserService","setService","CharSizeService","_compositionView","CompositionHelper","_theme","_colorManager","onOptionChange","renderer","RenderService","onRenderedBufferChange","_soundService","SoundService","_mouseService","MouseService","Viewport","suppressEvent","onThemeChange","onRequestSyncScrollBar","onDimensionsChange","SelectionService","onRequestScrollLines","suppressScrollEvent","onRequestRedraw","onLinuxMouseSelection","_mouseZoneManager","MouseZoneManager","clearAll","attachToDom","onMouseDown","areMouseEventsActive","disable","enable","bindMouse","rendererType","Renderer","DomRenderer","self","sendEvent","but","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","ctrl","ctrlKey","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","preventDefault","onProtocolChange","events","logLevel","explainEvents","passive","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","abs","onWheel","onTouchStart","onTouchMove","refreshRows","linkifyRows","shouldColumnSelect","disp","setSelection","selectionText","selectionStart","selectionEnd","keydown","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","domEvent","thirdLevelKey","metaKey","keyCode","wasModifierKeyOnlyEvent","charCode","which","_soundBell","playBellSound","hasValidSize","toFixed","cellWidth","force","cancelEvents","stopPropagation","_visualBell","bellStyle","CoreTerminal","_textarea","_isComposing","_isSendingComposition","_compositionPosition","textContent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","oldValue","diff","replace","dontRecurse","compositionViewBounds","_scrollLines","_scrollArea","_currentRowHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","backgroundColor","_refresh","immediate","offsetHeight","newBufferHeight","newScrollTop","offsetParent","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","prepareTextForTerminal","bracketTextForPaste","coreService","selectionService","clipboardData","setData","getData","shouldSelectWord","isClickInSelection","selectWordAtCursor","table","setDefault","next","addMany","codes","TransitionTable","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","transition","osc","dcs","collect","position","abort","handlersEsc","jj","nextRendererId","_screenElement","_onRequestRedraw","_characterJoinerRegistry","_renderLayers","TextRenderLayer","SelectionRenderLayer","LinkRenderLayer","CursorRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","container","characterJoinerRegistry","bufferService","_characterWidth","_characterFont","_characterOverlapCache","GridCache","terminalFont","_forEachCell","firstRow","lastRow","joinerRegistry","isJoined","lastCharX","_isOverlapping","_drawBackground","startX","startY","prevFillStyle","nextFillStyle","_drawForeground","cache","beginFrame","overlaps","measureText","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","tmpCanvas","_tmpCtx","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","_getBackgroundColor","_getForegroundColor","fontStyle","imageData","offset","clearColor","putImageData","_addGlyphToBitmap","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","BaseCharAtlas","NoneCharAtlas","_didWarmUp","_doWarmUp","_color","_rgba","setCss","getCss","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","count","nodePool","peekValue","head","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_coreBrowserService","_cell","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","pause","resume","CursorBlinkStateManager","_render","restartBlinkAnimation","isPaused","triggeredByAnimationFrame","cursorY","viewportRelativeCursorY","cursorX","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","Date","now","timeToStart","time","setInterval","onShowLinkUnderline","_onShowLinkUnderline","onHideLinkUnderline","_onHideLinkUnderline","_clearCurrentLink","x1","y1","middleRowCount","y2","x2","is256Color","_linkMatchers","_nextLinkMatcherId","_onLinkTooltip","_rowsToLinkify","mouseZoneManager","_element","_rowsTimeoutId","_linkifyRows","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","iterator","hasNext","_doLinkifyRow","first","matcher","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","rowIndex","match","rex","source","flags","stringIndex","uri","bufferIndex","stringIndexToBufferIndex","isValid","_addLink","getStringCellWidth","MouseZone","newWindow","opener","location","href","_createLinkHoverEvent","clickCallback","hoverCallback","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseMoveListener","_onMouseMove","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","onTrim","_onTrim","_onBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","translateBufferLineToString","bufferLine","isLinuxMouseSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAt","isSelectAllActive","getCoords","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","selectionStartLength","_selectLineAt","stopImmediatePropagation","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","activeBuffer","_convertViewportColToCharacterIndex","charIndex","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","areSelectionValuesReversed","wordSeparator","wrappedRange","getWrappedRangeForLine","last","startPlusLength","moveToRequestedRow","targetY","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","wrappedRowsCount","currentRow","lineWraps","forward","currentCol","bufferStr","mod","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","bytes","dataURI","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseLeaveListener","_onMouseLeave","_clickListener","_onClick","_deactivate","zone","_activate","_currentZone","pageX","_onHover","_findZoneEventAt","_tooltipTimeout","_onTooltip","linkTooltipHoverDuration","_getSelectionLength","currentSelectionLength","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","_rowContainer","_rowElements","_createAccessibilityTreeNode","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","_refreshRowsDimensions","_renderRowsDebouncer","_renderRows","_refreshRows","_liveRegion","insertAdjacentElement","_onResize","_onChar","spaceCount","_onTab","_clearLiveRegion","_screenDprMonitor","boundaryElement","beforeBoundaryElement","getAttribute","relatedTarget","topBoundaryElement","bottomBoundaryElement","newElement","unshift","children","_refreshRowDimensions","MAX_ROWS_TO_READ","keyChar","setSize","posInSet","innerHTML","_announceCharacters","nextTerminalId","_linkifier","_linkifier2","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_onLinkHover","_onLinkLeave","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","forEach","documentFragment","_createSelectionElement","colStart","colEnd","cursorAbsoluteY","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","isCursorRow","lineLength","charElement","_applyMinimumContrast","_addStyle","padStart","padChar","KEYCODE_KEY_MAPPINGS","48","49","50","51","52","53","54","55","56","57","186","187","188","189","190","191","192","219","220","221","222","applicationCursorMode","modifiers","keyMapping","_renderer","charSizeService","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","_fullRefresh","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","intersectionRatio","isRedrawOnly","_fireOnCanvasResize","changeOptions","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","getDisposeArrayDisposable","providerIndex","mouseService","renderService","_lastMouseEvent","_positionFromMouseEvent","composedPath","_lastBufferCell","_askForLink","_currentLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","linkProvided","_checkLinkProviderResult","provideLinks","links","linksWithState","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","linkWithState","endX","hasLinkBefore","linkAtPosition","find","_handleNewLink","currentLink","_linkLeave","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","leave","sameLine","wrappedFromLeft","wrappedToRight","activeElement","hasFocus","_onBinary","_onData","InstantiationService","OptionsService","BufferService","LogService","CoreService","CoreMouseService","DirtyRowService","UnicodeService","CharsetService","_writeBuffer","WriteBuffer","_windowsMode","writeSync","MINIMUM_COLS","MINIMUM_ROWS","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","isFull","recycle","isUserScrolling","oldYdisp","scrollAmount","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","_entries","entries","service","instance","ServiceCollection","_services","getService","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","args","LogLevel","optionsKeyToLogLevel","DEBUG","info","INFO","WARN","ERROR","off","OFF","_updateLogLevel","_logLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","BufferSet","Buffer","fillViewportRows","_alt","_activeBuffer","inactiveBuffer","fillAttr","newCols","newRows","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","_whitespaceCell","_cols","_rows","CircularList","_getCorrectBufferLength","getWhitespaceCell","relativeY","correctBufferLength","scrollback","nullCell","newMaxLength","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","destLineIndex","srcLineIndex","cellsToCopy","wrappedLinesIndex","getWrappedLineTrimmedLength","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","onInsertEmitter","onTrimEmitter","tabStopWidth","marker","Marker","onInsert","onDelete","onDispose","_removeMarker","startOverscan","endOverscan","BufferStringIterator","_trimRight","_startIndex","_endIndex","_startOverscan","_endOverscan","_current","_maxLength","onDeleteEmitter","_array","_length","newArray","_getCyclicIndex","newLength","deleteCount","items","countToTrim","expandListBy","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_nextId","isDisposed","_onDispose","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","disableStdin","CONSTRUCTOR_ONLY_OPTIONS","_onOptionChange","newValue","_sanitizeAndValidateOption","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","wasUserInput","triggerBinaryEvent","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","protocol","encoding","_compareEvents","report","down","up","drag","move","e1","e2","_providers","_onChange","defaultProvider","UnicodeV6","_activeProvider","num","BMP_COMBINING","HIGH_COMBINING","ucs","mid","bisearch","glevel","_charsets","lastChar","_action","_callbacks","_pendingData","_bufferOffset","cb","_innerWrite","startTime","_addons","loadedAddon","_wrappedAddonDispose"],"mappings":";;;;;;;;;;;;;AAmBA;;GAEG;AACU,uBAAe,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC;;;;;;;;;;;;;;ACtBzD;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;AAGlF,sHAAqD;AAUrD;;GAEG;AACH;IAA6C,kCAAU;IAAvD;;IA0FA,CAAC;IAAD,qBAAC;AAAD,CAAC,CA1F4C,oBAAU,GA0FtD;AA1FqB,wCAAc;AA4FpC;;GAEG;AACU,6BAAqB,GAAG,MAAM,CAAC,uBAAuB,CAAC,CAAC;;;;;;;;;;;;;;AC7HrE;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,oGAA8D;AAC9D,+JAA2E;AAC3E,8EAA+B;AAC/B,kJAAwD;AACxD,oFAAiC;AACjC,wIAAiE;AACjE,sHAA8C;AAEjC,yCAAiC,GAAG,iBAAiB,CAAC;AACtD,mCAA2B,GAAG,MAAM,CAAC,6BAA6B,CAAC,CAAC;AAIjF;IAA0C,wCAAW;IAArD;QAAA,qEAkIC;QA9HW,mBAAa,GAAmB,EAAE,CAAC;QAuC3C,wBAAkB,GAAG;YACjB,IAAI,KAAI,CAAC,SAAS,EAAE;gBAChB,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;aAC3C;QACL,CAAC,CAAC;QAEF,uBAAiB,GAAG;YAChB,IAAI,KAAI,CAAC,SAAS,EAAE;gBAChB,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;aAC9C;QACL,CAAC,CAAC;QAEM,gBAAU,GAAG;YACjB,KAAI,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC,CAAC;QAEM,sCAAgC,GAAG,UAAC,KAAwC;YAChF,KAAI,CAAC,aAAa,CAAC,aAAa,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC;YACrE,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC;QACrF,CAAC,CAAC;QAEM,kCAA4B,GAAG,UAAC,KAAwC;YAC5E,KAAI,CAAC,aAAa,CAAC,SAAS,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC;YAC7D,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,aAAa,CAAC,SAAS,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC;QACjF,CAAC,CAAC;QAEM,8BAAwB,GAAG,UAAC,KAAwC;YACxE,KAAI,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC;YACrD,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC;QAC7E,CAAC,CAAC;QAWM,oBAAc,GAAG,UAAC,KAA0B;YAChD,oDAAoD;YACpD,IAAI,KAAK,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,OAAO,KAAK,aAAG,CAAC,KAAK,CAAC,OAAO,EAAE;gBAChE,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;gBAC/B,OAAO;aACV;YACD,wCAAwC;YACxC,IAAI,KAAK,IAAI,KAAK,CAAC,OAAO,KAAK,aAAG,CAAC,KAAK,CAAC,OAAO,EAAE;gBAC9C,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;gBAC3B,OAAO;aACV;YAED,KAAI,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC9B,CAAC,CAAC;QAiBM,6BAAuB,GAAG;YAC9B,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAC/B,CAAC,CAAC;QAEM,iCAA2B,GAAG;YAClC,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QACnC,CAAC,CAAC;;IAWN,CAAC;IAvHa,mCAAI,GAAd;QACI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;QAE/D,IAAI,CAAC,WAAW,GAAG,IAAI,gCAAW,EAAE,CAAC;QACrC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE1C,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAES,qCAAM,GAAhB;QAAA,iBAoBC;QAnBG,OAAO,6BAAK,SAAS,EAAC,8BAA8B;YAChD,6BAAK,SAAS,EAAC,uBAAuB,EAAC,GAAG,EAAE,mBAAS,IAAI,YAAI,CAAC,SAAS,GAAG,SAAS,EAA1B,CAA0B;gBAC/E,+BACI,KAAK,EAAC,MAAM,EACZ,IAAI,EAAC,MAAM,EACX,WAAW,EAAC,MAAM,EAClB,GAAG,EAAE,YAAE,IAAI,YAAI,CAAC,WAAW,GAAG,EAAE,EAArB,CAAqB,EAChC,OAAO,EAAE,IAAI,CAAC,cAAc,EAC5B,OAAO,EAAE,IAAI,CAAC,kBAAkB,EAChC,MAAM,EAAE,IAAI,CAAC,iBAAiB,GAChC;gBACF,6BAAK,KAAK,EAAC,YAAY,EAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAC,wBAAwB,EAAC,OAAO,EAAE,IAAI,CAAC,gCAAgC,GAAQ;gBAC9H,6BAAK,KAAK,EAAC,kBAAkB,EAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAC,wBAAwB,EAAC,OAAO,EAAE,IAAI,CAAC,4BAA4B,GAAQ;gBAChI,6BAAK,KAAK,EAAC,wBAAwB,EAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAC,wBAAwB,EAAC,OAAO,EAAE,IAAI,CAAC,wBAAwB,GAAQ,CAChI;YACN,gCAAQ,KAAK,EAAC,gBAAgB,EAAC,SAAS,EAAC,sBAAsB,EAAC,OAAO,EAAE,IAAI,CAAC,2BAA2B,GAAW;YACpH,gCAAQ,KAAK,EAAC,YAAY,EAAC,SAAS,EAAC,wBAAwB,EAAC,OAAO,EAAE,IAAI,CAAC,uBAAuB,GAAW;YAC9G,gCAAQ,KAAK,EAAC,OAAO,EAAC,SAAS,EAAC,mBAAmB,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU,GAAW,CACtF,CAAC;IACV,CAAC;IAiCO,mDAAoB,GAA5B,UAA6B,MAAe,EAAE,aAA8B;QACxE,IAAI,MAAM,EAAE;YACR,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;SACjD;aAAM;YACH,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;SACpD;QACD,IAAI,CAAC,WAAY,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IAiBD,qCAAM,GAAN,UAAO,WAAoB,EAAE,eAAoC;QAC7D,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,WAAW,CAAC;YAC7C,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE1C,IAAI,eAAe,KAAK,MAAM,EAAE;gBAC5B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;aAC7D;YAED,IAAI,eAAe,KAAK,UAAU,EAAE;gBAChC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;aACjE;SACJ;IACL,CAAC;IAUD,0CAAW,GAAX;QACI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAED,0CAAW,GAAX;QACI,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;SAC7B;IACL,CAAC;IAzHD;QADC,kBAAM,CAAC,gBAAQ,CAAC;kCACG,gBAAQ;0DAAC;IAG7B;QADC,yBAAa,EAAE;;;;oDASf;IAnBQ,oBAAoB;QADhC,sBAAU,EAAE;OACA,oBAAoB,CAkIhC;IAAD,2BAAC;CAAA,CAlIyC,0BAAW,GAkIpD;AAlIY,oDAAoB;;;;;;;;;;;;;;AC7BjC;;;;;;;;;;;;;;kFAckF;;;AAIrE,4BAAoB,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC;;;;;;;;;;;;;;AClBnE;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,oGAAsD;AACtD,sHAAoD;AAGpD;IAAA;QAAA,iBAuEC;QAlEW,iBAAY,GAAG,UAAC,EAAkB;YACtC,IAAI,KAAI,CAAC,aAAa,IAAI,EAAE,CAAC,aAAa,EAAE;gBACxC,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;gBACxD,EAAE,CAAC,cAAc,EAAE,CAAC;aACvB;QACL,CAAC,CAAC;IA6DN,CAAC;IA1Da,6CAAI,GAAd;QACI,QAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACzD,CAAC;IAEa,+DAAsB,GAApC;;;;;;wBACI,uGAAuG;wBACvG,IAAI,mBAAS,EAAE;4BACX,sBAAO,IAAI,EAAC;yBACf;;;;wBAGS,WAAW,GAAI,SAAiB,CAAC,WAAW,CAAC;wBACjC,qBAAM,WAAW,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC;;wBAA9D,KAAK,GAAK,UAAoD,OAAzD;wBACb,IAAI,KAAK,KAAK,SAAS,EAAE;4BACrB,sBAAO,IAAI,EAAC;yBACf;;;;;4BAGL,sBAAO,KAAK,EAAC;;;;KAChB;IAEO,2DAAkB,GAA1B;QACI,IAAI;YACA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAC7B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC9B;QAAC,OAAO,CAAC,EAAE;YACR,aAAa;SAChB;IACL,CAAC;IAEa,yDAAgB,GAA9B;;;;;;wBAEU,SAAS,GAAI,SAAiB,CAAC,SAAS,CAAC;wBAE/C,IAAI,CAAC,SAAS,EAAE;4BACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;4BAC1B,sBAAO;yBACV;;;;wBAGG,qBAAM,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC;;wBAA1C,SAA0C,CAAC;;;;wBAE3C,IAAI,CAAC,kBAAkB,EAAE,CAAC;;;;;;KAEjC;IAEK,6CAAI,GAAV,UAAW,IAAY;;;;;;wBACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBAGjB,WAAW,GAAI,SAAiB,CAAC,WAAW,CAAC;wBAC/C,gBAAW,IAAI,WAAW,CAAC,KAAK;iCAAhC,wBAAgC;wBAAI,qBAAM,IAAI,CAAC,sBAAsB,EAAE;;8BAAnC,SAAmC;;;iCAAvE,wBAAuE;wBACvE,qBAAM,IAAI,CAAC,gBAAgB,EAAE;;wBAA7B,SAA6B,CAAC;;;wBAE9B,IAAI,CAAC,kBAAkB,EAAE,CAAC;;;;;;KAEjC;IAzDD;QADC,yBAAa,EAAE;;;;8DAGf;IAfQ,8BAA8B;QAD1C,sBAAU,EAAE;OACA,8BAA8B,CAuE1C;IAAD,qCAAC;CAAA;AAvEY,wEAA8B;;;;;;;;;;;;;;ACpB3C;;;;;;;;;;;;;;kFAckF;;;AAGlF,sHAA8I;AAC9I,0HAAiE;AAEpD,4BAAoB,GAAqB;IAClD,IAAI,EAAE,QAAQ;IACd,UAAU,EAAE;QACR,qBAAqB,EAAE;YACnB,IAAI,EAAE,SAAS;YACf,WAAW,EAAE,sDAAsD;YACnE,OAAO,EAAE,IAAI;SAChB;QACD,sBAAsB,EAAE;YACpB,IAAI,EAAE,SAAS;YACf,WAAW,EAAE,wDAAwD;YACrE,OAAO,EAAE,IAAI;SAChB;QACD,gCAAgC,EAAE;YAC9B,IAAI,EAAE,QAAQ;YACd,WAAW,EAAE,2CAA2C;YACxD,OAAO,EAAE,8BAAoB,CAAC,UAAU;SAC3C;QACD,8BAA8B,EAAE;YAC5B,IAAI,EAAE,QAAQ;YACd,WAAW,EAAE,mDAAmD;YAChE,OAAO,EAAE,CAAC;YACV,OAAO,EAAE,8BAAoB,CAAC,QAAQ;SACzC;QACD,gCAAgC,EAAE;YAC9B,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;YACvF,WAAW,EAAE,+DAA+D;YAC5E,OAAO,EAAE,QAAQ;SACpB;QACD,oCAAoC,EAAE;YAClC,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;YACvF,WAAW,EAAE,2DAA2D;YACxE,OAAO,EAAE,MAAM;SAClB;QACD,gDAAgD,EAAE;YAC9C,WAAW,EAAE,sDAAsD;YACnE,IAAI,EAAE,SAAS;YACf,OAAO,EAAE,IAAI;SAChB;QACD,mCAAmC,EAAE;YACjC,WAAW,EAAE,mJAAmJ;YAChK,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,CAAC;SACb;QACD,gCAAgC,EAAE;YAC9B,WAAW,EAAE,wIAAwI;YACrJ,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,CAAC;YACV,OAAO,EAAE,CAAC;SACb;QACD,gCAAgC,EAAE;YAC9B,WAAW,EAAE,wEAAwE;YACrF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,IAAI;SAChB;QACD,2CAA2C,EAAE;YACzC,WAAW,EAAE,qDAAqD;YAClE,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,CAAC;SACb;QACD,kCAAkC,EAAE;YAChC,WAAW,EAAE,wCAAwC;YACrD,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC;YACvB,OAAO,EAAE,QAAQ;SACpB;QACD,qCAAqC,EAAE;YACnC,WAAW,EAAE,iFAAiF;YAC9F,IAAI,EAAE,SAAS;YACf,OAAO,EAAE,KAAK;SACjB;QACD,oCAAoC,EAAE;YAClC,WAAW,EAAE,8CAA8C;YAC3D,IAAI,EAAE,SAAS;YACf,OAAO,EAAE,KAAK;SACjB;QACD,iCAAiC,EAAE;YAC/B,WAAW,EAAE,4CAA4C;YACzD,IAAI,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,MAAM,CAAC;YACpC,OAAO,EAAE,OAAO;SACnB;QACD,iCAAiC,EAAE;YAC/B,WAAW,EAAE,+FAA+F;YAC5G,mBAAmB,EAAE,6FAA6F;YAClH,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,CAAC;SACb;QACD,mCAAmC,EAAE;YACjC,IAAI,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC;YACxB,WAAW,EAAE,qGAAqG;YAClH,mBAAmB,EAAE,qGAAqG;YAC1H,OAAO,EAAE,SAAS;SACrB;QACD,+BAA+B,EAAE;YAC7B,IAAI,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC;YACxB,WAAW,EAAE,sEAAmE,OAAO,CAAC,GAAG,CAAC,KAAK,IAAI,WAAW,QAAI;YACpH,mBAAmB,EAAE,sEAAmE,OAAO,CAAC,GAAG,CAAC,KAAK,IAAI,WAAW,QAAI;YAC5H,OAAO,EAAE,SAAS;SACrB;QACD,iCAAiC,EAAE;YAC/B,IAAI,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC;YACxB,WAAW,EAAE,sEAAmE,OAAO,CAAC,GAAG,CAAC,KAAK,IAAI,WAAW,QAAI;YACpH,mBAAmB,EAAE,sEAAmE,OAAO,CAAC,GAAG,CAAC,KAAK,IAAI,WAAW,QAAI;YAC5H,OAAO,EAAE,SAAS;SACrB;QACD,uCAAuC,EAAE;YACrC,IAAI,EAAE,OAAO;YACb,WAAW,EAAE,iEAAiE;YAC9E,mBAAmB,EAAE,iEAAiE;YACtF,OAAO,EAAE,EAAE;SACd;QACD,mCAAmC,EAAE;YACjC,IAAI,EAAE,OAAO;YACb,WAAW,EAAE,+DAA+D;YAC5E,mBAAmB,EAAE,+DAA+D;YACpF,OAAO,EAAE;gBACL,IAAI;aACP;SACJ;QACD,qCAAqC,EAAE;YACnC,IAAI,EAAE,OAAO;YACb,WAAW,EAAE,+DAA+D;YAC5E,mBAAmB,EAAE,+DAA+D;YACpF,OAAO,EAAE,EAAE;SACd;KACJ;CACJ,CAAC;AAgCW,sCAA8B,GAAG,QAAQ,CAAC;AACvD,8DAA8D;AAC9D,SAAgB,sBAAsB,CAAC,GAAQ;IAC3C,OAAO,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,KAAK,CAAC,CAAC;AAC1E,CAAC;AAFD,wDAEC;AAEY,2BAAmB,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC;AAGjE,SAAgB,yBAAyB,CAAC,WAA8B;IACpE,OAAO,+BAAqB,CAAC,WAAW,EAAE,4BAAoB,CAAC,CAAC;AACpE,CAAC;AAFD,8DAEC;AAED,SAAgB,uBAAuB,CAAC,IAAqB;IACzD,IAAI,CAAC,2BAAmB,CAAC,CAAC,cAAc,CAAC,aAAG;QACxC,IAAM,WAAW,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAoB,2BAAiB,CAAC,CAAC;QAC5E,OAAO,yBAAyB,CAAC,WAAW,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IACH,IAAI,CAAC,gCAAsB,CAAC,CAAC,eAAe,CAAC,EAAE,MAAM,EAAE,4BAAoB,EAAE,CAAC,CAAC;AACnF,CAAC;AAND,0DAMC;;;;;;;;;;;;;;ACvMD;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;AAGlF,oGAA+C;AAC/C,qJAAsF;AACtF,gIAA+D;AAE/D;;GAEG;AACU,4BAAoB,GAAkE;IAC/F,oBAAoB,EAAE;QAClB,KAAK,EAAE,CAAC;QACR,QAAQ,EAAE;YACN,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,SAAS;SAChB;KACJ;IACD,kBAAkB,EAAE;QAChB,KAAK,EAAE,CAAC;QACR,QAAQ,EAAE;YACN,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,SAAS;SAChB;KACJ;IACD,oBAAoB,EAAE;QAClB,KAAK,EAAE,CAAC;QACR,QAAQ,EAAE;YACN,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,SAAS;SAChB;KACJ;IACD,qBAAqB,EAAE;QACnB,KAAK,EAAE,CAAC;QACR,QAAQ,EAAE;YACN,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,SAAS;SAChB;KACJ;IACD,mBAAmB,EAAE;QACjB,KAAK,EAAE,CAAC;QACR,QAAQ,EAAE;YACN,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,SAAS;SAChB;KACJ;IACD,sBAAsB,EAAE;QACpB,KAAK,EAAE,CAAC;QACR,QAAQ,EAAE;YACN,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,SAAS;SAChB;KACJ;IACD,mBAAmB,EAAE;QACjB,KAAK,EAAE,CAAC;QACR,QAAQ,EAAE;YACN,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,SAAS;SAChB;KACJ;IACD,oBAAoB,EAAE;QAClB,KAAK,EAAE,CAAC;QACR,QAAQ,EAAE;YACN,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,SAAS;SAChB;KACJ;IACD,0BAA0B,EAAE;QACxB,KAAK,EAAE,CAAC;QACR,QAAQ,EAAE;YACN,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,SAAS;SAChB;KACJ;IACD,wBAAwB,EAAE;QACtB,KAAK,EAAE,CAAC;QACR,QAAQ,EAAE;YACN,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,SAAS;SAChB;KACJ;IACD,0BAA0B,EAAE;QACxB,KAAK,EAAE,EAAE;QACT,QAAQ,EAAE;YACN,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,SAAS;SAChB;KACJ;IACD,2BAA2B,EAAE;QACzB,KAAK,EAAE,EAAE;QACT,QAAQ,EAAE;YACN,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,SAAS;SAChB;KACJ;IACD,yBAAyB,EAAE;QACvB,KAAK,EAAE,EAAE;QACT,QAAQ,EAAE;YACN,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,SAAS;SAChB;KACJ;IACD,4BAA4B,EAAE;QAC1B,KAAK,EAAE,EAAE;QACT,QAAQ,EAAE;YACN,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,SAAS;SAChB;KACJ;IACD,yBAAyB,EAAE;QACvB,KAAK,EAAE,EAAE;QACT,QAAQ,EAAE;YACN,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,SAAS;SAChB;KACJ;IACD,0BAA0B,EAAE;QACxB,KAAK,EAAE,EAAE;QACT,QAAQ,EAAE;YACN,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,SAAS;SAChB;KACJ;CACJ,CAAC;AAGF;IAAA;QAKa,gBAAW,GAAG,sBAAY,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC;IA0B5D,CAAC;IAxBG,sBAAI,uCAAK;aAAT;YACI,IAAM,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,qBAAqB,CAAC,CAAC;YAClF,IAAM,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,qBAAqB,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,kBAAkB,CAAC,CAAC;YAC5I,IAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,2BAA2B,CAAC,IAAI,eAAe,CAAC;YACvG,IAAM,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,2BAA2B,CAAC,IAAI,eAAe,CAAC;YAC7G,IAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,8BAA8B,CAAC,CAAC;YAE1F,IAAM,KAAK,GAAW;gBAClB,UAAU,EAAE,eAAe;gBAC3B,UAAU,EAAE,eAAe;gBAC3B,MAAM,EAAE,WAAW;gBACnB,YAAY,EAAE,iBAAiB;gBAC/B,SAAS,EAAE,cAAc;aAC5B,CAAC;YACF,wCAAwC;YACxC,KAAK,IAAM,EAAE,IAAI,4BAAoB,EAAE;gBACnC,IAAM,OAAO,GAAG,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;gBACjC,IAAM,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACrE,8DAA8D;gBAC7D,KAAa,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;aACtE;YACD,OAAO,KAAK,CAAC;QACjB,CAAC;;;OAAA;IA1BD;QADC,kBAAM,CAAC,8BAAa,CAAC;kCACY,8BAAa;+DAAC;IAHvC,oBAAoB;QADhC,sBAAU,EAAE;OACA,oBAAoB,CA+BhC;IAAD,2BAAC;CAAA;AA/BY,oDAAoB;;;;;;;;;;;;;;AC5JjC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,oFAA+C;AAC/C,4HAA2C;AAC3C,oGAAqE;AACrE,sGAA8G;AAC9G,sHAAwI;AACxI,mHAA+C;AAC/C,gIAAgE;AAChE,qKAAwG;AACxG,mJAA4D;AAC5D,kKAA4F;AAC5F,gJAA6D;AAC7D,gJAAmG;AAEnG,6IAA+D;AAC/D,qJAAwJ;AACxJ,wJAA+D;AAC/D,kHAA6C;AAC7C,mJAA0D;AAC1D,yKAAoG;AACpG,+LAAsF;AACtF,2JAAgE;AAChE,8KAA0G;AAE7F,kCAA0B,GAAG,UAAU,CAAC;AAQrD;IAAwC,sCAAc;IAAtD;QAAA,qEAmnBC;QAjnBoB,cAAQ,GAAG,UAAU,CAAC;QAC7B,kBAAY,GAAG,MAAM,CAAC;QACtB,iBAAW,GAAG,CAAC,CAAC,CAAC;QACR,oBAAc,GAAG,IAAI,cAAO,EAAkB,CAAC;QAIxD,cAAQ,GAAG,KAAK,CAAC;QACjB,oBAAc,GAAG,IAAI,CAAC;QAoBb,sBAAgB,GAAG,IAAI,cAAO,EAAQ,CAAC;QACjD,eAAS,GAAgB,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;QAE3C,6BAAuB,GAAG,IAAI,cAAO,EAAQ,CAAC;QACxD,sBAAgB,GAAgB,KAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC;QAEzD,0BAAoB,GAAG,IAAI,cAAO,EAAmC,CAAC;QAChF,mBAAa,GAA2C,KAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;QAE9E,mBAAa,GAAG,IAAI,cAAO,EAAU,CAAC;QAChD,YAAM,GAAkB,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QAEvC,wBAAkB,GAAG,IAAI,2BAAoB,EAAE,CAAC;QA4WzD,iBAAW,GAAG,IAAI,CAAC;QAiB7B,yCAAyC;QACzC,+FAA+F;QAC5E,uBAAiB,GAAG,IAAI,GAAG,CAAC,CAAC,kBAAkB,EAAE,kBAAkB,EAAE,qBAAqB,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC,CAAC;QA4CpI,gBAAU,GAAG,KAAK,CAAC;QACnB,iBAAW,GAAG,EAAE,CAAC;;IA6J/B,CAAC;IAtkBa,iCAAI,GAAd;;QADA,iBAsJC;QApJG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,gBAAgB,CAAC;QAExC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;YACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;SACzC;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,kBAAkB,KAAK,IAAI,EAAE;YAC1C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAU,CAAC,MAAM,CAAC;gBAClC,YAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YAAnB,CAAmB,CACtB,CAAC,CAAC;SACN;QAED,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;QAEpC,IAAI,CAAC,IAAI,GAAG,IAAI,gBAAQ,CAAC;YACrB,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,oCAAoC,CAAC;YACnE,WAAW,EAAE,IAAI,CAAC,cAAc,EAAE;YAClC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,iCAAiC,CAAC;YAChE,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,gCAAgC,CAAC;YAC9D,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,8BAA8B,CAAC;YAC1D,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,gCAAgC,CAAC;YAC9D,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,oCAAoC,CAAC;YACtE,0BAA0B,EAAE,IAAI,CAAC,WAAW,CAAC,gDAAgD,CAAC;YAC9F,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,mCAAmC,CAAC;YACpE,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,gCAAgC,CAAC;YAC9D,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,gCAAgC,CAAC;YAC9D,qBAAqB,EAAE,IAAI,CAAC,WAAW,CAAC,2CAA2C,CAAC;YACpF,YAAY,EAAE,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,WAAW,CAAC,kCAAkC,CAAC,CAAC;YAChG,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;SACjC,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,GAAG,IAAI,0BAAQ,EAAE,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEnC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAClD,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,4BAA4B,CAAC;QAC7D,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;QAC3C,kFAAkF;QAClF,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,GAAG,sCAAsC,CAAC;QACvE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,GAAG,2CAA2C,CAAC;QACtF,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,GAAG,uCAAuC,CAAC;QAC9E,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC;QAC9C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC;QAC9C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;QACxC,oCAAoC;QACpC,qHAAqH;QACrH,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;QACtC,uBAAuB;QACvB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAEzC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,gBAAM;YAC3D,IAAM,aAAa,GAAG,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAC7D,IAAI,aAAa,GAAG,CAAC,EAAE;gBACnB,IAAI,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;gBACrE,IAAI,eAAe,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;gBAE9D,IAAI,cAAc,KAAK,cAAc,EAAE;oBACnC,IAAM,eAAe,GAAW,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,cAAc,CAAW,CAAC;oBAClF,IAAI,eAAe,KAAK,KAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,EAAE;wBACnE,2DAA2D;wBAC3D,eAAe,GAAG,qDAA8B,CAAC;qBACpD;iBACJ;gBAED,+DAA+D;gBAC/D,IAAI,cAAc,KAAK,gBAAgB,EAAE;oBACrC,cAAc,GAAG,aAAa,CAAC;iBAClC;qBAAM,IAAI,cAAc,KAAK,aAAa,EAAE;oBACzC,eAAe,GAAG,KAAI,CAAC,cAAc,EAAE,CAAC;iBAC3C;gBAED,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;gBACrD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,KAAI,CAAC,MAAM,EAAE,CAAC;aACjB;QACL,CAAC,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,cAAM,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAArD,CAAqD,CAAC,CAAC,CAAC;QAChH,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAM,0BAA0B,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,UAAC,KAAa;YACrE,IAAI,KAAI,CAAC,OAAO,CAAC,cAAc,EAAE;gBAC7B,KAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;aAC5B;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;QAEhD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,UAAC,EAAqB;gBAAnB,UAAU,kBAAE,KAAK;YACzE,IAAI,UAAU,KAAK,KAAI,CAAC,UAAU,EAAE;gBAChC,KAAI,CAAC,OAAO,EAAE,CAAC;gBACf,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;gBAC/B,KAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;gBAC9B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,6CAA2C,KAAO,CAAC,CAAC;aACzE;QACL,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,UAAC,EAAc;gBAAZ,UAAU;YACjE,IAAI,UAAU,KAAK,KAAI,CAAC,UAAU,EAAE;gBAChC,KAAI,CAAC,OAAO,EAAE,CAAC;gBACf,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;gBAC/B,KAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;aACjC;QACL,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC;YAC9D,IAAM,UAAU,GAAG,KAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC;gBAC5D,UAAU,CAAC,OAAO,EAAE,CAAC;gBACrB,KAAI,CAAC,wBAAwB,EAAE,CAAC;YACpC,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACzC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC3C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAClD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAExC,IAAM,gBAAgB,GAAG,UAAC,KAAiB;YACvC,IAAI,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAc,CAAC,EAAE;gBAC1C,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC7B;QACL,CAAC,CAAC;QACF,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,gBAAgB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAC3E,IAAI,CAAC,SAAS,CAAC;YACX,QAAQ,CAAC,mBAAmB,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;YAC5C,IAAI,KAAI,CAAC,eAAe,EAAE;gBACtB,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;aAC9D;QACL,CAAC,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAI;YACvC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAI;YACrC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC,CAAC;;YAEJ,KAA2B,sBAAI,CAAC,4BAA4B,CAAC,gBAAgB,EAAE,6CAAE;gBAA5E,IAAM,YAAY;gBACnB,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC/B;;;;;;;;;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACxC,CAAC;IAED,sBAAI,oCAAI;aAAR;YACI,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;;;OAAA;IAED;;;OAGG;IACK,2CAAc,GAAtB;QACI,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,iCAAiC,CAAC,CAAC;QAClE,OAAO,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;IAC5C,CAAC;IAED;;;;OAIG;IACK,oDAAuB,GAA/B,UAAgC,oBAAoD;QAChF,IAAI,oBAAoB,IAAI,6CAAsB,CAAC,oBAAoB,CAAC,EAAE;YACtE,OAAO,oBAAoB,CAAC;SAC/B;QACD,OAAO,qDAA8B,CAAC;IAC1C,CAAC;IAED,6CAAgB,GAAhB,UAAiB,CAAS,EAAE,CAAS,EAAE,OAAe;QAClD,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,OAAO,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC;QAC3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,GAAM,CAAC,GAAG,EAAE,OAAI,CAAC;QAC5C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,GAAM,CAAC,GAAG,EAAE,OAAI,CAAC;IACjD,CAAC;IAED,sCAAS,GAAT;QACI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IAC7C,CAAC;IAED,wCAAW,GAAX;QACI,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,yCAAY,GAAZ;QACI,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED,sBAAI,0CAAU;aAAd;YACI,OAAO;gBACH,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI;gBACpB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI;aACvB,CAAC;QACN,CAAC;;;OAAA;IAED,sBAAI,mCAAG;aAAP;YACI,IAAI,CAAC,4CAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;gBAClD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC;aAC/D;YACD,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBACvC,OAAO,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC;qBACrD,IAAI,CAAC,gBAAM,IAAI,WAAI,aAAG,CAAC,MAAM,CAAC,EAAf,CAAe,CAAC,CAAC;aACxC;YACD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,aAAG,EAAE,CAAC,CAAC;QACtC,CAAC;;;OAAA;IAED,sBAAI,yCAAS;aAAb;YACI,IAAI,CAAC,4CAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;gBAClD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC;aAC/D;YACD,OAAO,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClE,CAAC;;;OAAA;IAED,sBAAI,2CAAW;aAAf;YACI,IAAI,CAAC,4CAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;gBAClD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC;aAC/D;YACD,OAAO,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpE,CAAC;;;OAAA;IAED,sBAAI,0CAAU;aAAd;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;;;OAAA;IAED,sBAAI,iDAAiB;aAArB;YACI,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;;;OAAA;IAED,sCAAS,GAAT,UAAU,SAAqB;QAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,wCAAW,GAAX;QACI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAEK,8CAAiB,GAAvB;;;;;;wBACW,eAAI,CAAC,mBAAmB,EAAC,iBAAiB;wBAAC,qBAAM,IAAI,CAAC,SAAS;4BAAtE,sBAAO,cAA2C,SAAoB,EAAC,EAAC;;;;KAC3E;IAED,uCAAU,GAAV;QACI,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;YAC/B,OAAO,EAAE,CAAC;SACb;QACD,OAAO,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACzE,CAAC;IAED,yCAAY,GAAZ,UAAa,QAAgB;QACzB,kCAAkC;QAClC,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;YAC/B,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,OAAO;SACV;QACD,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;YACzB,IAAM,KAAK,GAAG,QAAsD,CAAC;YACrE,wCAAwC;YACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC;YACpC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;SAChC;IACL,CAAC;IAED;;;;OAIG;IACG,kCAAK,GAAX,UAAY,EAAW;;;;;;wBACnB,SAAI;6BAAe,QAAO,EAAE,KAAK,QAAQ,GAAtB,wBAAsB;wBAAG,qBAAM,IAAI,CAAC,cAAc,EAAE;;wBAA3B,cAA2B;;4BAAG,qBAAM,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;;wBAA7B,cAA6B;;;wBAAvG,GAAK,WAAW,KAAuF,CAAC;wBACxG,IAAI,CAAC,qBAAqB,EAAE,CAAC;wBAC7B,IAAI,CAAC,sBAAsB,EAAE,CAAC;wBAC9B,IAAI,4CAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;4BACjD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BACtC,sBAAO,IAAI,CAAC,UAAU,EAAC;yBAC1B;wBACD,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBAC7C,MAAM,IAAI,KAAK,CAAC,0BAA0B,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,cAAY,EAAE,MAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;;;KAChF;IAEe,2CAAc,GAA9B,UAA+B,EAAU;;;;;4BAClB,qBAAM,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAE,CAAC;;wBAAtD,UAAU,GAAG,SAAyC;wBAC5D,IAAI,4CAAmB,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;4BAC5C,sBAAO,UAAU,EAAC;yBACrB;wBACD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,oCAAkC,EAAE,4EAAyE,CAAC,CAAC;wBACjI,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;4BACtB,sBAAO,IAAI,CAAC,cAAc,EAAE,EAAC;yBAChC;6BAAM;4BACH,sBAAO,CAAC,CAAC,EAAC;yBACb;;;;;KACJ;IAEe,2CAAc,GAA9B;;;;;;wBACQ,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;6BAC3B,CAAC,OAAO,EAAR,wBAAQ;wBACM,qBAAM,IAAI,CAAC,gBAAgB,CAAC,KAAK;;wBAAzC,IAAI,GAAG,CAAC,SAAiC,CAAC,CAAC,CAAC,CAAC;wBACnD,OAAO,GAAG,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC;;;wBAEzB,KAAiB,IAAI,CAAC,IAAI,EAAxB,IAAI,YAAE,IAAI,WAAe;wBAEd,qBAAM,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;gCACrD,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gCACvC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;gCAC7B,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;gCAC5B,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG;gCACrB,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB;gCACvC,OAAO;gCACP,IAAI;gCACJ,IAAI;6BACP,CAAC;;wBATI,UAAU,GAAG,SASjB;wBACF,IAAI,4CAAmB,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;4BAC5C,sBAAO,UAAU,EAAC;yBACrB;wBACD,MAAM,IAAI,KAAK,CAAC,iFAAiF,CAAC,CAAC;;;;KACtG;IAED,2CAAc,GAAd,UAAe,GAAY;QACvB,iBAAM,cAAc,YAAC,GAAG,CAAC,CAAC;QAC1B,QAAQ,GAAG,CAAC,IAAI,EAAE;YACd,KAAK,aAAa;gBACd,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBACvB,MAAM;YACV;gBACI,MAAM;SACb;IACL,CAAC;IACS,yCAAY,GAAtB,UAAuB,GAAY;QAC/B,iBAAM,YAAY,YAAC,GAAG,CAAC,CAAC;QACxB,qBAAW,CAAC,WAAW,CAAC,IAAI,EAAE,gBAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IACpE,CAAC;IACS,8CAAiB,GAA3B,UAA4B,GAAY;QACpC,iBAAM,iBAAiB,YAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IACS,wCAAW,GAArB,UAAsB,GAAY;QAC9B,iBAAM,WAAW,YAAC,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IACS,0CAAa,GAAvB,UAAwB,GAAY;QAChC,gBAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACzC,iBAAM,aAAa,YAAC,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IACS,2CAAc,GAAxB,UAAyB,GAAY;QACjC,gBAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9B,iBAAM,cAAc,YAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IACS,qCAAQ,GAAlB,UAAmB,GAAyB;QACxC,iBAAM,QAAQ,YAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAGS,4CAAe,GAAzB,UAA0B,GAAY;QAClC,iBAAM,eAAe,YAAC,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACrC,OAAO;SACV;QAED,IAAI,CAAC,IAAI,EAAE,CAAC;QAEZ,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAChC;IACL,CAAC;IAMS,mDAAsB,GAAhC;QAAA,iBAgCC;QA/BG,IAAI,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,EAAE;YACrC,OAAO;SACV;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;YAC/B,OAAO;SACV;QACD,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;QAClC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC7C,IAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,uBAAQ,EAAqB,CAAC;QACrF,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC;YACpC,IAAI,EAAK,iCAAa,SAAI,IAAI,CAAC,UAAY;YAC3C,YAAY,EAAE,oBAAU;gBACpB,UAAU,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAC,IAAY,IAAK,YAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAhB,CAAgB,CAAC,CAAC;gBAExE,sDAAsD;gBACtD,IAAM,QAAQ,GAAG,UAAC,IAAa;oBAC3B,IAAI,IAAI,IAAI,CAAC,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;wBAC3C,OAAO,UAAU,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;qBAChD;gBACL,CAAC,CAAC;gBAEF,IAAM,UAAU,GAAG,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAC9C,UAAU,CAAC,SAAS,CAAC,cAAM,iBAAU,CAAC,OAAO,EAAE,EAApB,CAAoB,CAAC,CAAC;gBAEjD,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACzC,UAAU,CAAC,MAAM,EAAE,CAAC;gBACpB,IAAI,iBAAiB,EAAE;oBACnB,iBAAiB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;iBACzC;YACL,CAAC;SACJ,EAAE,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAAC;IAChC,CAAC;IACe,qDAAwB,GAAxC;;;;;wBACI,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;4BAC/B,sBAAO;yBACV;6BACG,QAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,GAAnC,wBAAmC;wBACnC,qBAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC;;wBAAjC,SAAiC,CAAC;;;;;;KAEzC;IAIS,iCAAI,GAAd;QACI,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,OAAO;SACV;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACrC;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAEtB,IAAI,mBAAS,EAAE;YACX,sGAAsG;YACtG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBAClB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAiB,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;aACjF;SACJ;IACL,CAAC;IAED,kCAAK,GAAL,UAAM,IAAY;QACd,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACzB;aAAM;YACH,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC;SAC5B;IACL,CAAC;IAED,mCAAM,GAAN,UAAO,IAAY,EAAE,IAAY;QAC7B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,qCAAQ,GAAR,UAAS,IAAY;QACjB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAU;gBAC1C,iBAAU,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC;YAArC,CAAqC,CACxC,CAAC;SACL;IACL,CAAC;IAEK,2CAAc,GAApB,UAAqB,cAAkC;;;;;;wBACnD,SAAI,CAAC,QAAQ;wBAAC,eAAI,CAAC,mBAAmB,EAAC,YAAY;wBAAC,qBAAM,IAAI,CAAC,WAAW;;wBAA1E,aAAI,GAAU,cAAsC,SAAsB,EAAE,cAAc,EAAC,GAAG,IAAI,EAAC,CAAC;;;;;KACvG;IAED,yCAAY,GAAZ;QACI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC;IAED,2CAAc,GAAd;QACI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,wCAAW,GAAX;QACI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC5B,CAAC;IAED,2CAAc,GAAd;QACI,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;IAC/B,CAAC;IAED,yCAAY,GAAZ;QACI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC;IAED,2CAAc,GAAd;QACI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,0CAAa,GAAb;QACI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAED,sCAAS,GAAT,UAAU,IAAY;QAClB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,sBAAI,kDAAkB;aAAtB;YACI,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;QACrC,CAAC;;;OAAA;IAED,oCAAO,GAAP;QACI;oDAC4C;QAC5C,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,IAAI,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,EAAE;YACrE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAChD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClC;QACD,iBAAM,OAAO,WAAE,CAAC;IACpB,CAAC;IAES,2CAAc,GAAxB;QACI,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;QAC9C,IAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QACtB,IAAM,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,8BAA8B;QACzD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACjC,CAAC;IAES,kDAAqB,GAA/B;QACI,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;YAC/B,OAAO;SACV;QACD,IAAI,CAAC,4CAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC;eAC7C,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;YAC3C,OAAO;SACV;QACK,SAAiB,IAAI,CAAC,IAAI,EAAxB,IAAI,YAAE,IAAI,UAAc,CAAC;QACjC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC;IAED,sBAAc,0CAAU;aAAxB;YACI,OAAO,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;QACnD,CAAC;;;OAAA;IAED,sBAAc,2CAAW;aAAzB;YACI,OAAO,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;QACpD,CAAC;;;OAAA;IAED,sBAAc,gDAAgB;aAA9B;YACI,OAAO;gBACH,KAAK,EAAE;oBACH,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,mCAAmC,CAAC;oBAC9D,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,iCAAiC,CAAC;oBAC1D,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,+BAA+B,CAAC;iBACzD;gBACD,SAAS,EAAE;oBACP,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,uCAAuC,CAAC;oBAClE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,qCAAqC,CAAC;oBAC9D,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,mCAAmC,CAAC;iBAC7D;aACJ,CAAC;QACN,CAAC;;;OAAA;IAES,6CAAgB,GAA1B,UAA2B,KAAoB;QAC3C,IAAM,WAAW,GAAG,iBAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC5D,IAAM,WAAW,GAAG,CAAC,cAAK,IAAI,WAAW,KAAK,QAAQ,CAAC,IAAI,CAAC,CAAC,cAAK,IAAI,WAAW,KAAK,QAAQ,CAAC,CAAC;QAChG,IAAM,YAAY,GAAG,CAAC,cAAK,IAAI,WAAW,KAAK,QAAQ,CAAC,IAAI,CAAC,CAAC,cAAK,IAAI,WAAW,KAAK,QAAQ,CAAC,CAAC;QACjG,IAAI,WAAW,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE;YAC5D,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,YAAY,IAAI,IAAI,CAAC,WAAW,EAAE;YAClC,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,sBAAc,+CAAe;aAA7B;YACI,OAAO,IAAI,CAAC,WAAW,CAAC,qCAAqC,CAAC,CAAC;QACnE,CAAC;;;OAAA;IAES,wDAA2B,GAArC;QAAA,iBAEC;QADG,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,WAAC,IAAI,YAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAxB,CAAwB,CAAC,CAAC;IACzE,CAAC;IAED,qCAAQ,GAAR,UAAS,KAAa;QAClB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;IAC7B,CAAC;IAnmByB;QAAzB,kBAAM,CAAC,0BAAgB,CAAC;kCAAsC,0BAAgB;gEAAC;IAC3C;QAApC,kBAAM,CAAC,qCAA2B,CAAC;kCAAiD,qCAA2B;2EAAC;IAClF;QAA9B,kBAAM,CAAC,uCAAqB,CAAC;;uDAAgC;IAC5B;QAAjC,kBAAM,CAAC,kDAAwB,CAAC;;mEAAkE;IAC1E;QAAxB,kBAAM,CAAC,kCAAe,CAAC;kCAAqC,kCAAe;+DAAC;IACzC;QAAnC,kBAAM,CAAC,cAAO,CAAC;QAAE,iBAAK,CAAC,UAAU,CAAC;;sDAAoC;IAC5C;QAA1B,kBAAM,CAAC,iBAAiB,CAAC;;kDAA4B;IACzB;QAA5B,kBAAM,CAAC,0CAAmB,CAAC;;2DAAqD;IACtB;QAA1D,kBAAM,CAAC,2BAAoB,CAAC;QAAE,iBAAK,CAAC,4CAAoB,CAAC;;4EAA6F;IAC9H;QAAxB,kBAAM,CAAC,kCAAe,CAAC;;+DAAqD;IACxC;QAApC,kBAAM,CAAC,oDAA2B,CAAC;;wEAA0E;IACtE;QAAvC,kBAAM,CAAC,mEAA8B,CAAC;kCAA4C,mEAA8B;sEAAC;IACpF;QAA7B,kBAAM,CAAC,6CAAoB,CAAC;kCAAkC,6CAAoB;4DAAC;IACvD;QAA5B,kBAAM,CAAC,2CAAmB,CAAC;kCAAyC,2CAAmB;mEAAC;IAiBzF;QADC,yBAAa,EAAE;;;;kDAsJf;IAlMQ,kBAAkB;QAD9B,sBAAU,EAAE;OACA,kBAAkB,CAmnB9B;IAAD,yBAAC;CAAA,CAnnBuC,gCAAc,GAmnBrD;AAnnBY,gDAAkB;;;;;;;;;;;;;;AC/C/B;;;;;;;;;;;;;;kFAckF;;;AAGlF,sGAAyC;AAmBzC,IAAiB,mBAAmB,CAInC;AAJD,WAAiB,mBAAmB;IAChC,SAAgB,UAAU,CAAC,EAAW;QAClC,OAAO,OAAO,EAAE,KAAK,QAAQ,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IAC/C,CAAC;IAFe,8BAAU,aAEzB;AACL,CAAC,EAJgB,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAInC;AAoBD;IAAA;QAEuB,YAAO,GAAG,IAAI,GAAG,EAAuB,CAAC;IA2BhE,CAAC;IAzBG,4CAAI,GAAJ,UAAK,MAA2B;QAAhC,iBAGC;QAFG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACzB,OAAO,iBAAU,CAAC,MAAM,CAAC,cAAM,YAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAA3B,CAA2B,CAAC,CAAC;IAChE,CAAC;IAED,6DAAqB,GAArB,UAAsB,KAA6B;QAC/C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAC;YAClB,IAAI;gBACA,CAAC,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;aAClC;YAAC,OAAO,CAAC,EAAE;gBACR,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACpB;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uDAAe,GAAf,UAAgB,KAA8B;QAE1C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAC;YAClB,IAAI;gBACA,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;aAC5B;YAAC,OAAO,CAAC,EAAE;gBACR,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACpB;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACL,oCAAC;AAAD,CAAC;AA7BY,sEAA6B;;;;;;;;;;;;;;AC5D1C;;;;;;;;;;;;;;kFAckF;;;AAMrE,4BAAoB,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC;AAMtD,yBAAiB,GAAG,0BAA0B,CAAC;AAS3D,CAAC;AAaW,gCAAwB,GAAG,MAAM,CAAC,0BAA0B,CAAC,CAAC;;;;;;;;;;;;;;AChD3E;;;;;;;;;;;;;;kFAckF;;;AAIrE,uBAAe,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC;AAE5C,oBAAY,GAAG,oBAAoB,CAAC;AACpC,qBAAa,GAAG,qBAAqB,CAAC;;;;;;;;;;;;;;ACrBnD;;;;;;;;;;;;;;kFAckF;;;;;;;;;AAElF,oGAAuC;AACvC,wHAA8D;AAI9D;IAAA;QAeY,0BAAqB,GAAG,IAAI,eAAO,EAA0B,CAAC;QAC9D,2BAAsB,GAAG,IAAI,eAAO,EAA2B,CAAC;IAS5E,CAAC;IAvBG,2CAAiB,GAAjB;QACI,IAAM,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC;QAC/C,IAAM,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC;QACjD,OAAO;YACH,qBAAqB,EAArB,UAAsB,KAA6B;gBAC/C,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC;YACD,eAAe,EAAf,UAAgB,KAA8B;gBAC1C,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC;SACJ,CAAC;IACN,CAAC;IAKD,sBAAI,2CAAc;aAAlB;YACI,OAAO,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC;QAC5C,CAAC;;;OAAA;IAED,sBAAI,4CAAe;aAAnB;YACI,OAAO,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC;QAC7C,CAAC;;;OAAA;IAxBQ,eAAe;QAD3B,sBAAU,EAAE;OACA,eAAe,CAyB3B;IAAD,sBAAC;CAAA;AAzBY,0CAAe;;;;;;;;;;;;;ACpB5B,cAAc,mBAAO,CAAC,iKAA4D;;AAElF,4CAA4C,QAAS;;AAErD;AACA;;;;AAIA,eAAe;;AAEf;AACA;;AAEA,aAAa,mBAAO,CAAC,kGAA+C;;AAEpE;;AAEA,GAAG,KAAU,EAAE,E;;;;;;;;;;;ACnBf,2BAA2B,mBAAO,CAAC,4FAA2C;AAC9E;;;AAGA;AACA,cAAc,QAAS,y3BAAy3B,kDAAkD,yBAAyB,kBAAkB,0DAA0D,mBAAmB,eAAe,kBAAkB,oBAAoB,GAAG,iEAAiE,oBAAoB,kBAAkB,0DAA0D,mBAAmB,0BAA0B,2CAA2C,gDAAgD,GAAG,uEAAuE,uBAAuB,mBAAmB,mBAAmB,mBAAmB,qBAAqB,gCAAgC,0DAA0D,oBAAoB,GAAG,uDAAuD,0DAA0D,kCAAkC,mCAAmC,mBAAmB,kBAAkB,kBAAkB,mBAAmB,oBAAoB,GAAG,6DAA6D,iBAAiB,GAAG,yEAAyE,uEAAuE,GAAG,6FAA6F,oFAAoF,kEAAkE,GAAG,6EAA6E,qDAAqD,GAAG,6EAA6E,yDAAyD,GAAG,6EAA6E,gDAAgD,GAAG,wEAAwE,kBAAkB,oBAAoB,0BAA0B,2CAA2C,2CAA2C,GAAG,+EAA+E,oCAAoC,GAAG,qFAAqF,uEAAuE,GAAG,2FAA2F,gDAAgD,GAAG,8FAA8F,mDAAmD,GAAG,gGAAgG,qDAAqD,GAAG;;AAE1uH;;;;;;;;;;;;CCPA,SAA2CA,EAAMC,GAC1B,KAAyBC,CAC9CA,OAAOC,QAAUF,IACQ,SAKNA,CARrB,CASGG,OAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUJ,QAGnC,IAAID,EAASG,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHN,QAAS,IAUV,OANAO,EAAQH,GAAUI,KAAKT,EAAOC,QAASD,EAAQA,EAAOC,QAASG,GAG/DJ,EAAOO,GAAI,EAGJP,EAAOC,QA0Df,OArDAG,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASX,EAASY,EAAMC,GAC3CV,EAAoBW,EAAEd,EAASY,IAClCG,OAAOC,eAAehB,EAASY,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAASnB,GACX,oBAAXoB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAehB,EAASoB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAehB,EAAS,aAAc,CAAEsB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAS/B,GAChC,IAAIc,EAASd,GAAUA,EAAO0B,WAC7B,WAAwB,OAAO1B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAI,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,gFC/DrD,IAGA,aAGE,cAwDF,OAtDS,YAAAC,SAAP,SAAgBC,GACdC,KAAKC,UAAYF,GAGZ,YAAAG,QAAP,aAEO,YAAAC,IAAP,WACE,IAAMC,EAAOJ,KAAKK,oBAClB,GAAKD,GAASJ,KAAKC,UAAnB,CAKA,IAAMK,EAAaN,KAAKC,UAAWM,MAG/BP,KAAKC,UAAUO,OAASJ,EAAKI,MAAQR,KAAKC,UAAUQ,OAASL,EAAKK,OACpEH,EAAKI,eAAeC,QACpBX,KAAKC,UAAUW,OAAOR,EAAKK,KAAML,EAAKI,SAInC,YAAAH,kBAAP,WACE,GAAKL,KAAKC,WAILD,KAAKC,UAAUY,SAAYb,KAAKC,UAAUY,QAAQC,cAAvD,CAKA,IAAMR,EAAaN,KAAKC,UAAWM,MAE7BQ,EAAqBrD,OAAOsD,iBAAiBhB,KAAKC,UAAUY,QAAQC,eACpEG,EAAsBC,SAASH,EAAmBI,iBAAiB,WACnEC,EAAqBC,KAAKC,IAAI,EAAGJ,SAASH,EAAmBI,iBAAiB,WAC9EI,EAAe7D,OAAOsD,iBAAiBhB,KAAKC,UAAUY,SAStDW,EAAkBP,GAPjBC,SAASK,EAAaJ,iBAAiB,gBACpCD,SAASK,EAAaJ,iBAAiB,oBAO3CM,EAAiBL,GANdF,SAASK,EAAaJ,iBAAiB,kBACxCD,SAASK,EAAaJ,iBAAiB,kBAKiBb,EAAKoB,SAASC,eAK9E,MAJiB,CACflB,KAAMY,KAAKC,IAzDI,EAyDcD,KAAKO,MAAMH,EAAiBnB,EAAKI,eAAemB,WAAWC,kBACxFtB,KAAMa,KAAKC,IAzDI,EAyDcD,KAAKO,MAAMJ,EAAkBlB,EAAKI,eAAemB,WAAWE,sBAI/F,EA3DA,GAAa,EAAAC;;;;;;;;;;;;CCtBb,SAA2C1E,EAAMC,GAC1B,KAAyBC,CAC9CA,OAAOC,QAAUF,IACQ,SAKHA,CARxB,CASGG,OAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUJ,QAGnC,IAAID,EAASG,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHN,QAAS,IAUV,OANAO,EAAQH,GAAUI,KAAKT,EAAOC,QAASD,EAAQA,EAAOC,QAASG,GAG/DJ,EAAOO,GAAI,EAGJP,EAAOC,QA0Df,OArDAG,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASX,EAASY,EAAMC,GAC3CV,EAAoBW,EAAEd,EAASY,IAClCG,OAAOC,eAAehB,EAASY,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAASnB,GACX,oBAAXoB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAehB,EAASoB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAehB,EAAS,aAAc,CAAEsB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAS/B,GAChC,IAAIc,EAASd,GAAUA,EAAO0B,WAC7B,WAAwB,OAAO1B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAI,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,gFCzDrD,IAGA,0BASU,KAAAoC,qBAAuB,EAgWjC,OA5VS,YAAAnC,SAAP,SAAgBC,GACdC,KAAKC,UAAYF,GAGZ,YAAAG,QAAP,aASO,YAAAgC,SAAP,SAAgBC,EAAcC,GAC5B,IAAKpC,KAAKC,UACR,MAAM,IAAIoC,MAAM,6CAGlB,IAAKF,GAAwB,IAAhBA,EAAKG,OAEhB,OADAtC,KAAKC,UAAUsC,kBACR,EAGT,IAEIC,EAFAC,EAAW,EACXC,EAAW,EAEf,GAAI1C,KAAKC,UAAU0C,eAAgB,CACjC,IAAMC,IAAcR,GAAgBA,EAAcQ,YAGlDJ,EAAmBxC,KAAKC,UAAU4C,uBAClCH,EAAWE,EAAcJ,EAAiBE,SAAWF,EAAiBM,OACtEL,EAAWG,EAAcJ,EAAiBO,YAAcP,EAAiBQ,UAG3EhD,KAAKiD,kBAEL,IAAMC,EAAkC,CACtCR,SAAQ,EACRD,SAAQ,GAINU,EAASnD,KAAKoD,YAAYjB,EAAMe,EAAgBd,GAGpD,IAAKe,EAEH,IAAK,IAAIE,EAAIX,EAAW,EAAGW,EAAIrD,KAAKC,UAAUqD,OAAOC,MAAQvD,KAAKC,UAAUO,OAC1E0C,EAAeR,SAAWW,EAC1BH,EAAeT,SAAW,IAG1BU,EAASnD,KAAKoD,YAAYjB,EAAMe,EAAgBd,KALgCiB,KAYpF,IAAKF,GAAuB,IAAbT,EACb,IAASW,EAAI,EAAGA,EAAIX,IAClBQ,EAAeR,SAAWW,EAC1BH,EAAeT,SAAW,IAC1BU,EAASnD,KAAKoD,YAAYjB,EAAMe,EAAgBd,KAHpBiB,KAWhC,QAAKF,IAAUX,IAGRxC,KAAKwD,cAAcL,IAUrB,YAAAM,aAAP,SAAoBtB,EAAcC,GAChC,IAAKpC,KAAKC,UACR,MAAM,IAAIoC,MAAM,6CAGlB,IAAKF,GAAwB,IAAhBA,EAAKG,OAEhB,OADAtC,KAAKC,UAAUsC,kBACR,EAGT,IAGIY,EAEAX,EAJAE,EAAW1C,KAAKC,UAAUqD,OAAOC,MAAQvD,KAAKC,UAAUO,KACxDiC,EAAWzC,KAAKC,UAAUQ,KAExBmC,IAAcR,GAAgBA,EAAcQ,YAE9C5C,KAAKC,UAAU0C,iBAGjBD,GAFAF,EAAmBxC,KAAKC,UAAU4C,wBAENH,SAC5BD,EAAWD,EAAiBO,aAG9B/C,KAAKiD,kBACL,IAAMC,EAAkC,CACtCR,SAAQ,EACRD,SAAQ,GAaV,GAVIG,IACFO,EAASnD,KAAKoD,YAAYjB,EAAMe,EAAgBd,GAAe,KAC/Ce,EAAOO,MAAQhB,GAAYS,EAAOQ,MAAQlB,IAI1DU,EAASnD,KAAKoD,YAAYjB,EAAMe,EAAgBd,GAzB1B,KA6BnBe,EAAQ,CACXD,EAAeT,SAAWpB,KAAKC,IAAI4B,EAAeT,SAAUzC,KAAKC,UAAUQ,MAC3E,IAAK,IAAI4C,EAAIX,EAAW,EAAGW,GAAK,IAC9BH,EAAeR,SAAWW,IAC1BF,EAASnD,KAAKoD,YAAYjB,EAAMe,EAAgBd,GAjC5B,KA+BaiB,MASrC,IAAKF,GAAUT,IAAc1C,KAAKC,UAAUqD,OAAOC,MAAQvD,KAAKC,UAAUO,KACxE,IAAS6C,EAAKrD,KAAKC,UAAUqD,OAAOC,MAAQvD,KAAKC,UAAUO,KAAO6C,EAAIX,IACpEQ,EAAeR,SAAWW,IAC1BF,EAASnD,KAAKoD,YAAYjB,EAAMe,EAAgBd,GA3C5B,KAyC0DiB,KAUlF,QAAKF,IAAUX,IAGRxC,KAAKwD,cAAcL,IAMpB,YAAAF,gBAAR,sBACQlD,EAAWC,KAAKC,UACjBD,KAAK4D,cACR5D,KAAK4D,YAAc,IAAIC,MAAM9D,EAASuD,OAAOhB,QAC7CtC,KAAK8D,oBAAsB/D,EAASgE,aAAa,WAAM,SAAKC,uBAC5DhE,KAAKiE,gBAAkBlE,EAASmE,SAAS,WAAM,SAAKF,wBAGtDtG,OAAOyG,aAAanE,KAAKiC,sBACzBjC,KAAKiC,qBAAuBvE,OAAO0G,WAAW,WAAM,SAAKJ,sBAnL5B,OAsLvB,YAAAA,mBAAR,WACEhE,KAAK4D,iBAAcS,EACfrE,KAAK8D,sBACP9D,KAAK8D,oBAAoB5D,UACzBF,KAAK8D,yBAAsBO,GAEzBrE,KAAKiE,kBACPjE,KAAKiE,gBAAgB/D,UACrBF,KAAKiE,qBAAkBI,GAErBrE,KAAKiC,uBACPvE,OAAOyG,aAAanE,KAAKiC,sBACzBjC,KAAKiC,qBAAuB,IAUxB,YAAAqC,aAAR,SAAqBC,EAAqBC,EAAcrC,GACtD,QAA0B,IAAhBoC,IAA+E,IA9MjE,mCA8M6BE,QAAQD,EAAKD,EAAc,KAC3EA,EAAcpC,EAAKG,SAAYkC,EAAKlC,SAA8E,IA/M/F,mCA+MiDmC,QAAQD,EAAKD,EAAcpC,EAAKG,WAajG,YAAAc,YAAV,SAAsBjB,EAAce,EAAiCd,EAAoCsC,QAApC,IAAAtC,MAAA,SAAoC,IAAAsC,OAAA,GACvG,IAAM3E,EAAWC,KAAKC,UAClByD,EAAMR,EAAeR,SACnBiB,EAAMT,EAAeT,SAGrBkC,EAAY5E,EAASuD,OAAOsB,QAAQlB,GAC1C,GAAIiB,GAAaA,EAAUE,UACzB,OAAIH,OACFxB,EAAeT,UAAY1C,EAASU,OAMtCyC,EAAeR,WACfQ,EAAeT,UAAY1C,EAASU,KAC7BT,KAAKoD,YAAYjB,EAAMe,EAAgBd,IAEhD,IAAI0C,EAAa9E,KAAK4D,YAAc5D,KAAK4D,YAAYF,QAAO,OACzC,IAAfoB,IACFA,EAAa9E,KAAK+E,qCAAqCrB,GAAK,GACxD1D,KAAK4D,cACP5D,KAAK4D,YAAYF,GAAOoB,IAI5B,IAAME,EAAa5C,EAAc6C,cAAgB9C,EAAOA,EAAK+C,cACvDC,EAAmB/C,EAAc6C,cAAgBH,EAAaA,EAAWI,cAE3EE,GAAe,EACnB,GAAIhD,EAAciD,MAAO,CACvB,IAAMC,EAAcC,OAAOP,EAAY,KACnCQ,OAAS,EACb,GAAId,EAEF,KAAOc,EAAYF,EAAYG,KAAKN,EAAiBO,MAAM,EAAG/B,KAC5DyB,EAAcE,EAAYK,UAAYH,EAAU,GAAGlD,OACnDH,EAAOqD,EAAU,GACjBF,EAAYK,WAAcxD,EAAKG,OAAS,OAG1CkD,EAAYF,EAAYG,KAAKN,EAAiBO,MAAM/B,MACnC6B,EAAU,GAAGlD,OAAS,IACrC8C,EAAczB,GAAO2B,EAAYK,UAAYH,EAAU,GAAGlD,QAC1DH,EAAOqD,EAAU,SAIjBd,EACEf,EAAMqB,EAAW1C,QAAU,IAC7B8C,EAAcD,EAAiBS,YAAYZ,EAAYrB,EAAMqB,EAAW1C,SAG1E8C,EAAcD,EAAiBV,QAAQO,EAAYrB,GAIvD,GAAIyB,GAAe,EAAG,CAMpB,GAJIA,GAAerF,EAASU,OAC1BiD,GAAOrC,KAAKO,MAAMwD,EAAcrF,EAASU,MACzC2E,GAA4BrF,EAASU,MAEnC2B,EAAcyD,YAAc7F,KAAKsE,aAAac,EAAaD,EAAkBhD,GAC/E,OAGF,IAAMqC,EAAOzE,EAASuD,OAAOsB,QAAQlB,GAErC,GAAIc,EACF,IAAK,IAAI1G,EAAI,EAAGA,EAAIsH,EAAatH,IAAK,CACpC,IAAMgI,EAAOtB,EAAKuB,QAAQjI,GAC1B,IAAKgI,EACH,MAGF,IAAME,EAAOF,EAAKG,WACdD,EAAK1D,OAAS,IAChB8C,GAAeY,EAAK1D,OAAS,GAKb,IADAwD,EAAKI,YAErBd,IAIN,MAAO,CACLjD,KAAI,EACJwB,IAAKyB,EACL1B,IAAG,KAaD,YAAAqB,qCAAR,SAA6CoB,EAAmBC,GAC9D,IAEIC,EAFEtG,EAAWC,KAAKC,UAClBqG,EAAa,GAGjB,EAAG,CACD,IAAMC,EAAWxG,EAASuD,OAAOsB,QAAQuB,EAAY,GACrDE,IAAkBE,GAAWA,EAAS1B,UACtC,IAAML,EAAOzE,EAASuD,OAAOsB,QAAQuB,GACrC,IAAK3B,EACH,MAEF8B,GAAc9B,EAAKgC,mBAAmBH,GAAmBD,GAAWK,UAAU,EAAG1G,EAASU,MAC1F0F,UACOE,GAET,OAAOC,GAQD,YAAA9C,cAAR,SAAsBL,GACpB,IAAMpD,EAAWC,KAAKC,UACtB,IAAKkD,EAEH,OADApD,EAASwC,kBACF,EAIT,GAFAxC,EAAS2G,OAAOvD,EAAOQ,IAAKR,EAAOO,IAAKP,EAAOhB,KAAKG,QAEhDa,EAAOO,KAAQ3D,EAASuD,OAAOqD,UAAY5G,EAASS,MAAS2C,EAAOO,IAAM3D,EAASuD,OAAOqD,UAAW,CACvG,IAAI,EAASxD,EAAOO,IAAM3D,EAASuD,OAAOqD,UAC1C,GAAkBtF,KAAKO,MAAM7B,EAASS,KAAO,GAC7CT,EAAS6G,YAAY,GAEvB,OAAO,GAEX,EAzWA,GAAa,EAAAC;;;;;;;;;;;;CC5Bb,SAA2CvJ,EAAMC,GAChD,GAAsB,IAAyBC,CAC9CA,OAAOC,QAAUF,SACb,aAIkEO,CAPxE,CASGJ,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUJ,QAGnC,IAAID,EAASG,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHN,QAAS,IAUV,OANAO,EAAQH,GAAUI,KAAKT,EAAOC,QAASD,EAAQA,EAAOC,QAASG,GAG/DJ,EAAOO,GAAI,EAGJP,EAAOC,QA0Df,OArDAG,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASX,EAASY,EAAMC,GAC3CV,EAAoBW,EAAEd,EAASY,IAClCG,OAAOC,eAAehB,EAASY,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAASnB,GACX,oBAAXoB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAehB,EAASoB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAehB,EAAS,aAAc,CAAEsB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAS/B,GAChC,IAAIc,EAASd,GAAUA,EAAO0B,WAC7B,WAAwB,OAAO1B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAI,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,I,qHC7DrD,8BACU,KAAAiH,WAAgC,GAEhC,KAAAC,WAAqB,EAwC/B,OAtCE,sBAAW,oBAAK,C,IAAhB,sBAmBE,OAlBK/G,KAAKgH,SACRhH,KAAKgH,OAAS,SAACC,GAcb,OAbA,EAAKH,WAAWI,KAAKD,GACF,CACjB/G,QAAS,WACP,IAAK,EAAK6G,UACR,IAAK,IAAIjJ,EAAI,EAAGA,EAAI,EAAKgJ,WAAWxE,OAAQxE,IAC1C,GAAI,EAAKgJ,WAAWhJ,KAAOmJ,EAEzB,YADA,EAAKH,WAAWK,OAAOrJ,EAAG,OAUjCkC,KAAKgH,Q,gCAGP,YAAAI,KAAP,SAAYC,EAASC,GAEnB,IADA,IAAMC,EAA2B,GACxBzJ,EAAI,EAAGA,EAAIkC,KAAK8G,WAAWxE,OAAQxE,IAC1CyJ,EAAML,KAAKlH,KAAK8G,WAAWhJ,IAE7B,IAASA,EAAI,EAAGA,EAAIyJ,EAAMjF,OAAQxE,IAChCyJ,EAAMzJ,GAAGG,UAAKoG,EAAWgD,EAAMC,IAI5B,YAAApH,QAAP,WACMF,KAAK8G,aACP9G,KAAK8G,WAAWxE,OAAS,GAE3BtC,KAAK+G,WAAY,GAErB,EA3CA,GAAa,EAAAS,eA6Cb,wBAAgCC,EAAiBC,GAC/C,OAAOD,GAAK,SAAAE,GAAK,OAAAD,EAAGN,KAAKO,Q,wPC3D3B,YAEa,EAAAC,eAAiB,EAAAC,gBAAgC,iBAgBjD,EAAAC,kBAAoB,EAAAD,gBAAmC,oBAgCvD,EAAAE,aAAe,EAAAF,gBAA8B,eAqC7C,EAAAG,gBAAkB,EAAAH,gBAAiC,kBAuBnD,EAAAI,iBAAmB,EAAAJ,gBAAkC,mBAkCrD,EAAAK,sBAAwB,EAAAL,gBAAuC,wBAO/D,EAAAM,YAAc,EAAAN,gBAA6B,cAU3C,EAAAO,gBAAkB,EAAAP,gBAAiC,kBAoHnD,EAAAQ,gBAAkB,EAAAR,gBAAiC,mB,6IClRhE,iBAIE,aAHU,KAAAS,aAA8B,GAC9B,KAAAC,aAAuB,EAqCnC,OA7BS,YAAArI,QAAP,WACEF,KAAKuI,aAAc,EACnB,IAAgB,UAAAvI,KAAKsI,aAAL,eAAmB,CAAvB,KACRpI,UAEJF,KAAKsI,aAAahG,OAAS,GAQtB,YAAAkG,SAAP,SAAuCpK,GAErC,OADA4B,KAAKsI,aAAapB,KAAK9I,GAChBA,GAQF,YAAAqK,WAAP,SAAyCrK,GACvC,IAAMsK,EAAQ1I,KAAKsI,aAAa7D,QAAQrG,IACzB,IAAXsK,GACF1I,KAAKsI,aAAanB,OAAOuB,EAAO,IAGtC,EAvCA,GA4CA,SAAgBC,EAAaC,GAC3B,IAAgB,UAAAA,EAAA,eAAa,CAAjB,KACR1I,UAEJ0I,EAAYtG,OAAS,EAhDD,EAAAuG,aA4CtB,iBAUA,qCAA0CC,GACxC,MAAO,CAAE5I,QAAS,WAAM,OAAAyI,EAAaG,O,2UC7D1B,EAAAC,cAAgB,IAChB,EAAAC,aAAe,IAAa,EAAAD,eAAiB,EAE7C,EAAAE,qBAAuB,EACvB,EAAAC,qBAAuB,EACvB,EAAAC,sBAAwB,EACxB,EAAAC,qBAAuB,EAOvB,EAAAC,eAAiB,GACjB,EAAAC,gBAAkB,EAClB,EAAAC,eAAiB,EAOjB,EAAAC,qBAAuB,IACvB,EAAAC,sBAAwB,EACxB,EAAAC,qBAAuB,I,gbCvBpC,WACA,OACA,OAKA,yE,OAQS,EAAAC,QAAU,EACV,EAAAC,GAAK,EACL,EAAAC,GAAK,EACL,EAAAC,SAA2B,IAAI,EAAAC,cAC/B,EAAAC,aAAe,G,EAoExB,OAhF8B,OAEd,EAAAC,aAAd,SAA2BlL,GACzB,IAAMmL,EAAM,IAAIC,EAEhB,OADAD,EAAIE,gBAAgBrL,GACbmL,GASF,YAAAG,WAAP,WACE,OAAsB,QAAfrK,KAAK2J,SAGP,YAAAzD,SAAP,WACE,OAAOlG,KAAK2J,SAAW,IAGlB,YAAA1D,SAAP,WACE,OAAmB,QAAfjG,KAAK2J,QACA3J,KAAKgK,aAEK,QAAfhK,KAAK2J,QACA,EAAAW,oBAAmC,QAAftK,KAAK2J,SAE3B,IAQF,YAAAY,QAAP,WACE,OAAQvK,KAAKqK,aACTrK,KAAKgK,aAAaQ,WAAWxK,KAAKgK,aAAa1H,OAAS,GACzC,QAAftC,KAAK2J,SAGJ,YAAAS,gBAAP,SAAuBrL,GACrBiB,KAAK4J,GAAK7K,EAAM,EAAAkK,sBAChBjJ,KAAK6J,GAAK,EACV,IAAIY,GAAW,EAEf,GAAI1L,EAAM,EAAAmK,sBAAsB5G,OAAS,EACvCmI,GAAW,OAER,GAA2C,IAAvC1L,EAAM,EAAAmK,sBAAsB5G,OAAc,CACjD,IAAMoI,EAAO3L,EAAM,EAAAmK,sBAAsBsB,WAAW,GAGpD,GAAI,OAAUE,GAAQA,GAAQ,MAAQ,CACpC,IAAMC,EAAS5L,EAAM,EAAAmK,sBAAsBsB,WAAW,GAClD,OAAUG,GAAUA,GAAU,MAChC3K,KAAK2J,QAA6B,MAAjBe,EAAO,OAAkBC,EAAS,MAAS,MAAY5L,EAAM,EAAAoK,wBAA0B,GAGxGsB,GAAW,OAIbA,GAAW,OAIbzK,KAAK2J,QAAU5K,EAAM,EAAAmK,sBAAsBsB,WAAW,GAAMzL,EAAM,EAAAoK,wBAA0B,GAE1FsB,IACFzK,KAAKgK,aAAejL,EAAM,EAAAmK,sBAC1BlJ,KAAK2J,QAAU,QAA4B5K,EAAM,EAAAoK,wBAA0B,KAIxE,YAAAyB,cAAP,WACE,MAAO,CAAC5K,KAAK4J,GAAI5J,KAAKiG,WAAYjG,KAAKkG,WAAYlG,KAAKuK,YAE5D,EAhFA,CAA8B,EAAAM,eAAjB,EAAAV,Y,mMCJb,YAGa,EAAAW,iBAAmB,EAAAjD,gBAAkC,mBAarD,EAAAkD,oBAAsB,EAAAlD,gBAAqC,sBAO3D,EAAAmD,cAAgB,EAAAnD,gBAA+B,gBAQ/C,EAAAoD,eAAiB,EAAApD,gBAAgC,iBAgCjD,EAAAqD,kBAAoB,EAAArD,gBAAmC,oBA6BvD,EAAAsD,cAAgB,EAAAtD,gBAA+B,iB,qHC7F5D,8BAsBS,KAAA+B,GAAK,EACL,KAAAC,GAAK,EACL,KAAAC,SAAW,IAAIC,EAwFxB,OA/GgB,EAAAqB,WAAd,SAAyBrM,GACvB,MAAO,CACLA,IAAU,GAAuB,IACjCA,IAAU,EAAyB,IAC3B,IAARA,IAIU,EAAAsM,aAAd,SAA2BtM,GACzB,OAAmB,IAAXA,EAAM,KAAa,IAAmC,IAAXA,EAAM,KAAa,EAAoC,IAAXA,EAAM,IAGhG,YAAAuM,MAAP,WACE,IAAMC,EAAS,IAAIV,EAInB,OAHAU,EAAO3B,GAAK5J,KAAK4J,GACjB2B,EAAO1B,GAAK7J,KAAK6J,GACjB0B,EAAOzB,SAAW9J,KAAK8J,SAASwB,QACzBC,GASF,YAAAC,UAAP,WAA+B,OAAiB,SAAVxL,KAAK4J,IACpC,YAAA6B,OAAP,WAA+B,OAAiB,UAAVzL,KAAK4J,IACpC,YAAA8B,YAAP,WAA+B,OAAiB,UAAV1L,KAAK4J,IACpC,YAAA+B,QAAP,WAA+B,OAAiB,UAAV3L,KAAK4J,IACpC,YAAAgC,YAAP,WAA+B,OAAiB,WAAV5L,KAAK4J,IACpC,YAAAiC,SAAP,WAA+B,OAAiB,SAAV7L,KAAK6J,IACpC,YAAAiC,MAAP,WAA+B,OAAiB,UAAV9L,KAAK6J,IAGpC,YAAAkC,eAAP,WAAkC,OAAiB,SAAV/L,KAAK4J,IACvC,YAAAoC,eAAP,WAAkC,OAAiB,SAAVhM,KAAK6J,IACvC,YAAAoC,QAAP,WAAkC,OAA0C,WAAxB,SAAVjM,KAAK4J,KACxC,YAAAsC,QAAP,WAAkC,OAA0C,WAAxB,SAAVlM,KAAK6J,KACxC,YAAAsC,YAAP,WAAkC,OAA0C,WAAxB,SAAVnM,KAAK4J,KAAqF,WAAxB,SAAV5J,KAAK4J,KAChG,YAAAwC,YAAP,WAAkC,OAA0C,WAAxB,SAAVpM,KAAK6J,KAAqF,WAAxB,SAAV7J,KAAK6J,KAChG,YAAAwC,YAAP,WAAkC,OAA0C,IAAxB,SAAVrM,KAAK4J,KACxC,YAAA0C,YAAP,WAAkC,OAA0C,IAAxB,SAAVtM,KAAK6J,KACxC,YAAA0C,mBAAP,WAAuC,OAAmB,IAAZvM,KAAK4J,IAAwB,IAAZ5J,KAAK6J,IAG7D,YAAA2C,WAAP,WACE,OAAkB,SAAVxM,KAAK4J,IACX,KAAK,SACL,KAAK,SAAqB,OAAiB,IAAV5J,KAAK4J,GACtC,KAAK,SAAqB,OAAiB,SAAV5J,KAAK4J,GACtC,QAA0B,OAAQ,IAG/B,YAAA6C,WAAP,WACE,OAAkB,SAAVzM,KAAK6J,IACX,KAAK,SACL,KAAK,SAAqB,OAAiB,IAAV7J,KAAK6J,GACtC,KAAK,SAAqB,OAAiB,SAAV7J,KAAK6J,GACtC,QAA0B,OAAQ,IAK/B,YAAA6C,iBAAP,WACE,OAAiB,UAAV1M,KAAK6J,IAEP,YAAA8C,eAAP,WACM3M,KAAK8J,SAAS8C,UAChB5M,KAAK6J,KAAM,UAEX7J,KAAK6J,IAAM,WAGR,YAAAgD,kBAAP,WACE,GAAe,UAAV7M,KAAK6J,KAA+B7J,KAAK8J,SAASgD,eACrD,OAAuC,SAA/B9M,KAAK8J,SAASgD,gBACpB,KAAK,SACL,KAAK,SAAqB,OAAsC,IAA/B9M,KAAK8J,SAASgD,eAC/C,KAAK,SAAqB,OAAsC,SAA/B9M,KAAK8J,SAASgD,eAC/C,QAA0B,OAAO9M,KAAKwM,aAG1C,OAAOxM,KAAKwM,cAEP,YAAAO,sBAAP,WACE,OAAkB,UAAV/M,KAAK6J,KAA+B7J,KAAK8J,SAASgD,eACvB,SAA/B9M,KAAK8J,SAASgD,eACd9M,KAAK+L,kBAEJ,YAAAiB,oBAAP,WACE,OAAkB,UAAVhN,KAAK6J,KAA+B7J,KAAK8J,SAASgD,eACE,WAAxB,SAA/B9M,KAAK8J,SAASgD,gBACf9M,KAAKiM,WAEJ,YAAAgB,wBAAP,WACE,OAAkB,UAAVjN,KAAK6J,KAA+B7J,KAAK8J,SAASgD,eACE,WAAxB,SAA/B9M,KAAK8J,SAASgD,iBAC8C,WAAxB,SAA/B9M,KAAK8J,SAASgD,gBACpB9M,KAAKmM,eAEJ,YAAAe,wBAAP,WACE,OAAkB,UAAVlN,KAAK6J,KAA+B7J,KAAK8J,SAASgD,eACE,IAAxB,SAA/B9M,KAAK8J,SAASgD,gBACf9M,KAAKqM,eAEJ,YAAAc,kBAAP,WACE,OAAiB,UAAVnN,KAAK4J,GACG,UAAV5J,KAAK6J,GAA4B7J,KAAK8J,SAASsD,eAAiB,EACjE,GAER,EAhHA,GAAa,EAAAvC,gBAuHb,iBACE,WAESuC,EAEAN,QAFA,IAAAM,MAAA,QAEA,IAAAN,OAA0B,GAF1B,KAAAM,iBAEA,KAAAN,iBAcX,OAXS,YAAAxB,MAAP,WACE,OAAO,IAAIvB,EAAc/J,KAAKoN,eAAgBpN,KAAK8M,iBAO9C,YAAAF,QAAP,WACE,OAA+B,IAAxB5M,KAAKoN,gBAEhB,EAnBA,GAAa,EAAArD,iB,gHCnHb,oCACEsD,EACAC,EACAC,EACAC,GAEAH,EAAKI,iBAAiBH,EAAMC,EAASC,GACrC,IAAIE,GAAW,EACf,MAAO,CACLxN,QAAS,WACHwN,IAGJA,GAAW,EACXL,EAAKM,oBAAoBL,EAAMC,EAASC,Q,yJCd9C,+BAAoCI,GAClC,OAAIA,EAAY,OACdA,GAAa,MACNC,OAAOC,aAAiC,OAAnBF,GAAa,KAAgBC,OAAOC,aAAcF,EAAY,KAAS,QAE9FC,OAAOC,aAAaF,IAQ7B,yBAA8BG,EAAmBC,EAAmBC,QAAnB,IAAAD,MAAA,QAAmB,IAAAC,MAAcF,EAAKzL,QAErF,IADA,IAAIa,EAAS,GACJrF,EAAIkQ,EAAOlQ,EAAImQ,IAAOnQ,EAAG,CAChC,IAAIoQ,EAAYH,EAAKjQ,GACjBoQ,EAAY,OAMdA,GAAa,MACb/K,GAAU0K,OAAOC,aAAiC,OAAnBI,GAAa,KAAgBL,OAAOC,aAAcI,EAAY,KAAS,QAEtG/K,GAAU0K,OAAOC,aAAaI,GAGlC,OAAO/K,GAOT,8BACU,KAAAgL,SAAmB,EA8D7B,OAzDS,YAAAxN,MAAP,WACEX,KAAKmO,SAAW,GAWX,YAAAC,OAAP,SAAcC,EAAeC,GAC3B,IAAMhM,EAAS+L,EAAM/L,OAErB,IAAKA,EACH,OAAO,EAGT,IAAIiM,EAAO,EACPC,EAAW,EAGXxO,KAAKmO,WAEH,QADExD,EAAS0D,EAAM7D,WAAWgE,OACR7D,GAAU,MAChC2D,EAAOC,KAAqC,MAA1BvO,KAAKmO,SAAW,OAAkBxD,EAAS,MAAS,OAGtE2D,EAAOC,KAAUvO,KAAKmO,SACtBG,EAAOC,KAAU5D,GAEnB3K,KAAKmO,SAAW,GAGlB,IAAK,IAAIrQ,EAAI0Q,EAAU1Q,EAAIwE,IAAUxE,EAAG,CACtC,IAAM4M,EAAO2D,EAAM7D,WAAW1M,GAE9B,GAAI,OAAU4M,GAAQA,GAAQ,MAA9B,CACE,KAAM5M,GAAKwE,EAET,OADAtC,KAAKmO,SAAWzD,EACT6D,EAET,IAAM5D,EACF,QADEA,EAAS0D,EAAM7D,WAAW1M,KACR6M,GAAU,MAChC2D,EAAOC,KAA4B,MAAjB7D,EAAO,OAAkBC,EAAS,MAAS,OAG7D2D,EAAOC,KAAU7D,EACjB4D,EAAOC,KAAU5D,QAIrB2D,EAAOC,KAAU7D,EAEnB,OAAO6D,GAEX,EA/DA,GAAa,EAAAE,gBAoEb,8BACS,KAAAC,QAAsB,IAAIC,WAAW,GAgO9C,OA3NS,YAAAhO,MAAP,WACEX,KAAK0O,QAAQE,KAAK,IAWb,YAAAR,OAAP,SAAcC,EAAmBC,GAC/B,IAAMhM,EAAS+L,EAAM/L,OAErB,IAAKA,EACH,OAAO,EAGT,IACIuM,EACAC,EACAC,EACAC,EAJAT,EAAO,EAKPL,EAAY,EACZM,EAAW,EAGf,GAAIxO,KAAK0O,QAAQ,GAAI,CACnB,IAAIO,GAAiB,EACjBC,EAAKlP,KAAK0O,QAAQ,GACtBQ,GAAyB,MAAV,IAALA,GAAwB,GAAyB,MAAV,IAALA,GAAwB,GAAO,EAG3E,IAFA,IAAIC,EAAM,EACNC,OAAG,GACCA,EAA4B,GAAtBpP,KAAK0O,UAAUS,KAAgBA,EAAM,GACjDD,IAAO,EACPA,GAAME,EAKR,IAFA,IAAM9B,EAAsC,MAAV,IAAlBtN,KAAK0O,QAAQ,IAAwB,EAAmC,MAAV,IAAlB1O,KAAK0O,QAAQ,IAAwB,EAAI,EAC/FW,EAAU/B,EAAO6B,EAChBX,EAAWa,GAAS,CACzB,GAAIb,GAAYlM,EACd,OAAO,EAGT,GAAqB,MAAV,KADX8M,EAAMf,EAAMG,OACe,CAEzBA,IACAS,GAAiB,EACjB,MAGAjP,KAAK0O,QAAQS,KAASC,EACtBF,IAAO,EACPA,GAAY,GAANE,EAGLH,IAEU,IAAT3B,EACE4B,EAAK,IAEPV,IAEAF,EAAOC,KAAUW,EAED,IAAT5B,EACL4B,EAAK,MAAWA,GAAM,OAAUA,GAAM,QAGxCZ,EAAOC,KAAUW,GAGfA,EAAK,OAAYA,EAAK,UAGxBZ,EAAOC,KAAUW,IAIvBlP,KAAK0O,QAAQE,KAAK,GAMpB,IAFA,IAAMU,EAAWhN,EAAS,EACtBxE,EAAI0Q,EACD1Q,EAAIwE,GAAQ,CAejB,SAAOxE,EAAIwR,IACiB,KAApBT,EAAQR,EAAMvQ,KACU,KAAxBgR,EAAQT,EAAMvQ,EAAI,KACM,KAAxBiR,EAAQV,EAAMvQ,EAAI,KACM,KAAxBkR,EAAQX,EAAMvQ,EAAI,MAExBwQ,EAAOC,KAAUM,EACjBP,EAAOC,KAAUO,EACjBR,EAAOC,KAAUQ,EACjBT,EAAOC,KAAUS,EACjBlR,GAAK,EAOP,IAHA+Q,EAAQR,EAAMvQ,MAGF,IACVwQ,EAAOC,KAAUM,OAGZ,GAAuB,MAAV,IAARA,GAAwB,CAClC,GAAI/Q,GAAKwE,EAEP,OADAtC,KAAK0O,QAAQ,GAAKG,EACXN,EAGT,GAAuB,MAAV,KADbO,EAAQT,EAAMvQ,OACe,CAE3BA,IACA,SAGF,IADAoQ,GAAqB,GAARW,IAAiB,EAAa,GAARC,GACnB,IAAM,CAEpBhR,IACA,SAEFwQ,EAAOC,KAAUL,OAGZ,GAAuB,MAAV,IAARW,GAAwB,CAClC,GAAI/Q,GAAKwE,EAEP,OADAtC,KAAK0O,QAAQ,GAAKG,EACXN,EAGT,GAAuB,MAAV,KADbO,EAAQT,EAAMvQ,OACe,CAE3BA,IACA,SAEF,GAAIA,GAAKwE,EAGP,OAFAtC,KAAK0O,QAAQ,GAAKG,EAClB7O,KAAK0O,QAAQ,GAAKI,EACXP,EAGT,GAAuB,MAAV,KADbQ,EAAQV,EAAMvQ,OACe,CAE3BA,IACA,SAGF,IADAoQ,GAAqB,GAARW,IAAiB,IAAc,GAARC,IAAiB,EAAa,GAARC,GAC1C,MAAWb,GAAa,OAAUA,GAAa,MAE7D,SAEFI,EAAOC,KAAUL,OAGZ,GAAuB,MAAV,IAARW,GAAwB,CAClC,GAAI/Q,GAAKwE,EAEP,OADAtC,KAAK0O,QAAQ,GAAKG,EACXN,EAGT,GAAuB,MAAV,KADbO,EAAQT,EAAMvQ,OACe,CAE3BA,IACA,SAEF,GAAIA,GAAKwE,EAGP,OAFAtC,KAAK0O,QAAQ,GAAKG,EAClB7O,KAAK0O,QAAQ,GAAKI,EACXP,EAGT,GAAuB,MAAV,KADbQ,EAAQV,EAAMvQ,OACe,CAE3BA,IACA,SAEF,GAAIA,GAAKwE,EAIP,OAHAtC,KAAK0O,QAAQ,GAAKG,EAClB7O,KAAK0O,QAAQ,GAAKI,EAClB9O,KAAK0O,QAAQ,GAAKK,EACXR,EAGT,GAAuB,MAAV,KADbS,EAAQX,EAAMvQ,OACe,CAE3BA,IACA,SAGF,IADAoQ,GAAqB,EAARW,IAAiB,IAAc,GAARC,IAAiB,IAAc,GAARC,IAAiB,EAAa,GAARC,GACjE,OAAYd,EAAY,QAEtC,SAEFI,EAAOC,KAAUL,GAKrB,OAAOK,GAEX,EAjOA,GAAa,EAAAgB,e,sJC/GA,EAAAC,uBAAyB,IACzB,EAAAC,YAAc,GAEd,EAAAC,wBAA0B,G,6BCEvC,IAAiBC,EAiBA,EAkFAC,EAoCAC,EAkEjB,SAAgBC,EAAY3R,GAC1B,IAAM0B,EAAI1B,EAAE4R,SAAS,IACrB,OAAOlQ,EAAEyC,OAAS,EAAI,IAAMzC,EAAIA,EASlC,SAAgBmQ,EAAcC,EAAYC,GACxC,OAAID,EAAKC,GACCA,EAAK,MAASD,EAAK,MAErBA,EAAK,MAASC,EAAK,K,4HAxN7B,SAAiBP,GACC,EAAAQ,MAAhB,SAAsBvR,EAAWwR,EAAWC,EAAWC,GACrD,YAAUjM,IAANiM,EACK,IAAIR,EAAYlR,GAAKkR,EAAYM,GAAKN,EAAYO,GAAKP,EAAYQ,GAErE,IAAIR,EAAYlR,GAAKkR,EAAYM,GAAKN,EAAYO,IAG3C,EAAAE,OAAhB,SAAuB3R,EAAWwR,EAAWC,EAAWC,GAEtD,YAFsD,IAAAA,MAAA,MAE9C1R,GAAK,GAAKwR,GAAK,GAAKC,GAAK,EAAIC,KAAO,GAVhD,CAAiBX,EAAA,EAAAA,WAAA,EAAAA,SAAQ,MAiBR,IAAAa,QAAA,EAAAA,MAAK,KACJC,MAAhB,SAAsB5G,EAAYD,GAChC,IAAM0G,GAAe,IAAV1G,EAAGiG,MAAe,IAC7B,GAAU,IAANS,EACF,MAAO,CACLI,IAAK9G,EAAG8G,IACRb,KAAMjG,EAAGiG,MAGb,IAAMc,EAAO/G,EAAGiG,MAAQ,GAAM,IACxBe,EAAOhH,EAAGiG,MAAQ,GAAM,IACxBgB,EAAOjH,EAAGiG,MAAQ,EAAK,IACvBiB,EAAOjH,EAAGgG,MAAQ,GAAM,IACxBkB,EAAOlH,EAAGgG,MAAQ,GAAM,IACxBmB,EAAOnH,EAAGgG,MAAQ,EAAK,IACvBjR,EAAIkS,EAAMzP,KAAK4P,OAAON,EAAMG,GAAOR,GACnCF,EAAIW,EAAM1P,KAAK4P,OAAOL,EAAMG,GAAOT,GACnCD,EAAIW,EAAM3P,KAAK4P,OAAOJ,EAAMG,GAAOV,GAGzC,MAAO,CAAEI,IAFGf,EAASQ,MAAMvR,EAAGwR,EAAGC,GAEnBR,KADDF,EAASY,OAAO3R,EAAGwR,EAAGC,KAIrB,EAAAa,SAAhB,SAAyBV,GACvB,OAA+B,MAAV,IAAbA,EAAMX,OAGA,EAAAsB,oBAAhB,SAAoCtH,EAAYD,EAAYwH,GAC1D,IAAMjO,EAAS0M,EAAKsB,oBAAoBtH,EAAGgG,KAAMjG,EAAGiG,KAAMuB,GAC1D,GAAKjO,EAGL,OAAO0M,EAAKwB,QACTlO,GAAU,GAAK,IACfA,GAAU,GAAK,IACfA,GAAU,EAAK,MAIJ,EAAAmO,OAAhB,SAAuBd,GACrB,IAAMe,GAA0B,IAAbf,EAAMX,QAAiB,EACpC,EAAYA,EAAK2B,WAAWD,GAA3B3S,EAAC,KAAEwR,EAAC,KAAEC,EAAC,KACd,MAAO,CACLK,IAAKf,EAASQ,MAAMvR,EAAGwR,EAAGC,GAC1BR,KAAM0B,IAIM,EAAAE,QAAhB,SAAwBjB,EAAeiB,GACrC,IAAMnB,EAAIjP,KAAK4P,MAAgB,IAAVQ,GACf,EAAY5B,EAAK2B,WAAWhB,EAAMX,MAAjCjR,EAAC,KAAEwR,EAAC,KAAEC,EAAC,KACd,MAAO,CACLK,IAAKf,EAASQ,MAAMvR,EAAGwR,EAAGC,EAAGC,GAC7BT,KAAMF,EAASY,OAAO3R,EAAGwR,EAAGC,EAAGC,MAQpB,EAAAI,MAAA,EAAAA,IAAG,KACFW,QAAhB,SAAwBX,GACtB,OAAQA,EAAIpO,QACV,KAAK,EACH,MAAO,CACLoO,IAAG,EACHb,MAAO3O,SAASwP,EAAIhL,MAAM,GAAI,KAAO,EAAI,OAAU,GAEvD,KAAK,EACH,MAAO,CACLgL,IAAG,EACHb,KAAM3O,SAASwP,EAAIhL,MAAM,GAAI,MAAQ,GAG3C,MAAM,IAAIrD,MAAM,wCAOpB,SAAiB,GAsBf,SAAgBqP,EAAmB9S,EAAWwR,EAAWC,GACvD,IAAMsB,EAAK/S,EAAI,IACTgT,EAAKxB,EAAI,IACTyB,EAAKxB,EAAI,IAIf,MAAY,OAHDsB,GAAM,OAAUA,EAAK,MAAQtQ,KAAKyQ,KAAKH,EAAK,MAAS,MAAO,MAG7C,OAFfC,GAAM,OAAUA,EAAK,MAAQvQ,KAAKyQ,KAAKF,EAAK,MAAS,MAAO,MAE/B,OAD7BC,GAAM,OAAUA,EAAK,MAAQxQ,KAAKyQ,KAAKD,EAAK,MAAS,MAAO,MArBzD,EAAAE,kBAAhB,SAAkCnC,GAChC,OAAO8B,EACJ9B,GAAO,GAAM,IACbA,GAAO,EAAM,IACA,IAAd,IAWY,EAAA8B,mBAAkB,EAtBpC,CAAiB9B,EAAA,EAAAA,MAAA,EAAAA,IAAG,KAoCpB,SAAiBC,GAcf,SAAgBmC,EAAgBC,EAAgBC,EAAgBd,GAU9D,IAPA,IAAMN,EAAOmB,GAAU,GAAM,IACvBlB,EAAOkB,GAAU,GAAM,IACvBjB,EAAOiB,GAAW,EAAK,IACzBtB,EAAOuB,GAAU,GAAM,IACvBtB,EAAOsB,GAAU,GAAM,IACvBrB,EAAOqB,GAAW,EAAK,IACvBC,EAAKnC,EAAcJ,EAAI8B,mBAAmBf,EAAKE,EAAKD,GAAMhB,EAAI8B,mBAAmBZ,EAAKC,EAAKC,IACxFmB,EAAKf,IAAUT,EAAM,GAAKC,EAAM,GAAKC,EAAM,IAEhDF,GAAOtP,KAAKC,IAAI,EAAGD,KAAK+Q,KAAW,GAANzB,IAC7BC,GAAOvP,KAAKC,IAAI,EAAGD,KAAK+Q,KAAW,GAANxB,IAC7BC,GAAOxP,KAAKC,IAAI,EAAGD,KAAK+Q,KAAW,GAANvB,IAC7BsB,EAAKnC,EAAcJ,EAAI8B,mBAAmBf,EAAKE,EAAKD,GAAMhB,EAAI8B,mBAAmBZ,EAAKC,EAAKC,IAE7F,OAAQL,GAAO,GAAKC,GAAO,GAAKC,GAAO,EAAI,OAAU,EAGvD,SAAgBwB,EAAkBJ,EAAgBC,EAAgBd,GAUhE,IAPA,IAAMN,EAAOmB,GAAU,GAAM,IACvBlB,EAAOkB,GAAU,GAAM,IACvBjB,EAAOiB,GAAW,EAAK,IACzBtB,EAAOuB,GAAU,GAAM,IACvBtB,EAAOsB,GAAU,GAAM,IACvBrB,EAAOqB,GAAW,EAAK,IACvBC,EAAKnC,EAAcJ,EAAI8B,mBAAmBf,EAAKE,EAAKD,GAAMhB,EAAI8B,mBAAmBZ,EAAKC,EAAKC,IACxFmB,EAAKf,IAAUT,EAAM,KAAQC,EAAM,KAAQC,EAAM,MAEtDF,EAAMtP,KAAKiR,IAAI,IAAM3B,EAAMtP,KAAK+Q,KAAmB,IAAb,IAAMzB,KAC5CC,EAAMvP,KAAKiR,IAAI,IAAM1B,EAAMvP,KAAK+Q,KAAmB,IAAb,IAAMxB,KAC5CC,EAAMxP,KAAKiR,IAAI,IAAMzB,EAAMxP,KAAK+Q,KAAmB,IAAb,IAAMvB,KAC5CsB,EAAKnC,EAAcJ,EAAI8B,mBAAmBf,EAAKE,EAAKD,GAAMhB,EAAI8B,mBAAmBZ,EAAKC,EAAKC,IAE7F,OAAQL,GAAO,GAAKC,GAAO,GAAKC,GAAO,EAAI,OAAU,EAlDvC,EAAAM,oBAAhB,SAAoCc,EAAgBC,EAAgBd,GAClE,IAAMmB,EAAM3C,EAAImC,kBAAkBE,GAAU,GACtCO,EAAM5C,EAAImC,kBAAkBG,GAAU,GAE5C,GADWlC,EAAcuC,EAAKC,GACrBpB,EACP,OAAIoB,EAAMD,EACDP,EAAgBC,EAAQC,EAAQd,GAElCiB,EAAkBJ,EAAQC,EAAQd,IAK7B,EAAAY,gBAAe,EAoBf,EAAAK,kBAAiB,EAoBjB,EAAAb,WAAhB,SAA2BzS,GACzB,MAAO,CAAEA,GAAS,GAAM,IAAOA,GAAS,GAAM,IAAOA,GAAS,EAAK,IAAc,IAARA,IAG3D,EAAAsS,QAAhB,SAAwBzS,EAAWwR,EAAWC,GAC5C,MAAO,CACLK,IAAKf,EAASQ,MAAMvR,EAAGwR,EAAGC,GAC1BR,KAAMF,EAASY,OAAO3R,EAAGwR,EAAGC,KA7DlC,CAAiBR,EAAA,EAAAA,OAAA,EAAAA,KAAI,KAkErB,gBAWA,mB,8JC/MA,IAAM4C,EAA+B,oBAAdC,UACjBC,EAAY,EAAW,OAASD,UAAUC,UAC1CC,EAAW,EAAW,OAASF,UAAUE,SAmB/C,SAASC,EAASC,EAAYC,GAC5B,OAAOD,EAAIrO,QAAQsO,IAAO,EAlBf,EAAAC,aAAeL,EAAUlO,QAAQ,WACjC,EAAAwO,SAAW,iCAAiCC,KAAKP,GAKjD,EAAAQ,MAAQN,EAAS,CAAC,YAAa,WAAY,SAAU,UAAWD,GAChE,EAAAQ,OAAsB,SAAbR,EACT,EAAAS,SAAwB,WAAbT,EACX,EAAAU,UAAYT,EAAS,CAAC,UAAW,QAAS,QAAS,SAAUD,GAC7D,EAAAW,QAAUX,EAASnO,QAAQ,UAAY,G,+FCpBpD,SAAiB+O,GAEF,EAAAC,IAAM,KAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAM,KAEN,EAAAC,GAAM,KAEN,EAAAC,GAAM,KAEN,EAAAC,GAAM,KAEN,EAAAC,GAAM,KAEN,EAAAC,GAAM,KAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,GAAM,IAEN,EAAAC,IAAM,IApErB,CAAiB,EAAAlC,KAAA,EAAAA,GAAE,KA2EnB,SAAiBmC,GAEF,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAK,IAEL,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAK,IAEL,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,KAAO,IAEP,EAAAC,IAAM,IAEN,EAAAC,IAAM,IAEN,EAAAC,GAAK,IAEL,EAAAC,IAAM,IAEN,EAAAC,GAAK,IAEL,EAAAC,IAAM,IAhErB,CAAiB,EAAAhC,KAAA,EAAAA,GAAE,M,uGC7EnB,WAEA,OAEA,QACA,OAIA,QACA,QACA,QAEA,aAyBE,WACUiC,EACRC,EACAC,EACQC,EACEC,EACFC,EACWC,EACAC,GAPX,KAAAP,aAGA,KAAAG,SACE,KAAAC,UACF,KAAAC,cACW,KAAAC,iBACA,KAAAC,kBA9Bb,KAAAC,iBAA2B,EAC3B,KAAAC,kBAA4B,EAC5B,KAAAC,iBAA2B,EAC3B,KAAAC,kBAA4B,EAC5B,KAAAC,gBAA0B,EAC1B,KAAAC,eAAyB,EAOzB,KAAAC,wBAA4C,CAClDC,MAAO,GACPjO,KAAM,EACNb,GAAI,EACJD,GAAI,EACJgP,MAAM,EACNC,KAAK,EACLC,QAAQ,GAaR9Y,KAAK+Y,QAAUC,SAASC,cAAc,UACtCjZ,KAAK+Y,QAAQG,UAAUC,IAAI,SAAStB,EAAE,UACtC7X,KAAK+Y,QAAQK,MAAMtB,OAASA,EAAO/H,WACnC/P,KAAKqZ,cACLrZ,KAAK4X,WAAW0B,YAAYtZ,KAAK+Y,SAgarC,OA7ZS,YAAA7Y,QAAP,W,MACE,EAAAqZ,wBAAwBvZ,KAAK+Y,SACd,QAAf,EAAA/Y,KAAKwZ,kBAAU,SAAEtZ,WAGX,YAAAmZ,YAAR,WACErZ,KAAKyZ,KAAO,EAAAC,aAAa1Z,KAAK+Y,QAAQY,WAAW,KAAM,CAACC,MAAO5Z,KAAK+X,UAE/D/X,KAAK+X,QACR/X,KAAK6Z,aAIF,YAAAC,iBAAP,aACO,YAAAC,OAAP,aACO,YAAAC,QAAP,aACO,YAAAjW,aAAP,aACO,YAAAkW,cAAP,SAAqBvX,EAAkBI,KAChC,YAAAoX,mBAAP,SAA0BlM,EAAqCC,EAAmCkM,QAAA,IAAAA,OAAA,IAE3F,YAAAC,UAAP,SAAiBC,GACfra,KAAKsa,kBAAkBD,IAGf,YAAAE,iBAAV,SAA2BX,GAEzB,GAAIA,IAAU5Z,KAAK+X,OAAnB,CAKA,IAAMyC,EAAYxa,KAAK+Y,QACvB/Y,KAAK+X,OAAS6B,EAEd5Z,KAAK+Y,QAAU/Y,KAAK+Y,QAAQ0B,YAC5Bza,KAAKqZ,cACLrZ,KAAK4X,WAAW8C,aAAa1a,KAAK+Y,QAASyB,GAG3Cxa,KAAKsa,kBAAkBta,KAAKgY,SAC5BhY,KAAKia,cAAc,EAAGja,KAAKkY,eAAe1X,KAAO,KAO3C,YAAA8Z,kBAAR,SAA0BD,GACpBra,KAAKoY,kBAAoB,GAAKpY,KAAKqY,mBAAqB,IAG5DrY,KAAKwZ,WAAa,EAAAmB,iBAAiB3a,KAAKmY,gBAAgB3K,QAASxN,KAAKiY,YAAaoC,EAAUra,KAAKoY,iBAAkBpY,KAAKqY,mBACzHrY,KAAKwZ,WAAWoB,WAGX,YAAAha,OAAP,SAAciY,GACZ7Y,KAAKsY,iBAAmBO,EAAIgC,gBAC5B7a,KAAKuY,kBAAoBM,EAAIiC,iBAC7B9a,KAAKoY,iBAAmBS,EAAIkC,gBAC5B/a,KAAKqY,kBAAoBQ,EAAImC,iBAC7Bhb,KAAKwY,gBAAkBK,EAAIoC,eAC3Bjb,KAAKyY,eAAiBI,EAAIqC,cAC1Blb,KAAK+Y,QAAQoC,MAAQtC,EAAIuC,kBACzBpb,KAAK+Y,QAAQsC,OAASxC,EAAIyC,mBAC1Btb,KAAK+Y,QAAQK,MAAM+B,MAAWtC,EAAI0C,YAAW,KAC7Cvb,KAAK+Y,QAAQK,MAAMiC,OAAYxC,EAAI2C,aAAY,KAG1Cxb,KAAK+X,QACR/X,KAAK6Z,YAGP7Z,KAAKsa,kBAAkBta,KAAKgY,UAYpB,YAAAyD,WAAV,SAAqBC,EAAWrY,EAAW8X,EAAeE,GACxDrb,KAAKyZ,KAAKkC,SACRD,EAAI1b,KAAKsY,iBACTjV,EAAIrD,KAAKuY,kBACT4C,EAAQnb,KAAKsY,iBACb+C,EAASrb,KAAKuY,oBASR,YAAAqD,uBAAV,SAAiCF,EAAWrY,EAAW8X,QAAA,IAAAA,MAAA,GACrDnb,KAAKyZ,KAAKkC,SACRD,EAAI1b,KAAKsY,kBACRjV,EAAI,GAAKrD,KAAKuY,kBAAoB7a,OAAOme,iBAAmB,EAC7DV,EAAQnb,KAAKsY,iBACb5a,OAAOme,mBASD,YAAAC,oBAAV,SAA8BJ,EAAWrY,EAAW8X,GAClDnb,KAAKyZ,KAAKkC,SACRD,EAAI1b,KAAKsY,iBACTjV,EAAIrD,KAAKuY,kBACT7a,OAAOme,iBAAmBV,EAC1Bnb,KAAKuY,oBASC,YAAAwD,kBAAV,SAA4BL,EAAWrY,EAAW8X,EAAeE,GAC/Drb,KAAKyZ,KAAKuC,UAAYte,OAAOme,iBAC7B7b,KAAKyZ,KAAKwC,WACRP,EAAI1b,KAAKsY,iBAAmB5a,OAAOme,iBAAmB,EACtDxY,EAAIrD,KAAKuY,kBAAqB7a,OAAOme,iBAAmB,EACxDV,EAAQnb,KAAKsY,iBAAmB5a,OAAOme,iBACtCR,EAASrb,KAAKuY,kBAAqB7a,OAAOme,mBAMrC,YAAAhC,UAAV,WACM7Z,KAAK+X,OACP/X,KAAKyZ,KAAKyC,UAAU,EAAG,EAAGlc,KAAK+Y,QAAQoC,MAAOnb,KAAK+Y,QAAQsC,SAE3Drb,KAAKyZ,KAAK0C,UAAYnc,KAAKgY,QAAQoE,WAAW1L,IAC9C1Q,KAAKyZ,KAAKkC,SAAS,EAAG,EAAG3b,KAAK+Y,QAAQoC,MAAOnb,KAAK+Y,QAAQsC,UAWpD,YAAAgB,YAAV,SAAsBX,EAAWrY,EAAW8X,EAAeE,GACrDrb,KAAK+X,OACP/X,KAAKyZ,KAAKyC,UACRR,EAAI1b,KAAKsY,iBACTjV,EAAIrD,KAAKuY,kBACT4C,EAAQnb,KAAKsY,iBACb+C,EAASrb,KAAKuY,oBAEhBvY,KAAKyZ,KAAK0C,UAAYnc,KAAKgY,QAAQoE,WAAW1L,IAC9C1Q,KAAKyZ,KAAKkC,SACRD,EAAI1b,KAAKsY,iBACTjV,EAAIrD,KAAKuY,kBACT4C,EAAQnb,KAAKsY,iBACb+C,EAASrb,KAAKuY,qBAaV,YAAA+D,mBAAV,SAA6BxW,EAAgB4V,EAAWrY,GACtDrD,KAAKyZ,KAAK8C,KAAOvc,KAAKwc,UAAS,GAAO,GACtCxc,KAAKyZ,KAAKgD,aAAe,SACzBzc,KAAK0c,SAASrZ,GACdrD,KAAKyZ,KAAKkD,SACR7W,EAAKG,WACLyV,EAAI1b,KAAKsY,iBAAmBtY,KAAKwY,gBACjCnV,EAAIrD,KAAKuY,kBAAoBvY,KAAKyY,eAAiBzY,KAAKqY,kBAAoB,IAgBtE,YAAAuE,WAAV,SAAqB9W,EAAiB4V,EAAWrY,GAC/C,IAWIuG,EACAC,EAZEgT,EAAgB7c,KAAK8c,kBAAkBhX,GAMzC+W,GAAiB/W,EAAKmG,WAAanG,EAAKoG,UAC1ClM,KAAK+c,mBAAmBjX,EAAM4V,EAAGrY,EAAGwZ,IAMlC/W,EAAK0F,aACP5B,EAAM9D,EAAKwG,cAAiB,EAAAkD,uBAAyB1J,EAAK2G,aAC1D5C,EAAM/D,EAAKuG,cAAiB,EAAAmD,uBAAyB1J,EAAK0G,eAE1D3C,EAAM/D,EAAKwG,cAAiB,EAAAvD,cAAgBjD,EAAK2G,aACjD7C,EAAM9D,EAAKuG,cAAiB,EAAAtD,cAAgBjD,EAAK0G,cAKnD5C,GAF0B5J,KAAKmY,gBAAgB3K,QAAQwP,4BAA8BlX,EAAK2F,UAAY7B,EAAK,EAEjF,EAAI,EAC9B5J,KAAK0Y,wBAAwBC,MAAQ7S,EAAKG,YAAc,EAAAuD,qBACxDxJ,KAAK0Y,wBAAwBhO,KAAO5E,EAAKyE,WAAa,EAAAb,qBACtD1J,KAAK0Y,wBAAwB7O,GAAKA,EAClC7J,KAAK0Y,wBAAwB9O,GAAKA,EAClC5J,KAAK0Y,wBAAwBE,OAAS9S,EAAK2F,SAC3CzL,KAAK0Y,wBAAwBG,MAAQ/S,EAAKgG,QAC1C9L,KAAK0Y,wBAAwBI,SAAWhT,EAAK+F,WACxB7L,KAAKwZ,YAAcxZ,KAAKwZ,WAAWyD,KACtDjd,KAAKyZ,KACLzZ,KAAK0Y,wBACLgD,EAAI1b,KAAKsY,iBAAmBtY,KAAKwY,gBACjCnV,EAAIrD,KAAKuY,kBAAoBvY,KAAKyY,iBAIlCzY,KAAK+c,mBAAmBjX,EAAM4V,EAAGrY,KAc7B,YAAA0Z,mBAAR,SAA2BjX,EAAiB4V,EAAWrY,EAAW6Z,GAKhE,GAJAld,KAAKyZ,KAAK0D,OACVnd,KAAKyZ,KAAK8C,KAAOvc,KAAKwc,WAAW1W,EAAK2F,WAAY3F,EAAK+F,YACvD7L,KAAKyZ,KAAKgD,aAAe,SAErB3W,EAAK0F,YACP,GAAI0R,EACFld,KAAKyZ,KAAK0C,UAAYe,EAAWxM,SAC5B,GAAI5K,EAAKwG,cACdtM,KAAKyZ,KAAK0C,UAAY,EAAA3L,MAAMc,OAAOtR,KAAKgY,QAAQoE,YAAY1L,SACvD,GAAI5K,EAAKoG,UACdlM,KAAKyZ,KAAK0C,UAAY,OAAO,EAAAtR,cAAcO,WAAWtF,EAAK2G,cAAc2Q,KAAK,KAAI,QAC7E,CACL,IAAIvT,EAAK/D,EAAK2G,aACVzM,KAAKmY,gBAAgB3K,QAAQwP,4BAA8BlX,EAAK2F,UAAY5B,EAAK,IACnFA,GAAM,GAER7J,KAAKyZ,KAAK0C,UAAYnc,KAAKgY,QAAQqF,KAAKxT,GAAI6G,SAG9C,GAAIwM,EACFld,KAAKyZ,KAAK0C,UAAYe,EAAWxM,SAC5B,GAAI5K,EAAKuG,cACdrM,KAAKyZ,KAAK0C,UAAYnc,KAAKgY,QAAQsF,WAAW5M,SACzC,GAAI5K,EAAKmG,UACdjM,KAAKyZ,KAAK0C,UAAY,OAAO,EAAAtR,cAAcO,WAAWtF,EAAK0G,cAAc4Q,KAAK,KAAI,QAC7E,CACL,IAAIxT,EAAK9D,EAAK0G,aACVxM,KAAKmY,gBAAgB3K,QAAQwP,4BAA8BlX,EAAK2F,UAAY7B,EAAK,IACnFA,GAAM,GAER5J,KAAKyZ,KAAK0C,UAAYnc,KAAKgY,QAAQqF,KAAKzT,GAAI8G,IAIhD1Q,KAAK0c,SAASrZ,GAGVyC,EAAKgG,UACP9L,KAAKyZ,KAAK8D,YAAc,EAAA9N,aAG1BzP,KAAKyZ,KAAKkD,SACR7W,EAAKG,WACLyV,EAAI1b,KAAKsY,iBAAmBtY,KAAKwY,gBACjCnV,EAAIrD,KAAKuY,kBAAoBvY,KAAKyY,eAAiBzY,KAAKqY,kBAAoB,GAC9ErY,KAAKyZ,KAAK+D,WAOJ,YAAAd,SAAR,SAAiBrZ,GACfrD,KAAKyZ,KAAKgE,YACVzd,KAAKyZ,KAAKiE,KACR,EACAra,EAAIrD,KAAKuY,kBACTvY,KAAKkY,eAAezX,KAAOT,KAAKsY,iBAChCtY,KAAKuY,mBACPvY,KAAKyZ,KAAKkE,QAOF,YAAAnB,SAAV,SAAmB/Q,EAAiBI,GAIlC,OAFkBA,EAAW,SAAW,IAErB,KAHAJ,EAASzL,KAAKmY,gBAAgB3K,QAAQoQ,eAAiB5d,KAAKmY,gBAAgB3K,QAAQqQ,YAGtE,IAAI7d,KAAKmY,gBAAgB3K,QAAQsQ,SAAWpgB,OAAOme,iBAAgB,MAAM7b,KAAKmY,gBAAgB3K,QAAQuQ,YAGjI,YAAAjB,kBAAR,SAA0BhX,GACxB,GAA0D,IAAtD9F,KAAKmY,gBAAgB3K,QAAQwQ,qBAAjC,CAKA,IAAMC,EAAgBje,KAAKgY,QAAQkG,cAAcC,SAASrY,EAAK+D,GAAI/D,EAAK8D,IACxE,QAAsBvF,IAAlB4Z,EACF,OAAOA,QAAiB5Z,EAG1B,IAAI+Z,EAAUtY,EAAK0G,aACf6R,EAAcvY,EAAKiG,iBACnBuS,EAAUxY,EAAK2G,aACf8R,EAAczY,EAAKkG,iBACjBR,IAAc1F,EAAK0F,YACnBC,IAAW3F,EAAK0F,YACtB,GAAIA,EAAW,CACb,IAAMgT,EAAOJ,EACbA,EAAUE,EACVA,EAAUE,EACV,IAAMC,EAAQJ,EACdA,EAAcE,EACdA,EAAcE,EAGhB,IAAMxM,EAASjS,KAAK0e,uBAAuBH,EAAaD,EAAS9S,GAC3D0G,EAASlS,KAAK2e,uBAAuBN,EAAaD,EAAS5S,EAAWC,GACtEtI,EAAS,EAAA0M,KAAKsB,oBAAoBc,EAAQC,EAAQlS,KAAKmY,gBAAgB3K,QAAQwQ,sBAErF,GAAK7a,EAAL,CAKA,IAAMqN,EAAgB,CACpBE,IAAK,EAAAf,SAASQ,MACXhN,GAAU,GAAM,IAChBA,GAAU,GAAM,IAChBA,GAAU,EAAK,KAElB0M,KAAM1M,GAIR,OAFAnD,KAAKgY,QAAQkG,cAAcU,SAAS9Y,EAAK+D,GAAI/D,EAAK8D,GAAI4G,GAE/CA,EAdLxQ,KAAKgY,QAAQkG,cAAcU,SAAS9Y,EAAK+D,GAAI/D,EAAK8D,GAAI,QAiBlD,YAAA8U,uBAAR,SAA+BH,EAAqBD,EAAiBO,GACnE,OAAQN,GACN,KAAK,SACL,KAAK,SACH,OAAOve,KAAKgY,QAAQqF,KAAKiB,GAASzO,KACpC,KAAK,SACH,OAAOyO,GAAW,EACpB,KAAK,EACL,QACE,OAAIO,EACK7e,KAAKgY,QAAQsF,WAAWzN,KAE1B7P,KAAKgY,QAAQoE,WAAWvM,OAI7B,YAAA8O,uBAAR,SAA+BN,EAAqBD,EAAiBS,EAAkBjG,GACrF,OAAQyF,GACN,KAAK,SACL,KAAK,SAIH,OAHIre,KAAKmY,gBAAgB3K,QAAQwP,4BAA8BpE,GAAQwF,EAAU,IAC/EA,GAAW,GAENpe,KAAKgY,QAAQqF,KAAKe,GAASvO,KACpC,KAAK,SACH,OAAOuO,GAAW,EACpB,KAAK,EACL,QACE,OAAIS,EACK7e,KAAKgY,QAAQoE,WAAWvM,KAE1B7P,KAAKgY,QAAQsF,WAAWzN,OAGvC,EAvcA,GAAsB,EAAAiP,mB,kJCqBtB,SAASC,EAAuBlH,EAAcvJ,EAAkB5F,GACzD4F,EAAwB,YAAMA,EAChCA,EAA8B,gBAAEpH,KAAK,CAAE2Q,GAAE,EAAEnP,MAAK,KAEhD4F,EAA8B,gBAAI,CAAC,CAAEuJ,GAAE,EAAEnP,MAAK,IAC9C4F,EAAwB,UAAIA,GA9BpB,EAAA0Q,gBAAwD,IAAIC,IAEzE,kCAAuCC,GACrC,OAAOA,EAAoB,iBAAK,IAGlC,2BAAmCrH,GACjC,GAAI,EAAAmH,gBAAgBG,IAAItH,GACtB,OAAO,EAAAmH,gBAAgBrgB,IAAIkZ,GAG7B,IAAMuH,EAAiB,SAAU9Q,EAAkBjP,EAAaqJ,GAC9D,GAAyB,IAArB2W,UAAU/c,OACZ,MAAM,IAAID,MAAM,oEAGlB0c,EAAuBK,EAAW9Q,EAAQ5F,IAM5C,OAHA0W,EAAUrP,SAAW,WAAM,OAAA8H,GAE3B,EAAAmH,gBAAgBM,IAAIzH,EAAIuH,GACjBA,I,6BClBT,SAAgBG,EAAmCzW,EAAU/J,EAAeiP,EAAmBC,GAK7F,QAL0E,IAAAD,MAAA,QAAmB,IAAAC,MAAcnF,EAAMxG,QAK7G0L,GAASlF,EAAMxG,OACjB,OAAOwG,EAETkF,GAASlF,EAAMxG,OAAS0L,GAASlF,EAAMxG,OAErC2L,EADEA,GAAOnF,EAAMxG,OACTwG,EAAMxG,QAELwG,EAAMxG,OAAS2L,GAAOnF,EAAMxG,OAErC,IAAK,IAAIxE,EAAIkQ,EAAOlQ,EAAImQ,IAAOnQ,EAC7BgL,EAAMhL,GAAKiB,EAEb,OAAO+J,E,uFAzBT,gBAA2CA,EAAU/J,EAAeiP,EAAgBC,GAElF,OAAInF,EAAM8F,KACD9F,EAAM8F,KAAK7P,EAAOiP,EAAOC,GAE3BsR,EAAazW,EAAO/J,EAAOiP,EAAOC,IAG3C,iBAwBA,kBAA6CqC,EAAMD,GACjD,IAAMlN,EAAS,IAAKmN,EAAEkP,YAAoBlP,EAAEhO,OAAS+N,EAAE/N,QAGvD,OAFAa,EAAOmc,IAAIhP,GACXnN,EAAOmc,IAAIjP,EAAGC,EAAEhO,QACTa,I,sHC1CT,WACA,OACA,OACA,OA4Ba,EAAAsc,kBAAoBjhB,OAAOkhB,OAAO,IAAI,EAAA7U,eAiBnD,iBAME,WAAYpK,EAAckf,EAAiC9a,QAAA,IAAAA,OAAA,QAAAA,YAJjD,KAAA+a,UAAuC,GACvC,KAAAC,eAAmD,GAI3D7f,KAAK8f,MAAQ,IAAIC,YAxCH,EAwCetf,GAE7B,IADA,IAAMqF,EAAO6Z,GAAgB,EAAAxV,SAASF,aAAa,CAAC,EAAG,EAAAZ,eAAgB,EAAAC,gBAAiB,EAAAC,iBAC/EzL,EAAI,EAAGA,EAAI2C,IAAQ3C,EAC1BkC,KAAKggB,QAAQliB,EAAGgI,GAElB9F,KAAKsC,OAAS7B,EAsXlB,OA/WS,YAAA9B,IAAP,SAAW+J,GACT,IAAMiB,EAAU3J,KAAK8f,MArDP,EAqDapX,EAAoB,GACzCwG,EAAe,QAAVvF,EACX,MAAO,CACL3J,KAAK8f,MAxDO,EAwDDpX,EAAoB,GACpB,QAAViB,EACG3J,KAAK4f,UAAUlX,GACf,EAAO,EAAA4B,oBAAoB4E,GAAM,GACrCvF,GAAW,GACA,QAAVA,EACG3J,KAAK4f,UAAUlX,GAAO8B,WAAWxK,KAAK4f,UAAUlX,GAAOpG,OAAS,GAChE4M,IAQD,YAAAoQ,IAAP,SAAW5W,EAAe3J,GACxBiB,KAAK8f,MAxES,EAwEHpX,EAAoB,GAAW3J,EAAM,EAAAkK,sBAC5ClK,EAAM,EAAAmK,sBAAsB5G,OAAS,GACvCtC,KAAK4f,UAAUlX,GAAS3J,EAAM,GAC9BiB,KAAK8f,MA3EO,EA2EDpX,EAAoB,GAAwB,QAARA,EAAoC3J,EAAM,EAAAoK,wBAA0B,IAEnHnJ,KAAK8f,MA7EO,EA6EDpX,EAAoB,GAAgB3J,EAAM,EAAAmK,sBAAsBsB,WAAW,GAAMzL,EAAM,EAAAoK,wBAA0B,IAQzH,YAAAjD,SAAP,SAAgBwC,GACd,OAAO1I,KAAK8f,MAtFE,EAsFIpX,EAAoB,IAAiB,IAIlD,YAAAuX,SAAP,SAAgBvX,GACd,OAAsD,SAA/C1I,KAAK8f,MA3FE,EA2FIpX,EAAoB,IAIjC,YAAAwX,MAAP,SAAaxX,GACX,OAAO1I,KAAK8f,MAhGE,EAgGIpX,EAAoB,IAIjC,YAAAyX,MAAP,SAAazX,GACX,OAAO1I,KAAK8f,MArGE,EAqGIpX,EAAoB,IAQjC,YAAA0X,WAAP,SAAkB1X,GAChB,OAAsD,QAA/C1I,KAAK8f,MA9GE,EA8GIpX,EAAoB,IAQjC,YAAA2X,aAAP,SAAoB3X,GAClB,IAAMiB,EAAU3J,KAAK8f,MAvHP,EAuHapX,EAAoB,GAC/C,OAAc,QAAViB,EACK3J,KAAK4f,UAAUlX,GAAO8B,WAAWxK,KAAK4f,UAAUlX,GAAOpG,OAAS,GAExD,QAAVqH,GAIF,YAAAU,WAAP,SAAkB3B,GAChB,OAAsD,QAA/C1I,KAAK8f,MAhIE,EAgIIpX,EAAoB,IAIjC,YAAA4X,UAAP,SAAiB5X,GACf,IAAMiB,EAAU3J,KAAK8f,MArIP,EAqIapX,EAAoB,GAC/C,OAAc,QAAViB,EACK3J,KAAK4f,UAAUlX,GAEV,QAAViB,EACK,EAAAW,oBAA8B,QAAVX,GAGtB,IAOF,YAAA4W,SAAP,SAAgB7X,EAAe5C,GAC7B,IAAM0a,EArJQ,EAqJK9X,EAUnB,OATA5C,EAAK6D,QAAU3J,KAAK8f,MAAMU,EAAa,GACvC1a,EAAK8D,GAAK5J,KAAK8f,MAAMU,EAAa,GAClC1a,EAAK+D,GAAK7J,KAAK8f,MAAMU,EAAa,GACf,QAAf1a,EAAK6D,UACP7D,EAAKkE,aAAehK,KAAK4f,UAAUlX,IAEvB,UAAV5C,EAAK+D,KACP/D,EAAKgE,SAAW9J,KAAK6f,eAAenX,IAE/B5C,GAMF,YAAAka,QAAP,SAAetX,EAAe5C,GACT,QAAfA,EAAK6D,UACP3J,KAAK4f,UAAUlX,GAAS5C,EAAKkE,cAEjB,UAAVlE,EAAK+D,KACP7J,KAAK6f,eAAenX,GAAS5C,EAAKgE,UAEpC9J,KAAK8f,MA5KS,EA4KHpX,EAAoB,GAAgB5C,EAAK6D,QACpD3J,KAAK8f,MA7KS,EA6KHpX,EAAoB,GAAW5C,EAAK8D,GAC/C5J,KAAK8f,MA9KS,EA8KHpX,EAAoB,GAAW5C,EAAK+D,IAQ1C,YAAA4W,qBAAP,SAA4B/X,EAAekF,EAAmBuN,EAAevR,EAAYC,EAAY6W,GAC1F,UAAL7W,IACF7J,KAAK6f,eAAenX,GAASgY,GAE/B1gB,KAAK8f,MA1LS,EA0LHpX,EAAoB,GAAgBkF,EAAauN,GAAS,GACrEnb,KAAK8f,MA3LS,EA2LHpX,EAAoB,GAAWkB,EAC1C5J,KAAK8f,MA5LS,EA4LHpX,EAAoB,GAAWmB,GASrC,YAAA8W,mBAAP,SAA0BjY,EAAekF,GACvC,IAAIjE,EAAU3J,KAAK8f,MAtML,EAsMWpX,EAAoB,GAC/B,QAAViB,EAEF3J,KAAK4f,UAAUlX,IAAU,EAAA4B,oBAAoBsD,IAE/B,QAAVjE,GAIF3J,KAAK4f,UAAUlX,GAAS,EAAA4B,oBAA8B,QAAVX,GAAoC,EAAAW,oBAAoBsD,GACpGjE,IAAW,QACXA,GAAW,SAIXA,EAAUiE,EAAa,GAAK,GAE9B5N,KAAK8f,MAvNO,EAuNDpX,EAAoB,GAAgBiB,IAI5C,YAAAiX,YAAP,SAAmBzR,EAAa5P,EAAWogB,EAAyBkB,GAQlE,IAPA1R,GAAOnP,KAAKsC,SAG0B,IAA3BtC,KAAKkG,SAASiJ,EAAM,IAC7BnP,KAAKygB,qBAAqBtR,EAAM,EAAG,EAAG,GAAG0R,aAAS,EAATA,EAAWjX,KAAM,GAAGiX,aAAS,EAATA,EAAWhX,KAAM,GAAGgX,aAAS,EAATA,EAAW/W,WAAY,IAAI,EAAAC,eAG1GxK,EAAIS,KAAKsC,OAAS6M,EAAK,CAEzB,IADA,IAAMrJ,EAAO,IAAI,EAAAqE,SACRrM,EAAIkC,KAAKsC,OAAS6M,EAAM5P,EAAI,EAAGzB,GAAK,IAAKA,EAChDkC,KAAKggB,QAAQ7Q,EAAM5P,EAAIzB,EAAGkC,KAAKugB,SAASpR,EAAMrR,EAAGgI,IAEnD,IAAShI,EAAI,EAAGA,EAAIyB,IAAKzB,EACvBkC,KAAKggB,QAAQ7Q,EAAMrR,EAAG6hB,QAGxB,IAAS7hB,EAAIqR,EAAKrR,EAAIkC,KAAKsC,SAAUxE,EACnCkC,KAAKggB,QAAQliB,EAAG6hB,GAKmB,IAAnC3f,KAAKkG,SAASlG,KAAKsC,OAAS,IAC9BtC,KAAKygB,qBAAqBzgB,KAAKsC,OAAS,EAAG,EAAG,GAAGue,aAAS,EAATA,EAAWjX,KAAM,GAAGiX,aAAS,EAATA,EAAWhX,KAAM,GAAGgX,aAAS,EAATA,EAAW/W,WAAY,IAAI,EAAAC,gBAIjH,YAAA+W,YAAP,SAAmB3R,EAAa5P,EAAWogB,EAAyBkB,GAElE,GADA1R,GAAOnP,KAAKsC,OACR/C,EAAIS,KAAKsC,OAAS6M,EAAK,CAEzB,IADA,IAAMrJ,EAAO,IAAI,EAAAqE,SACRrM,EAAI,EAAGA,EAAIkC,KAAKsC,OAAS6M,EAAM5P,IAAKzB,EAC3CkC,KAAKggB,QAAQ7Q,EAAMrR,EAAGkC,KAAKugB,SAASpR,EAAM5P,EAAIzB,EAAGgI,IAEnD,IAAShI,EAAIkC,KAAKsC,OAAS/C,EAAGzB,EAAIkC,KAAKsC,SAAUxE,EAC/CkC,KAAKggB,QAAQliB,EAAG6hB,QAGlB,IAAS7hB,EAAIqR,EAAKrR,EAAIkC,KAAKsC,SAAUxE,EACnCkC,KAAKggB,QAAQliB,EAAG6hB,GAOhBxQ,GAAkC,IAA3BnP,KAAKkG,SAASiJ,EAAM,IAC7BnP,KAAKygB,qBAAqBtR,EAAM,EAAG,EAAG,GAAG0R,aAAS,EAATA,EAAWjX,KAAM,GAAGiX,aAAS,EAATA,EAAWhX,KAAM,GAAGgX,aAAS,EAATA,EAAW/W,WAAY,IAAI,EAAAC,eAEnF,IAAvB/J,KAAKkG,SAASiJ,IAAenP,KAAKogB,WAAWjR,IAC/CnP,KAAKygB,qBAAqBtR,EAAK,EAAG,GAAG0R,aAAS,EAATA,EAAWjX,KAAM,GAAGiX,aAAS,EAATA,EAAWhX,KAAM,GAAGgX,aAAS,EAATA,EAAW/W,WAAY,IAAI,EAAAC,gBAIrG,YAAAgX,aAAP,SAAoB/S,EAAeC,EAAa0R,EAAyBkB,GAUvE,IARI7S,GAAsC,IAA7BhO,KAAKkG,SAAS8H,EAAQ,IACjChO,KAAKygB,qBAAqBzS,EAAQ,EAAG,EAAG,GAAG6S,aAAS,EAATA,EAAWjX,KAAM,GAAGiX,aAAS,EAATA,EAAWhX,KAAM,GAAGgX,aAAS,EAATA,EAAW/W,WAAY,IAAI,EAAAC,eAG5GkE,EAAMjO,KAAKsC,QAAqC,IAA3BtC,KAAKkG,SAAS+H,EAAM,IAC3CjO,KAAKygB,qBAAqBxS,EAAK,EAAG,GAAG4S,aAAS,EAATA,EAAWjX,KAAM,GAAGiX,aAAS,EAATA,EAAWhX,KAAM,GAAGgX,aAAS,EAATA,EAAW/W,WAAY,IAAI,EAAAC,eAGnGiE,EAAQC,GAAQD,EAAQhO,KAAKsC,QAClCtC,KAAKggB,QAAQhS,IAAS2R,IAInB,YAAA/e,OAAP,SAAcH,EAAckf,GAC1B,GAAIlf,IAAST,KAAKsC,OAAlB,CAGA,GAAI7B,EAAOT,KAAKsC,OAAQ,CACtB,IAAMyL,EAAO,IAAIgS,YAtSL,EAsSiBtf,GACzBT,KAAKsC,SAvSG,EAwSN7B,EAAmBT,KAAK8f,MAAMxd,OAChCyL,EAAKuR,IAAItf,KAAK8f,MAAMkB,SAAS,EAzSrB,EAySwBvgB,IAEhCsN,EAAKuR,IAAItf,KAAK8f,QAGlB9f,KAAK8f,MAAQ/R,EACb,IAAK,IAAIjQ,EAAIkC,KAAKsC,OAAQxE,EAAI2C,IAAQ3C,EACpCkC,KAAKggB,QAAQliB,EAAG6hB,QAGlB,GAAIlf,EAAM,EACFsN,EAAO,IAAIgS,YApTP,EAoTmBtf,IACxB6e,IAAItf,KAAK8f,MAAMkB,SAAS,EArTnB,EAqTsBvgB,IAChCT,KAAK8f,MAAQ/R,EAEb,IAAMkT,EAAOziB,OAAOyiB,KAAKjhB,KAAK4f,WAC9B,IAAS9hB,EAAI,EAAGA,EAAImjB,EAAK3e,OAAQxE,IAAK,CACpC,IAAMuB,EAAM6B,SAAS+f,EAAKnjB,GAAI,IAC1BuB,GAAOoB,UACFT,KAAK4f,UAAUvgB,SAI1BW,KAAK8f,MAAQ,IAAIC,YAAY,GAC7B/f,KAAK4f,UAAY,GAGrB5f,KAAKsC,OAAS7B,IAIT,YAAAmO,KAAP,SAAY+Q,GACV3f,KAAK4f,UAAY,GACjB5f,KAAK6f,eAAiB,GACtB,IAAK,IAAI/hB,EAAI,EAAGA,EAAIkC,KAAKsC,SAAUxE,EACjCkC,KAAKggB,QAAQliB,EAAG6hB,IAKb,YAAAuB,SAAP,SAAgB1c,GASd,IAAK,IAAMuO,KARP/S,KAAKsC,SAAWkC,EAAKlC,OACvBtC,KAAK8f,MAAQ,IAAIC,YAAYvb,EAAKsb,OAGlC9f,KAAK8f,MAAMR,IAAI9a,EAAKsb,OAEtB9f,KAAKsC,OAASkC,EAAKlC,OACnBtC,KAAK4f,UAAY,GACApb,EAAKob,UACpB5f,KAAK4f,UAAU7M,GAAMvO,EAAKob,UAAU7M,GAGtC,IAAK,IAAMA,KADX/S,KAAK6f,eAAiB,GACLrb,EAAKqb,eACpB7f,KAAK6f,eAAe9M,GAAMvO,EAAKqb,eAAe9M,GAEhD/S,KAAK6E,UAAYL,EAAKK,WAIjB,YAAAyG,MAAP,WACE,IAAM6V,EAAU,IAAIC,EAAW,GAG/B,IAAK,IAAMrO,KAFXoO,EAAQrB,MAAQ,IAAIC,YAAY/f,KAAK8f,OACrCqB,EAAQ7e,OAAStC,KAAKsC,OACLtC,KAAK4f,UACpBuB,EAAQvB,UAAU7M,GAAM/S,KAAK4f,UAAU7M,GAEzC,IAAK,IAAMA,KAAM/S,KAAK6f,eACpBsB,EAAQtB,eAAe9M,GAAM/S,KAAK6f,eAAe9M,GAGnD,OADAoO,EAAQtc,UAAY7E,KAAK6E,UAClBsc,GAGF,YAAAE,iBAAP,WACE,IAAK,IAAIvjB,EAAIkC,KAAKsC,OAAS,EAAGxE,GAAK,IAAKA,EACtC,GAAgD,QAA3CkC,KAAK8f,MArXE,EAqXIhiB,EAAgB,GAC9B,OAAOA,GAAKkC,KAAK8f,MAtXP,EAsXahiB,EAAgB,IAAiB,IAG5D,OAAO,GAGF,YAAAwjB,cAAP,SAAqBC,EAAiBC,EAAgBC,EAAiBnf,EAAgBof,GACrF,IAAMC,EAAUJ,EAAIzB,MACpB,GAAI4B,EACF,IAAK,IAAI5b,EAAOxD,EAAS,EAAGwD,GAAQ,EAAGA,IACrC,IAAK,IAAIhI,EAAI,EAAGA,EAhYN,EAgYqBA,IAC7BkC,KAAK8f,MAjYG,GAiYI2B,EAAU3b,GAAoBhI,GAAK6jB,EAjYvC,GAiYgDH,EAAS1b,GAAoBhI,QAIzF,IAASgI,EAAO,EAAGA,EAAOxD,EAAQwD,IAChC,IAAShI,EAAI,EAAGA,EAtYN,EAsYqBA,IAC7BkC,KAAK8f,MAvYG,GAuYI2B,EAAU3b,GAAoBhI,GAAK6jB,EAvYvC,GAuYgDH,EAAS1b,GAAoBhI,GAM3F,IAAM8jB,EAAkBpjB,OAAOyiB,KAAKM,EAAI3B,WACxC,IAAS9hB,EAAI,EAAGA,EAAI8jB,EAAgBtf,OAAQxE,IAAK,CAC/C,IAAMuB,EAAM6B,SAAS0gB,EAAgB9jB,GAAI,IACrCuB,GAAOmiB,IACTxhB,KAAK4f,UAAUvgB,EAAMmiB,EAASC,GAAWF,EAAI3B,UAAUvgB,MAKtD,YAAAmH,kBAAP,SAAyBJ,EAA4B3D,EAAsBof,QAAlD,IAAAzb,OAAA,QAA4B,IAAA3D,MAAA,QAAsB,IAAAof,MAAiB7hB,KAAKsC,QAC3F8D,IACFyb,EAASxgB,KAAKiR,IAAIuP,EAAQ7hB,KAAKqhB,qBAGjC,IADA,IAAIle,EAAS,GACNV,EAAWof,GAAQ,CACxB,IAAMlY,EAAU3J,KAAK8f,MA5ZT,EA4Zerd,EAAuB,GAC5CyM,EAAe,QAAVvF,EACXxG,GAAqB,QAAVwG,EAAsC3J,KAAK4f,UAAUnd,GAAY,EAAO,EAAA6H,oBAAoB4E,GAAM,EAAA1F,qBAC7G/G,GAAakH,GAAW,IAAwB,EAElD,OAAOxG,GAEX,EAlYA,GAAa,EAAAie,c,+GCjDb,qC,UAAwC,kDACtC,IAAgB,UAAAU,EAAA,eAAU,CAArB,IAAMna,EAAC,KACM,QAAhB,EAAAA,aAAC,EAADA,EAAG7G,qBAAa,SAAEihB,YAAYpa,M,mHCDvB,EAAAqa,YAAc,iBAGd,EAAAC,cAAgB,kE,+cCF3B,IAuFYC,EAvFZ,QACA,QACA,QACA,OACA,QACA,OACA,QACA,OAEA,OACA,OACA,OAEA,QACA,QAKMC,EAAkC,CAAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,GAqCtF,SAASC,EAAoB7iB,EAAW8iB,GACtC,GAAI9iB,EAAI,GACN,OAAO8iB,EAAKC,cAAe,EAE7B,OAAQ/iB,GACN,KAAK,EAAG,QAAS8iB,EAAKE,WACtB,KAAK,EAAG,QAASF,EAAKG,YACtB,KAAK,EAAG,QAASH,EAAKI,eACtB,KAAK,EAAG,QAASJ,EAAKK,iBACtB,KAAK,EAAG,QAASL,EAAKM,SACtB,KAAK,EAAG,QAASN,EAAKO,SACtB,KAAK,EAAG,QAASP,EAAKQ,WACtB,KAAK,EAAG,QAASR,EAAKS,gBACtB,KAAK,EAAG,QAAST,EAAKU,YACtB,KAAK,GAAI,QAASV,EAAKW,cACvB,KAAK,GAAI,QAASX,EAAKY,YACvB,KAAK,GAAI,QAASZ,EAAKa,eACvB,KAAK,GAAI,QAASb,EAAKc,iBACvB,KAAK,GAAI,QAASd,EAAKe,oBACvB,KAAK,GAAI,QAASf,EAAKgB,kBACvB,KAAK,GAAI,QAAShB,EAAKiB,gBACvB,KAAK,GAAI,QAASjB,EAAKkB,mBACvB,KAAK,GAAI,QAASlB,EAAKmB,aACvB,KAAK,GAAI,QAASnB,EAAKoB,YACvB,KAAK,GAAI,QAASpB,EAAKqB,UACvB,KAAK,GAAI,QAASrB,EAAKsB,SACvB,KAAK,GAAI,QAAStB,EAAKC,YAEzB,OAAO,GAGT,SAAYJ,GACV,iDACA,mDAFF,CAAYA,EAAA,EAAAA,2BAAA,EAAAA,yBAAwB,KAoCpC,iBAGE,WACUhK,EACA0L,EACAC,EACA1L,GAHA,KAAAD,iBACA,KAAA0L,eACA,KAAAC,cACA,KAAA1L,kBANF,KAAA2H,MAAqB,IAAIC,YAAY,GAgD/C,OAvCS,YAAA+D,KAAP,SAAYC,GACV/jB,KAAK8f,MAAQ,IAAIC,YAAY,IAGxB,YAAAiE,IAAP,SAAWjW,EAAmBC,EAAeC,GAC3CjO,KAAK8f,MAAQ,EAAAmE,OAAOjkB,KAAK8f,MAAO/R,EAAKiT,SAAShT,EAAOC,KAGhD,YAAAiW,OAAP,SAAcC,GACZ,GAAKA,EAAL,CAIA,IAAMpW,EAAO,EAAAqW,cAAcpkB,KAAK8f,OAEhC,OADA9f,KAAK8f,MAAQ,IAAIC,YAAY,GACrBhS,GAEN,IAAK,KACH,OAAO/N,KAAK4jB,aAAaS,iBAAoB,EAAA7Q,GAAG4B,IAAG,UAAU,EAAA5B,GAAG4B,IAAG,MACrE,IAAK,KACH,OAAOpV,KAAK4jB,aAAaS,iBAAoB,EAAA7Q,GAAG4B,IAAG,aAAa,EAAA5B,GAAG4B,IAAG,MACxE,IAAK,IACH,IAAMkP,EAAWtkB,KAAKkY,eAAe5U,OAAOihB,UAAY,EAChD,KAAOvkB,KAAKkY,eAAe5U,OAAOkhB,aAAe,GAAK,IAC9D,OAAOxkB,KAAK4jB,aAAaS,iBAAoB,EAAA7Q,GAAG4B,IAAG,OAAOkP,EAAK,EAAA9Q,GAAG4B,IAAG,MACvE,IAAK,IAEH,OAAOpV,KAAK4jB,aAAaS,iBAAoB,EAAA7Q,GAAG4B,IAAG,SAAS,EAAA5B,GAAG4B,IAAG,MACpE,IAAK,KACH,IACIgE,EADoC,CAAC,MAAS,EAAG,UAAa,EAAG,IAAO,GACzDpZ,KAAKmY,gBAAgB3K,QAAQiX,aAEhD,OADArL,GAASpZ,KAAKmY,gBAAgB3K,QAAQkX,YAAc,EAAI,EACjD1kB,KAAK4jB,aAAaS,iBAAoB,EAAA7Q,GAAG4B,IAAG,OAAOgE,EAAK,KAAK,EAAA5F,GAAG4B,IAAG,MAC5E,QAEEpV,KAAK6jB,YAAYc,MAAM,oBAAqB5W,GAC5C/N,KAAK4jB,aAAaS,iBAAoB,EAAA7Q,GAAG4B,IAAG,OAAO,EAAA5B,GAAG4B,IAAG,YA1B3DpV,KAAK8f,MAAQ,IAAIC,YAAY,IA6BnC,EAjDA,GAoFA,cAuCE,WACmB7H,EACA0M,EACAhB,EACAiB,EACAhB,EACA1L,EACA2M,EACAC,EACAC,QAAA,IAAAA,MAAA,IAAqC,EAAAC,sBATxD,MAWE,cAAO,KAVU,EAAA/M,iBACA,EAAA0M,kBACA,EAAAhB,eACA,EAAAiB,mBACA,EAAAhB,cACA,EAAA1L,kBACA,EAAA2M,oBACA,EAAAC,kBACA,EAAAC,UA/CX,EAAAE,aAA4B,IAAInF,YAAY,MAC5C,EAAAoF,eAAgC,IAAI,EAAA1W,cACpC,EAAA2W,aAA4B,IAAI,EAAA7V,YAChC,EAAA8V,UAAsB,IAAI,EAAAlb,SAC1B,EAAAmb,aAAe,GACf,EAAAC,UAAY,GACV,EAAAC,kBAA8B,GAC9B,EAAAC,eAA2B,GAE7B,EAAAC,aAA+B,EAAAjG,kBAAkBnU,QACjD,EAAAqa,uBAAyC,EAAAlG,kBAAkBnU,QAE3D,EAAAsa,eAAiB,IAAI,EAAApe,aAErB,EAAAqe,sBAAwB,IAAI,EAAAre,aAE5B,EAAAse,gBAAkB,IAAI,EAAAte,aAEtB,EAAAue,iBAAmB,IAAI,EAAAve,aAEvB,EAAAwe,wBAA0B,IAAI,EAAAxe,aAE9B,EAAAye,+BAAiC,IAAI,EAAAze,aAGrC,EAAA0e,YAAc,IAAI,EAAA1e,aAElB,EAAA2e,WAAa,IAAI,EAAA3e,aAEjB,EAAA4e,cAAgB,IAAI,EAAA5e,aAEpB,EAAA6e,YAAc,IAAI,EAAA7e,aAElB,EAAA8e,UAAY,IAAI,EAAA9e,aAEhB,EAAA+e,eAAiB,IAAI,EAAA/e,aAe3B,EAAKgB,SAAS,EAAKwc,SAKnB,EAAKA,QAAQwB,uBAAsB,SAACC,EAAO1C,GACzC,EAAKF,YAAYc,MAAM,qBAAsB,CAAE+B,WAAY,EAAK1B,QAAQ2B,cAAcF,GAAQ1C,OAAQA,EAAO6C,eAE/G,EAAK5B,QAAQ6B,uBAAsB,SAAAJ,GACjC,EAAK5C,YAAYc,MAAM,qBAAsB,CAAE+B,WAAY,EAAK1B,QAAQ2B,cAAcF,QAExF,EAAKzB,QAAQ8B,2BAA0B,SAAApc,GACrC,EAAKmZ,YAAYc,MAAM,yBAA0B,CAAEja,KAAI,OAEzD,EAAKsa,QAAQ+B,uBAAsB,SAACL,EAAYM,EAAQjZ,GACtD,EAAK8V,YAAYc,MAAM,qBAAsB,CAAE+B,WAAU,EAAEM,OAAM,EAAEjZ,KAAI,OAEzE,EAAKiX,QAAQiC,uBAAsB,SAACR,EAAOO,EAAQE,GAClC,SAAXF,IACFE,EAAUA,EAAQN,WAEpB,EAAK/C,YAAYc,MAAM,qBAAsB,CAAE+B,WAAY,EAAK1B,QAAQ2B,cAAcF,GAAQO,OAAM,EAAEE,QAAO,OAM/G,EAAKlC,QAAQmC,iBAAgB,SAACpZ,EAAMC,EAAOC,GAAQ,SAAKmZ,MAAMrZ,EAAMC,EAAOC,MAK3E,EAAK+W,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKwD,YAAYxD,MACpE,EAAKiB,QAAQqC,cAAc,CAACG,cAAe,IAAKF,MAAO,MAAM,SAAAvD,GAAU,SAAK0D,WAAW1D,MACvF,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAK2D,SAAS3D,MACjE,EAAKiB,QAAQqC,cAAc,CAACG,cAAe,IAAKF,MAAO,MAAM,SAAAvD,GAAU,SAAK4D,YAAY5D,MACxF,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAK6D,WAAW7D,MACnE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAK8D,cAAc9D,MACtE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAK+D,eAAe/D,MACvE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKgE,eAAehE,MACvE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKiE,oBAAoBjE,MAC5E,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKkE,mBAAmBlE,MAC3E,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKmE,eAAenE,MACvE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKoE,iBAAiBpE,MACzE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKqE,eAAerE,MACvE,EAAKiB,QAAQqC,cAAc,CAACgB,OAAQ,IAAKf,MAAO,MAAM,SAAAvD,GAAU,SAAKqE,eAAerE,MACpF,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKuE,YAAYvE,MACpE,EAAKiB,QAAQqC,cAAc,CAACgB,OAAQ,IAAKf,MAAO,MAAM,SAAAvD,GAAU,SAAKuE,YAAYvE,MACjF,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKwE,YAAYxE,MACpE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKyE,YAAYzE,MACpE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAK0E,YAAY1E,MACpE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAK2E,SAAS3E,MACjE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAK4E,WAAW5E,MACnE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAK6E,WAAW7E,MACnE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAK8E,kBAAkB9E,MAC1E,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAK+E,gBAAgB/E,MACxE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKgF,kBAAkBhF,MAC1E,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKiF,yBAAyBjF,MACjF,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKkF,4BAA4BlF,MACpF,EAAKiB,QAAQqC,cAAc,CAACgB,OAAQ,IAAKf,MAAO,MAAM,SAAAvD,GAAU,SAAKmF,8BAA8BnF,MACnG,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKoF,gBAAgBpF,MACxE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKqF,kBAAkBrF,MAC1E,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKsF,WAAWtF,MACnE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKuF,SAASvF,MACjE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKwF,QAAQxF,MAChE,EAAKiB,QAAQqC,cAAc,CAACgB,OAAQ,IAAKf,MAAO,MAAM,SAAAvD,GAAU,SAAKyF,eAAezF,MACpF,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAK0F,UAAU1F,MAClE,EAAKiB,QAAQqC,cAAc,CAACgB,OAAQ,IAAKf,MAAO,MAAM,SAAAvD,GAAU,SAAK2F,iBAAiB3F,MACtF,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAK4F,eAAe5F,MACvE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAK6F,aAAa7F,MACrE,EAAKiB,QAAQqC,cAAc,CAACgB,OAAQ,IAAKf,MAAO,MAAM,SAAAvD,GAAU,SAAK8F,oBAAoB9F,MACzF,EAAKiB,QAAQqC,cAAc,CAACG,cAAe,IAAKF,MAAO,MAAM,SAAAvD,GAAU,SAAK+F,UAAU/F,MACtF,EAAKiB,QAAQqC,cAAc,CAACG,cAAe,IAAKF,MAAO,MAAM,SAAAvD,GAAU,SAAKgG,eAAehG,MAC3F,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKiG,gBAAgBjG,MACxE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKkG,WAAWlG,MACnE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKmG,cAAcnG,MACtE,EAAKiB,QAAQqC,cAAc,CAACC,MAAO,MAAM,SAAAvD,GAAU,SAAKoG,cAAcpG,MACtE,EAAKiB,QAAQqC,cAAc,CAACG,cAAe,IAAMF,MAAO,MAAM,SAAAvD,GAAU,SAAKqG,cAAcrG,MAC3F,EAAKiB,QAAQqC,cAAc,CAACG,cAAe,IAAMF,MAAO,MAAM,SAAAvD,GAAU,SAAKsG,cAActG,MAK3F,EAAKiB,QAAQsF,kBAAkB,EAAA9W,GAAGQ,KAAK,WAAM,SAAKuW,UAClD,EAAKvF,QAAQsF,kBAAkB,EAAA9W,GAAGW,IAAI,WAAM,SAAKqW,cACjD,EAAKxF,QAAQsF,kBAAkB,EAAA9W,GAAGY,IAAI,WAAM,SAAKoW,cACjD,EAAKxF,QAAQsF,kBAAkB,EAAA9W,GAAGa,IAAI,WAAM,SAAKmW,cACjD,EAAKxF,QAAQsF,kBAAkB,EAAA9W,GAAGc,IAAI,WAAM,SAAKmW,oBACjD,EAAKzF,QAAQsF,kBAAkB,EAAA9W,GAAGS,IAAI,WAAM,SAAKyW,eACjD,EAAK1F,QAAQsF,kBAAkB,EAAA9W,GAAGU,IAAI,WAAM,SAAKyW,SACjD,EAAK3F,QAAQsF,kBAAkB,EAAA9W,GAAGe,IAAI,WAAM,SAAKqW,cACjD,EAAK5F,QAAQsF,kBAAkB,EAAA9W,GAAGgB,IAAI,WAAM,SAAKqW,aAGjD,EAAK7F,QAAQsF,kBAAkB,EAAA3U,GAAGK,KAAK,WAAM,SAAKtN,WAClD,EAAKsc,QAAQsF,kBAAkB,EAAA3U,GAAGM,KAAK,WAAM,SAAK1P,cAClD,EAAKye,QAAQsF,kBAAkB,EAAA3U,GAAGS,KAAK,WAAM,SAAK0U,YAMlD,EAAK9F,QAAQ+F,cAAc,EAAG,IAAI,EAAAC,YAAW,SAACjd,GAAmB,EAAKkd,SAASld,GAAO,EAAKmd,YAAYnd,OAEvG,EAAKiX,QAAQ+F,cAAc,EAAG,IAAI,EAAAC,YAAW,SAACjd,GAAiB,SAAKmd,YAAYnd,OAEhF,EAAKiX,QAAQ+F,cAAc,EAAG,IAAI,EAAAC,YAAW,SAACjd,GAAiB,SAAKkd,SAASld,OAqC7E,EAAKiX,QAAQmG,cAAc,CAAC7D,MAAO,MAAM,WAAM,SAAK2C,gBACpD,EAAKjF,QAAQmG,cAAc,CAAC7D,MAAO,MAAM,WAAM,SAAK6C,mBACpD,EAAKnF,QAAQmG,cAAc,CAAC7D,MAAO,MAAM,WAAM,SAAK5e,WACpD,EAAKsc,QAAQmG,cAAc,CAAC7D,MAAO,MAAM,WAAM,SAAK/gB,cACpD,EAAKye,QAAQmG,cAAc,CAAC7D,MAAO,MAAM,WAAM,SAAKwD,YACpD,EAAK9F,QAAQmG,cAAc,CAAC7D,MAAO,MAAM,WAAM,SAAK8D,kBACpD,EAAKpG,QAAQmG,cAAc,CAAC7D,MAAO,MAAM,WAAM,SAAK+D,2BACpD,EAAKrG,QAAQmG,cAAc,CAAC7D,MAAO,MAAM,WAAM,SAAKgE,uBACpD,EAAKtG,QAAQmG,cAAc,CAAC7D,MAAO,MAAM,WAAM,SAAKiE,eACpD,EAAKvG,QAAQmG,cAAc,CAAC7D,MAAO,MAAM,WAAM,SAAKkE,UAAU,MAC9D,EAAKxG,QAAQmG,cAAc,CAAC7D,MAAO,MAAM,WAAM,SAAKkE,UAAU,MAC9D,EAAKxG,QAAQmG,cAAc,CAAC7D,MAAO,MAAM,WAAM,SAAKkE,UAAU,MAC9D,EAAKxG,QAAQmG,cAAc,CAAC7D,MAAO,MAAM,WAAM,SAAKkE,UAAU,MAC9D,EAAKxG,QAAQmG,cAAc,CAAC7D,MAAO,MAAM,WAAM,SAAKkE,UAAU,MAC9D,EAAKxG,QAAQmG,cAAc,CAAC3D,cAAe,IAAKF,MAAO,MAAM,WAAM,SAAKmE,0BACxE,EAAKzG,QAAQmG,cAAc,CAAC3D,cAAe,IAAKF,MAAO,MAAM,WAAM,SAAKmE,0B,eAC7DC,GACT,EAAK1G,QAAQmG,cAAc,CAAC3D,cAAe,IAAKF,MAAOoE,IAAO,WAAM,SAAKC,cAAc,IAAMD,MAC7F,EAAK1G,QAAQmG,cAAc,CAAC3D,cAAe,IAAKF,MAAOoE,IAAO,WAAM,SAAKC,cAAc,IAAMD,MAC7F,EAAK1G,QAAQmG,cAAc,CAAC3D,cAAe,IAAKF,MAAOoE,IAAO,WAAM,SAAKC,cAAc,IAAMD,MAC7F,EAAK1G,QAAQmG,cAAc,CAAC3D,cAAe,IAAKF,MAAOoE,IAAO,WAAM,SAAKC,cAAc,IAAMD,MAC7F,EAAK1G,QAAQmG,cAAc,CAAC3D,cAAe,IAAKF,MAAOoE,IAAO,WAAM,SAAKC,cAAc,IAAMD,MAC7F,EAAK1G,QAAQmG,cAAc,CAAC3D,cAAe,IAAKF,MAAOoE,IAAO,WAAM,SAAKC,cAAc,IAAMD,MAC7F,EAAK1G,QAAQmG,cAAc,CAAC3D,cAAe,IAAKF,MAAOoE,IAAO,WAAM,SAAKC,cAAc,IAAMD,O,OAP/F,IAAK,IAAMA,KAAQ,EAAAE,S,EAARF,G,OASX,EAAK1G,QAAQmG,cAAc,CAAC3D,cAAe,IAAKF,MAAO,MAAM,WAAM,SAAKuE,4BAKxE,EAAK7G,QAAQ8G,iBAAgB,SAACC,GAE5B,OADA,EAAKlI,YAAYmI,MAAM,kBAAmBD,GACnCA,KAMT,EAAK/G,QAAQiH,cAAc,CAACzE,cAAe,IAAKF,MAAO,KAAM,IAAI4E,EAAQ,EAAKhU,eAAgB,EAAK0L,aAAc,EAAKC,YAAa,EAAK1L,kB,EAu6E5I,OA/oFkC,OAchC,sBAAW,4BAAa,C,IAAxB,WAA2C,OAAOnY,KAAK4lB,eAAeuG,O,gCAEtE,sBAAW,mCAAoB,C,IAA/B,WAA4D,OAAOnsB,KAAK6lB,sBAAsBsG,O,gCAE9F,sBAAW,6BAAc,C,IAAzB,WAA4C,OAAOnsB,KAAK8lB,gBAAgBqG,O,gCAExE,sBAAW,8BAAe,C,IAA1B,WAAuE,OAAOnsB,KAAK+lB,iBAAiBoG,O,gCAEpG,sBAAW,qCAAsB,C,IAAjC,WAAoD,OAAOnsB,KAAKgmB,wBAAwBmG,O,gCAExF,sBAAW,4CAA6B,C,IAAxC,WAA+E,OAAOnsB,KAAKimB,+BAA+BkG,O,gCAG1H,sBAAW,yBAAU,C,IAArB,WAA0C,OAAOnsB,KAAKkmB,YAAYiG,O,gCAElE,sBAAW,wBAAS,C,IAApB,WAAyC,OAAOnsB,KAAKmmB,WAAWgG,O,gCAEhE,sBAAW,2BAAY,C,IAAvB,WAA0C,OAAOnsB,KAAKomB,cAAc+F,O,gCAEpE,sBAAW,yBAAU,C,IAArB,WAAwC,OAAOnsB,KAAKqmB,YAAY8F,O,gCAEhE,sBAAW,uBAAQ,C,IAAnB,WAAwC,OAAOnsB,KAAKsmB,UAAU6F,O,gCAE9D,sBAAW,4BAAa,C,IAAxB,WAA6C,OAAOnsB,KAAKumB,eAAe4F,O,gCAsMjE,YAAAjsB,QAAP,WACE,YAAMA,QAAO,YAGR,YAAAksB,MAAP,SAAare,GACX,IAAIzK,EAAStD,KAAKkY,eAAe5U,OAC3B+oB,EAAe/oB,EAAOoY,EACtB4Q,EAAehpB,EAAOD,EAe5B,GAbArD,KAAK6jB,YAAYc,MAAM,eAAgB5W,GAGnC/N,KAAKklB,aAAa5iB,OAASyL,EAAKzL,QAC9BtC,KAAKklB,aAAa5iB,OAvZG,SAwZvBtC,KAAKklB,aAAe,IAAInF,YAAY1e,KAAKiR,IAAIvE,EAAKzL,OAxZ3B,UA6Z3BtC,KAAK6kB,iBAAiB0H,aAGlBxe,EAAKzL,OAhakB,OAiazB,IAAK,IAAIxE,EAAI,EAAGA,EAAIiQ,EAAKzL,OAAQxE,GAjaR,OAiaqC,CAC5D,IAAMmQ,EAAMnQ,EAlaW,OAkakBiQ,EAAKzL,OAASxE,EAlahC,OAka6DiQ,EAAKzL,OACnFkqB,EAAuB,iBAATze,EAChB/N,KAAKmlB,eAAe/W,OAAOL,EAAKtH,UAAU3I,EAAGmQ,GAAMjO,KAAKklB,cACxDllB,KAAKolB,aAAahX,OAAOL,EAAKiT,SAASljB,EAAGmQ,GAAMjO,KAAKklB,cACzDllB,KAAKglB,QAAQoH,MAAMpsB,KAAKklB,aAAcsH,OAEnC,CACCA,EAAuB,iBAATze,EAChB/N,KAAKmlB,eAAe/W,OAAOL,EAAM/N,KAAKklB,cACtCllB,KAAKolB,aAAahX,OAAOL,EAAM/N,KAAKklB,cACxCllB,KAAKglB,QAAQoH,MAAMpsB,KAAKklB,aAAcsH,IAGxClpB,EAAStD,KAAKkY,eAAe5U,QAClBoY,IAAM2Q,GAAgB/oB,EAAOD,IAAMipB,GAC5CtsB,KAAKomB,cAAchf,OAIrBpH,KAAK6lB,sBAAsBze,KAAKpH,KAAK6kB,iBAAiB7W,MAAOhO,KAAK6kB,iBAAiB5W,MAG9E,YAAAmZ,MAAP,SAAarZ,EAAmBC,EAAeC,GAC7C,IAAIvD,EACA+hB,EACEnpB,EAAStD,KAAKkY,eAAe5U,OAC7BopB,EAAU1sB,KAAK4kB,gBAAgB8H,QAC/BC,EAAmB3sB,KAAKmY,gBAAgB3K,QAAQmf,iBAChDlsB,EAAOT,KAAKkY,eAAezX,KAC3BmsB,EAAiB5sB,KAAK4jB,aAAaiJ,gBAAgBC,WACnDC,EAAa/sB,KAAK4jB,aAAaoJ,MAAMD,WACrCE,EAAUjtB,KAAK0lB,aACjBwH,EAAY5pB,EAAO6pB,MAAMxuB,IAAI2E,EAAO8pB,MAAQ9pB,EAAOD,GAEvDrD,KAAK6kB,iBAAiBwI,UAAU/pB,EAAOD,GAGnCC,EAAOoY,GAAKzN,EAAMD,EAAQ,GAA0C,IAArCkf,EAAUhnB,SAAS5C,EAAOoY,EAAI,IAC/DwR,EAAUzM,qBAAqBnd,EAAOoY,EAAI,EAAG,EAAG,EAAGuR,EAAQrjB,GAAIqjB,EAAQpjB,GAAIojB,EAAQnjB,UAGrF,IAAK,IAAIqF,EAAMnB,EAAOmB,EAAMlB,IAAOkB,EAAK,CAUtC,GATAzE,EAAOqD,EAAKoB,GAIZsd,EAAUzsB,KAAK+kB,gBAAgBuI,QAAQ5iB,GAKnCA,EAAO,KAAOgiB,EAAS,CACzB,IAAMa,EAAKb,EAAQ7e,OAAOC,aAAapD,IACnC6iB,IACF7iB,EAAO6iB,EAAG/iB,WAAW,IAYzB,GARImiB,GACF3sB,KAAKkmB,YAAY9e,KAAK,EAAAkD,oBAAoBI,IAOvC+hB,IAAWnpB,EAAOoY,EAAvB,CAeA,GAAIpY,EAAOoY,EAAI+Q,EAAU,GAAKhsB,EAG5B,GAAImsB,EAAgB,CAElB,KAAOtpB,EAAOoY,EAAIjb,GAChBysB,EAAUzM,qBAAqBnd,EAAOoY,IAAK,EAAG,EAAGuR,EAAQrjB,GAAIqjB,EAAQpjB,GAAIojB,EAAQnjB,UAEnFxG,EAAOoY,EAAI,EACXpY,EAAOD,IACHC,EAAOD,IAAMC,EAAOkhB,aAAe,GACrClhB,EAAOD,IACPrD,KAAK+lB,iBAAiB3e,KAAKpH,KAAKwtB,kBAAkB,KAE9ClqB,EAAOD,GAAKrD,KAAKkY,eAAe1X,OAClC8C,EAAOD,EAAIrD,KAAKkY,eAAe1X,KAAO,GAIxC8C,EAAO6pB,MAAMxuB,IAAI2E,EAAO8pB,MAAQ9pB,EAAOD,GAAIwB,WAAY,GAGzDqoB,EAAY5pB,EAAO6pB,MAAMxuB,IAAI2E,EAAO8pB,MAAQ9pB,EAAOD,QAGnD,GADAC,EAAOoY,EAAIjb,EAAO,EACF,IAAZgsB,EAGF,SAuBN,GAjBIM,IAEFG,EAAUtM,YAAYtd,EAAOoY,EAAG+Q,EAASnpB,EAAOmqB,YAAYR,GAAUA,GAIjC,IAAjCC,EAAUhnB,SAASzF,EAAO,IAC5BysB,EAAUzM,qBAAqBhgB,EAAO,EAAG,EAAA8I,eAAgB,EAAAD,gBAAiB2jB,EAAQrjB,GAAIqjB,EAAQpjB,GAAIojB,EAAQnjB,WAK9GojB,EAAUzM,qBAAqBnd,EAAOoY,IAAKhR,EAAM+hB,EAASQ,EAAQrjB,GAAIqjB,EAAQpjB,GAAIojB,EAAQnjB,UAKtF2iB,EAAU,EACZ,OAASA,GAEPS,EAAUzM,qBAAqBnd,EAAOoY,IAAK,EAAG,EAAGuR,EAAQrjB,GAAIqjB,EAAQpjB,GAAIojB,EAAQnjB,eApE9EojB,EAAUhnB,SAAS5C,EAAOoY,EAAI,GAMjCwR,EAAUvM,mBAAmBrd,EAAOoY,EAAI,EAAGhR,GAF3CwiB,EAAUvM,mBAAmBrd,EAAOoY,EAAI,EAAGhR,GAwE7CuD,EAAMD,EAAQ,IAChBkf,EAAU3M,SAASjd,EAAOoY,EAAI,EAAG1b,KAAKqlB,WACJ,IAA9BrlB,KAAKqlB,UAAUnf,YAAoBlG,KAAKqlB,UAAU9a,UAAY,MAChEvK,KAAKglB,QAAQ0I,mBAAqB,EACzB1tB,KAAKqlB,UAAUhb,aACxBrK,KAAKglB,QAAQ0I,mBAAqB1tB,KAAKqlB,UAAUpf,WAAWuE,WAAW,GAEvExK,KAAKglB,QAAQ0I,mBAAqB1tB,KAAKqlB,UAAU1b,SAKjDrG,EAAOoY,EAAIjb,GAAQwN,EAAMD,EAAQ,GAAsC,IAAjCkf,EAAUhnB,SAAS5C,EAAOoY,KAAawR,EAAU9M,WAAW9c,EAAOoY,IAC3GwR,EAAUzM,qBAAqBnd,EAAOoY,EAAG,EAAG,EAAGuR,EAAQrjB,GAAIqjB,EAAQpjB,GAAIojB,EAAQnjB,UAGjF9J,KAAK6kB,iBAAiBwI,UAAU/pB,EAAOD,IAMlC,YAAAsqB,cAAP,SAAqB9V,EAAyB+V,GAA9C,WACE,MAAiB,MAAb/V,EAAGyP,OAAkBzP,EAAGwQ,QAAWxQ,EAAG2P,cASnCxnB,KAAKglB,QAAQ2I,cAAc9V,EAAI+V,GAP7B5tB,KAAKglB,QAAQ2I,cAAc9V,GAAI,SAAAkM,GACpC,OAAK3B,EAAoB2B,EAAOA,OAAO,GAAI,EAAK5L,gBAAgB3K,QAAQ0c,gBAGjE0D,EAAS7J,OASf,YAAA8J,cAAP,SAAqBhW,EAAyB+V,GAC5C,OAAO5tB,KAAKglB,QAAQ6I,cAAchW,EAAI,IAAI,EAAAiW,WAAWF,KAMhD,YAAAG,cAAP,SAAqBlW,EAAyB+V,GAC5C,OAAO5tB,KAAKglB,QAAQ+I,cAAclW,EAAI+V,IAMjC,YAAAI,cAAP,SAAqBvH,EAAemH,GAClC,OAAO5tB,KAAKglB,QAAQgJ,cAAcvH,EAAO,IAAI,EAAAuE,WAAW4C,KAWnD,YAAArD,KAAP,WACEvqB,KAAK4lB,eAAexe,QAaf,YAAAojB,SAAP,WAEE,IAAMlnB,EAAStD,KAAKkY,eAAe5U,OAEnCtD,KAAK6kB,iBAAiBwI,UAAU/pB,EAAOD,GACnCrD,KAAKmY,gBAAgB3K,QAAQygB,aAC/B3qB,EAAOoY,EAAI,GAEbpY,EAAOD,IACHC,EAAOD,IAAMC,EAAOkhB,aAAe,GACrClhB,EAAOD,IACPrD,KAAK+lB,iBAAiB3e,KAAKpH,KAAKwtB,mBACvBlqB,EAAOD,GAAKrD,KAAKkY,eAAe1X,OACzC8C,EAAOD,EAAIrD,KAAKkY,eAAe1X,KAAO,GAGpC8C,EAAOoY,GAAK1b,KAAKkY,eAAezX,MAClC6C,EAAOoY,IAET1b,KAAK6kB,iBAAiBwI,UAAU/pB,EAAOD,GAEvCrD,KAAKqmB,YAAYjf,QASZ,YAAAqjB,eAAP,WACEzqB,KAAKkY,eAAe5U,OAAOoY,EAAI,GAc1B,YAAAgP,UAAP,W,MACQpnB,EAAStD,KAAKkY,eAAe5U,OAGnC,IAAKtD,KAAK4jB,aAAaiJ,gBAAgBqB,kBAKrC,OAJAluB,KAAKmuB,uBACD7qB,EAAOoY,EAAI,GACbpY,EAAOoY,KAUX,GAFA1b,KAAKmuB,gBAAgBnuB,KAAKkY,eAAezX,MAErC6C,EAAOoY,EAAI,EACbpY,EAAOoY,SAUP,GAAiB,IAAbpY,EAAOoY,GACJpY,EAAOD,EAAIC,EAAOihB,WAClBjhB,EAAOD,GAAKC,EAAOkhB,eACsB,Q,EAAzClhB,EAAO6pB,MAAMxuB,IAAI2E,EAAO8pB,MAAQ9pB,EAAOD,UAAE,eAAEwB,WAClD,CACEvB,EAAO6pB,MAAMxuB,IAAI2E,EAAO8pB,MAAQ9pB,EAAOD,GAAIwB,WAAY,EACvDvB,EAAOD,IACPC,EAAOoY,EAAI1b,KAAKkY,eAAezX,KAAO,EAKtC,IAAM+D,EAAOlB,EAAO6pB,MAAMxuB,IAAI2E,EAAO8pB,MAAQ9pB,EAAOD,GAChDmB,EAAKyb,SAAS3c,EAAOoY,KAAOlX,EAAK4b,WAAW9c,EAAOoY,IACrDpY,EAAOoY,IAOb1b,KAAKmuB,mBASA,YAAAxD,IAAP,WACE,KAAI3qB,KAAKkY,eAAe5U,OAAOoY,GAAK1b,KAAKkY,eAAezX,MAAxD,CAGA,IAAM2tB,EAAYpuB,KAAKkY,eAAe5U,OAAOoY,EAC7C1b,KAAKkY,eAAe5U,OAAOoY,EAAI1b,KAAKkY,eAAe5U,OAAO+qB,WACtDruB,KAAKmY,gBAAgB3K,QAAQmf,kBAC/B3sB,KAAKmmB,WAAW/e,KAAKpH,KAAKkY,eAAe5U,OAAOoY,EAAI0S,KAWjD,YAAAxD,SAAP,WACE5qB,KAAK4kB,gBAAgB4G,UAAU,IAU1B,YAAAX,QAAP,WACE7qB,KAAK4kB,gBAAgB4G,UAAU,IAMzB,YAAA2C,gBAAR,SAAwBG,QAAA,IAAAA,MAAiBtuB,KAAKkY,eAAezX,KAAO,GAClET,KAAKkY,eAAe5U,OAAOoY,EAAIra,KAAKiR,IAAIgc,EAAQjtB,KAAKC,IAAI,EAAGtB,KAAKkY,eAAe5U,OAAOoY,IACvF1b,KAAKkY,eAAe5U,OAAOD,EAAIrD,KAAK4jB,aAAaiJ,gBAAgB0B,OAC7DltB,KAAKiR,IAAItS,KAAKkY,eAAe5U,OAAOkhB,aAAcnjB,KAAKC,IAAItB,KAAKkY,eAAe5U,OAAOihB,UAAWvkB,KAAKkY,eAAe5U,OAAOD,IAC5HhC,KAAKiR,IAAItS,KAAKkY,eAAe1X,KAAO,EAAGa,KAAKC,IAAI,EAAGtB,KAAKkY,eAAe5U,OAAOD,IAClFrD,KAAK6kB,iBAAiBwI,UAAUrtB,KAAKkY,eAAe5U,OAAOD,IAMrD,YAAAmrB,WAAR,SAAmB9S,EAAWrY,GAC5BrD,KAAK6kB,iBAAiBwI,UAAUrtB,KAAKkY,eAAe5U,OAAOD,GACvDrD,KAAK4jB,aAAaiJ,gBAAgB0B,QACpCvuB,KAAKkY,eAAe5U,OAAOoY,EAAIA,EAC/B1b,KAAKkY,eAAe5U,OAAOD,EAAIrD,KAAKkY,eAAe5U,OAAOihB,UAAYlhB,IAEtErD,KAAKkY,eAAe5U,OAAOoY,EAAIA,EAC/B1b,KAAKkY,eAAe5U,OAAOD,EAAIA,GAEjCrD,KAAKmuB,kBACLnuB,KAAK6kB,iBAAiBwI,UAAUrtB,KAAKkY,eAAe5U,OAAOD,IAMrD,YAAAorB,YAAR,SAAoB/S,EAAWrY,GAG7BrD,KAAKmuB,kBACLnuB,KAAKwuB,WAAWxuB,KAAKkY,eAAe5U,OAAOoY,EAAIA,EAAG1b,KAAKkY,eAAe5U,OAAOD,EAAIA,IAU5E,YAAAqkB,SAAP,SAAgB3D,GAEd,IAAM2K,EAAY1uB,KAAKkY,eAAe5U,OAAOD,EAAIrD,KAAKkY,eAAe5U,OAAOihB,UACxEmK,GAAa,EACf1uB,KAAKyuB,YAAY,GAAIptB,KAAKiR,IAAIoc,EAAW3K,EAAOA,OAAO,IAAM,IAE7D/jB,KAAKyuB,YAAY,IAAK1K,EAAOA,OAAO,IAAM,KAWvC,YAAA6D,WAAP,SAAkB7D,GAEhB,IAAM4K,EAAe3uB,KAAKkY,eAAe5U,OAAOkhB,aAAexkB,KAAKkY,eAAe5U,OAAOD,EACtFsrB,GAAgB,EAClB3uB,KAAKyuB,YAAY,EAAGptB,KAAKiR,IAAIqc,EAAc5K,EAAOA,OAAO,IAAM,IAE/D/jB,KAAKyuB,YAAY,EAAG1K,EAAOA,OAAO,IAAM,IAUrC,YAAA8D,cAAP,SAAqB9D,GACnB/jB,KAAKyuB,YAAY1K,EAAOA,OAAO,IAAM,EAAG,IASnC,YAAA+D,eAAP,SAAsB/D,GACpB/jB,KAAKyuB,cAAc1K,EAAOA,OAAO,IAAM,GAAI,IAWtC,YAAAgE,eAAP,SAAsBhE,GACpB/jB,KAAK4nB,WAAW7D,GAChB/jB,KAAKkY,eAAe5U,OAAOoY,EAAI,GAW1B,YAAAsM,oBAAP,SAA2BjE,GACzB/jB,KAAK0nB,SAAS3D,GACd/jB,KAAKkY,eAAe5U,OAAOoY,EAAI,GAS1B,YAAAuM,mBAAP,SAA0BlE,GACxB/jB,KAAKwuB,YAAYzK,EAAOA,OAAO,IAAM,GAAK,EAAG/jB,KAAKkY,eAAe5U,OAAOD,IAYnE,YAAA6kB,eAAP,SAAsBnE,GACpB/jB,KAAKwuB,WAEFzK,EAAOzhB,QAAU,GAAMyhB,EAAOA,OAAO,IAAM,GAAK,EAAI,GAEpDA,EAAOA,OAAO,IAAM,GAAK,IAUvB,YAAA+E,gBAAP,SAAuB/E,GACrB/jB,KAAKwuB,YAAYzK,EAAOA,OAAO,IAAM,GAAK,EAAG/jB,KAAKkY,eAAe5U,OAAOD,IASnE,YAAA0lB,kBAAP,SAAyBhF,GACvB/jB,KAAKyuB,YAAY1K,EAAOA,OAAO,IAAM,EAAG,IASnC,YAAAoF,gBAAP,SAAuBpF,GACrB/jB,KAAKwuB,WAAWxuB,KAAKkY,eAAe5U,OAAOoY,GAAIqI,EAAOA,OAAO,IAAM,GAAK,IAUnE,YAAAqF,kBAAP,SAAyBrF,GACvB/jB,KAAKyuB,YAAY,EAAG1K,EAAOA,OAAO,IAAM,IAWnC,YAAAsF,WAAP,SAAkBtF,GAChB/jB,KAAKkoB,eAAenE,IAcf,YAAAuF,SAAP,SAAgBvF,GACd,IAAM6K,EAAQ7K,EAAOA,OAAO,GACd,IAAV6K,SACK5uB,KAAKkY,eAAe5U,OAAOurB,KAAK7uB,KAAKkY,eAAe5U,OAAOoY,GAC/C,IAAVkT,IACT5uB,KAAKkY,eAAe5U,OAAOurB,KAAO,KAU/B,YAAA1G,iBAAP,SAAwBpE,GACtB,KAAI/jB,KAAKkY,eAAe5U,OAAOoY,GAAK1b,KAAKkY,eAAezX,MAIxD,IADA,IAAImuB,EAAQ7K,EAAOA,OAAO,IAAM,EACzB6K,KACL5uB,KAAKkY,eAAe5U,OAAOoY,EAAI1b,KAAKkY,eAAe5U,OAAO+qB,YASvD,YAAAxF,kBAAP,SAAyB9E,GACvB,KAAI/jB,KAAKkY,eAAe5U,OAAOoY,GAAK1b,KAAKkY,eAAezX,MAQxD,IALA,IAAImuB,EAAQ7K,EAAOA,OAAO,IAAM,EAG1BzgB,EAAStD,KAAKkY,eAAe5U,OAE5BsrB,KACLtrB,EAAOoY,EAAIpY,EAAOwrB,YAYd,YAAAC,mBAAR,SAA2B1rB,EAAW2K,EAAeC,EAAa+gB,QAAA,IAAAA,OAAA,GAChE,IAAMxqB,EAAOxE,KAAKkY,eAAe5U,OAAO6pB,MAAMxuB,IAAIqB,KAAKkY,eAAe5U,OAAO8pB,MAAQ/pB,GACrFmB,EAAKuc,aACH/S,EACAC,EACAjO,KAAKkY,eAAe5U,OAAOmqB,YAAYztB,KAAKwtB,kBAC5CxtB,KAAKwtB,kBAEHwB,IACFxqB,EAAKK,WAAY,IASb,YAAAoqB,iBAAR,SAAyB5rB,GACvB,IAAMmB,EAAOxE,KAAKkY,eAAe5U,OAAO6pB,MAAMxuB,IAAIqB,KAAKkY,eAAe5U,OAAO8pB,MAAQ/pB,GACrFmB,EAAKoK,KAAK5O,KAAKkY,eAAe5U,OAAOmqB,YAAYztB,KAAKwtB,mBACtDhpB,EAAKK,WAAY,GA2BZ,YAAAujB,eAAP,SAAsBrE,GAEpB,IAAImL,EACJ,OAFAlvB,KAAKmuB,kBAEGpK,EAAOA,OAAO,IACpB,KAAK,EAIH,IAHAmL,EAAIlvB,KAAKkY,eAAe5U,OAAOD,EAC/BrD,KAAK6kB,iBAAiBwI,UAAU6B,GAChClvB,KAAK+uB,mBAAmBG,IAAKlvB,KAAKkY,eAAe5U,OAAOoY,EAAG1b,KAAKkY,eAAezX,KAAuC,IAAjCT,KAAKkY,eAAe5U,OAAOoY,GACzGwT,EAAIlvB,KAAKkY,eAAe1X,KAAM0uB,IACnClvB,KAAKivB,iBAAiBC,GAExBlvB,KAAK6kB,iBAAiBwI,UAAU6B,GAChC,MACF,KAAK,EASH,IARAA,EAAIlvB,KAAKkY,eAAe5U,OAAOD,EAC/BrD,KAAK6kB,iBAAiBwI,UAAU6B,GAEhClvB,KAAK+uB,mBAAmBG,EAAG,EAAGlvB,KAAKkY,eAAe5U,OAAOoY,EAAI,GAAG,GAC5D1b,KAAKkY,eAAe5U,OAAOoY,EAAI,GAAK1b,KAAKkY,eAAezX,OAE1DT,KAAKkY,eAAe5U,OAAO6pB,MAAMxuB,IAAIuwB,EAAI,GAAIrqB,WAAY,GAEpDqqB,KACLlvB,KAAKivB,iBAAiBC,GAExBlvB,KAAK6kB,iBAAiBwI,UAAU,GAChC,MACF,KAAK,EAGH,IAFA6B,EAAIlvB,KAAKkY,eAAe1X,KACxBR,KAAK6kB,iBAAiBwI,UAAU6B,EAAI,GAC7BA,KACLlvB,KAAKivB,iBAAiBC,GAExBlvB,KAAK6kB,iBAAiBwI,UAAU,GAChC,MACF,KAAK,EAEH,IAAM8B,EAAiBnvB,KAAKkY,eAAe5U,OAAO6pB,MAAM7qB,OAAStC,KAAKkY,eAAe1X,KACjF2uB,EAAiB,IACnBnvB,KAAKkY,eAAe5U,OAAO6pB,MAAMiC,UAAUD,GAC3CnvB,KAAKkY,eAAe5U,OAAO8pB,MAAQ/rB,KAAKC,IAAItB,KAAKkY,eAAe5U,OAAO8pB,MAAQ+B,EAAgB,GAC/FnvB,KAAKkY,eAAe5U,OAAO+rB,MAAQhuB,KAAKC,IAAItB,KAAKkY,eAAe5U,OAAO+rB,MAAQF,EAAgB,GAE/FnvB,KAAKsmB,UAAUlf,KAAK,MA4BrB,YAAAkhB,YAAP,SAAmBvE,GAEjB,OADA/jB,KAAKmuB,kBACGpK,EAAOA,OAAO,IACpB,KAAK,EACH/jB,KAAK+uB,mBAAmB/uB,KAAKkY,eAAe5U,OAAOD,EAAGrD,KAAKkY,eAAe5U,OAAOoY,EAAG1b,KAAKkY,eAAezX,MACxG,MACF,KAAK,EACHT,KAAK+uB,mBAAmB/uB,KAAKkY,eAAe5U,OAAOD,EAAG,EAAGrD,KAAKkY,eAAe5U,OAAOoY,EAAI,GACxF,MACF,KAAK,EACH1b,KAAK+uB,mBAAmB/uB,KAAKkY,eAAe5U,OAAOD,EAAG,EAAGrD,KAAKkY,eAAezX,MAGjFT,KAAK6kB,iBAAiBwI,UAAUrtB,KAAKkY,eAAe5U,OAAOD,IAYtD,YAAAklB,YAAP,SAAmBxE,GACjB/jB,KAAKmuB,kBACL,IAAIS,EAAQ7K,EAAOA,OAAO,IAAM,EAG1BzgB,EAAStD,KAAKkY,eAAe5U,OAEnC,KAAIA,EAAOD,EAAIC,EAAOkhB,cAAgBlhB,EAAOD,EAAIC,EAAOihB,WAAxD,CAQA,IAJA,IAAM7gB,EAAcJ,EAAO8pB,MAAQ9pB,EAAOD,EAEpCisB,EAAyBtvB,KAAKkY,eAAe1X,KAAO,EAAI8C,EAAOkhB,aAC/D+K,EAAuBvvB,KAAKkY,eAAe1X,KAAO,EAAI8C,EAAO8pB,MAAQkC,EAAyB,EAC7FV,KAGLtrB,EAAO6pB,MAAMhmB,OAAOooB,EAAuB,EAAG,GAC9CjsB,EAAO6pB,MAAMhmB,OAAOzD,EAAK,EAAGJ,EAAOksB,aAAaxvB,KAAKwtB,mBAGvDxtB,KAAK6kB,iBAAiB4K,eAAensB,EAAOD,EAAGC,EAAOkhB,cACtDlhB,EAAOoY,EAAI,IAYN,YAAA8M,YAAP,SAAmBzE,GACjB/jB,KAAKmuB,kBACL,IAAIS,EAAQ7K,EAAOA,OAAO,IAAM,EAG1BzgB,EAAStD,KAAKkY,eAAe5U,OAEnC,KAAIA,EAAOD,EAAIC,EAAOkhB,cAAgBlhB,EAAOD,EAAIC,EAAOihB,WAAxD,CAIA,IAEI2K,EAFExrB,EAAcJ,EAAO8pB,MAAQ9pB,EAAOD,EAK1C,IAFA6rB,EAAIlvB,KAAKkY,eAAe1X,KAAO,EAAI8C,EAAOkhB,aAC1C0K,EAAIlvB,KAAKkY,eAAe1X,KAAO,EAAI8C,EAAO8pB,MAAQ8B,EAC3CN,KAGLtrB,EAAO6pB,MAAMhmB,OAAOzD,EAAK,GACzBJ,EAAO6pB,MAAMhmB,OAAO+nB,EAAG,EAAG5rB,EAAOksB,aAAaxvB,KAAKwtB,mBAGrDxtB,KAAK6kB,iBAAiB4K,eAAensB,EAAOD,EAAGC,EAAOkhB,cACtDlhB,EAAOoY,EAAI,IAcN,YAAA6L,YAAP,SAAmBxD,GACjB/jB,KAAKmuB,kBACL,IAAM3pB,EAAOxE,KAAKkY,eAAe5U,OAAO6pB,MAAMxuB,IAAIqB,KAAKkY,eAAe5U,OAAO8pB,MAAQptB,KAAKkY,eAAe5U,OAAOD,GAC5GmB,IACFA,EAAKoc,YACH5gB,KAAKkY,eAAe5U,OAAOoY,EAC3BqI,EAAOA,OAAO,IAAM,EACpB/jB,KAAKkY,eAAe5U,OAAOmqB,YAAYztB,KAAKwtB,kBAC5CxtB,KAAKwtB,kBAEPxtB,KAAK6kB,iBAAiBwI,UAAUrtB,KAAKkY,eAAe5U,OAAOD,KAexD,YAAAolB,YAAP,SAAmB1E,GACjB/jB,KAAKmuB,kBACL,IAAM3pB,EAAOxE,KAAKkY,eAAe5U,OAAO6pB,MAAMxuB,IAAIqB,KAAKkY,eAAe5U,OAAO8pB,MAAQptB,KAAKkY,eAAe5U,OAAOD,GAC5GmB,IACFA,EAAKsc,YACH9gB,KAAKkY,eAAe5U,OAAOoY,EAC3BqI,EAAOA,OAAO,IAAM,EACpB/jB,KAAKkY,eAAe5U,OAAOmqB,YAAYztB,KAAKwtB,kBAC5CxtB,KAAKwtB,kBAEPxtB,KAAK6kB,iBAAiBwI,UAAUrtB,KAAKkY,eAAe5U,OAAOD,KAYxD,YAAAqlB,SAAP,SAAgB3E,GAMd,IALA,IAAI6K,EAAQ7K,EAAOA,OAAO,IAAM,EAG1BzgB,EAAStD,KAAKkY,eAAe5U,OAE5BsrB,KACLtrB,EAAO6pB,MAAMhmB,OAAO7D,EAAO8pB,MAAQ9pB,EAAOihB,UAAW,GACrDjhB,EAAO6pB,MAAMhmB,OAAO7D,EAAO8pB,MAAQ9pB,EAAOkhB,aAAc,EAAGlhB,EAAOksB,aAAaxvB,KAAKwtB,mBAEtFxtB,KAAK6kB,iBAAiB4K,eAAensB,EAAOihB,UAAWjhB,EAAOkhB,eAQzD,YAAAmE,WAAP,SAAkB5E,GAMhB,IALA,IAAI6K,EAAQ7K,EAAOA,OAAO,IAAM,EAG1BzgB,EAAStD,KAAKkY,eAAe5U,OAE5BsrB,KACLtrB,EAAO6pB,MAAMhmB,OAAO7D,EAAO8pB,MAAQ9pB,EAAOkhB,aAAc,GACxDlhB,EAAO6pB,MAAMhmB,OAAO7D,EAAO8pB,MAAQ9pB,EAAOihB,UAAW,EAAGjhB,EAAOksB,aAAa,EAAA/P,oBAE9Ezf,KAAK6kB,iBAAiB4K,eAAensB,EAAOihB,UAAWjhB,EAAOkhB,eAqBzD,YAAAiD,WAAP,SAAkB1D,GAChB,IAAMzgB,EAAStD,KAAKkY,eAAe5U,OACnC,KAAIA,EAAOD,EAAIC,EAAOkhB,cAAgBlhB,EAAOD,EAAIC,EAAOihB,WAAxD,CAIA,IADA,IAAMqK,EAAQ7K,EAAOA,OAAO,IAAM,EACzB1gB,EAAIC,EAAOihB,UAAWlhB,GAAKC,EAAOkhB,eAAgBnhB,EAAG,CAC5D,IAAMmB,EAAOlB,EAAO6pB,MAAMxuB,IAAI2E,EAAO8pB,MAAQ/pB,GAC7CmB,EAAKsc,YAAY,EAAG8N,EAAOtrB,EAAOmqB,YAAYztB,KAAKwtB,kBAAmBxtB,KAAKwtB,kBAC3EhpB,EAAKK,WAAY,EAEnB7E,KAAK6kB,iBAAiB4K,eAAensB,EAAOihB,UAAWjhB,EAAOkhB,gBAsBzD,YAAAmD,YAAP,SAAmB5D,GACjB,IAAMzgB,EAAStD,KAAKkY,eAAe5U,OACnC,KAAIA,EAAOD,EAAIC,EAAOkhB,cAAgBlhB,EAAOD,EAAIC,EAAOihB,WAAxD,CAIA,IADA,IAAMqK,EAAQ7K,EAAOA,OAAO,IAAM,EACzB1gB,EAAIC,EAAOihB,UAAWlhB,GAAKC,EAAOkhB,eAAgBnhB,EAAG,CAC5D,IAAMmB,EAAOlB,EAAO6pB,MAAMxuB,IAAI2E,EAAO8pB,MAAQ/pB,GAC7CmB,EAAKoc,YAAY,EAAGgO,EAAOtrB,EAAOmqB,YAAYztB,KAAKwtB,kBAAmBxtB,KAAKwtB,kBAC3EhpB,EAAKK,WAAY,EAEnB7E,KAAK6kB,iBAAiB4K,eAAensB,EAAOihB,UAAWjhB,EAAOkhB,gBAYzD,YAAA4F,cAAP,SAAqBrG,GACnB,IAAMzgB,EAAStD,KAAKkY,eAAe5U,OACnC,KAAIA,EAAOD,EAAIC,EAAOkhB,cAAgBlhB,EAAOD,EAAIC,EAAOihB,WAAxD,CAIA,IADA,IAAMqK,EAAQ7K,EAAOA,OAAO,IAAM,EACzB1gB,EAAIC,EAAOihB,UAAWlhB,GAAKC,EAAOkhB,eAAgBnhB,EAAG,CAC5D,IAAMmB,EAAOxE,KAAKkY,eAAe5U,OAAO6pB,MAAMxuB,IAAI2E,EAAO8pB,MAAQ/pB,GACjEmB,EAAKoc,YAAYtd,EAAOoY,EAAGkT,EAAOtrB,EAAOmqB,YAAYztB,KAAKwtB,kBAAmBxtB,KAAKwtB,kBAClFhpB,EAAKK,WAAY,EAEnB7E,KAAK6kB,iBAAiB4K,eAAensB,EAAOihB,UAAWjhB,EAAOkhB,gBAYzD,YAAA6F,cAAP,SAAqBtG,GACnB,IAAMzgB,EAAStD,KAAKkY,eAAe5U,OACnC,KAAIA,EAAOD,EAAIC,EAAOkhB,cAAgBlhB,EAAOD,EAAIC,EAAOihB,WAAxD,CAIA,IADA,IAAMqK,EAAQ7K,EAAOA,OAAO,IAAM,EACzB1gB,EAAIC,EAAOihB,UAAWlhB,GAAKC,EAAOkhB,eAAgBnhB,EAAG,CAC5D,IAAMmB,EAAOlB,EAAO6pB,MAAMxuB,IAAI2E,EAAO8pB,MAAQ/pB,GAC7CmB,EAAKsc,YAAYxd,EAAOoY,EAAGkT,EAAOtrB,EAAOmqB,YAAYztB,KAAKwtB,kBAAmBxtB,KAAKwtB,kBAClFhpB,EAAKK,WAAY,EAEnB7E,KAAK6kB,iBAAiB4K,eAAensB,EAAOihB,UAAWjhB,EAAOkhB,gBAWzD,YAAAoE,WAAP,SAAkB7E,GAChB/jB,KAAKmuB,kBACL,IAAM3pB,EAAOxE,KAAKkY,eAAe5U,OAAO6pB,MAAMxuB,IAAIqB,KAAKkY,eAAe5U,OAAO8pB,MAAQptB,KAAKkY,eAAe5U,OAAOD,GAC5GmB,IACFA,EAAKuc,aACH/gB,KAAKkY,eAAe5U,OAAOoY,EAC3B1b,KAAKkY,eAAe5U,OAAOoY,GAAKqI,EAAOA,OAAO,IAAM,GACpD/jB,KAAKkY,eAAe5U,OAAOmqB,YAAYztB,KAAKwtB,kBAC5CxtB,KAAKwtB,kBAEPxtB,KAAK6kB,iBAAiBwI,UAAUrtB,KAAKkY,eAAe5U,OAAOD,KA+BxD,YAAA2lB,yBAAP,SAAgCjF,GAC9B,GAAK/jB,KAAKglB,QAAQ0I,mBAAlB,CAMA,IAFA,IAAMprB,EAASyhB,EAAOA,OAAO,IAAM,EAC7BhW,EAAO,IAAIgS,YAAYzd,GACpBxE,EAAI,EAAGA,EAAIwE,IAAUxE,EAC5BiQ,EAAKjQ,GAAKkC,KAAKglB,QAAQ0I,mBAEzB1tB,KAAKonB,MAAMrZ,EAAM,EAAGA,EAAKzL,UA4BpB,YAAA2mB,4BAAP,SAAmClF,GAC7BA,EAAOA,OAAO,GAAK,IAGnB/jB,KAAK0vB,IAAI,UAAY1vB,KAAK0vB,IAAI,iBAAmB1vB,KAAK0vB,IAAI,UAC5D1vB,KAAK4jB,aAAaS,iBAAiB,EAAA7Q,GAAG4B,IAAM,UACnCpV,KAAK0vB,IAAI,UAClB1vB,KAAK4jB,aAAaS,iBAAiB,EAAA7Q,GAAG4B,IAAM,UA4BzC,YAAA8T,8BAAP,SAAqCnF,GAC/BA,EAAOA,OAAO,GAAK,IAMnB/jB,KAAK0vB,IAAI,SACX1vB,KAAK4jB,aAAaS,iBAAiB,EAAA7Q,GAAG4B,IAAM,cACnCpV,KAAK0vB,IAAI,gBAClB1vB,KAAK4jB,aAAaS,iBAAiB,EAAA7Q,GAAG4B,IAAM,cACnCpV,KAAK0vB,IAAI,SAGlB1vB,KAAK4jB,aAAaS,iBAAiBN,EAAOA,OAAO,GAAK,KAC7C/jB,KAAK0vB,IAAI,WAClB1vB,KAAK4jB,aAAaS,iBAAiB,EAAA7Q,GAAG4B,IAAM,mBAQxC,YAAAsa,IAAR,SAAYvtB,GACV,OAAsE,KAA9DnC,KAAKmY,gBAAgB3K,QAAQmiB,SAAW,IAAIlrB,QAAQtC,IAoBvD,YAAAonB,QAAP,SAAexF,GACb,IAAK,IAAIjmB,EAAI,EAAGA,EAAIimB,EAAOzhB,OAAQxE,IACjC,OAAQimB,EAAOA,OAAOjmB,IACpB,KAAK,EACHkC,KAAK4jB,aAAaoJ,MAAMD,YAAa,IA0HtC,YAAAvD,eAAP,SAAsBzF,GACpB,IAAK,IAAIjmB,EAAI,EAAGA,EAAIimB,EAAOzhB,OAAQxE,IACjC,OAAQimB,EAAOA,OAAOjmB,IACpB,KAAK,EACHkC,KAAK4jB,aAAaiJ,gBAAgB+C,uBAAwB,EAC1D,MACF,KAAK,EACH5vB,KAAK4kB,gBAAgBiL,YAAY,EAAG,EAAAC,iBACpC9vB,KAAK4kB,gBAAgBiL,YAAY,EAAG,EAAAC,iBACpC9vB,KAAK4kB,gBAAgBiL,YAAY,EAAG,EAAAC,iBACpC9vB,KAAK4kB,gBAAgBiL,YAAY,EAAG,EAAAC,iBAEpC,MACF,KAAK,EAMC9vB,KAAKmY,gBAAgB3K,QAAQ0c,cAAc5H,cAC7CtiB,KAAKkY,eAAetX,OAAO,IAAKZ,KAAKkY,eAAe1X,MACpDR,KAAK8lB,gBAAgB1e,QAEvB,MACF,KAAK,EACHpH,KAAK4jB,aAAaiJ,gBAAgB0B,QAAS,EAC3CvuB,KAAKwuB,WAAW,EAAG,GACnB,MACF,KAAK,EACHxuB,KAAK4jB,aAAaiJ,gBAAgBC,YAAa,EAC/C,MACF,KAAK,GAEH,MACF,KAAK,GACH9sB,KAAK4jB,aAAaiJ,gBAAgBqB,mBAAoB,EACtD,MACF,KAAK,GACHluB,KAAK6jB,YAAYc,MAAM,6CACvB3kB,KAAK4jB,aAAaiJ,gBAAgBkD,mBAAoB,EACtD/vB,KAAKgmB,wBAAwB5e,OAC7B,MACF,KAAK,EAEHpH,KAAK8kB,kBAAkBkL,eAAiB,MACxC,MACF,KAAK,IAEHhwB,KAAK8kB,kBAAkBkL,eAAiB,QACxC,MACF,KAAK,KACHhwB,KAAK8kB,kBAAkBkL,eAAiB,OACxC,MACF,KAAK,KAGHhwB,KAAK8kB,kBAAkBkL,eAAiB,MACxC,MACF,KAAK,KAGHhwB,KAAK4jB,aAAaiJ,gBAAgBoD,WAAY,EAC9C,MACF,KAAK,KACHjwB,KAAK6jB,YAAYc,MAAM,yCACvB,MACF,KAAK,KACH3kB,KAAK8kB,kBAAkBoL,eAAiB,MACxC,MACF,KAAK,KACHlwB,KAAK6jB,YAAYc,MAAM,yCACvB,MACF,KAAK,GACH3kB,KAAK4jB,aAAauM,gBAAiB,EACnC,MACF,KAAK,KACHnwB,KAAKiqB,aACL,MACF,KAAK,KACHjqB,KAAKiqB,aAEP,KAAK,GACL,KAAK,KACHjqB,KAAKkY,eAAekY,QAAQC,kBAAkBrwB,KAAKwtB,kBACnDxtB,KAAK4jB,aAAa0M,qBAAsB,EACxCtwB,KAAK6lB,sBAAsBze,KAAK,EAAGpH,KAAKkY,eAAe1X,KAAO,GAC9DR,KAAKgmB,wBAAwB5e,OAC7B,MACF,KAAK,KACHpH,KAAK4jB,aAAaiJ,gBAAgB0D,oBAAqB,IA2BxD,YAAA9G,UAAP,SAAiB1F,GACf,IAAK,IAAIjmB,EAAI,EAAGA,EAAIimB,EAAOzhB,OAAQxE,IACjC,OAAQimB,EAAOA,OAAOjmB,IACpB,KAAK,EACHkC,KAAK4jB,aAAaoJ,MAAMD,YAAa,IAsHtC,YAAArD,iBAAP,SAAwB3F,GACtB,IAAK,IAAIjmB,EAAI,EAAGA,EAAIimB,EAAOzhB,OAAQxE,IACjC,OAAQimB,EAAOA,OAAOjmB,IACpB,KAAK,EACHkC,KAAK4jB,aAAaiJ,gBAAgB+C,uBAAwB,EAC1D,MACF,KAAK,EAMC5vB,KAAKmY,gBAAgB3K,QAAQ0c,cAAc5H,cAC7CtiB,KAAKkY,eAAetX,OAAO,GAAIZ,KAAKkY,eAAe1X,MACnDR,KAAK8lB,gBAAgB1e,QAEvB,MACF,KAAK,EACHpH,KAAK4jB,aAAaiJ,gBAAgB0B,QAAS,EAC3CvuB,KAAKwuB,WAAW,EAAG,GACnB,MACF,KAAK,EACHxuB,KAAK4jB,aAAaiJ,gBAAgBC,YAAa,EAC/C,MACF,KAAK,GAEH,MACF,KAAK,GACH9sB,KAAK4jB,aAAaiJ,gBAAgBqB,mBAAoB,EACtD,MACF,KAAK,GACHluB,KAAK6jB,YAAYc,MAAM,oCACvB3kB,KAAK4jB,aAAaiJ,gBAAgBkD,mBAAoB,EACtD/vB,KAAKgmB,wBAAwB5e,OAC7B,MACF,KAAK,EACL,KAAK,IACL,KAAK,KACL,KAAK,KACHpH,KAAK8kB,kBAAkBkL,eAAiB,OACxC,MACF,KAAK,KACHhwB,KAAK4jB,aAAaiJ,gBAAgBoD,WAAY,EAC9C,MACF,KAAK,KACHjwB,KAAK6jB,YAAYc,MAAM,yCACvB,MACF,KAAK,KACH3kB,KAAK8kB,kBAAkBoL,eAAiB,UACxC,MACF,KAAK,KACHlwB,KAAK6jB,YAAYc,MAAM,yCACvB,MACF,KAAK,GACH3kB,KAAK4jB,aAAauM,gBAAiB,EACnC,MACF,KAAK,KACHnwB,KAAKmqB,gBACL,MACF,KAAK,KAEL,KAAK,GACL,KAAK,KAEHnqB,KAAKkY,eAAekY,QAAQI,uBACH,OAArBzM,EAAOA,OAAOjmB,IAChBkC,KAAKmqB,gBAEPnqB,KAAK4jB,aAAa0M,qBAAsB,EACxCtwB,KAAK6lB,sBAAsBze,KAAK,EAAGpH,KAAKkY,eAAe1X,KAAO,GAC9DR,KAAKgmB,wBAAwB5e,OAC7B,MACF,KAAK,KACHpH,KAAK4jB,aAAaiJ,gBAAgB0D,oBAAqB,IASvD,YAAAE,iBAAR,SAAyBjgB,EAAevR,EAAcyxB,EAAYC,EAAYC,GAS5E,OARa,IAAT3xB,GACFuR,GAAS,SACTA,IAAS,SACTA,GAAS,EAAA3F,cAAcQ,aAAa,CAACqlB,EAAIC,EAAIC,KAC3B,IAAT3xB,IACTuR,IAAS,SACTA,GAAS,SAA2B,IAALkgB,GAE1BlgB,GAOD,YAAAqgB,cAAR,SAAsB9M,EAAiB5U,EAAa2hB,GAKlD,IAAMC,EAAO,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAG1BC,EAAS,EAGTC,EAAU,EAEd,EAAG,CAED,GADAF,EAAKE,EAAUD,GAAUjN,EAAOA,OAAO5U,EAAM8hB,GACzClN,EAAOmN,aAAa/hB,EAAM8hB,GAAU,CACtC,IAAME,EAAYpN,EAAOqN,aAAajiB,EAAM8hB,GACxCnzB,EAAI,EACR,GACkB,IAAZizB,EAAK,KACPC,EAAS,GAEXD,EAAKE,EAAUnzB,EAAI,EAAIkzB,GAAUG,EAAUrzB,WAClCA,EAAIqzB,EAAU7uB,QAAUxE,EAAImzB,EAAU,EAAID,EAASD,EAAKzuB,QACnE,MAGF,GAAiB,IAAZyuB,EAAK,IAAYE,EAAUD,GAAU,GACtB,IAAZD,EAAK,IAAYE,EAAUD,GAAU,EAC3C,MAGED,EAAK,KACPC,EAAS,WAEFC,EAAU9hB,EAAM4U,EAAOzhB,QAAU2uB,EAAUD,EAASD,EAAKzuB,QAGpE,IAASxE,EAAI,EAAGA,EAAIizB,EAAKzuB,SAAUxE,GAChB,IAAbizB,EAAKjzB,KACPizB,EAAKjzB,GAAK,GAKd,OAAQizB,EAAK,IACX,KAAK,GACHD,EAAKlnB,GAAK5J,KAAKywB,iBAAiBK,EAAKlnB,GAAImnB,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzE,MACF,KAAK,GACHD,EAAKjnB,GAAK7J,KAAKywB,iBAAiBK,EAAKjnB,GAAIknB,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzE,MACF,KAAK,GACHD,EAAKhnB,SAAWgnB,EAAKhnB,SAASwB,QAC9BwlB,EAAKhnB,SAASgD,eAAiB9M,KAAKywB,iBAAiBK,EAAKhnB,SAASgD,eAAgBikB,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAGvH,OAAOE,GAYD,YAAAI,kBAAR,SAA0BjY,EAAe0X,GAGvCA,EAAKhnB,SAAWgnB,EAAKhnB,SAASwB,WAGxB8N,GAASA,EAAQ,KACrBA,EAAQ,GAEV0X,EAAKhnB,SAASsD,eAAiBgM,EAC/B0X,EAAKlnB,IAAM,UAGG,IAAVwP,IACF0X,EAAKlnB,KAAM,WAIbknB,EAAKnkB,kBAoFA,YAAAgd,eAAP,SAAsB5F,GAEpB,GAAsB,IAAlBA,EAAOzhB,QAAqC,IAArByhB,EAAOA,OAAO,GAGvC,OAFA/jB,KAAK0lB,aAAa9b,GAAK,EAAA6V,kBAAkB7V,QACzC5J,KAAK0lB,aAAa7b,GAAK,EAAA4V,kBAAkB5V,IAQ3C,IAJA,IACIjK,EADE7B,EAAIgmB,EAAOzhB,OAEXwuB,EAAO9wB,KAAK0lB,aAET5nB,EAAI,EAAGA,EAAIC,EAAGD,KACrB8B,EAAImkB,EAAOA,OAAOjmB,KACT,IAAM8B,GAAK,IAElBkxB,EAAKlnB,KAAM,SACXknB,EAAKlnB,IAAM,SAAqBhK,EAAI,IAC3BA,GAAK,IAAMA,GAAK,IAEzBkxB,EAAKjnB,KAAM,SACXinB,EAAKjnB,IAAM,SAAqBjK,EAAI,IAC3BA,GAAK,IAAMA,GAAK,IAEzBkxB,EAAKlnB,KAAM,SACXknB,EAAKlnB,IAAM,SAAqBhK,EAAI,IAC3BA,GAAK,KAAOA,GAAK,KAE1BkxB,EAAKjnB,KAAM,SACXinB,EAAKjnB,IAAM,SAAqBjK,EAAI,KACrB,IAANA,GAETkxB,EAAKlnB,GAAK,EAAA6V,kBAAkB7V,GAC5BknB,EAAKjnB,GAAK,EAAA4V,kBAAkB5V,IACb,IAANjK,EAETkxB,EAAKlnB,IAAM,UACI,IAANhK,EAETkxB,EAAKjnB,IAAM,SACI,IAANjK,GAETkxB,EAAKlnB,IAAM,UACX5J,KAAKqxB,kBAAkBtN,EAAOmN,aAAapzB,GAAKimB,EAAOqN,aAAatzB,GAAI,GAAK,EAAuBgzB,IACrF,IAANlxB,EAETkxB,EAAKlnB,IAAM,UACI,IAANhK,EAGTkxB,EAAKlnB,IAAM,SACI,IAANhK,EAETkxB,EAAKlnB,IAAM,WACI,IAANhK,EAETkxB,EAAKjnB,IAAM,UACI,KAANjK,EAETI,KAAKqxB,kBAAkB,EAAuBP,GAC/B,KAANlxB,GAETkxB,EAAKlnB,KAAM,UACXknB,EAAKjnB,KAAM,WACI,KAANjK,EAETkxB,EAAKjnB,KAAM,SACI,KAANjK,EAETkxB,EAAKlnB,KAAM,UACI,KAANhK,EAETkxB,EAAKlnB,KAAM,UACI,KAANhK,EAETkxB,EAAKlnB,KAAM,SACI,KAANhK,EAETkxB,EAAKlnB,KAAM,WACI,KAANhK,GAETkxB,EAAKlnB,KAAM,SACXknB,EAAKlnB,IAA6B,SAAvB,EAAA6V,kBAAkB7V,IACd,KAANhK,GAETkxB,EAAKjnB,KAAM,SACXinB,EAAKjnB,IAA6B,SAAvB,EAAA4V,kBAAkB5V,IACd,KAANjK,GAAkB,KAANA,GAAkB,KAANA,EAEjC9B,GAAKkC,KAAK6wB,cAAc9M,EAAQjmB,EAAGgzB,GACpB,KAANlxB,GACTkxB,EAAKhnB,SAAWgnB,EAAKhnB,SAASwB,QAC9BwlB,EAAKhnB,SAASgD,gBAAkB,EAChCgkB,EAAKnkB,kBACU,MAAN/M,GAETkxB,EAAKlnB,KAAM,SACXknB,EAAKlnB,IAA6B,SAAvB,EAAA6V,kBAAkB7V,GAC7BknB,EAAKjnB,KAAM,SACXinB,EAAKjnB,IAA6B,SAAvB,EAAA4V,kBAAkB5V,IAE7B7J,KAAK6jB,YAAYc,MAAM,6BAA8B/kB,IA8BpD,YAAAgqB,aAAP,SAAoB7F,GAClB,OAAQA,EAAOA,OAAO,IACpB,KAAK,EAEH/jB,KAAK4jB,aAAaS,iBAAoB,EAAA7Q,GAAG4B,IAAG,OAC5C,MACF,KAAK,EAEH,IAAM/R,EAAIrD,KAAKkY,eAAe5U,OAAOD,EAAI,EACnCqY,EAAI1b,KAAKkY,eAAe5U,OAAOoY,EAAI,EACzC1b,KAAK4jB,aAAaS,iBAAoB,EAAA7Q,GAAG4B,IAAG,IAAI/R,EAAC,IAAIqY,EAAC,OAMrD,YAAAmO,oBAAP,SAA2B9F,GAGzB,OAAQA,EAAOA,OAAO,IACpB,KAAK,EAEH,IAAM1gB,EAAIrD,KAAKkY,eAAe5U,OAAOD,EAAI,EACnCqY,EAAI1b,KAAKkY,eAAe5U,OAAOoY,EAAI,EACzC1b,KAAK4jB,aAAaS,iBAAoB,EAAA7Q,GAAG4B,IAAG,KAAK/R,EAAC,IAAIqY,EAAC,OAwCtD,YAAAoO,UAAP,SAAiB/F,GACf/jB,KAAK4jB,aAAauM,gBAAiB,EACnCnwB,KAAKgmB,wBAAwB5e,OAC7BpH,KAAKkY,eAAe5U,OAAOihB,UAAY,EACvCvkB,KAAKkY,eAAe5U,OAAOkhB,aAAexkB,KAAKkY,eAAe1X,KAAO,EACrER,KAAK0lB,aAAe,EAAAjG,kBAAkBnU,QACtCtL,KAAK4jB,aAAa0N,QAClBtxB,KAAK4kB,gBAAgB0M,QAGrBtxB,KAAKkY,eAAe5U,OAAOiuB,OAAS,EACpCvxB,KAAKkY,eAAe5U,OAAOkuB,OAASxxB,KAAKkY,eAAe5U,OAAO8pB,MAC/DptB,KAAKkY,eAAe5U,OAAOmuB,iBAAiB7nB,GAAK5J,KAAK0lB,aAAa9b,GACnE5J,KAAKkY,eAAe5U,OAAOmuB,iBAAiB5nB,GAAK7J,KAAK0lB,aAAa7b,GACnE7J,KAAKkY,eAAe5U,OAAOouB,aAAe1xB,KAAK4kB,gBAAgB8H,QAG/D1sB,KAAK4jB,aAAaiJ,gBAAgB0B,QAAS,GAsBtC,YAAAxE,eAAP,SAAsBhG,GACpB,IAAM6K,EAAQ7K,EAAOA,OAAO,IAAM,EAClC,OAAQ6K,GACN,KAAK,EACL,KAAK,EACH5uB,KAAKmY,gBAAgB3K,QAAQiX,YAAc,QAC3C,MACF,KAAK,EACL,KAAK,EACHzkB,KAAKmY,gBAAgB3K,QAAQiX,YAAc,YAC3C,MACF,KAAK,EACL,KAAK,EACHzkB,KAAKmY,gBAAgB3K,QAAQiX,YAAc,MAG/C,IAAMkN,EAAa/C,EAAQ,GAAM,EACjC5uB,KAAKmY,gBAAgB3K,QAAQkX,YAAciN,GAUtC,YAAA3H,gBAAP,SAAuBjG,GACrB,IACI6N,EADEC,EAAM9N,EAAOA,OAAO,IAAM,GAG5BA,EAAOzhB,OAAS,IAAMsvB,EAAS7N,EAAOA,OAAO,IAAO/jB,KAAKkY,eAAe1X,MAAmB,IAAXoxB,KAClFA,EAAS5xB,KAAKkY,eAAe1X,MAG3BoxB,EAASC,IACX7xB,KAAKkY,eAAe5U,OAAOihB,UAAYsN,EAAM,EAC7C7xB,KAAKkY,eAAe5U,OAAOkhB,aAAeoN,EAAS,EACnD5xB,KAAKwuB,WAAW,EAAG,KAkChB,YAAAtE,cAAP,SAAqBnG,GACnB,GAAK3B,EAAoB2B,EAAOA,OAAO,GAAI/jB,KAAKmY,gBAAgB3K,QAAQ0c,eAAxE,CAGA,IAAMvf,EAAUoZ,EAAOzhB,OAAS,EAAKyhB,EAAOA,OAAO,GAAK,EACxD,OAAQA,EAAOA,OAAO,IACpB,KAAK,GACY,IAAXpZ,GACF3K,KAAKimB,+BAA+B7e,KAAK8a,EAAyB4P,qBAEpE,MACF,KAAK,GACH9xB,KAAKimB,+BAA+B7e,KAAK8a,EAAyB6P,sBAClE,MACF,KAAK,GACC/xB,KAAKkY,gBACPlY,KAAK4jB,aAAaS,iBAAoB,EAAA7Q,GAAG4B,IAAG,MAAMpV,KAAKkY,eAAe1X,KAAI,IAAIR,KAAKkY,eAAezX,KAAI,KAExG,MACF,KAAK,GACY,IAAXkK,GAA2B,IAAXA,IAClB3K,KAAKwlB,kBAAkBte,KAAKlH,KAAKslB,cAC7BtlB,KAAKwlB,kBAAkBljB,OArgFjB,IAsgFRtC,KAAKwlB,kBAAkBwM,SAGZ,IAAXrnB,GAA2B,IAAXA,IAClB3K,KAAKylB,eAAeve,KAAKlH,KAAKulB,WAC1BvlB,KAAKylB,eAAenjB,OA3gFd,IA4gFRtC,KAAKylB,eAAeuM,SAGxB,MACF,KAAK,GACY,IAAXrnB,GAA2B,IAAXA,GACd3K,KAAKwlB,kBAAkBljB,QACzBtC,KAAKirB,SAASjrB,KAAKwlB,kBAAkByM,OAG1B,IAAXtnB,GAA2B,IAAXA,GACd3K,KAAKylB,eAAenjB,QACtBtC,KAAKkrB,YAAYlrB,KAAKylB,eAAewM,UAgBxC,YAAAhI,WAAP,SAAkBlG,GAChB/jB,KAAKkY,eAAe5U,OAAOiuB,OAASvxB,KAAKkY,eAAe5U,OAAOoY,EAC/D1b,KAAKkY,eAAe5U,OAAOkuB,OAASxxB,KAAKkY,eAAe5U,OAAO8pB,MAAQptB,KAAKkY,eAAe5U,OAAOD,EAClGrD,KAAKkY,eAAe5U,OAAOmuB,iBAAiB7nB,GAAK5J,KAAK0lB,aAAa9b,GACnE5J,KAAKkY,eAAe5U,OAAOmuB,iBAAiB5nB,GAAK7J,KAAK0lB,aAAa7b,GACnE7J,KAAKkY,eAAe5U,OAAOouB,aAAe1xB,KAAK4kB,gBAAgB8H,SAY1D,YAAAvC,cAAP,SAAqBpG,GACnB/jB,KAAKkY,eAAe5U,OAAOoY,EAAI1b,KAAKkY,eAAe5U,OAAOiuB,QAAU,EACpEvxB,KAAKkY,eAAe5U,OAAOD,EAAIhC,KAAKC,IAAItB,KAAKkY,eAAe5U,OAAOkuB,OAASxxB,KAAKkY,eAAe5U,OAAO8pB,MAAO,GAC9GptB,KAAK0lB,aAAa9b,GAAK5J,KAAKkY,eAAe5U,OAAOmuB,iBAAiB7nB,GACnE5J,KAAK0lB,aAAa7b,GAAK7J,KAAKkY,eAAe5U,OAAOmuB,iBAAiB5nB,GACnE7J,KAAK4kB,gBAAgB8H,QAAW1sB,KAAakyB,cACzClyB,KAAKkY,eAAe5U,OAAOouB,eAC7B1xB,KAAK4kB,gBAAgB8H,QAAU1sB,KAAKkY,eAAe5U,OAAOouB,cAE5D1xB,KAAKmuB,mBAcA,YAAAlD,SAAP,SAAgBld,GACd/N,KAAKslB,aAAevX,EACpB/N,KAAKumB,eAAenf,KAAK2G,IAOpB,YAAAmd,YAAP,SAAmBnd,GACjB/N,KAAKulB,UAAYxX,GAYZ,YAAAxH,SAAP,WACEvG,KAAKkY,eAAe5U,OAAOoY,EAAI,EAC/B1b,KAAK0I,SAQA,YAAA2iB,sBAAP,WACErrB,KAAK6jB,YAAYc,MAAM,6CACvB3kB,KAAK4jB,aAAaiJ,gBAAgBkD,mBAAoB,EACtD/vB,KAAKgmB,wBAAwB5e,QAQxB,YAAAkkB,kBAAP,WACEtrB,KAAK6jB,YAAYc,MAAM,oCACvB3kB,KAAK4jB,aAAaiJ,gBAAgBkD,mBAAoB,EACtD/vB,KAAKgmB,wBAAwB5e,QASxB,YAAAqkB,qBAAP,WACEzrB,KAAK4kB,gBAAgB4G,UAAU,GAC/BxrB,KAAK4kB,gBAAgBiL,YAAY,EAAG,EAAAC,kBAmB/B,YAAAnE,cAAP,SAAqBwG,GACW,IAA1BA,EAAe7vB,OAIO,MAAtB6vB,EAAe,IAGnBnyB,KAAK4kB,gBAAgBiL,YAAY1N,EAAOgQ,EAAe,IAAK,EAAAvG,SAASuG,EAAe,KAAO,EAAArC,iBANzF9vB,KAAKyrB,wBAmBF,YAAA/iB,MAAP,WACE1I,KAAKmuB,kBACL,IAAM7qB,EAAStD,KAAKkY,eAAe5U,OACnCtD,KAAKkY,eAAe5U,OAAOD,IACvBC,EAAOD,IAAMC,EAAOkhB,aAAe,GACrClhB,EAAOD,IACPrD,KAAK+lB,iBAAiB3e,KAAKpH,KAAKwtB,mBACvBlqB,EAAOD,GAAKrD,KAAKkY,eAAe1X,OACzC8C,EAAOD,EAAIrD,KAAKkY,eAAe1X,KAAO,GAExCR,KAAKmuB,mBAaA,YAAArD,OAAP,WACE9qB,KAAKkY,eAAe5U,OAAOurB,KAAK7uB,KAAKkY,eAAe5U,OAAOoY,IAAK,GAY3D,YAAA0P,aAAP,WACEprB,KAAKmuB,kBACL,IAAM7qB,EAAStD,KAAKkY,eAAe5U,OACnC,GAAIA,EAAOD,IAAMC,EAAOihB,UAAW,CAIjC,IAAM6N,EAAqB9uB,EAAOkhB,aAAelhB,EAAOihB,UACxDjhB,EAAO6pB,MAAMkF,cAAc/uB,EAAO8pB,MAAQ9pB,EAAOD,EAAG+uB,EAAoB,GACxE9uB,EAAO6pB,MAAM7N,IAAIhc,EAAO8pB,MAAQ9pB,EAAOD,EAAGC,EAAOksB,aAAaxvB,KAAKwtB,mBACnExtB,KAAK6kB,iBAAiB4K,eAAensB,EAAOihB,UAAWjhB,EAAOkhB,mBAE9DlhB,EAAOD,IACPrD,KAAKmuB,mBASF,YAAA5C,UAAP,WACEvrB,KAAKglB,QAAQsM,QACbtxB,KAAK8lB,gBAAgB1e,QAGhB,YAAAkqB,MAAP,WACEtxB,KAAK0lB,aAAe,EAAAjG,kBAAkBnU,QACtCtL,KAAK2lB,uBAAyB,EAAAlG,kBAAkBnU,SAM1C,YAAAkiB,eAAR,WAGE,OAFAxtB,KAAK2lB,uBAAuB9b,KAAM,SAClC7J,KAAK2lB,uBAAuB9b,IAA6B,SAAvB7J,KAAK0lB,aAAa7b,GAC7C7J,KAAK2lB,wBAaP,YAAA6F,UAAP,SAAiB8G,GACftyB,KAAK4kB,gBAAgB4G,UAAU8G,IAW1B,YAAAzG,uBAAP,WAEE,IAAM/lB,EAAO,IAAI,EAAAqE,SACjBrE,EAAK6D,QAAU,GAAK,GAAsB,IAAIa,WAAW,GACzD1E,EAAK8D,GAAK5J,KAAK0lB,aAAa9b,GAC5B9D,EAAK+D,GAAK7J,KAAK0lB,aAAa7b,GAE5B,IAAMvG,EAAStD,KAAKkY,eAAe5U,OAEnCtD,KAAKwuB,WAAW,EAAG,GACnB,IAAK,IAAI+D,EAAU,EAAGA,EAAUvyB,KAAKkY,eAAe1X,OAAQ+xB,EAAS,CACnE,IAAM7uB,EAAMJ,EAAO8pB,MAAQ9pB,EAAOD,EAAIkvB,EAChC/tB,EAAOlB,EAAO6pB,MAAMxuB,IAAI+E,GAC1Bc,IACFA,EAAKoK,KAAK9I,GACVtB,EAAKK,WAAY,GAGrB7E,KAAK6kB,iBAAiB2N,eACtBxyB,KAAKwuB,WAAW,EAAG,IAEvB,EA/oFA,CAAkC,EAAA3lB,YAArB,EAAA4pB,gB,kHC1MA,EAAA7G,SAAoD,GAKpD,EAAAkE,gBAAwC,EAAAlE,SAAY,EAYjE,EAAAA,SAAS,GAAO,CACd,IAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,KAOP,EAAAA,SAAY,OAAIvnB,EAOhB,EAAAunB,SAAS,GAAO,CACd,IAAK,IACL,IAAK,IACL,IAAK,KACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EACZ,EAAAA,SAAS,GAAO,CACd,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EACZ,EAAAA,SAAS,GAAO,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EACZ,EAAAA,SAAS,GAAO,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAS,KAAO,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IAEL,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,M,8FCvPP,IAuBA,aAyCE,WAAmB8G,EAA+BC,GAChD,QADiB,IAAAD,MAAA,SAA+B,IAAAC,MAAA,IAA/B,KAAAD,YAA+B,KAAAC,qBAC5CA,EA/Dc,IAgEhB,MAAM,IAAItwB,MAAM,mDAElBrC,KAAK+jB,OAAS,IAAI6O,WAAWF,GAC7B1yB,KAAKsC,OAAS,EACdtC,KAAK6yB,WAAa,IAAID,WAAWD,GACjC3yB,KAAK8yB,iBAAmB,EACxB9yB,KAAK+yB,cAAgB,IAAIC,YAAYN,GACrC1yB,KAAKizB,eAAgB,EACrBjzB,KAAKkzB,kBAAmB,EACxBlzB,KAAKmzB,aAAc,EAkJvB,OApLgB,EAAAC,UAAd,SAAwBC,GACtB,IAAMtP,EAAS,IAAIuP,EACnB,IAAKD,EAAO/wB,OACV,OAAOyhB,EAGT,IAAK,IAAIjmB,EAAKu1B,EAAO,aAAcxvB,MAAS,EAAI,EAAG/F,EAAIu1B,EAAO/wB,SAAUxE,EAAG,CACzE,IAAMiB,EAAQs0B,EAAOv1B,GACrB,GAAIiB,aAAiB8E,MACnB,IAAK,IAAI0vB,EAAI,EAAGA,EAAIx0B,EAAMuD,SAAUixB,EAClCxP,EAAOyP,YAAYz0B,EAAMw0B,SAG3BxP,EAAO0P,SAAS10B,GAGpB,OAAOglB,GAwBF,YAAAzY,MAAP,WACE,IAAMooB,EAAY,IAAIJ,EAAOtzB,KAAK0yB,UAAW1yB,KAAK2yB,oBASlD,OARAe,EAAU3P,OAAOzE,IAAItf,KAAK+jB,QAC1B2P,EAAUpxB,OAAStC,KAAKsC,OACxBoxB,EAAUb,WAAWvT,IAAItf,KAAK6yB,YAC9Ba,EAAUZ,iBAAmB9yB,KAAK8yB,iBAClCY,EAAUX,cAAczT,IAAItf,KAAK+yB,eACjCW,EAAUT,cAAgBjzB,KAAKizB,cAC/BS,EAAUR,iBAAmBlzB,KAAKkzB,iBAClCQ,EAAUP,YAAcnzB,KAAKmzB,YACtBO,GASF,YAAA9M,QAAP,WAEE,IADA,IAAM+M,EAAmB,GAChB71B,EAAI,EAAGA,EAAIkC,KAAKsC,SAAUxE,EAAG,CACpC61B,EAAIzsB,KAAKlH,KAAK+jB,OAAOjmB,IACrB,IAAMkQ,EAAQhO,KAAK+yB,cAAcj1B,IAAM,EACjCmQ,EAA8B,IAAxBjO,KAAK+yB,cAAcj1B,GAC3BmQ,EAAMD,EAAQ,GAChB2lB,EAAIzsB,KAAKrD,MAAMnE,UAAUgG,MAAMzH,KAAK+B,KAAK6yB,WAAY7kB,EAAOC,IAGhE,OAAO0lB,GAMF,YAAArC,MAAP,WACEtxB,KAAKsC,OAAS,EACdtC,KAAK8yB,iBAAmB,EACxB9yB,KAAKizB,eAAgB,EACrBjzB,KAAKkzB,kBAAmB,EACxBlzB,KAAKmzB,aAAc,GAUd,YAAAM,SAAP,SAAgB10B,GAEd,GADAiB,KAAKmzB,aAAc,EACfnzB,KAAKsC,QAAUtC,KAAK0yB,UACtB1yB,KAAKizB,eAAgB,MADvB,CAIA,GAAIl0B,GAAS,EACX,MAAM,IAAIsD,MAAM,yCAElBrC,KAAK+yB,cAAc/yB,KAAKsC,QAAUtC,KAAK8yB,kBAAoB,EAAI9yB,KAAK8yB,iBACpE9yB,KAAK+jB,OAAO/jB,KAAKsC,UAAYvD,EA7If,sBA6I+CA,IAUxD,YAAAy0B,YAAP,SAAmBz0B,GAEjB,GADAiB,KAAKmzB,aAAc,EACdnzB,KAAKsC,OAGV,GAAItC,KAAKizB,eAAiBjzB,KAAK8yB,kBAAoB9yB,KAAK2yB,mBACtD3yB,KAAKkzB,kBAAmB,MAD1B,CAIA,GAAIn0B,GAAS,EACX,MAAM,IAAIsD,MAAM,yCAElBrC,KAAK6yB,WAAW7yB,KAAK8yB,oBAAsB/zB,EAnK7B,sBAmK6DA,EAC3EiB,KAAK+yB,cAAc/yB,KAAKsC,OAAS,OAM5B,YAAA4uB,aAAP,SAAoB0C,GAClB,OAAmC,IAA1B5zB,KAAK+yB,cAAca,KAAgB5zB,KAAK+yB,cAAca,IAAQ,GAAK,GAQvE,YAAAxC,aAAP,SAAoBwC,GAClB,IAAM5lB,EAAQhO,KAAK+yB,cAAca,IAAQ,EACnC3lB,EAAgC,IAA1BjO,KAAK+yB,cAAca,GAC/B,OAAI3lB,EAAMD,EAAQ,EACThO,KAAK6yB,WAAW7R,SAAShT,EAAOC,GAElC,MAOF,YAAA4lB,gBAAP,WAEE,IADA,IAAM1wB,EAAsC,GACnCrF,EAAI,EAAGA,EAAIkC,KAAKsC,SAAUxE,EAAG,CACpC,IAAMkQ,EAAQhO,KAAK+yB,cAAcj1B,IAAM,EACjCmQ,EAA8B,IAAxBjO,KAAK+yB,cAAcj1B,GAC3BmQ,EAAMD,EAAQ,IAChB7K,EAAOrF,GAAKkC,KAAK6yB,WAAWntB,MAAMsI,EAAOC,IAG7C,OAAO9K,GAOF,YAAA2wB,SAAP,SAAgB/0B,GACd,IAAIuD,EACJ,KAAItC,KAAKizB,iBACF3wB,EAAStC,KAAKmzB,YAAcnzB,KAAK8yB,iBAAmB9yB,KAAKsC,SAC1DtC,KAAKmzB,aAAenzB,KAAKkzB,kBAF/B,CAOA,IAAMa,EAAQ/zB,KAAKmzB,YAAcnzB,KAAK6yB,WAAa7yB,KAAK+jB,OAClDiQ,EAAMD,EAAMzxB,EAAS,GAC3ByxB,EAAMzxB,EAAS,IAAM0xB,EAAM3yB,KAAKiR,IAAU,GAAN0hB,EAAWj1B,EA3NjC,YA2NqDA,IAEvE,EAtMA,GAAa,EAAAu0B,U,8GCxBb,YACA,OAIA,0BACU,KAAAW,OAAS,EACT,KAAAC,KAAO,EACP,KAAAC,UAA6C31B,OAAOY,OAAO,MAC3D,KAAAg1B,WAAqC,aAoJ/C,OAlJS,YAAAC,WAAP,SAAkB5N,EAAelZ,QACDlJ,IAA1BrE,KAAKm0B,UAAU1N,KACjBzmB,KAAKm0B,UAAU1N,GAAS,IAE1B,IAAM6N,EAAct0B,KAAKm0B,UAAU1N,GAEnC,OADA6N,EAAYptB,KAAKqG,GACV,CACLrN,QAAS,WACP,IAAMq0B,EAAeD,EAAY7vB,QAAQ8I,IACnB,IAAlBgnB,GACFD,EAAYntB,OAAOotB,EAAc,MAKlC,YAAAC,WAAP,SAAkB/N,EAAelZ,GAC/BvN,KAAKm0B,UAAU1N,GAAS,CAAClZ,IAEpB,YAAAknB,aAAP,SAAoBhO,GACdzmB,KAAKm0B,UAAU1N,WAAezmB,KAAKm0B,UAAU1N,IAE5C,YAAAiO,mBAAP,SAA0BnnB,GACxBvN,KAAKo0B,WAAa7mB,GAGb,YAAArN,QAAP,WACEF,KAAKm0B,UAAY31B,OAAOY,OAAO,MAC/BY,KAAKo0B,WAAa,cAGb,YAAA9C,MAAP,WAEsB,IAAhBtxB,KAAKi0B,QACPj0B,KAAKiO,KAAI,GAEXjO,KAAKk0B,KAAO,EACZl0B,KAAKi0B,OAAS,GAGR,YAAAU,OAAR,WACE,IAAMC,EAAW50B,KAAKm0B,UAAUn0B,KAAKk0B,KACrC,GAAKU,EAGH,IAAK,IAAI1F,EAAI0F,EAAStyB,OAAS,EAAG4sB,GAAK,EAAGA,IACxC0F,EAAS1F,GAAGlhB,aAHdhO,KAAKo0B,WAAWp0B,KAAKk0B,IAAK,UAQtB,YAAAW,KAAR,SAAa9mB,EAAmBC,EAAeC,GAC7C,IAAM2mB,EAAW50B,KAAKm0B,UAAUn0B,KAAKk0B,KACrC,GAAKU,EAGH,IAAK,IAAI1F,EAAI0F,EAAStyB,OAAS,EAAG4sB,GAAK,EAAGA,IACxC0F,EAAS1F,GAAGlL,IAAIjW,EAAMC,EAAOC,QAH/BjO,KAAKo0B,WAAWp0B,KAAKk0B,IAAK,MAAO,EAAA9P,cAAcrW,EAAMC,EAAOC,KAQxD,YAAA6mB,KAAR,SAAa3Q,GAIX,IAAMyQ,EAAW50B,KAAKm0B,UAAUn0B,KAAKk0B,KACrC,GAAKU,EAEE,CAEL,IADA,IAAI1F,EAAI0F,EAAStyB,OAAS,EACnB4sB,GAAK,IACuB,IAA7B0F,EAAS1F,GAAGjhB,IAAIkW,GADP+K,KAOf,IAFAA,IAEOA,GAAK,EAAGA,IACb0F,EAAS1F,GAAGjhB,KAAI,QAXlBjO,KAAKo0B,WAAWp0B,KAAKk0B,IAAK,MAAO/P,IAgB9B,YAAAnW,MAAP,WAEEhO,KAAKsxB,QACLtxB,KAAKk0B,KAAO,EACZl0B,KAAKi0B,OAAS,GAUT,YAAAjQ,IAAP,SAAWjW,EAAmBC,EAAeC,GAC3C,GAAoB,IAAhBjO,KAAKi0B,OAAT,CAGA,GAAoB,IAAhBj0B,KAAKi0B,OACP,KAAOjmB,EAAQC,GAAK,CAClB,IAAMvD,EAAOqD,EAAKC,KAClB,GAAa,KAATtD,EAAe,CACjB1K,KAAKi0B,OAAS,EACdj0B,KAAK20B,SACL,MAEF,GAAIjqB,EAAO,IAAQ,GAAOA,EAExB,YADA1K,KAAKi0B,OAAS,IAGE,IAAdj0B,KAAKk0B,MACPl0B,KAAKk0B,IAAM,GAEbl0B,KAAKk0B,IAAiB,GAAXl0B,KAAKk0B,IAAWxpB,EAAO,GAGlB,IAAhB1K,KAAKi0B,QAA+BhmB,EAAMD,EAAQ,GACpDhO,KAAK60B,KAAK9mB,EAAMC,EAAOC,KASpB,YAAAA,IAAP,SAAWkW,GACW,IAAhBnkB,KAAKi0B,SAIW,IAAhBj0B,KAAKi0B,SAIa,IAAhBj0B,KAAKi0B,QACPj0B,KAAK20B,SAEP30B,KAAK80B,KAAK3Q,IAEZnkB,KAAKk0B,KAAO,EACZl0B,KAAKi0B,OAAS,IAElB,EAxJA,GAAa,EAAAc,YA8Jb,iBAIE,WAAoBC,GAAA,KAAAA,WAHZ,KAAAlV,MAAQ,GACR,KAAAmV,WAAqB,EA+B/B,OA3BS,YAAAjnB,MAAP,WACEhO,KAAK8f,MAAQ,GACb9f,KAAKi1B,WAAY,GAGZ,YAAAjR,IAAP,SAAWjW,EAAmBC,EAAeC,GACvCjO,KAAKi1B,YAGTj1B,KAAK8f,OAAS,EAAAsE,cAAcrW,EAAMC,EAAOC,GACrCjO,KAAK8f,MAAMxd,OAAS,EAAA4yB,gBACtBl1B,KAAK8f,MAAQ,GACb9f,KAAKi1B,WAAY,KAId,YAAAhnB,IAAP,SAAWkW,GACT,IAAIgR,EAQJ,OAPIn1B,KAAKi1B,UACPE,GAAM,EACGhR,IACTgR,EAAMn1B,KAAKg1B,SAASh1B,KAAK8f,QAE3B9f,KAAK8f,MAAQ,GACb9f,KAAKi1B,WAAY,EACVE,GAEX,EAjCA,GAAa,EAAAnK,c,qGChHA,EAAAkK,cAAgB,K,8GClD7B,WACA,QACA,QAEME,EAAgC,GAEtC,0BACU,KAAAjB,UAA6C31B,OAAOY,OAAO,MAC3D,KAAAi2B,QAAyBD,EACzB,KAAAE,OAAiB,EACjB,KAAAlB,WAAqC,aAsF/C,OApFS,YAAAl0B,QAAP,WACEF,KAAKm0B,UAAY31B,OAAOY,OAAO,MAC/BY,KAAKo0B,WAAa,cAGb,YAAAC,WAAP,SAAkB5N,EAAelZ,QACDlJ,IAA1BrE,KAAKm0B,UAAU1N,KACjBzmB,KAAKm0B,UAAU1N,GAAS,IAE1B,IAAM6N,EAAct0B,KAAKm0B,UAAU1N,GAEnC,OADA6N,EAAYptB,KAAKqG,GACV,CACLrN,QAAS,WACP,IAAMq0B,EAAeD,EAAY7vB,QAAQ8I,IACnB,IAAlBgnB,GACFD,EAAYntB,OAAOotB,EAAc,MAMlC,YAAAC,WAAP,SAAkB/N,EAAelZ,GAC/BvN,KAAKm0B,UAAU1N,GAAS,CAAClZ,IAGpB,YAAAknB,aAAP,SAAoBhO,GACdzmB,KAAKm0B,UAAU1N,WAAezmB,KAAKm0B,UAAU1N,IAG5C,YAAAiO,mBAAP,SAA0BnnB,GACxBvN,KAAKo0B,WAAa7mB,GAGb,YAAA+jB,MAAP,WACMtxB,KAAKq1B,QAAQ/yB,QACftC,KAAKkkB,QAAO,GAEdlkB,KAAKq1B,QAAUD,EACfp1B,KAAKs1B,OAAS,GAGT,YAAAxR,KAAP,SAAY2C,EAAe1C,GAKzB,GAHA/jB,KAAKsxB,QACLtxB,KAAKs1B,OAAS7O,EACdzmB,KAAKq1B,QAAUr1B,KAAKm0B,UAAU1N,IAAU2O,EACnCp1B,KAAKq1B,QAAQ/yB,OAGhB,IAAK,IAAI4sB,EAAIlvB,KAAKq1B,QAAQ/yB,OAAS,EAAG4sB,GAAK,EAAGA,IAC5ClvB,KAAKq1B,QAAQnG,GAAGpL,KAAKC,QAHvB/jB,KAAKo0B,WAAWp0B,KAAKs1B,OAAQ,OAAQvR,IAQlC,YAAAC,IAAP,SAAWjW,EAAmBC,EAAeC,GAC3C,GAAKjO,KAAKq1B,QAAQ/yB,OAGhB,IAAK,IAAI4sB,EAAIlvB,KAAKq1B,QAAQ/yB,OAAS,EAAG4sB,GAAK,EAAGA,IAC5ClvB,KAAKq1B,QAAQnG,GAAGlL,IAAIjW,EAAMC,EAAOC,QAHnCjO,KAAKo0B,WAAWp0B,KAAKs1B,OAAQ,MAAO,EAAAlR,cAAcrW,EAAMC,EAAOC,KAQ5D,YAAAiW,OAAP,SAAcC,GACZ,GAAKnkB,KAAKq1B,QAAQ/yB,OAEX,CAEL,IADA,IAAI4sB,EAAIlvB,KAAKq1B,QAAQ/yB,OAAS,EACvB4sB,GAAK,IAC8B,IAApClvB,KAAKq1B,QAAQnG,GAAGhL,OAAOC,GADd+K,KAOf,IAFAA,IAEOA,GAAK,EAAGA,IACblvB,KAAKq1B,QAAQnG,GAAGhL,QAAO,QAXzBlkB,KAAKo0B,WAAWp0B,KAAKs1B,OAAQ,SAAUnR,GAczCnkB,KAAKq1B,QAAUD,EACfp1B,KAAKs1B,OAAS,GAElB,EA1FA,GAAa,EAAAC,YAgGb,iBAKE,WAAoBP,GAAA,KAAAA,WAJZ,KAAAlV,MAAQ,GAER,KAAAmV,WAAqB,EAiC/B,OA7BS,YAAAnR,KAAP,SAAYC,GACV/jB,KAAKw1B,QAAUzR,EAAOzY,QACtBtL,KAAK8f,MAAQ,GACb9f,KAAKi1B,WAAY,GAGZ,YAAAjR,IAAP,SAAWjW,EAAmBC,EAAeC,GACvCjO,KAAKi1B,YAGTj1B,KAAK8f,OAAS,EAAAsE,cAAcrW,EAAMC,EAAOC,GACrCjO,KAAK8f,MAAMxd,OAAS,EAAA4yB,gBACtBl1B,KAAK8f,MAAQ,GACb9f,KAAKi1B,WAAY,KAId,YAAA/Q,OAAP,SAAcC,GACZ,IAAIgR,EASJ,OARIn1B,KAAKi1B,UACPE,GAAM,EACGhR,IACTgR,EAAMn1B,KAAKg1B,SAASh1B,KAAK8f,MAAO9f,KAAKw1B,SAAW,IAAI,EAAAlC,SAEtDtzB,KAAKw1B,aAAUnxB,EACfrE,KAAK8f,MAAQ,GACb9f,KAAKi1B,WAAY,EACVE,GAEX,EApCA,GAAa,EAAArH,c,kICxGb,YAEA,QAaM2H,EAAyC,GAM/C,4BACEjoB,EACAkoB,EACAC,EACA5a,EACAC,GAKA,IAHA,IAAM4a,EAAY,EAAAC,eAAe9a,EAAiBC,EAAkBxN,EAASmoB,GAGpE73B,EAAI,EAAGA,EAAI23B,EAAenzB,OAAQxE,IAAK,CAC9C,IACMg4B,GADAC,EAAQN,EAAe33B,IACFk4B,QAAQvxB,QAAQixB,GAC3C,GAAII,GAAgB,EAAG,CACrB,GAAI,EAAAG,aAAaF,EAAMG,OAAQN,GAC7B,OAAOG,EAAMI,MAGc,IAAzBJ,EAAMC,QAAQ1zB,QAChByzB,EAAMI,MAAMj2B,UACZu1B,EAAetuB,OAAOrJ,EAAG,IAEzBi4B,EAAMC,QAAQ7uB,OAAO2uB,EAAc,GAErC,OAKJ,IAASh4B,EAAI,EAAGA,EAAI23B,EAAenzB,OAAQxE,IAAK,CAC9C,IAAMi4B,EAAQN,EAAe33B,GAC7B,GAAI,EAAAm4B,aAAaF,EAAMG,OAAQN,GAG7B,OADAG,EAAMC,QAAQ9uB,KAAKwuB,GACZK,EAAMI,MAIjB,IAAMC,EAAiC,CACrCD,MAAO,IAAI,EAAAE,iBACTrd,SACA4c,GAEFM,OAAQN,EACRI,QAAS,CAACN,IAGZ,OADAD,EAAevuB,KAAKkvB,GACbA,EAASD,OAMlB,mCAAwCT,GACtC,IAAK,IAAI53B,EAAI,EAAGA,EAAI23B,EAAenzB,OAAQxE,IAAK,CAC9C,IAAM4K,EAAQ+sB,EAAe33B,GAAGk4B,QAAQvxB,QAAQixB,GAChD,IAAe,IAAXhtB,EAAc,CACyB,IAArC+sB,EAAe33B,GAAGk4B,QAAQ1zB,QAE5BmzB,EAAe33B,GAAGq4B,MAAMj2B,UACxBu1B,EAAetuB,OAAOrJ,EAAG,IAGzB23B,EAAe33B,GAAGk4B,QAAQ7uB,OAAOuB,EAAO,GAE1C,U,kICrFN,WAIA,0BAA+BqS,EAAyBC,EAA0BxN,EAA2BmoB,GAE3G,IAAMW,EAAiC,CACrChZ,WAAYqY,EAAOrY,WACnBlB,WAAYuZ,EAAOvZ,WACnBma,YAAQlyB,EACRmyB,kBAAcnyB,EACdoyB,eAAWpyB,EAGXgZ,KAAMsY,EAAOtY,KAAK3X,MAAM,EAAG,KAE7B,MAAO,CACLmW,iBAAkBne,OAAOme,iBACzBd,gBAAe,EACfC,iBAAgB,EAChB+C,WAAYvQ,EAAQuQ,WACpBD,SAAUtQ,EAAQsQ,SAClBD,WAAYrQ,EAAQqQ,WACpBD,eAAgBpQ,EAAQoQ,eACxB8Y,kBAAmBlpB,EAAQkpB,kBAC3Bf,OAAQW,IAIZ,wBAA6BhmB,EAAqBD,GAChD,IAAK,IAAIvS,EAAI,EAAGA,EAAIwS,EAAEqlB,OAAOtY,KAAK/a,OAAQxE,IACxC,GAAIwS,EAAEqlB,OAAOtY,KAAKvf,GAAG+R,OAASQ,EAAEslB,OAAOtY,KAAKvf,GAAG+R,KAC7C,OAAO,EAGX,OAAOS,EAAEuL,mBAAqBxL,EAAEwL,kBAC5BvL,EAAEyN,aAAe1N,EAAE0N,YACnBzN,EAAEwN,WAAazN,EAAEyN,UACjBxN,EAAEuN,aAAexN,EAAEwN,YACnBvN,EAAEsN,iBAAmBvN,EAAEuN,gBACvBtN,EAAEomB,oBAAsBrmB,EAAEqmB,mBAC1BpmB,EAAEyK,kBAAoB1K,EAAE0K,iBACxBzK,EAAE0K,mBAAqB3K,EAAE2K,kBACzB1K,EAAEqlB,OAAOrY,aAAejN,EAAEslB,OAAOrY,YACjChN,EAAEqlB,OAAOvZ,aAAe/L,EAAEslB,OAAOvZ,YAGvC,sBAA2Bua,GACzB,OAAOA,EAAY,EAAA5tB,gB,0HC/CrB,YACA,QAEM6tB,EAAqB,EAAAlmB,IAAIW,QAAQ,WACjCwlB,EAAqB,EAAAnmB,IAAIW,QAAQ,WACjCylB,EAAiB,EAAApmB,IAAIW,QAAQ,WAC7B0lB,EAAwB,EAAArmB,IAAIW,QAAQ,WACpC2lB,EAAoB,CACxBtmB,IAAK,2BACLb,KAAM,YAKK,EAAAonB,oBAAsB,WAyBjC,IAxBA,IAAMtB,EAAS,CAEb,EAAAjlB,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WAEZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,WACZ,EAAAX,IAAIW,QAAQ,YAKR6lB,EAAI,CAAC,EAAM,GAAM,IAAM,IAAM,IAAM,KAChCp5B,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,IAAMc,EAAIs4B,EAAGp5B,EAAI,GAAM,EAAI,GACrBsS,EAAI8mB,EAAGp5B,EAAI,EAAK,EAAI,GACpBuS,EAAI6mB,EAAEp5B,EAAI,GAChB63B,EAAOzuB,KAAK,CACVwJ,IAAK,EAAAf,SAASQ,MAAMvR,EAAGwR,EAAGC,GAC1BR,KAAM,EAAAF,SAASY,OAAO3R,EAAGwR,EAAGC,KAKhC,IAASvS,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAMK,EAAI,EAAQ,GAAJL,EACd63B,EAAOzuB,KAAK,CACVwJ,IAAK,EAAAf,SAASQ,MAAMhS,EAAGA,EAAGA,GAC1B0R,KAAM,EAAAF,SAASY,OAAOpS,EAAGA,EAAGA,KAIhC,OAAOw3B,EA5C0B,GAkDnC,iBAME,WAAY3c,EAA2B0d,GAAA,KAAAA,oBACrC,IAAMS,EAASne,EAASC,cAAc,UACtCke,EAAOhc,MAAQ,EACfgc,EAAO9b,OAAS,EAChB,IAAM+b,EAAMD,EAAOxd,WAAW,MAC9B,IAAKyd,EACH,MAAM,IAAI/0B,MAAM,mCAElBrC,KAAKyZ,KAAO2d,EACZp3B,KAAKyZ,KAAK4d,yBAA2B,OACrCr3B,KAAKs3B,aAAet3B,KAAKyZ,KAAK8d,qBAAqB,EAAG,EAAG,EAAG,GAC5Dv3B,KAAKw3B,eAAiB,IAAI,EAAAC,mBAC1Bz3B,KAAK21B,OAAS,CACZrY,WAAYsZ,EACZxa,WAAYya,EACZN,OAAQO,EACRN,aAAcO,EACdW,qBAAsBV,EACtBW,gBAAiB,EAAAnnB,MAAMC,MAAMomB,EAAoBG,GACjD3Z,KAAM,EAAA4Z,oBAAoBvxB,QAC1BwY,cAAele,KAAKw3B,gBAoH1B,OAhHS,YAAAI,gBAAP,SAAuBv4B,GACT,yBAARA,GACFW,KAAKw3B,eAAe72B,SASjB,YAAAk3B,SAAP,SAAgBC,GAWd,QAXc,IAAAA,MAAA,IACd93B,KAAK21B,OAAOrY,WAAatd,KAAK+3B,YAAYD,EAAMxa,WAAYsZ,GAC5D52B,KAAK21B,OAAOvZ,WAAapc,KAAK+3B,YAAYD,EAAM1b,WAAYya,GAC5D72B,KAAK21B,OAAOY,OAASv2B,KAAK+3B,YAAYD,EAAMvB,OAAQO,GAAgB,GACpE92B,KAAK21B,OAAOa,aAAex2B,KAAK+3B,YAAYD,EAAMtB,aAAcO,GAAuB,GACvF/2B,KAAK21B,OAAO+B,qBAAuB13B,KAAK+3B,YAAYD,EAAMrB,UAAWO,GAAmB,GACxFh3B,KAAK21B,OAAOgC,gBAAkB,EAAAnnB,MAAMC,MAAMzQ,KAAK21B,OAAOvZ,WAAYpc,KAAK21B,OAAO+B,sBAK1E,EAAAlnB,MAAMU,SAASlR,KAAK21B,OAAO+B,sBAAuB,CAEpD13B,KAAK21B,OAAO+B,qBAAuB,EAAAlnB,MAAMiB,QAAQzR,KAAK21B,OAAO+B,qBAD7C,IAGlB13B,KAAK21B,OAAOtY,KAAK,GAAKrd,KAAK+3B,YAAYD,EAAME,MAAO,EAAAf,oBAAoB,IACxEj3B,KAAK21B,OAAOtY,KAAK,GAAKrd,KAAK+3B,YAAYD,EAAMG,IAAK,EAAAhB,oBAAoB,IACtEj3B,KAAK21B,OAAOtY,KAAK,GAAKrd,KAAK+3B,YAAYD,EAAMI,MAAO,EAAAjB,oBAAoB,IACxEj3B,KAAK21B,OAAOtY,KAAK,GAAKrd,KAAK+3B,YAAYD,EAAMK,OAAQ,EAAAlB,oBAAoB,IACzEj3B,KAAK21B,OAAOtY,KAAK,GAAKrd,KAAK+3B,YAAYD,EAAMM,KAAM,EAAAnB,oBAAoB,IACvEj3B,KAAK21B,OAAOtY,KAAK,GAAKrd,KAAK+3B,YAAYD,EAAMO,QAAS,EAAApB,oBAAoB,IAC1Ej3B,KAAK21B,OAAOtY,KAAK,GAAKrd,KAAK+3B,YAAYD,EAAMQ,KAAM,EAAArB,oBAAoB,IACvEj3B,KAAK21B,OAAOtY,KAAK,GAAKrd,KAAK+3B,YAAYD,EAAMS,MAAO,EAAAtB,oBAAoB,IACxEj3B,KAAK21B,OAAOtY,KAAK,GAAKrd,KAAK+3B,YAAYD,EAAMU,YAAa,EAAAvB,oBAAoB,IAC9Ej3B,KAAK21B,OAAOtY,KAAK,GAAKrd,KAAK+3B,YAAYD,EAAMW,UAAW,EAAAxB,oBAAoB,IAC5Ej3B,KAAK21B,OAAOtY,KAAK,IAAMrd,KAAK+3B,YAAYD,EAAMY,YAAa,EAAAzB,oBAAoB,KAC/Ej3B,KAAK21B,OAAOtY,KAAK,IAAMrd,KAAK+3B,YAAYD,EAAMa,aAAc,EAAA1B,oBAAoB,KAChFj3B,KAAK21B,OAAOtY,KAAK,IAAMrd,KAAK+3B,YAAYD,EAAMc,WAAY,EAAA3B,oBAAoB,KAC9Ej3B,KAAK21B,OAAOtY,KAAK,IAAMrd,KAAK+3B,YAAYD,EAAMe,cAAe,EAAA5B,oBAAoB,KACjFj3B,KAAK21B,OAAOtY,KAAK,IAAMrd,KAAK+3B,YAAYD,EAAMgB,WAAY,EAAA7B,oBAAoB,KAC9Ej3B,KAAK21B,OAAOtY,KAAK,IAAMrd,KAAK+3B,YAAYD,EAAMiB,YAAa,EAAA9B,oBAAoB,KAE/Ej3B,KAAKw3B,eAAe72B,SAGd,YAAAo3B,YAAR,SACErnB,EACAsoB,EACAtC,GAEA,QAFA,IAAAA,MAA6B12B,KAAK02B,wBAEtBryB,IAARqM,EACF,OAAOsoB,EAQT,GAFAh5B,KAAKyZ,KAAK0C,UAAYnc,KAAKs3B,aAC3Bt3B,KAAKyZ,KAAK0C,UAAYzL,EACa,iBAAxB1Q,KAAKyZ,KAAK0C,UAEnB,OADA8c,QAAQC,KAAK,UAAUxoB,EAAG,8BAA8BsoB,EAAStoB,KAC1DsoB,EAGTh5B,KAAKyZ,KAAKkC,SAAS,EAAG,EAAG,EAAG,GAC5B,IAAM5N,EAAO/N,KAAKyZ,KAAK0f,aAAa,EAAG,EAAG,EAAG,GAAGprB,KAGhD,GAAgB,MAAZA,EAAK,GAAa,CACpB,IAAK2oB,EAqBH,OAJAuC,QAAQC,KACN,UAAUxoB,EAAG,0EACKsoB,EAAStoB,IAAG,KAEzBsoB,EAKH,MAAeh5B,KAAKyZ,KAAK0C,UAAU1V,UAAU,EAAGzG,KAAKyZ,KAAK0C,UAAU7Z,OAAS,GAAG82B,MAAM,KAAKC,KAAI,SAAAC,GAAa,OAAAC,OAAOD,MAAlH16B,EAAC,KAAEwR,EAAC,KAAEC,EAAC,KAAEC,EAAC,KACXsJ,EAAQvY,KAAK4P,MAAU,IAAJX,GAEzB,MAAO,CACLT,KAFmB,EAAAF,SAASY,OAAO3R,EAAGwR,EAAGC,EAAGuJ,GAG5ClJ,IAAG,GAIP,MAAO,CAGLA,IAAK1Q,KAAKyZ,KAAK0C,UACftM,KAAM,EAAAF,SAASY,OAAOxC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAG5D,EA9IA,GAAa,EAAAyrB,gB,oGClEb,wBAAgCz6B,GAC9B,IAAKA,EACH,MAAM,IAAIsD,MAAM,2BAElB,OAAOtD,I,gdCFT,WACA,OACA,OAGA,cASE,WAAY06B,EAAsB9gB,EAAewC,GAAjD,MACE,cAAO,K,OANF,EAAAxR,QAAkB,EAGlB,EAAAK,aAAuB,GAI5B,EAAKJ,GAAK6vB,EAAU7vB,GACpB,EAAKC,GAAK4vB,EAAU5vB,GACpB,EAAKG,aAAe2O,EACpB,EAAK+gB,OAASve,E,EA6BlB,OA3CoC,OAiB3B,YAAA9Q,WAAP,WAEE,OAAO,SAGF,YAAAnE,SAAP,WACE,OAAOlG,KAAK05B,QAGP,YAAAzzB,SAAP,WACE,OAAOjG,KAAKgK,cAGP,YAAAO,QAAP,WAGE,OAAO,SAGF,YAAAH,gBAAP,SAAuBrL,GACrB,MAAM,IAAIsD,MAAM,oBAGX,YAAAuI,cAAP,WACE,MAAO,CAAC5K,KAAK4J,GAAI5J,KAAKiG,WAAYjG,KAAKkG,WAAYlG,KAAKuK,YAE5D,EA3CA,CAAoC,EAAAM,eAAvB,EAAA8uB,iBA6Cb,iBAME,WAAoBzhB,GAAA,KAAAA,iBAJZ,KAAA0hB,kBAAwC,GACxC,KAAAC,uBAAiC,EACjC,KAAAxU,UAAsB,IAAI,EAAAlb,SAwQpC,OApQS,YAAA2vB,wBAAP,SAA+BvsB,GAC7B,IAAMwsB,EAA2B,CAC/BliB,GAAI7X,KAAK65B,yBACTtsB,QAAO,GAIT,OADAvN,KAAK45B,kBAAkB1yB,KAAK6yB,GACrBA,EAAOliB,IAGT,YAAAmiB,0BAAP,SAAiCC,GAC/B,IAAK,IAAIn8B,EAAI,EAAGA,EAAIkC,KAAK45B,kBAAkBt3B,OAAQxE,IACjD,GAAIkC,KAAK45B,kBAAkB97B,GAAG+Z,KAAOoiB,EAEnC,OADAj6B,KAAK45B,kBAAkBzyB,OAAOrJ,EAAG,IAC1B,EAIX,OAAO,GAGF,YAAAo8B,oBAAP,SAA2Bx2B,GACzB,GAAsC,IAAlC1D,KAAK45B,kBAAkBt3B,OACzB,MAAO,GAGT,IAAMkC,EAAOxE,KAAKkY,eAAe5U,OAAO6pB,MAAMxuB,IAAI+E,GAClD,IAAKc,GAAwB,IAAhBA,EAAKlC,OAChB,MAAO,GAgBT,IAbA,IAAM63B,EAA6B,GAC7BC,EAAU51B,EAAKgC,mBAAkB,GAMnC6zB,EAAmB,EACnBC,EAAqB,EACrBC,EAAwB,EACxBC,EAAch2B,EAAK0b,MAAM,GACzBua,EAAcj2B,EAAK2b,MAAM,GAEpBzE,EAAI,EAAGA,EAAIlX,EAAK6c,mBAAoB3F,IAG3C,GAFAlX,EAAK+b,SAAS7E,EAAG1b,KAAKqlB,WAEY,IAA9BrlB,KAAKqlB,UAAUnf,WAAnB,CAMA,GAAIlG,KAAKqlB,UAAUzb,KAAO4wB,GAAex6B,KAAKqlB,UAAUxb,KAAO4wB,EAAa,CAG1E,GAAI/e,EAAI2e,EAAmB,EAQzB,IAPA,IAAMK,EAAe16B,KAAK26B,iBACxBP,EACAG,EACAD,EACA91B,EACA61B,GAEOv8B,EAAI,EAAGA,EAAI48B,EAAap4B,OAAQxE,IACvCq8B,EAAOjzB,KAAKwzB,EAAa58B,IAK7Bu8B,EAAmB3e,EACnB6e,EAAwBD,EACxBE,EAAcx6B,KAAKqlB,UAAUzb,GAC7B6wB,EAAcz6B,KAAKqlB,UAAUxb,GAG/BywB,GAAsBt6B,KAAKqlB,UAAUpf,WAAW3D,QAAU,EAAAkH,qBAAqBlH,OAIjF,GAAItC,KAAKkY,eAAezX,KAAO45B,EAAmB,EAQhD,IAPMK,EAAe16B,KAAK26B,iBACxBP,EACAG,EACAD,EACA91B,EACA61B,GAEOv8B,EAAI,EAAGA,EAAI48B,EAAap4B,OAAQxE,IACvCq8B,EAAOjzB,KAAKwzB,EAAa58B,IAI7B,OAAOq8B,GAWD,YAAAQ,iBAAR,SAAyBn2B,EAAcgc,EAAoBoa,EAAkBC,EAAuBp4B,GAMlG,IALA,IAAMq4B,EAAOt2B,EAAKiC,UAAU+Z,EAAYoa,GAIlCF,EAAmC16B,KAAK45B,kBAAkB,GAAGrsB,QAAQutB,GAClEh9B,EAAI,EAAGA,EAAIkC,KAAK45B,kBAAkBt3B,OAAQxE,IAGjD,IADA,IAAMi9B,EAAe/6B,KAAK45B,kBAAkB97B,GAAGyP,QAAQutB,GAC9C5L,EAAI,EAAGA,EAAI6L,EAAaz4B,OAAQ4sB,IACvC8L,EAAwBC,aAAaP,EAAcK,EAAa7L,IAIpE,OADAlvB,KAAKk7B,0BAA0BR,EAAcG,EAAUp4B,GAChDi4B,GAWD,YAAAQ,0BAAR,SAAkCf,EAA4B31B,EAAmB/B,GAC/E,IAAI04B,EAAoB,EACpBC,GAAsB,EACtBd,EAAqB,EACrBe,EAAelB,EAAOgB,GAG1B,GAAKE,EAAL,CAIA,IAAK,IAAI3f,EAAIjZ,EAAUiZ,EAAI1b,KAAKkY,eAAezX,KAAMib,IAAK,CACxD,IAAMP,EAAQ3W,EAAK0B,SAASwV,GACtB,EAASlX,EAAK8b,UAAU5E,GAAGpZ,QAAU,EAAAkH,qBAAqBlH,OAIhE,GAAc,IAAV6Y,EAAJ,CAWA,IANKigB,GAAuBC,EAAa,IAAMf,IAC7Ce,EAAa,GAAK3f,EAClB0f,GAAsB,GAIpBC,EAAa,IAAMf,EAAoB,CAOzC,GANAe,EAAa,GAAK3f,IAGlB2f,EAAelB,IAASgB,IAItB,MAOEE,EAAa,IAAMf,GACrBe,EAAa,GAAK3f,EAClB0f,GAAsB,GAEtBA,GAAsB,EAM1Bd,GAAsB,GAKpBe,IACFA,EAAa,GAAKr7B,KAAKkY,eAAezX,QAY3B,EAAAw6B,aAAf,SAA4Bd,EAA4BmB,GAEtD,IADA,IAAIC,GAAU,EACLz9B,EAAI,EAAGA,EAAIq8B,EAAO73B,OAAQxE,IAAK,CACtC,IAAM09B,EAAQrB,EAAOr8B,GACrB,GAAKy9B,EAAL,CAwBE,GAAID,EAAS,IAAME,EAAM,GAIvB,OADArB,EAAOr8B,EAAI,GAAG,GAAKw9B,EAAS,GACrBnB,EAGT,GAAImB,EAAS,IAAME,EAAM,GAKvB,OAFArB,EAAOr8B,EAAI,GAAG,GAAKuD,KAAKC,IAAIg6B,EAAS,GAAIE,EAAM,IAC/CrB,EAAOhzB,OAAOrJ,EAAG,GACVq8B,EAKTA,EAAOhzB,OAAOrJ,EAAG,GACjBA,QA1CF,CACE,GAAIw9B,EAAS,IAAME,EAAM,GAGvB,OADArB,EAAOhzB,OAAOrJ,EAAG,EAAGw9B,GACbnB,EAGT,GAAImB,EAAS,IAAME,EAAM,GAIvB,OADAA,EAAM,GAAKn6B,KAAKiR,IAAIgpB,EAAS,GAAIE,EAAM,IAChCrB,EAGLmB,EAAS,GAAKE,EAAM,KAGtBA,EAAM,GAAKn6B,KAAKiR,IAAIgpB,EAAS,GAAIE,EAAM,IACvCD,GAAU,IAoChB,OARIA,EAEFpB,EAAOA,EAAO73B,OAAS,GAAG,GAAKg5B,EAAS,GAGxCnB,EAAOjzB,KAAKo0B,GAGPnB,GAEX,EA5QA,GAAa,EAAAa,2B,6BCpDb,SAAgBS,EAA2BtP,EAA2CtrB,GACpF,IAAM6c,EAAO7c,EAAQ66B,wBACrB,MAAO,CAACvP,EAAMwP,QAAUje,EAAKke,KAAMzP,EAAM0P,QAAUne,EAAKmU,K,oHAF1D,+BAiBA,qBAA0B1F,EAA2CtrB,EAAsBi7B,EAAkBC,EAAkBC,EAA2Bl6B,EAAyBC,EAA0Bk6B,GAE3M,GAAKD,EAAL,CAIA,IAAME,EAAST,EAA2BtP,EAAOtrB,GACjD,GAAKq7B,EAaL,OATAA,EAAO,GAAK76B,KAAK+Q,MAAM8pB,EAAO,IAAMD,EAAcn6B,EAAkB,EAAI,IAAMA,GAC9Eo6B,EAAO,GAAK76B,KAAK+Q,KAAK8pB,EAAO,GAAKn6B,GAKlCm6B,EAAO,GAAK76B,KAAKiR,IAAIjR,KAAKC,IAAI46B,EAAO,GAAI,GAAIJ,GAAYG,EAAc,EAAI,IAC3EC,EAAO,GAAK76B,KAAKiR,IAAIjR,KAAKC,IAAI46B,EAAO,GAAI,GAAIH,GAEtCG,IAQT,4BAAiCA,GAC/B,GAAKA,EAKL,MAAO,CAAExgB,EAAGwgB,EAAO,GAAK,GAAI74B,EAAG64B,EAAO,GAAK,M,uGC9C7C,iBAME,WACUC,GAAA,KAAAA,kBA6CZ,OAzCS,YAAAj8B,QAAP,WACMF,KAAKo8B,kBACP1+B,OAAO2+B,qBAAqBr8B,KAAKo8B,iBACjCp8B,KAAKo8B,qBAAkB/3B,IAIpB,YAAAi4B,QAAP,SAAeC,EAA8BC,EAA4BT,GAAzE,WACE/7B,KAAKy8B,UAAYV,EAEjBQ,OAAwBl4B,IAAbk4B,EAAyBA,EAAW,EAC/CC,OAAoBn4B,IAAXm4B,EAAuBA,EAASx8B,KAAKy8B,UAAY,EAE1Dz8B,KAAK08B,eAA+Br4B,IAAnBrE,KAAK08B,UAA0Br7B,KAAKiR,IAAItS,KAAK08B,UAAWH,GAAYA,EACrFv8B,KAAK28B,aAA2Bt4B,IAAjBrE,KAAK28B,QAAwBt7B,KAAKC,IAAItB,KAAK28B,QAASH,GAAUA,EAEzEx8B,KAAKo8B,kBAITp8B,KAAKo8B,gBAAkB1+B,OAAOk/B,uBAAsB,WAAM,SAAKC,qBAGzD,YAAAA,cAAR,WAEE,QAAuBx4B,IAAnBrE,KAAK08B,gBAA4Cr4B,IAAjBrE,KAAK28B,cAA4Ct4B,IAAnBrE,KAAKy8B,UAAvE,CAKA,IAAMzuB,EAAQ3M,KAAKC,IAAItB,KAAK08B,UAAW,GACjCzuB,EAAM5M,KAAKiR,IAAItS,KAAK28B,QAAS38B,KAAKy8B,UAAY,GAGpDz8B,KAAK08B,eAAYr4B,EACjBrE,KAAK28B,aAAUt4B,EACfrE,KAAKo8B,qBAAkB/3B,EAGvBrE,KAAKm8B,gBAAgBnuB,EAAOC,KAEhC,EApDA,GAAa,EAAA6uB,mB,wbCLb,IAcA,yE,OACU,EAAAC,yBAAmCr/B,OAAOme,iB,EAgDpD,OAjDsC,OAM7B,YAAAmhB,YAAP,SAAmB/1B,GAAnB,WACMjH,KAAKi9B,WACPj9B,KAAKk9B,gBAEPl9B,KAAKi9B,UAAYh2B,EACjBjH,KAAKm9B,eAAiB,WACf,EAAKF,YAGV,EAAKA,UAAUv/B,OAAOme,iBAAkB,EAAKkhB,0BAC7C,EAAKK,eAEPp9B,KAAKo9B,cAGA,YAAAl9B,QAAP,WACE,YAAMA,QAAO,WACbF,KAAKk9B,iBAGC,YAAAE,WAAR,W,MACOp9B,KAAKm9B,iBAKoB,QAA9B,EAAAn9B,KAAKq9B,iCAAyB,SAAEC,eAAet9B,KAAKm9B,gBAGpDn9B,KAAK+8B,yBAA2Br/B,OAAOme,iBACvC7b,KAAKq9B,0BAA4B3/B,OAAO6/B,WAAW,2BAA2B7/B,OAAOme,iBAAgB,SACrG7b,KAAKq9B,0BAA0BG,YAAYx9B,KAAKm9B,kBAG3C,YAAAD,cAAP,WACOl9B,KAAKq9B,2BAA8Br9B,KAAKi9B,WAAcj9B,KAAKm9B,iBAGhEn9B,KAAKq9B,0BAA0BC,eAAet9B,KAAKm9B,gBACnDn9B,KAAKq9B,+BAA4Bh5B,EACjCrE,KAAKi9B,eAAY54B,EACjBrE,KAAKm9B,oBAAiB94B,IAE1B,EAjDA,CAdA,KAcsCwE,YAAzB,EAAA40B,oB,6FCXb,iBAAgBnyB,EAASoyB,EAAQC,GAC/B,QAD+B,IAAAA,MAAA,GACZ,iBAARD,EACT,OAAOA,EAIT,IAAME,EAAoB/5B,MAAMg6B,QAAQH,GAAO,GAAK,GAEpD,IAAK,IAAMr+B,KAAOq+B,EAEhBE,EAAav+B,GAAOs+B,GAAS,EAAID,EAAIr+B,GAAQq+B,EAAIr+B,GAAOiM,EAAMoyB,EAAIr+B,GAAMs+B,EAAQ,GAAKD,EAAIr+B,GAG3F,OAAOu+B,I,gGCZT,WACA,QACA,QACA,OACA,QAGA,aAKE,WAAYpwB,GACVxN,KAAKO,MAAQ,IAAI,EAAAu9B,SAAatwB,GAC9BxN,KAAK+9B,cAAgB,IAAI,EAAAC,aA6L7B,OA1LU,YAAAC,kBAAR,WACE,IAAKj+B,KAAKO,MAAM29B,eAAe1wB,QAAQ2wB,iBACrC,MAAM,IAAI97B,MAAM,yEAIpB,sBAAW,2BAAY,C,IAAvB,WAA0C,OAAOrC,KAAKO,MAAMwD,c,gCAC5D,sBAAW,yBAAU,C,IAArB,WAAwC,OAAO/D,KAAKO,MAAM69B,Y,gCAC1D,sBAAW,gCAAiB,C,IAA5B,WAA+C,OAAOp+B,KAAKO,MAAM89B,mB,gCACjE,sBAAW,qBAAM,C,IAAjB,WAAsC,OAAOr+B,KAAKO,MAAM+9B,Q,gCACxD,sBAAW,uBAAQ,C,IAAnB,WAAwC,OAAOt+B,KAAKO,MAAMg+B,U,gCAC1D,sBAAW,4BAAa,C,IAAxB,WAA6C,OAAOv+B,KAAKO,MAAMi+B,e,gCAC/D,sBAAW,uBAAQ,C,IAAnB,WAAwC,OAAOx+B,KAAKO,MAAMk+B,U,gCAC1D,sBAAW,oBAAK,C,IAAhB,WAAuE,OAAOz+B,KAAKO,MAAMm+B,O,gCACzF,sBAAW,uBAAQ,C,IAAnB,WAAgE,OAAO1+B,KAAKO,MAAMo+B,U,gCAClF,sBAAW,uBAAQ,C,IAAnB,WAAgE,OAAO3+B,KAAKO,MAAM2D,U,gCAElF,sBAAW,sBAAO,C,IAAlB,WAAgD,OAAOlE,KAAKO,MAAMM,S,gCAClE,sBAAW,qBAAM,C,IAAjB,WAKE,OAJAb,KAAKi+B,oBACAj+B,KAAKglB,UACRhlB,KAAKglB,QAAU,IAAI4Z,EAAU5+B,KAAKO,QAE7BP,KAAKglB,S,gCAEd,sBAAW,sBAAO,C,IAAlB,WAEE,OADAhlB,KAAKi+B,oBACE,IAAIY,EAAW7+B,KAAKO,Q,gCAE7B,sBAAW,uBAAQ,C,IAAnB,WAAyD,OAAOP,KAAKO,MAAMu+B,U,gCAC3E,sBAAW,mBAAI,C,IAAf,WAA4B,OAAO9+B,KAAKO,MAAMC,M,gCAC9C,sBAAW,mBAAI,C,IAAf,WAA4B,OAAOR,KAAKO,MAAME,M,gCAC9C,sBAAW,qBAAM,C,IAAjB,WAEE,OADAT,KAAKi+B,oBACE,IAAIc,EAAmB/+B,KAAKO,MAAM6vB,U,gCAE3C,sBAAW,sBAAO,C,IAAlB,WAEE,OADApwB,KAAKi+B,oBACEj+B,KAAKO,MAAMy+B,S,gCAEb,YAAAC,KAAP,WACEj/B,KAAKO,MAAM0+B,QAEN,YAAAC,MAAP,WACEl/B,KAAKO,MAAM2+B,SAEN,YAAAt+B,OAAP,SAAcu+B,EAAiB3+B,GAC7BR,KAAKo/B,gBAAgBD,EAAS3+B,GAC9BR,KAAKO,MAAMK,OAAOu+B,EAAS3+B,IAEtB,YAAA6+B,KAAP,SAAYC,GACVt/B,KAAKO,MAAM8+B,KAAKC,IAEX,YAAAC,4BAAP,SAAmCC,GACjCx/B,KAAKO,MAAMg/B,4BAA4BC,IAElC,YAAAC,oBAAP,SAA2Bp6B,EAAekI,EAAmDC,GAE3F,OADAxN,KAAKi+B,oBACEj+B,KAAKO,MAAMk/B,oBAAoBp6B,EAAOkI,EAASC,IAEjD,YAAAkyB,sBAAP,SAA6BC,GAC3B3/B,KAAKi+B,oBACLj+B,KAAKO,MAAMm/B,sBAAsBC,IAE5B,YAAAC,qBAAP,SAA4BC,GAE1B,OADA7/B,KAAKi+B,oBACEj+B,KAAKO,MAAMq/B,qBAAqBC,IAElC,YAAA/F,wBAAP,SAA+BvsB,GAE7B,OADAvN,KAAKi+B,oBACEj+B,KAAKO,MAAMu5B,wBAAwBvsB,IAErC,YAAAysB,0BAAP,SAAiCC,GAC/Bj6B,KAAKi+B,oBACLj+B,KAAKO,MAAMy5B,0BAA0BC,IAEhC,YAAA6F,eAAP,SAAsBC,GAGpB,OAFA//B,KAAKi+B,oBACLj+B,KAAKo/B,gBAAgBW,GACd//B,KAAKO,MAAMy/B,UAAUD,IAEvB,YAAAC,UAAP,SAAiBD,GACf,OAAO//B,KAAK8/B,eAAeC,IAEtB,YAAAp9B,aAAP,WACE,OAAO3C,KAAKO,MAAMoC,gBAEb,YAAA+D,OAAP,SAAcu5B,EAAgBv8B,EAAapB,GACzCtC,KAAKo/B,gBAAgBa,EAAQv8B,EAAKpB,GAClCtC,KAAKO,MAAMmG,OAAOu5B,EAAQv8B,EAAKpB,IAE1B,YAAA49B,aAAP,WACE,OAAOlgC,KAAKO,MAAM2/B,gBAEb,YAAAr9B,qBAAP,WACE,OAAO7C,KAAKO,MAAMsC,wBAEb,YAAAN,eAAP,WACEvC,KAAKO,MAAMgC,kBAEN,YAAA49B,UAAP,WACEngC,KAAKO,MAAM4/B,aAEN,YAAAC,YAAP,SAAmBpyB,EAAeC,GAChCjO,KAAKo/B,gBAAgBpxB,EAAOC,GAC5BjO,KAAKO,MAAM6/B,YAAYpyB,EAAOC,IAEzB,YAAA/N,QAAP,WACEF,KAAK+9B,cAAc79B,UACnBF,KAAKO,MAAML,WAEN,YAAA0G,YAAP,SAAmBy5B,GACjBrgC,KAAKo/B,gBAAgBiB,GACrBrgC,KAAKO,MAAMqG,YAAYy5B,IAElB,YAAAC,YAAP,SAAmBC,GACjBvgC,KAAKo/B,gBAAgBmB,GACrBvgC,KAAKO,MAAM+/B,YAAYC,IAElB,YAAAC,YAAP,WACExgC,KAAKO,MAAMigC,eAEN,YAAAC,eAAP,WACEzgC,KAAKO,MAAMkgC,kBAEN,YAAAC,aAAP,SAAoBl8B,GAClBxE,KAAKo/B,gBAAgB56B,GACrBxE,KAAKO,MAAMmgC,aAAal8B,IAEnB,YAAA7D,MAAP,WACEX,KAAKO,MAAMI,SAEN,YAAAggC,MAAP,SAAa5yB,EAA2B6f,GACtC5tB,KAAKO,MAAMogC,MAAM5yB,EAAM6f,IAElB,YAAAgT,UAAP,SAAiB7yB,EAAkB6f,GACjC5tB,KAAKO,MAAMogC,MAAM5yB,EAAM6f,IAElB,YAAAiT,QAAP,SAAe9yB,EAA2B6f,GACxC5tB,KAAKO,MAAMogC,MAAM5yB,GACjB/N,KAAKO,MAAMogC,MAAM,OAAQ/S,IAEpB,YAAAkT,MAAP,SAAa/yB,GACX/N,KAAKO,MAAMugC,MAAM/yB,IAMZ,YAAAgzB,UAAP,SAAiB1hC,GACf,OAAOW,KAAKO,MAAM29B,eAAe6C,UAAU1hC,IAYtC,YAAA2hC,UAAP,SAAiB3hC,EAAUN,GACzBiB,KAAKO,MAAM29B,eAAe8C,UAAU3hC,EAAKN,IAEpC,YAAAu9B,QAAP,SAAetuB,EAAeC,GAC5BjO,KAAKo/B,gBAAgBpxB,EAAOC,GAC5BjO,KAAKO,MAAM+7B,QAAQtuB,EAAOC,IAErB,YAAAqjB,MAAP,WACEtxB,KAAKO,MAAM+wB,SAEN,YAAA2P,UAAP,SAAiBC,GACf,OAAOlhC,KAAK+9B,cAAckD,UAAUjhC,KAAMkhC,IAE5C,sBAAkB,YAAO,C,IAAzB,WACE,OAAOC,G,gCAGD,YAAA/B,gBAAR,W,IAAwB,sDACtB,IAAoB,UAAA/L,EAAA,eAAQ,CAAvB,IAAMt0B,EAAK,KACd,GAAIA,IAAUqiC,KAAYC,MAAMtiC,IAAUA,EAAQ,GAAM,EACtD,MAAM,IAAIsD,MAAM,oCAIxB,EApMA,GAAa,EAAAy7B,WAsMb,iBACE,WACUwD,EACQh0B,GADR,KAAAg0B,UACQ,KAAAh0B,OAqBpB,OAlBS,YAAAi0B,KAAP,SAAYj+B,GAEV,OADAtD,KAAKshC,QAAUh+B,EACRtD,MAGT,sBAAW,sBAAO,C,IAAlB,WAA+B,OAAOA,KAAKshC,QAAQj+B,G,gCACnD,sBAAW,sBAAO,C,IAAlB,WAA+B,OAAOrD,KAAKshC,QAAQ5lB,G,gCACnD,sBAAW,wBAAS,C,IAApB,WAAiC,OAAO1b,KAAKshC,QAAQjS,O,gCACrD,sBAAW,oBAAK,C,IAAhB,WAA6B,OAAOrvB,KAAKshC,QAAQlU,O,gCACjD,sBAAW,qBAAM,C,IAAjB,WAA8B,OAAOptB,KAAKshC,QAAQnU,MAAM7qB,Q,gCACjD,YAAAsC,QAAP,SAAevB,GACb,IAAMmB,EAAOxE,KAAKshC,QAAQnU,MAAMxuB,IAAI0E,GACpC,GAAKmB,EAGL,OAAO,IAAIg9B,EAAkBh9B,IAExB,YAAAipB,YAAP,WAAuC,OAAO,IAAI,EAAAtjB,UACpD,EAxBA,GA0BA,aAME,WAAoBs3B,GAApB,WAAoB,KAAAA,WAHZ,KAAAC,gBAAkB,IAAI,EAAAl6B,aAI5BxH,KAAK2hC,QAAU,IAAIC,EAAc5hC,KAAKyhC,SAASI,OAAQ,UACvD7hC,KAAK8hC,WAAa,IAAIF,EAAc5hC,KAAKyhC,SAASM,IAAK,aACvD/hC,KAAKyhC,SAASO,kBAAiB,WAAM,SAAKN,gBAAgBt6B,KAAK,EAAK66B,WAaxE,OAlBE,sBAAW,6BAAc,C,IAAzB,WAAkD,OAAOjiC,KAAK0hC,gBAAgBvV,O,gCAO9E,sBAAW,qBAAM,C,IAAjB,WACE,GAAInsB,KAAKyhC,SAASQ,SAAWjiC,KAAKyhC,SAASI,OAAU,OAAO7hC,KAAK6hC,OACjE,GAAI7hC,KAAKyhC,SAASQ,SAAWjiC,KAAKyhC,SAASM,IAAO,OAAO/hC,KAAKkiC,UAC9D,MAAM,IAAI7/B,MAAM,kD,gCAElB,sBAAW,qBAAM,C,IAAjB,WACE,OAAOrC,KAAK2hC,QAAQJ,KAAKvhC,KAAKyhC,SAASI,S,gCAEzC,sBAAW,wBAAS,C,IAApB,WACE,OAAO7hC,KAAK8hC,WAAWP,KAAKvhC,KAAKyhC,SAASM,M,gCAE9C,EAtBA,GAwBA,aACE,WAAoBI,GAAA,KAAAA,QAkBtB,OAhBE,sBAAW,wBAAS,C,IAApB,WAAkC,OAAOniC,KAAKmiC,MAAMt9B,W,gCACpD,sBAAW,qBAAM,C,IAAjB,WAA8B,OAAO7E,KAAKmiC,MAAM7/B,Q,gCACzC,YAAAyD,QAAP,SAAe2V,EAAW5V,GACxB,KAAI4V,EAAI,GAAKA,GAAK1b,KAAKmiC,MAAM7/B,QAI7B,OAAIwD,GACF9F,KAAKmiC,MAAM5hB,SAAS7E,EAAc5V,GAC3BA,GAEF9F,KAAKmiC,MAAM5hB,SAAS7E,EAAG,IAAI,EAAAvR,WAE7B,YAAA3D,kBAAP,SAAyBJ,EAAqBrD,EAAsBC,GAClE,OAAOhD,KAAKmiC,MAAM37B,kBAAkBJ,EAAWrD,EAAaC,IAEhE,EAnBA,GAqBA,aACE,WAAoBzC,GAAA,KAAAA,QA0BtB,OAxBS,YAAA6hC,mBAAP,SAA0BvqB,EAAyB+V,GACjD,OAAO5tB,KAAKO,MAAMotB,cAAc9V,GAAI,SAACkM,GAAoB,OAAA6J,EAAS7J,EAAO6C,eAEpE,YAAA+G,cAAP,SAAqB9V,EAAyB+V,GAC5C,OAAO5tB,KAAKoiC,mBAAmBvqB,EAAI+V,IAE9B,YAAAyU,mBAAP,SAA0BxqB,EAAyB+V,GACjD,OAAO5tB,KAAKO,MAAMstB,cAAchW,GAAI,SAAC9J,EAAcgW,GAAoB,OAAA6J,EAAS7f,EAAMgW,EAAO6C,eAExF,YAAAiH,cAAP,SAAqBhW,EAAyB+V,GAC5C,OAAO5tB,KAAKqiC,mBAAmBxqB,EAAI+V,IAE9B,YAAA0U,mBAAP,SAA0BzqB,EAAyBtK,GACjD,OAAOvN,KAAKO,MAAMwtB,cAAclW,EAAItK,IAE/B,YAAAwgB,cAAP,SAAqBlW,EAAyBtK,GAC5C,OAAOvN,KAAKsiC,mBAAmBzqB,EAAItK,IAE9B,YAAAg1B,mBAAP,SAA0B9b,EAAemH,GACvC,OAAO5tB,KAAKO,MAAMytB,cAAcvH,EAAOmH,IAElC,YAAAI,cAAP,SAAqBvH,EAAemH,GAClC,OAAO5tB,KAAKuiC,mBAAmB9b,EAAOmH,IAE1C,EA3BA,GA6BA,aACE,WAAoBrtB,GAAA,KAAAA,QAiBtB,OAfS,YAAAiI,SAAP,SAAgBg6B,GACdxiC,KAAKO,MAAMkiC,eAAej6B,SAASg6B,IAGrC,sBAAW,uBAAQ,C,IAAnB,WACE,OAAOxiC,KAAKO,MAAMkiC,eAAeC,U,gCAGnC,sBAAW,4BAAa,C,IAAxB,WACE,OAAO1iC,KAAKO,MAAMkiC,eAAeE,e,IAGnC,SAAyBC,GACvB5iC,KAAKO,MAAMkiC,eAAeE,cAAgBC,G,gCAE9C,EAlBA,I,gbCjSA,YACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,QAEA,QAEA,QACA,OACA,QACA,QACA,QACA,OACA,QAEA,QACA,QACA,QACA,QAIM5pB,EAAwC,oBAAXtb,OAA0BA,OAAOsb,SAAW,KAE/E,cA2EE,WACExL,QAAA,IAAAA,MAAA,IADF,MAGE,YAAMA,IAAQ,K,OAjET,EAAAq1B,QAAyBC,EAmBxB,EAAAC,iBAA2B,EAW3B,EAAA3c,cAAgB,IAAI,EAAA5e,aAEpB,EAAAw7B,OAAS,IAAI,EAAAx7B,aAEb,EAAAy7B,UAAY,IAAI,EAAAz7B,aAEhB,EAAA07B,mBAAqB,IAAI,EAAA17B,aAEzB,EAAA+e,eAAiB,IAAI,EAAA/e,aAGrB,EAAA27B,SAAW,IAAI,EAAA37B,aAEf,EAAA47B,QAAU,IAAI,EAAA57B,aAEd,EAAA67B,mBAAqB,IAAI,EAAA77B,aAEzB,EAAA87B,kBAAoB,IAAI,EAAA97B,aAoB9B,EAAK+7B,SAEL,EAAKC,UAAY,EAAKC,sBAAsBC,eAAe,EAAAC,WAC3D,EAAKC,WAAa,EAAKp7B,SAAS,EAAKi7B,sBAAsBC,eAAe,EAAAG,aAG1E,EAAKr7B,SAAS,EAAKs7B,cAAcC,eAAc,WAAM,SAAKxZ,WAC1D,EAAK/hB,SAAS,EAAKs7B,cAAcE,sBAAqB,SAACh2B,EAAOC,GAAQ,SAAKquB,QAAQtuB,EAAOC,OAC1F,EAAKzF,SAAS,EAAKs7B,cAAcG,gBAAe,WAAM,SAAK3S,YAC3D,EAAK9oB,SAAS,EAAKs7B,cAAcI,iBAAgB,SAACrjB,EAAWhc,GAAc,SAAKs/B,OAAOtjB,EAAWhc,QAAaR,OAC/G,EAAKmE,SAAS,EAAKs7B,cAAcM,+BAA8B,SAAA92B,GAAQ,SAAK+2B,sBAAsB/2B,OAClG,EAAK9E,SAAS,EAAA87B,aAAa,EAAKR,cAAc//B,aAAc,EAAKqiB,gBACjE,EAAK5d,SAAS,EAAA87B,aAAa,EAAKR,cAActF,cAAe,EAAKjY,iBAClE,EAAK/d,SAAS,EAAA87B,aAAa,EAAKR,cAAcS,WAAY,EAAKlB,qBAC/D,EAAK76B,SAAS,EAAA87B,aAAa,EAAKR,cAAcU,UAAW,EAAKlB,oBAG9D,EAAK96B,SAAS,EAAK0P,eAAehU,UAAS,SAAAyD,GAAK,SAAK88B,aAAa98B,EAAElH,KAAMkH,EAAEnH,U,EA6jChF,OA9pC8B,OAgB5B,sBAAW,sBAAO,C,IAAlB,WAAoD,OAAOR,KAAKk+B,eAAe1wB,S,gCA4B/E,sBAAW,2BAAY,C,IAAvB,WAA0C,OAAOxN,KAAKomB,cAAc+F,O,gCAEpE,sBAAW,oBAAK,C,IAAhB,WAAuE,OAAOnsB,KAAKgjC,OAAO7W,O,gCAE1F,sBAAW,uBAAQ,C,IAAnB,WAAgE,OAAOnsB,KAAKijC,UAAU9W,O,gCAEtF,sBAAW,gCAAiB,C,IAA5B,WAA+C,OAAOnsB,KAAKkjC,mBAAmB/W,O,gCAE9E,sBAAW,4BAAa,C,IAAxB,WAA6C,OAAOnsB,KAAKumB,eAAe4F,O,gCAGxE,sBAAW,sBAAO,C,IAAlB,WAAqC,OAAOnsB,KAAKmjC,SAAShX,O,gCAE1D,sBAAW,qBAAM,C,IAAjB,WAAoC,OAAOnsB,KAAKojC,QAAQjX,O,gCAExD,sBAAW,yBAAU,C,IAArB,WAA0C,OAAOnsB,KAAKqjC,mBAAmBlX,O,gCAEzE,sBAAW,wBAAS,C,IAApB,WAAyC,OAAOnsB,KAAKsjC,kBAAkBnX,O,gCAuChE,YAAAjsB,QAAP,W,UACMF,KAAKuI,cAGT,YAAMrI,QAAO,WACM,QAAnB,EAAAF,KAAKU,sBAAc,SAAER,UACrBF,KAAK0kC,4BAAyBrgC,EAC9BrE,KAAK2gC,MAAQ,aACW,QAAxB,EAAY,QAAZ,EAAA3gC,KAAKa,eAAO,eAAE8jC,kBAAU,SAAE5iB,YAAY/hB,KAAKa,WAGnC,YAAA0iC,OAAV,WACE,YAAMA,OAAM,WAEZvjC,KAAK0kC,4BAAyBrgC,GAMhC,sBAAW,qBAAM,C,IAAjB,WACE,OAAOrE,KAAKowB,QAAQ6R,Q,gCAMf,YAAA/C,MAAP,WACMl/B,KAAK8+B,UACP9+B,KAAK8+B,SAASI,MAAM,CAAE0F,eAAe,KAI/B,YAAAC,eAAV,SAAyBxlC,G,YAIvB,OAHA,YAAMwlC,eAAc,UAACxlC,GAGbA,GACN,IAAK,aACL,IAAK,WAEgB,QAAnB,EAAAW,KAAKU,sBAAc,SAAEC,QACA,QAArB,EAAAX,KAAK8kC,wBAAgB,SAAEC,UACvB,MACF,IAAK,cACL,IAAK,cAEH/kC,KAAKs8B,QAAQt8B,KAAKsD,OAAOD,EAAGrD,KAAKsD,OAAOD,GACxC,MACF,IAAK,6BACL,IAAK,gBACL,IAAK,aACL,IAAK,aACL,IAAK,iBACL,IAAK,uBAECrD,KAAKU,iBACPV,KAAKU,eAAeC,QACpBX,KAAKU,eAAewD,SAASlE,KAAKS,KAAMT,KAAKQ,MAC7CR,KAAKs8B,QAAQ,EAAGt8B,KAAKQ,KAAO,IAE9B,MACF,IAAK,eACCR,KAAKU,iBACPV,KAAKU,eAAeskC,YAAYhlC,KAAKilC,mBACrCjlC,KAAKU,eAAewD,SAASlE,KAAKS,KAAMT,KAAKQ,OAE/C,MACF,IAAK,aACU,QAAb,EAAAR,KAAK0B,gBAAQ,SAAEwjC,iBACf,MACF,IAAK,mBACCllC,KAAKk+B,eAAe1wB,QAAQmf,kBACzB3sB,KAAKmlC,uBAAyBnlC,KAAKU,iBACtCV,KAAKmlC,sBAAwB,IAAI,EAAAC,qBAAqBplC,KAAMA,KAAKU,kBAGzC,QAA1B,EAAAV,KAAKmlC,6BAAqB,SAAEjlC,UAC5BF,KAAKmlC,2BAAwB9gC,GAE/B,MACF,IAAK,eAAgBrE,KAAKowB,QAAQiV,gBAAiB,MACnD,IAAK,QACHrlC,KAAKslC,UAAUtlC,KAAKk+B,eAAe1wB,QAAQsqB,SAQzC,YAAAyN,iBAAR,SAAyBC,GACnBxlC,KAAK4jB,aAAaiJ,gBAAgBoD,WACpCjwB,KAAK4jB,aAAaS,iBAAiB,EAAA7Q,GAAG4B,IAAM,MAE9CpV,KAAKylC,kBAAkBD,GACvBxlC,KAAKa,QAASqY,UAAUC,IAAI,SAC5BnZ,KAAK0lC,cACL1lC,KAAKmjC,SAAS/7B,QAOT,YAAA63B,KAAP,W,MACE,OAAoB,QAApB,EAAOj/B,KAAK8+B,gBAAQ,eAAEG,QAMhB,YAAA0G,gBAAR,WAGE3lC,KAAK8+B,SAAU//B,MAAQ,GACvBiB,KAAKs8B,QAAQt8B,KAAKsD,OAAOD,EAAGrD,KAAKsD,OAAOD,GACpCrD,KAAK4jB,aAAaiJ,gBAAgBoD,WACpCjwB,KAAK4jB,aAAaS,iBAAiB,EAAA7Q,GAAG4B,IAAM,MAE9CpV,KAAKa,QAASqY,UAAU0sB,OAAO,SAC/B5lC,KAAKojC,QAAQh8B,QAGP,YAAAy+B,cAAR,WACE,GAAK7lC,KAAK8+B,UAAa9+B,KAAKsD,OAAOwiC,qBAAsB9lC,KAAK+lC,mBAAoBC,YAAlF,CAIA,IAAMC,EAAa5kC,KAAK+Q,KAAKpS,KAAK8kC,iBAAkBzpB,OAASrb,KAAKk+B,eAAe1wB,QAAQ04B,YACnFC,EAAYnmC,KAAKkY,eAAe5U,OAAOD,EAAI4iC,EAC3CG,EAAapmC,KAAKkY,eAAe5U,OAAOoY,EAAI1b,KAAK8kC,iBAAkB3pB,MAIzEnb,KAAK8+B,SAAS1lB,MAAMwiB,KAAOwK,EAAa,KACxCpmC,KAAK8+B,SAAS1lB,MAAMyY,IAAMsU,EAAY,KACtCnmC,KAAK8+B,SAAS1lB,MAAM+B,MAAQnb,KAAK8kC,iBAAkB3pB,MAAQ,KAC3Dnb,KAAK8+B,SAAS1lB,MAAMiC,OAAS4qB,EAAa,KAC1CjmC,KAAK8+B,SAAS1lB,MAAM8sB,WAAaD,EAAa,KAC9CjmC,KAAK8+B,SAAS1lB,MAAMtB,OAAS,OAMvB,YAAAuuB,YAAR,sBACErmC,KAAKsmC,YAGLtmC,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAKa,QAAU,QAAQ,SAACsrB,GAGxD,EAAKxpB,gBAGV,EAAA6jC,YAAYra,EAAO,EAAKsa,uBAE1B,IAAMC,EAAsB,SAACva,GAAgC,SAAAwa,iBAAiBxa,EAAO,EAAK2S,SAAW,EAAKlb,eAC1G5jB,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAK8+B,SAAW,QAAS4H,IAChE1mC,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAKa,QAAU,QAAS6lC,IAG3D5D,EAAQ9vB,UAEVhT,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAKa,QAAU,aAAa,SAACsrB,GAC7C,IAAjBA,EAAMya,QACR,EAAAC,kBAAkB1a,EAAO,EAAK2S,SAAW,EAAKgI,cAAgB,EAAKL,kBAAoB,EAAKj5B,QAAQu5B,2BAIxG/mC,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAKa,QAAU,eAAe,SAACsrB,GACpE,EAAA0a,kBAAkB1a,EAAO,EAAK2S,SAAW,EAAKgI,cAAgB,EAAKL,kBAAoB,EAAKj5B,QAAQu5B,2BAOpGjE,EAAQvvB,SAGVvT,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAKa,QAAU,YAAY,SAACsrB,GAC5C,IAAjBA,EAAMya,QACR,EAAAI,6BAA6B7a,EAAO,EAAK2S,SAAW,EAAKgI,oBASzD,YAAAR,UAAR,sBACEtmC,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAK8+B,SAAW,SAAS,SAAC0G,GAAsB,SAAKyB,OAAOzB,MAAK,IACxGxlC,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAK8+B,SAAW,WAAW,SAAC0G,GAAsB,SAAK0B,SAAS1B,MAAK,IAC5GxlC,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAK8+B,SAAW,YAAY,SAAC0G,GAAsB,SAAK2B,UAAU3B,MAAK,IAC9GxlC,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAK8+B,SAAW,oBAAoB,WAAM,SAAKiH,mBAAoBqB,uBAC1GpnC,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAK8+B,SAAW,qBAAqB,SAACn3B,GAAwB,SAAKo+B,mBAAoBsB,kBAAkB1/B,OAChJ3H,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAK8+B,SAAW,kBAAkB,WAAM,SAAKiH,mBAAoBuB,qBACxGtnC,KAAKwI,SAASxI,KAAK2+B,UAAS,WAAM,SAAKoH,mBAAoBwB,gCAC3DvnC,KAAKwI,SAASxI,KAAK2+B,UAAS,SAAAh3B,GAAK,SAAK6/B,oBAAoB7/B,EAAEqG,MAAOrG,EAAEsG,UAQhE,YAAAoxB,KAAP,SAAYC,GAAZ,WACE,IAAKA,EACH,MAAM,IAAIj9B,MAAM,uCAGb2W,EAASyuB,KAAK50B,SAASysB,IAC1Bt/B,KAAK6jB,YAAYc,MAAM,2EAGzB3kB,KAAK0nC,UAAYpI,EAAOqI,cAGxB3nC,KAAKa,QAAUb,KAAK0nC,UAAUzuB,cAAc,OAC5CjZ,KAAKa,QAAQ+mC,IAAM,MACnB5nC,KAAKa,QAAQqY,UAAUC,IAAI,YAC3BnZ,KAAKa,QAAQqY,UAAUC,IAAI,SAC3BnZ,KAAKa,QAAQgnC,aAAa,WAAY,KACtCvI,EAAOhmB,YAAYtZ,KAAKa,SAIxB,IAAMinC,EAAW9uB,EAAS+uB,yBAC1B/nC,KAAKgoC,iBAAmBhvB,EAASC,cAAc,OAC/CjZ,KAAKgoC,iBAAiB9uB,UAAUC,IAAI,kBACpC2uB,EAASxuB,YAAYtZ,KAAKgoC,kBAC1BhoC,KAAKioC,oBAAsBjvB,EAASC,cAAc,OAClDjZ,KAAKioC,oBAAoB/uB,UAAUC,IAAI,qBACvCnZ,KAAKgoC,iBAAiB1uB,YAAYtZ,KAAKioC,qBAEvCjoC,KAAK8mC,cAAgB9tB,EAASC,cAAc,OAC5CjZ,KAAK8mC,cAAc5tB,UAAUC,IAAI,gBAGjCnZ,KAAKkoC,iBAAmBlvB,EAASC,cAAc,OAC/CjZ,KAAKkoC,iBAAiBhvB,UAAUC,IAAI,iBACpCnZ,KAAK8mC,cAAcxtB,YAAYtZ,KAAKkoC,kBACpCJ,EAASxuB,YAAYtZ,KAAK8mC,eAE1B9mC,KAAK8+B,SAAW9lB,EAASC,cAAc,YACvCjZ,KAAK8+B,SAAS5lB,UAAUC,IAAI,yBAC5BnZ,KAAK8+B,SAAS+I,aAAa,aAAc1G,EAAQnf,aACjDhiB,KAAK8+B,SAAS+I,aAAa,iBAAkB,SAC7C7nC,KAAK8+B,SAAS+I,aAAa,cAAe,OAC1C7nC,KAAK8+B,SAAS+I,aAAa,iBAAkB,OAC7C7nC,KAAK8+B,SAAS+I,aAAa,aAAc,SACzC7nC,KAAK8+B,SAASqJ,SAAW,EACzBnoC,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAK8+B,SAAU,SAAS,SAAC0G,GAAsB,SAAKD,iBAAiBC,OAC5GxlC,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAK8+B,SAAU,QAAQ,WAAM,SAAK6G,sBACzE3lC,KAAKkoC,iBAAiB5uB,YAAYtZ,KAAK8+B,UAEvC,IAAMsJ,EAAqBpoC,KAAKyjC,sBAAsBC,eAAe,EAAA2E,mBAAoBroC,KAAK8+B,UAC9F9+B,KAAKyjC,sBAAsB6E,WAAW,EAAAv9B,oBAAqBq9B,GAE3DpoC,KAAK8kC,iBAAmB9kC,KAAKyjC,sBAAsBC,eAAe,EAAA6E,gBAAiBvoC,KAAK0nC,UAAW1nC,KAAKkoC,kBACxGloC,KAAKyjC,sBAAsB6E,WAAW,EAAAx9B,iBAAkB9K,KAAK8kC,kBAE7D9kC,KAAKwoC,iBAAmBxvB,EAASC,cAAc,OAC/CjZ,KAAKwoC,iBAAiBtvB,UAAUC,IAAI,oBACpCnZ,KAAK+lC,mBAAqB/lC,KAAKyjC,sBAAsBC,eAAe,EAAA+E,kBAAmBzoC,KAAK8+B,SAAU9+B,KAAKwoC,kBAC3GxoC,KAAKkoC,iBAAiB5uB,YAAYtZ,KAAKwoC,kBAGvCxoC,KAAKa,QAAQyY,YAAYwuB,GAEzB9nC,KAAK0oC,OAAS1oC,KAAKwN,QAAQsqB,OAAS93B,KAAK0oC,OACzC1oC,KAAK2oC,cAAgB,IAAI,EAAAnP,aAAaxgB,EAAUhZ,KAAKwN,QAAQkpB,mBAC7D12B,KAAKwI,SAASxI,KAAKk+B,eAAe0K,gBAAe,SAAAjhC,GAAK,SAAKghC,cAAe/Q,gBAAgBjwB,OAC1F3H,KAAK2oC,cAAc9Q,SAAS73B,KAAK0oC,QAEjC,IAAMG,EAAW7oC,KAAKilC,kBACtBjlC,KAAKU,eAAiBV,KAAKwI,SAASxI,KAAKyjC,sBAAsBC,eAAe,EAAAoF,cAAeD,EAAU7oC,KAAKQ,KAAMR,KAAK8mC,gBACvH9mC,KAAKyjC,sBAAsB6E,WAAW,EAAAr9B,eAAgBjL,KAAKU,gBAC3DV,KAAKwI,SAASxI,KAAKU,eAAeqoC,wBAAuB,SAAAphC,GAAK,SAAKs7B,UAAU77B,KAAKO,OAClF3H,KAAKkE,UAAS,SAAAyD,GAAK,SAAKjH,eAAgBE,OAAO+G,EAAElH,KAAMkH,EAAEnH,SAEzDR,KAAKgpC,cAAgBhpC,KAAKyjC,sBAAsBC,eAAe,EAAAuF,cAC/DjpC,KAAKyjC,sBAAsB6E,WAAW,EAAAn9B,cAAenL,KAAKgpC,eAC1DhpC,KAAKkpC,cAAgBlpC,KAAKyjC,sBAAsBC,eAAe,EAAAyF,cAC/DnpC,KAAKyjC,sBAAsB6E,WAAW,EAAAt9B,cAAehL,KAAKkpC,eAE1DlpC,KAAK0B,SAAW1B,KAAKyjC,sBAAsBC,eAAe,EAAA0F,UACxD,SAAC/I,EAAgBgJ,GAA2B,SAAKziC,YAAYy5B,EAAQgJ,KACrErpC,KAAKgoC,iBACLhoC,KAAKioC,qBAEPjoC,KAAK0B,SAAS4nC,cAActpC,KAAK2oC,cAAchT,QAC/C31B,KAAKwI,SAASxI,KAAK8jC,cAAcyF,wBAAuB,WAAM,SAAK7nC,SAAUwjC,qBAC7EllC,KAAKwI,SAASxI,KAAK0B,UAEnB1B,KAAKwI,SAASxI,KAAK+D,cAAa,WAC9B,EAAKrD,eAAgBqD,eACrB,EAAK8hC,oBAEP7lC,KAAKwI,SAASxI,KAAKkE,UAAS,WAAM,SAAKxD,eAAgBwD,SAAS,EAAKzD,KAAM,EAAKD,UAChFR,KAAKwI,SAASxI,KAAK+Z,QAAO,WAAM,SAAKrZ,eAAgBqZ,aACrD/Z,KAAKwI,SAASxI,KAAKga,SAAQ,WAAM,SAAKtZ,eAAgBsZ,cACtDha,KAAKwI,SAASxI,KAAKU,eAAe8oC,oBAAmB,WAAM,SAAK9nC,SAAUwjC,qBAE1EllC,KAAKymC,kBAAoBzmC,KAAKwI,SAASxI,KAAKyjC,sBAAsBC,eAAe,EAAA+F,iBAC/EzpC,KAAKa,QACLb,KAAK8mC,gBACP9mC,KAAKyjC,sBAAsB6E,WAAW,EAAAp9B,kBAAmBlL,KAAKymC,mBAC9DzmC,KAAKwI,SAASxI,KAAKymC,kBAAkBiD,sBAAqB,SAAA/hC,GAAK,SAAKf,YAAYe,EAAE04B,OAAQ14B,EAAEgiC,yBAC5F3pC,KAAKwI,SAASxI,KAAKymC,kBAAkBpI,mBAAkB,WAAM,SAAK6E,mBAAmB97B,WACrFpH,KAAKwI,SAASxI,KAAKymC,kBAAkBmD,iBAAgB,SAAAjiC,GAAK,SAAKjH,eAAgBwZ,mBAAmBvS,EAAEqG,MAAOrG,EAAEsG,IAAKtG,EAAEwS,sBACpHna,KAAKwI,SAASxI,KAAKymC,kBAAkBoD,uBAAsB,SAAA/O,GAIzD,EAAKgE,SAAU//B,MAAQ+7B,EACvB,EAAKgE,SAAUI,QACf,EAAKJ,SAAUp4B,aAEjB1G,KAAKwI,SAASxI,KAAKy+B,UAAS,WAC1B,EAAK/8B,SAAUwjC,iBACf,EAAKuB,kBAAmBnK,cAE1Bt8B,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAKgoC,iBAAkB,UAAU,WAAM,SAAKvB,kBAAmBnK,cAEtGt8B,KAAK8pC,kBAAoB9pC,KAAKyjC,sBAAsBC,eAAe,EAAAqG,iBAAkB/pC,KAAKa,QAASb,KAAK8mC,eACxG9mC,KAAKwI,SAASxI,KAAK8pC,mBACnB9pC,KAAKwI,SAASxI,KAAKy+B,UAAS,WAAM,SAAKqL,kBAAmBE,eAC1DhqC,KAAKwjC,UAAUyG,YAAYjqC,KAAKa,QAASb,KAAK8pC,mBAC9C9pC,KAAK4jC,WAAWqG,YAAYjqC,KAAKa,QAASb,KAAKkpC,cAAelpC,KAAKU,gBAGnEV,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAKa,QAAS,aAAa,SAAC8G,GAAkB,SAAK8+B,kBAAmByD,YAAYviC,OAGrH3H,KAAK8kB,kBAAkBqlB,sBACzBnqC,KAAKymC,kBAAkB2D,UACvBpqC,KAAKa,QAAQqY,UAAUC,IAAI,wBAE3BnZ,KAAKymC,kBAAkB4D,SAGrBrqC,KAAKwN,QAAQmf,mBAGf3sB,KAAKmlC,sBAAwB,IAAI,EAAAC,qBAAqBplC,KAAMA,KAAKU,iBAInEV,KAAK8kC,iBAAiBC,UAGtB/kC,KAAKs8B,QAAQ,EAAGt8B,KAAKQ,KAAO,GAG5BR,KAAKqmC,cAILrmC,KAAKsqC,aAGC,YAAArF,gBAAR,WACE,OAAQjlC,KAAKwN,QAAQ+8B,cACnB,IAAK,SAAU,OAAOvqC,KAAKyjC,sBAAsBC,eAAe,EAAA8G,SAAUxqC,KAAK2oC,cAAehT,OAAQ31B,KAAK8mC,cAAgB9mC,KAAKwjC,UAAWxjC,KAAK4jC,YAChJ,IAAK,MAAO,OAAO5jC,KAAKyjC,sBAAsBC,eAAe,EAAA+G,YAAazqC,KAAK2oC,cAAehT,OAAQ31B,KAAKa,QAAUb,KAAK8mC,cAAgB9mC,KAAKgoC,iBAAmBhoC,KAAKwjC,UAAWxjC,KAAK4jC,YACvL,QAAS,MAAM,IAAIvhC,MAAM,8BAA8BrC,KAAKwN,QAAQ+8B,aAAY,OAQ5E,YAAAjF,UAAR,SAAkBxN,G,UAChB93B,KAAK0oC,OAAS5Q,EACI,QAAlB,EAAA93B,KAAK2oC,qBAAa,SAAE9Q,SAASC,GACV,QAAnB,EAAA93B,KAAKU,sBAAc,SAAE0Z,UAAUpa,KAAK2oC,cAAehT,QACtC,QAAb,EAAA31B,KAAK0B,gBAAQ,SAAE4nC,cAActpC,KAAK2oC,cAAehT,SAkB5C,YAAA2U,UAAP,sBACQI,EAAO1qC,KACP+S,EAAK/S,KAAKa,QAGhB,SAAS8pC,EAAUnF,GAEjB,IAKIoF,EACA5jB,EANE7X,EAAMu7B,EAAKxB,cAAe2B,iBAAiBrF,EAAIkF,EAAK5D,cAAgB4D,EAAKjqC,KAAMiqC,EAAKlqC,MAC1F,IAAK2O,EACH,OAAO,EAKT,OAAcq2B,EAAIsF,cAAgBtF,EAAGl4B,MACnC,IAAK,YACH0Z,EAAS,QACU3iB,IAAfmhC,EAAGuF,SAELH,EAAM,OACYvmC,IAAdmhC,EAAGoB,SACLgE,EAAMpF,EAAGoB,OAAS,EAAIpB,EAAGoB,OAAS,IAIpCgE,EAAmB,EAAbpF,EAAGuF,QAAc,EACR,EAAbvF,EAAGuF,QAAc,EACF,EAAbvF,EAAGuF,QAAc,E,EAGvB,MACF,IAAK,UACH/jB,EAAS,EACT4jB,EAAMpF,EAAGoB,OAAS,EAAIpB,EAAGoB,OAAS,EAClC,MACF,IAAK,YACH5f,EAAS,EACT4jB,EAAMpF,EAAGoB,OAAS,EAAIpB,EAAGoB,OAAS,EAClC,MACF,IAAK,QAE+B,IAA7BpB,EAAkBwF,SACrBhkB,EAAUwe,EAAkBwF,OAAS,EAAI,EAAqB,GAEhEJ,EAAM,EACN,MACF,QAEE,OAAO,EAKX,aAAevmC,IAAX2iB,QAAgC3iB,IAARumC,GAAqBA,EAAM,IAIhDF,EAAK5lB,kBAAkBmmB,kBAAkB,CAC9CtnC,IAAKwL,EAAIuM,EAAI,GACbhY,IAAKyL,EAAI9L,EAAI,GACbujC,OAAQgE,EACR5jB,OAAM,EACNkkB,KAAM1F,EAAG2F,QACTpJ,IAAKyD,EAAG4F,OACRpZ,MAAOwT,EAAG6F,WAYd,IAAMC,EAAmE,CACvEC,QAAS,KACTC,MAAO,KACPC,UAAW,KACXC,UAAW,MAEPC,EACK,SAACnG,GASR,OARAmF,EAAUnF,GACLA,EAAGuF,UAEN,EAAKrD,UAAW/5B,oBAAoB,UAAW29B,EAAgBC,SAC3DD,EAAgBG,WAClB,EAAK/D,UAAW/5B,oBAAoB,YAAa29B,EAAgBG,YAG9D,EAAKG,OAAOpG,IAVjBmG,EAYG,SAACnG,GAGN,OAFAmF,EAAUnF,GACVA,EAAGqG,iBACI,EAAKD,OAAOpG,IAfjBmG,EAiBO,SAACnG,GAENA,EAAGuF,SACLJ,EAAUnF,IApBVmG,EAuBO,SAACnG,GAELA,EAAGuF,SACNJ,EAAUnF,IAIhBxlC,KAAKwI,SAASxI,KAAK8kB,kBAAkBgnB,kBAAiB,SAAAC,GAEhDA,GAC2C,UAAzC,EAAK7N,eAAe1wB,QAAQw+B,UAC9B,EAAKnoB,YAAYc,MAAM,2BAA4B,EAAKG,kBAAkBmnB,cAAcF,IAE1F,EAAKlrC,QAASqY,UAAUC,IAAI,uBAC5B,EAAKstB,kBAAmB2D,YAExB,EAAKvmB,YAAYc,MAAM,gCACvB,EAAK9jB,QAASqY,UAAU0sB,OAAO,uBAC/B,EAAKa,kBAAmB4D,UAKX,EAAT0B,EAGMT,EAAgBI,YAC1B34B,EAAGtF,iBAAiB,YAAak+B,GACjCL,EAAgBI,UAAYC,IAJ5B54B,EAAGpF,oBAAoB,YAAa29B,EAAgBI,WACpDJ,EAAgBI,UAAY,MAMf,GAATK,EAGMT,EAAgBE,QAC1Bz4B,EAAGtF,iBAAiB,QAASk+B,EAAsB,CAAEO,SAAS,IAC9DZ,EAAgBE,MAAQG,IAJxB54B,EAAGpF,oBAAoB,QAAS29B,EAAgBE,OAChDF,EAAgBE,MAAQ,MAMX,EAATO,EAGMT,EAAgBC,UAC1BD,EAAgBC,QAAUI,IAH1B,EAAKjE,UAAW/5B,oBAAoB,UAAW29B,EAAgBC,SAC/DD,EAAgBC,QAAU,MAKb,EAATQ,EAGMT,EAAgBG,YAC1BH,EAAgBG,UAAYE,IAH5B,EAAKjE,UAAW/5B,oBAAoB,YAAa29B,EAAgBG,WACjEH,EAAgBG,UAAY,UAMhCzrC,KAAK8kB,kBAAkBkL,eAAiBhwB,KAAK8kB,kBAAkBkL,eAK/DhwB,KAAKwI,SAAS,EAAA+9B,yBAAyBxzB,EAAI,aAAa,SAACyyB,GAOvD,GANAA,EAAGqG,iBACH,EAAK3M,QAKA,EAAKpa,kBAAkBqlB,uBAAwB,EAAK1D,kBAAmB0F,qBAAqB3G,GAiBjG,OAbAmF,EAAUnF,GAMN8F,EAAgBC,SAClB,EAAK7D,UAAWj6B,iBAAiB,UAAW69B,EAAgBC,SAE1DD,EAAgBG,WAClB,EAAK/D,UAAWj6B,iBAAiB,YAAa69B,EAAgBG,WAGzD,EAAKG,OAAOpG,OAGrBxlC,KAAKwI,SAAS,EAAA+9B,yBAAyBxzB,EAAI,SAAS,SAACyyB,GACnD,GAAK8F,EAAgBE,YAGnB,IAAK,EAAKloC,OAAO8oC,cAAe,CAC9B,IAAM/L,EAAS,EAAK3+B,SAAU2qC,iBAAiB7G,GAG/C,GAAe,IAAXnF,EACF,OAMF,IAFA,IAAMiM,EAAW,EAAA94B,GAAG4B,KAAO,EAAKwO,aAAaiJ,gBAAgB+C,sBAAwB,IAAM,MAAQ4V,EAAGwF,OAAS,EAAI,IAAM,KACrHj9B,EAAO,GACFjQ,EAAI,EAAGA,EAAIuD,KAAKkrC,IAAIlM,GAASviC,IACpCiQ,GAAQu+B,EAEV,EAAK1oB,aAAaS,iBAAiBtW,GAAM,MAI5C,CAAEm+B,SAAS,KAIdlsC,KAAKwI,SAAS,EAAA+9B,yBAAyBxzB,EAAI,SAAS,SAACyyB,GACnD,IAAI8F,EAAgBE,MACpB,OAAK,EAAK9pC,SAAU8qC,QAAQhH,QAA5B,EACS,EAAKoG,OAAOpG,KAEpB,CAAE0G,SAAS,KAEdlsC,KAAKwI,SAAS,EAAA+9B,yBAAyBxzB,EAAI,cAAc,SAACyyB,GACxD,IAAI,EAAK1gB,kBAAkBqlB,qBAE3B,OADA,EAAKzoC,SAAU+qC,aAAajH,GACrB,EAAKoG,OAAOpG,KAClB,CAAE0G,SAAS,KAEdlsC,KAAKwI,SAAS,EAAA+9B,yBAAyBxzB,EAAI,aAAa,SAACyyB,GACvD,IAAI,EAAK1gB,kBAAkBqlB,qBAC3B,OAAK,EAAKzoC,SAAUgrC,YAAYlH,QAAhC,EACS,EAAKoG,OAAOpG,KAEpB,CAAE0G,SAAS,MAUT,YAAA5P,QAAP,SAAetuB,EAAeC,G,MACT,QAAnB,EAAAjO,KAAKU,sBAAc,SAAEisC,YAAY3+B,EAAOC,IAQlC,YAAAu5B,oBAAR,SAA4Bx5B,EAAeC,G,MAC3B,QAAd,EAAAjO,KAAKwjC,iBAAS,SAAEoJ,YAAY5+B,EAAOC,IAM9B,YAAAw3B,kBAAP,SAAyBD,GACnBxlC,KAAKymC,mBAAqBzmC,KAAKymC,kBAAkBoG,mBAAmBrH,GACtExlC,KAAKa,QAASqY,UAAUC,IAAI,iBAE5BnZ,KAAKa,QAASqY,UAAU0sB,OAAO,kBAO3B,YAAAF,YAAR,WACO1lC,KAAK4jB,aAAa0M,sBACrBtwB,KAAK4jB,aAAa0M,qBAAsB,EACxCtwB,KAAKs8B,QAAQt8B,KAAKsD,OAAOD,EAAGrD,KAAKsD,OAAOD,KAIrC,YAAAuD,YAAP,SAAmBkmC,EAAcnD,GAC/B,YAAM/iC,YAAW,UAACkmC,EAAMnD,GACxB3pC,KAAKs8B,QAAQ,EAAGt8B,KAAKQ,KAAO,IAGvB,YAAAsgC,MAAP,SAAa/yB,GACX,EAAA+yB,MAAM/yB,EAAM/N,KAAK8+B,SAAW9+B,KAAK4jB,eAY5B,YAAA2b,4BAAP,SAAmCC,GACjCx/B,KAAK0kC,uBAAyBlF,GAazB,YAAAC,oBAAP,SAA2Bp6B,EAAekI,EAA6BC,GACrE,IAAMmyB,EAAY3/B,KAAKwjC,UAAU/D,oBAAoBp6B,EAAOkI,EAASC,GAErE,OADAxN,KAAKs8B,QAAQ,EAAGt8B,KAAKQ,KAAO,GACrBm/B,GAOF,YAAAD,sBAAP,SAA6BC,GACvB3/B,KAAKwjC,UAAU9D,sBAAsBC,IACvC3/B,KAAKs8B,QAAQ,EAAGt8B,KAAKQ,KAAO,IAIzB,YAAAo/B,qBAAP,SAA4BC,GAC1B,OAAO7/B,KAAK4jC,WAAWhE,qBAAqBC,IAGvC,YAAA/F,wBAAP,SAA+BvsB,GAC7B,IAAM0sB,EAAWj6B,KAAKU,eAAgBo5B,wBAAwBvsB,GAE9D,OADAvN,KAAKs8B,QAAQ,EAAGt8B,KAAKQ,KAAO,GACrBy5B,GAGF,YAAAD,0BAAP,SAAiCC,GAC3Bj6B,KAAKU,eAAgBs5B,0BAA0BC,IACjDj6B,KAAKs8B,QAAQ,EAAGt8B,KAAKQ,KAAO,IAIhC,sBAAW,sBAAO,C,IAAlB,WACE,OAAOR,KAAKsD,OAAO07B,S,gCAGd,YAAAgB,UAAP,SAAiBD,GAEf,GAAI//B,KAAKsD,SAAWtD,KAAKowB,QAAQyR,OAIjC,OAAO7hC,KAAKsD,OAAO08B,UAAUhgC,KAAKsD,OAAO8pB,MAAQptB,KAAKsD,OAAOD,EAAI08B,IAM5D,YAAAp9B,aAAP,WACE,QAAO3C,KAAKymC,mBAAoBzmC,KAAKymC,kBAAkB9jC,cASlD,YAAA+D,OAAP,SAAcu5B,EAAgBv8B,EAAapB,GACzCtC,KAAKymC,kBAAmBsG,aAAa9M,EAAQv8B,EAAKpB,IAO7C,YAAA49B,aAAP,WACE,OAAOlgC,KAAKymC,kBAAoBzmC,KAAKymC,kBAAkBuG,cAAgB,IAGlE,YAAAnqC,qBAAP,WACE,GAAK7C,KAAKymC,mBAAsBzmC,KAAKymC,kBAAkB9jC,aAIvD,MAAO,CACLI,YAAa/C,KAAKymC,kBAAkBwG,eAAgB,GACpDvqC,SAAU1C,KAAKymC,kBAAkBwG,eAAgB,GACjDjqC,UAAWhD,KAAKymC,kBAAkByG,aAAc,GAChDpqC,OAAQ9C,KAAKymC,kBAAkByG,aAAc,KAO1C,YAAA3qC,eAAP,W,MACwB,QAAtB,EAAAvC,KAAKymC,yBAAiB,SAAElkC,kBAMnB,YAAA49B,UAAP,W,MACwB,QAAtB,EAAAngC,KAAKymC,yBAAiB,SAAEtG,aAGnB,YAAAC,YAAP,SAAmBpyB,EAAeC,G,MACV,QAAtB,EAAAjO,KAAKymC,yBAAiB,SAAErG,YAAYpyB,EAAOC,IASnC,YAAAi5B,SAAV,SAAmB/a,GAGjB,GAFAnsB,KAAK+iC,iBAAkB,EAEnB/iC,KAAK0kC,yBAAiE,IAAvC1kC,KAAK0kC,uBAAuBvY,GAC7D,OAAO,EAGT,IAAKnsB,KAAK+lC,mBAAoBoH,QAAQhhB,GAIpC,OAHInsB,KAAKsD,OAAO8pB,QAAUptB,KAAKsD,OAAO+rB,OACpCrvB,KAAKygC,kBAEA,EAGT,IAAMt9B,EAAS,EAAAiqC,sBAAsBjhB,EAAOnsB,KAAK4jB,aAAaiJ,gBAAgB+C,sBAAuB5vB,KAAK6iC,QAAQ1vB,MAAOnT,KAAKwN,QAAQ6/B,iBAItI,GAFArtC,KAAKylC,kBAAkBtZ,GAEH,IAAhBhpB,EAAOmK,MAAyD,IAAhBnK,EAAOmK,KAAqC,CAC9F,IAAMggC,EAActtC,KAAKQ,KAAO,EAEhC,OADAR,KAAK4G,YAA4B,IAAhBzD,EAAOmK,MAAuCggC,EAAcA,GACtEttC,KAAK4rC,OAAOzf,GAAO,GAO5B,OAJoB,IAAhBhpB,EAAOmK,MACTtN,KAAKmgC,cAGHngC,KAAKutC,mBAAmBvtC,KAAK6iC,QAAS1W,KAItChpB,EAAOyoC,QAET5rC,KAAK4rC,OAAOzf,GAAO,IAGhBhpB,EAAO9D,MAOR8D,EAAO9D,MAAQ,EAAAmU,GAAGI,KAAOzQ,EAAO9D,MAAQ,EAAAmU,GAAGc,KAC7CtU,KAAK8+B,SAAU//B,MAAQ,IAGzBiB,KAAKgjC,OAAO57B,KAAK,CAAE/H,IAAK8D,EAAO9D,IAAKmuC,SAAUrhB,IAC9CnsB,KAAK0lC,cACL1lC,KAAK4jB,aAAaS,iBAAiBlhB,EAAO9D,KAAK,GAM1CW,KAAKk+B,eAAe1wB,QAAQmf,sBAIjC3sB,KAAK+iC,iBAAkB,GAHd/iC,KAAK4rC,OAAOzf,GAAO,MAMtB,YAAAohB,mBAAR,SAA2B1K,EAAmB2C,GAC5C,IAAMiI,EACH5K,EAAQ1vB,QAAUnT,KAAKwN,QAAQ6/B,iBAAmB7H,EAAG4F,SAAW5F,EAAG2F,UAAY3F,EAAGkI,SAClF7K,EAAQvvB,WAAakyB,EAAG4F,QAAU5F,EAAG2F,UAAY3F,EAAGkI,QAEvD,MAAgB,aAAZlI,EAAGl4B,KACEmgC,EAIFA,KAAmBjI,EAAGmI,SAAWnI,EAAGmI,QAAU,KAG7C,YAAA1G,OAAV,SAAiBzB,GACXxlC,KAAK0kC,yBAA8D,IAApC1kC,KAAK0kC,uBAAuBc,KAkMnE,SAAiCA,GAC/B,OAAsB,KAAfA,EAAGmI,SACO,KAAfnI,EAAGmI,SACY,KAAfnI,EAAGmI,QAjMEC,CAAwBpI,IAC3BxlC,KAAKk/B,QAGPl/B,KAAKylC,kBAAkBD,KASf,YAAA2B,UAAV,SAAoB3B,GAClB,IAAInmC,EAEJ,GAAIW,KAAK+iC,gBACP,OAAO,EAGT,GAAI/iC,KAAK0kC,yBAA8D,IAApC1kC,KAAK0kC,uBAAuBc,GAC7D,OAAO,EAKT,GAFAxlC,KAAK4rC,OAAOpG,GAERA,EAAGqI,SACLxuC,EAAMmmC,EAAGqI,cACJ,GAAiB,OAAbrI,EAAGsI,YAA+BzpC,IAAbmhC,EAAGsI,MACjCzuC,EAAMmmC,EAAGmI,YACJ,IAAiB,IAAbnI,EAAGsI,OAA+B,IAAhBtI,EAAGqI,SAG9B,OAAO,EAFPxuC,EAAMmmC,EAAGsI,MAKX,SAAKzuC,IACFmmC,EAAG4F,QAAU5F,EAAG2F,SAAW3F,EAAGkI,WAAa1tC,KAAKutC,mBAAmBvtC,KAAK6iC,QAAS2C,MAKpFnmC,EAAMwO,OAAOC,aAAazO,GAE1BW,KAAKgjC,OAAO57B,KAAK,CAAE/H,IAAG,EAAEmuC,SAAUhI,IAClCxlC,KAAK0lC,cACL1lC,KAAK4jB,aAAaS,iBAAiBhlB,GAAK,IAEjC,IAOF,YAAAkrB,KAAP,WACMvqB,KAAK+tC,cACP/tC,KAAKgpC,cAAegF,iBAkBjB,YAAAptC,OAAP,SAAc8a,EAAWrY,GACnBqY,IAAM1b,KAAKS,MAAQ4C,IAAMrD,KAAKQ,KAQlC,YAAMI,OAAM,UAAC8a,EAAGrY,GANVrD,KAAK8kC,mBAAqB9kC,KAAK8kC,iBAAiBmJ,cAClDjuC,KAAK8kC,iBAAiBC,WAQpB,YAAAN,aAAR,SAAqB/oB,EAAWrY,G,QACT,QAArB,EAAArD,KAAK8kC,wBAAgB,SAAEC,UAIV,QAAb,EAAA/kC,KAAK0B,gBAAQ,SAAEwjC,gBAAe,IAMzB,YAAAvkC,MAAP,WACE,GAA0B,IAAtBX,KAAKsD,OAAO8pB,OAAiC,IAAlBptB,KAAKsD,OAAOD,EAA3C,CAIArD,KAAKsD,OAAO6pB,MAAM7N,IAAI,EAAGtf,KAAKsD,OAAO6pB,MAAMxuB,IAAIqB,KAAKsD,OAAO8pB,MAAQptB,KAAKsD,OAAOD,IAC/ErD,KAAKsD,OAAO6pB,MAAM7qB,OAAS,EAC3BtC,KAAKsD,OAAO+rB,MAAQ,EACpBrvB,KAAKsD,OAAO8pB,MAAQ,EACpBptB,KAAKsD,OAAOD,EAAI,EAChB,IAAK,IAAIvF,EAAI,EAAGA,EAAIkC,KAAKQ,KAAM1C,IAC7BkC,KAAKsD,OAAO6pB,MAAMjmB,KAAKlH,KAAKsD,OAAOksB,aAAa,EAAA/P,oBAElDzf,KAAKs8B,QAAQ,EAAGt8B,KAAKQ,KAAO,GAC5BR,KAAKsmB,UAAUlf,KAAKpH,KAAKsD,OAAO+rB,SAW3B,YAAAiC,MAAP,W,QAKEtxB,KAAKwN,QAAQhN,KAAOR,KAAKQ,KACzBR,KAAKwN,QAAQ/M,KAAOT,KAAKS,KACzB,IAAM++B,EAAwBx/B,KAAK0kC,uBAEnC1kC,KAAKujC,SACL,YAAMjS,MAAK,WACW,QAAtB,EAAAtxB,KAAKymC,yBAAiB,SAAEnV,QAGxBtxB,KAAK0kC,uBAAyBlF,EAG9Bx/B,KAAKs8B,QAAQ,EAAGt8B,KAAKQ,KAAO,GACf,QAAb,EAAAR,KAAK0B,gBAAQ,SAAEwjC,kBAGT,YAAAb,sBAAR,SAA8B/2B,GAC5B,GAAKtN,KAAKU,eAIV,OAAQ4M,GACN,KAAK,EAAA4U,yBAAyB4P,oBAC5B,IAAMvW,EAAcvb,KAAKU,eAAemB,WAAWuZ,kBAAkB8yB,QAAQ,GACvE1yB,EAAexb,KAAKU,eAAemB,WAAWyZ,mBAAmB4yB,QAAQ,GAC/EluC,KAAK4jB,aAAaS,iBAAoB,EAAA7Q,GAAG4B,IAAG,MAAMoG,EAAY,IAAID,EAAW,KAC7E,MACF,KAAK,EAAA2G,yBAAyB6P,qBAC5B,IAAMoc,EAAYnuC,KAAKU,eAAemB,WAAWgZ,gBAAgBqzB,QAAQ,GACnEjI,EAAajmC,KAAKU,eAAemB,WAAWiZ,iBAAiBozB,QAAQ,GAC3EluC,KAAK4jB,aAAaS,iBAAoB,EAAA7Q,GAAG4B,IAAG,MAAM6wB,EAAU,IAAIkI,EAAS,OAMxE,YAAAvC,OAAP,SAAcpG,EAAW4I,GACvB,GAAKpuC,KAAKwN,QAAQ6gC,cAAiBD,EAKnC,OAFA5I,EAAGqG,iBACHrG,EAAG8I,mBACI,GAGD,YAAAC,YAAR,WACE,OAAO,GAKD,YAAAR,WAAR,WACE,MAAkC,UAA3B/tC,KAAKwN,QAAQghC,WAIxB,EA9pCA,CAA8B,EAAAC,cAAjB,EAAA3Q,Y,8gBCtDb,WACA,OAYA,aAmBE,WACmB4Q,EACAlG,EACgBtwB,EACCC,EACC2sB,EACJlhB,GALd,KAAA8qB,YACA,KAAAlG,mBACgB,KAAAtwB,iBACC,KAAAC,kBACC,KAAA2sB,mBACJ,KAAAlhB,eAE/B5jB,KAAK2uC,cAAe,EACpB3uC,KAAK4uC,uBAAwB,EAC7B5uC,KAAK6uC,qBAAuB,CAAE7gC,MAAO,EAAGC,IAAK,GA6KjD,OApME,sBAAW,0BAAW,C,IAAtB,WAAoC,OAAOjO,KAAK2uC,c,gCA6BzC,YAAAvH,iBAAP,WACEpnC,KAAK2uC,cAAe,EACpB3uC,KAAK6uC,qBAAqB7gC,MAAQhO,KAAK0uC,UAAU3vC,MAAMuD,OACvDtC,KAAKwoC,iBAAiBsG,YAAc,GACpC9uC,KAAKwoC,iBAAiBtvB,UAAUC,IAAI,WAO/B,YAAAkuB,kBAAP,SAAyB7B,GAAzB,WACExlC,KAAKwoC,iBAAiBsG,YAActJ,EAAGz3B,KACvC/N,KAAKunC,4BACLnjC,YAAW,WACT,EAAKyqC,qBAAqB5gC,IAAM,EAAKygC,UAAU3vC,MAAMuD,SACpD,IAOE,YAAAglC,eAAP,WACEtnC,KAAK+uC,sBAAqB,IAQrB,YAAA5B,QAAP,SAAe3H,GACb,GAAIxlC,KAAK2uC,cAAgB3uC,KAAK4uC,sBAAuB,CACnD,GAAmB,MAAfpJ,EAAGmI,QAEL,OAAO,EAET,GAAmB,KAAfnI,EAAGmI,SAAiC,KAAfnI,EAAGmI,SAAiC,KAAfnI,EAAGmI,QAE/C,OAAO,EAIT3tC,KAAK+uC,sBAAqB,GAG5B,OAAmB,MAAfvJ,EAAGmI,UAGL3tC,KAAKgvC,6BACE,IAcH,YAAAD,qBAAR,SAA6BE,GAA7B,WAIE,GAHAjvC,KAAKwoC,iBAAiBtvB,UAAU0sB,OAAO,UACvC5lC,KAAK2uC,cAAe,EAEfM,EAKE,CAGL,IAAM,EAA6B,CACjCjhC,MAAOhO,KAAK6uC,qBAAqB7gC,MACjCC,IAAKjO,KAAK6uC,qBAAqB5gC,KAWjCjO,KAAK4uC,uBAAwB,EAC7BxqC,YAAW,WAET,GAAI,EAAKwqC,sBAAuB,CAC9B,EAAKA,uBAAwB,EAC7B,IAAIvgC,OAAK,EAGPA,EAFE,EAAKsgC,aAEC,EAAKD,UAAU3vC,MAAM0H,UAAU,EAA2BuH,MAAO,EAA2BC,KAK5F,EAAKygC,UAAU3vC,MAAM0H,UAAU,EAA2BuH,OAEpE,EAAK4V,aAAaS,iBAAiBhW,GAAO,MAE3C,OAtCoB,CAEvBrO,KAAK4uC,uBAAwB,EAC7B,IAAMvgC,EAAQrO,KAAK0uC,UAAU3vC,MAAM0H,UAAUzG,KAAK6uC,qBAAqB7gC,MAAOhO,KAAK6uC,qBAAqB5gC,KACxGjO,KAAK4jB,aAAaS,iBAAiBhW,GAAO,KA4CtC,YAAA2gC,0BAAR,sBACQE,EAAWlvC,KAAK0uC,UAAU3vC,MAChCqF,YAAW,WAET,IAAK,EAAKuqC,aAAc,CACtB,IACMQ,EADW,EAAKT,UAAU3vC,MACVqwC,QAAQF,EAAU,IACpCC,EAAK7sC,OAAS,GAChB,EAAKshB,aAAaS,iBAAiB8qB,GAAM,MAG5C,IASE,YAAA5H,0BAAP,SAAiC8H,GAAjC,WACE,GAAKrvC,KAAK2uC,aAAV,CAIA,GAAI3uC,KAAKkY,eAAe5U,OAAOwiC,mBAAoB,CACjD,IAAMG,EAAa5kC,KAAK+Q,KAAKpS,KAAK8kC,iBAAiBzpB,OAASrb,KAAKmY,gBAAgB3K,QAAQ04B,YACnFC,EAAYnmC,KAAKkY,eAAe5U,OAAOD,EAAI4iC,EAC3CG,EAAapmC,KAAKkY,eAAe5U,OAAOoY,EAAI1b,KAAK8kC,iBAAiB3pB,MAExEnb,KAAKwoC,iBAAiBpvB,MAAMwiB,KAAOwK,EAAa,KAChDpmC,KAAKwoC,iBAAiBpvB,MAAMyY,IAAMsU,EAAY,KAC9CnmC,KAAKwoC,iBAAiBpvB,MAAMiC,OAAS4qB,EAAa,KAClDjmC,KAAKwoC,iBAAiBpvB,MAAM8sB,WAAaD,EAAa,KACtDjmC,KAAKwoC,iBAAiBpvB,MAAM2E,WAAa/d,KAAKmY,gBAAgB3K,QAAQuQ,WACtE/d,KAAKwoC,iBAAiBpvB,MAAM0E,SAAW9d,KAAKmY,gBAAgB3K,QAAQsQ,SAAW,KAG/E,IAAMwxB,EAAwBtvC,KAAKwoC,iBAAiB9M,wBACpD17B,KAAK0uC,UAAUt1B,MAAMwiB,KAAOwK,EAAa,KACzCpmC,KAAK0uC,UAAUt1B,MAAMyY,IAAMsU,EAAY,KACvCnmC,KAAK0uC,UAAUt1B,MAAM+B,MAAQm0B,EAAsBn0B,MAAQ,KAC3Dnb,KAAK0uC,UAAUt1B,MAAMiC,OAASi0B,EAAsBj0B,OAAS,KAC7Drb,KAAK0uC,UAAUt1B,MAAM8sB,WAAaoJ,EAAsBj0B,OAAS,KAG9Dg0B,GACHjrC,YAAW,WAAM,SAAKmjC,2BAA0B,KAAO,KAvMhDkB,EAAiB,GAsBzB,MAAA7gC,gBACA,MAAAQ,iBACA,MAAA0C,kBACA,MAAA/C,eAzBQ0gC,GAAb,GAAa,EAAAA,qB,i1BCbb,WACA,OAEA,OACA,OAQA,cAiBE,WACmB8G,EACAvH,EACAwH,EACgBt3B,EACCC,EACC2sB,EACFpkC,GAPnC,MASE,cAAO,K,OARU,EAAA6uC,eACA,EAAAvH,mBACA,EAAAwH,cACgB,EAAAt3B,iBACC,EAAAC,kBACC,EAAA2sB,mBACF,EAAApkC,iBAvB5B,EAAAiB,eAAyB,EACxB,EAAA8tC,kBAA4B,EAC5B,EAAAC,0BAAoC,EACpC,EAAAC,4BAAsC,EACtC,EAAAC,0BAAoC,EACpC,EAAAC,YAAsB,EACtB,EAAAC,eAAyB,EAKzB,EAAAC,oBAA8B,EAE9B,EAAAC,uBAAwC,KACxC,EAAAC,wBAAkC,EAgBxC,EAAKtuC,eAAkB,EAAKqmC,iBAAiBkI,YAAc,EAAKV,YAAYU,aArC9C,GAsC9B,EAAK1nC,SAAS,EAAA+9B,yBAAyB,EAAKyB,iBAAkB,SAAU,EAAK1hB,UAAUhnB,KAAK,KAG5F8E,YAAW,WAAM,SAAK8gC,mBAAkB,G,EAsN5C,OAzP8B,OAsCrB,YAAAoE,cAAP,SAAqB3T,GACnB31B,KAAKgoC,iBAAiB5uB,MAAM+2B,gBAAkBxa,EAAOvZ,WAAW1L,KAO1D,YAAA0/B,SAAR,SAAiBC,GAAjB,WACE,GAAIA,EAKF,OAJArwC,KAAK68B,qBAC+B,OAAhC78B,KAAKgwC,wBACP3T,qBAAqBr8B,KAAKgwC,yBAIM,OAAhChwC,KAAKgwC,yBACPhwC,KAAKgwC,uBAAyBpT,uBAAsB,WAAM,SAAKC,qBAI3D,YAAAA,cAAR,WACE,GAAI78B,KAAK8kC,iBAAiBzpB,OAAS,EAAG,CACpCrb,KAAKyvC,kBAAoBzvC,KAAKU,eAAemB,WAAWiZ,iBAAmBpd,OAAOme,iBAClF7b,KAAK2vC,4BAA8B3vC,KAAKgoC,iBAAiBsI,aACzD,IAAMC,EAAkBlvC,KAAK4P,MAAMjR,KAAKyvC,kBAAoBzvC,KAAK0vC,4BAA8B1vC,KAAK2vC,4BAA8B3vC,KAAKU,eAAemB,WAAW2Z,cAC7Jxb,KAAK4vC,4BAA8BW,IACrCvwC,KAAK4vC,0BAA4BW,EACjCvwC,KAAKwvC,YAAYp2B,MAAMiC,OAASrb,KAAK4vC,0BAA4B,MAKrE,IAAMrrB,EAAYvkB,KAAKkY,eAAe5U,OAAO+rB,MAAQrvB,KAAKyvC,kBACtDzvC,KAAKgoC,iBAAiBzjB,YAAcA,IAGtCvkB,KAAKiwC,wBAAyB,EAC9BjwC,KAAKgoC,iBAAiBzjB,UAAYA,GAGpCvkB,KAAKgwC,uBAAyB,MAKzB,YAAA9K,eAAP,SAAsBmL,GAEpB,QAFoB,IAAAA,OAAA,GAEhBrwC,KAAK0vC,4BAA8B1vC,KAAKkY,eAAe5U,OAAO6pB,MAAM7qB,OAGtE,OAFAtC,KAAK0vC,0BAA4B1vC,KAAKkY,eAAe5U,OAAO6pB,MAAM7qB,YAClEtC,KAAKowC,SAASC,GAKhB,GAAIrwC,KAAK2vC,8BAAgC3vC,KAAKU,eAAemB,WAAW2Z,aAAxE,CAMA,IAAMg1B,EAAexwC,KAAKkY,eAAe5U,OAAO+rB,MAAQrvB,KAAKyvC,kBACzDzvC,KAAK8vC,iBAAmBU,GAMxBxwC,KAAK8vC,iBAAmB9vC,KAAKgoC,iBAAiBzjB,WAM9CvkB,KAAKU,eAAemB,WAAWiZ,iBAAmBpd,OAAOme,mBAAqB7b,KAAKyvC,mBAXrFzvC,KAAKowC,SAASC,QAPdrwC,KAAKowC,SAASC,IA6BV,YAAA/pB,UAAR,SAAkBkf,GAMhB,GAJAxlC,KAAK8vC,eAAiB9vC,KAAKgoC,iBAAiBzjB,UAIvCvkB,KAAKgoC,iBAAiByI,aAK3B,GAAIzwC,KAAKiwC,uBACPjwC,KAAKiwC,wBAAyB,MADhC,CAKA,IACMd,EADS9tC,KAAK4P,MAAMjR,KAAK8vC,eAAiB9vC,KAAKyvC,mBAC/BzvC,KAAKkY,eAAe5U,OAAO+rB,MACjDrvB,KAAKuvC,aAAaJ,GAAM,KAQlB,YAAAuB,cAAR,SAAsBlL,EAAWnF,GAC/B,IAAMsQ,EAAmB3wC,KAAKgoC,iBAAiBzjB,UAAYvkB,KAAK2vC,4BAChE,QAAKtP,EAAS,GAAyC,IAApCrgC,KAAKgoC,iBAAiBzjB,WACtC8b,EAAS,GAAKsQ,EAAmB3wC,KAAK4vC,6BACnCpK,EAAGoL,YACLpL,EAAGqG,kBAEE,IAWJ,YAAAW,QAAP,SAAehH,GACb,IAAMnF,EAASrgC,KAAK6wC,mBAAmBrL,GACvC,OAAe,IAAXnF,IAGJrgC,KAAKgoC,iBAAiBzjB,WAAa8b,EAC5BrgC,KAAK0wC,cAAclL,EAAInF,KAGxB,YAAAwQ,mBAAR,SAA2BrL,GAEzB,GAAkB,IAAdA,EAAGwF,OACL,OAAO,EAIT,IAAI3K,EAASrgC,KAAK8wC,qBAAqBtL,EAAGwF,OAAQxF,GAMlD,OALIA,EAAGuL,YAAcC,WAAWC,eAC9B5Q,GAAUrgC,KAAKyvC,kBACNjK,EAAGuL,YAAcC,WAAWE,iBACrC7Q,GAAUrgC,KAAKyvC,kBAAoBzvC,KAAKkY,eAAe1X,MAElD6/B,GAQF,YAAAgM,iBAAP,SAAwB7G,GAEtB,GAAkB,IAAdA,EAAGwF,OACL,OAAO,EAIT,IAAI3K,EAASrgC,KAAK8wC,qBAAqBtL,EAAGwF,OAAQxF,GASlD,OARIA,EAAGuL,YAAcC,WAAWG,iBAC9B9Q,GAAUrgC,KAAKyvC,kBAAoB,EACnCzvC,KAAK+vC,qBAAuB1P,EAC5BA,EAASh/B,KAAKO,MAAMP,KAAKkrC,IAAIvsC,KAAK+vC,uBAAyB/vC,KAAK+vC,oBAAsB,EAAI,GAAK,GAC/F/vC,KAAK+vC,qBAAuB,GACnBvK,EAAGuL,YAAcC,WAAWE,iBACrC7Q,GAAUrgC,KAAKkY,eAAe1X,MAEzB6/B,GAGD,YAAAyQ,qBAAR,SAA6BzQ,EAAgBmF,GAC3C,IAAM4L,EAAWpxC,KAAKmY,gBAAgB3K,QAAQ6jC,mBAE9C,MAAkB,QAAbD,GAAsB5L,EAAG4F,QACd,SAAbgG,GAAuB5L,EAAG2F,SACb,UAAbiG,GAAwB5L,EAAG6F,SACrBhL,EAASrgC,KAAKmY,gBAAgB3K,QAAQ8jC,sBAAwBtxC,KAAKmY,gBAAgB3K,QAAQ+jC,kBAG7FlR,EAASrgC,KAAKmY,gBAAgB3K,QAAQ+jC,mBAOxC,YAAA9E,aAAP,SAAoBjH,GAClBxlC,KAAK6vC,YAAcrK,EAAGgM,QAAQ,GAAGC,OAO5B,YAAA/E,YAAP,SAAmBlH,GACjB,IAAMwF,EAAShrC,KAAK6vC,YAAcrK,EAAGgM,QAAQ,GAAGC,MAEhD,OADAzxC,KAAK6vC,YAAcrK,EAAGgM,QAAQ,GAAGC,MAClB,IAAXzG,IAGJhrC,KAAKgoC,iBAAiBzjB,WAAaymB,EAC5BhrC,KAAK0wC,cAAclL,EAAIwF,KAvPrB5B,EAAQ,GAqBhB,MAAAxhC,gBACA,MAAAQ,iBACA,MAAA0C,kBACA,MAAAG,iBAxBQm+B,GAAb,CAA8B,EAAAvgC,YAAjB,EAAAugC,Y,6BCLb,SAAgBsI,EAAuB5W,GACrC,OAAOA,EAAKsU,QAAQ,SAAU,MAOhC,SAAgBuC,EAAoB7W,EAAcvK,GAChD,OAAIA,EACK,SAAcuK,EAAO,SAEvBA,EA4BT,SAAgBgG,EAAMhG,EAAcgE,EAA+B8S,GAEjE9W,EAAO6W,EADP7W,EAAO4W,EAAuB5W,GACG8W,EAAY/kB,gBAAgB0D,oBAC7DqhB,EAAYvtB,iBAAiByW,GAAM,GACnCgE,EAAS//B,MAAQ,GAQnB,SAAgBioC,EAA6BxB,EAAgB1G,EAA+BgI,GAG1F,IAAM33B,EAAM23B,EAAcpL,wBACpBE,EAAO4J,EAAG7J,QAAUxsB,EAAIysB,KAAO,GAC/B/J,EAAM2T,EAAG3J,QAAU1sB,EAAI0iB,IAAM,GAGnCiN,EAAS1lB,MAAM+B,MAAQ,OACvB2jB,EAAS1lB,MAAMiC,OAAS,OACxByjB,EAAS1lB,MAAMwiB,KAAUA,EAAI,KAC7BkD,EAAS1lB,MAAMyY,IAASA,EAAG,KAC3BiN,EAAS1lB,MAAMtB,OAAS,OAExBgnB,EAASI,Q,mMAlEX,2BAQA,wBAWA,uBAA4BsG,EAAoBqM,GAC1CrM,EAAGsM,eACLtM,EAAGsM,cAAcC,QAAQ,aAAcF,EAAiB7E,eAG1DxH,EAAGqG,kBAQL,4BAAiCrG,EAAoB1G,EAA+B8S,GAClFpM,EAAG8I,kBACC9I,EAAGsM,eAELhR,EADa0E,EAAGsM,cAAcE,QAAQ,cAC1BlT,EAAU8S,IAI1B,UAYA,iCAwBA,6BAAkCpM,EAAgB1G,EAA+BgI,EAA4B+K,EAAqCI,GAChJjL,EAA6BxB,EAAI1G,EAAUgI,GAEvCmL,IAAqBJ,EAAiBK,mBAAmB1M,IAC3DqM,EAAiBM,mBAAmB3M,GAItC1G,EAAS//B,MAAQ8yC,EAAiB7E,cAClClO,EAASp4B,W,ueC1FX,WAEA,QACA,QACA,QACA,QAgBA,aAGE,WAAYpE,GACVtC,KAAKoyC,MAAQ,IAAIzjC,WAAWrM,GAmChC,OA3BS,YAAA+vC,WAAP,SAAkBrrB,EAAsBsrB,GACtC,EAAA1jC,KAAK5O,KAAKoyC,MAAOprB,GAAU,EAAsCsrB,IAU5D,YAAAn5B,IAAP,SAAWzO,EAAcqhB,EAAoB/E,EAAsBsrB,GACjEtyC,KAAKoyC,MAAMrmB,GAAS,EAAgCrhB,GAAQsc,GAAU,EAAsCsrB,GAUvG,YAAAC,QAAP,SAAeC,EAAiBzmB,EAAoB/E,EAAsBsrB,GACxE,IAAK,IAAIx0C,EAAI,EAAGA,EAAI00C,EAAMlwC,OAAQxE,IAChCkC,KAAKoyC,MAAMrmB,GAAS,EAAgCymB,EAAM10C,IAAMkpB,GAAU,EAAsCsrB,GAGtH,EAvCA,GAAa,EAAAG,kBAkDA,EAAAC,uBAAyB,WACpC,IAAMN,EAAyB,IAAIK,EAAgB,MAI7CE,EAAY9uC,MAAM+uC,MAAM,KAAM/uC,MADhB,MACoCw1B,KAAI,SAACwZ,EAAa/0C,GAAc,OAAAA,KAClFc,EAAI,SAACoP,EAAeC,GAA0B,OAAA0kC,EAAUjtC,MAAMsI,EAAOC,IAGrE6kC,EAAal0C,EAAE,GAAM,KACrBm0C,EAAcn0C,EAAE,EAAM,IAC5Bm0C,EAAY7rC,KAAK,IACjB6rC,EAAY7rC,KAAK0rC,MAAMG,EAAan0C,EAAE,GAAM,KAE5C,IACImtB,EADEinB,EAAmBp0C,EAAE,EAAoB,IAQ/C,IAAKmtB,KAJLqmB,EAAMC,WAAW,EAAD,GAEhBD,EAAMG,QAAQO,EAAY,EAAF,KAEVE,EACZZ,EAAMG,QAAQ,CAAC,GAAM,GAAM,IAAM,KAAOxmB,EAAO,EAAF,GAC7CqmB,EAAMG,QAAQ3zC,EAAE,IAAM,KAAOmtB,EAAO,EAAF,GAClCqmB,EAAMG,QAAQ3zC,EAAE,IAAM,KAAOmtB,EAAO,EAAF,GAClCqmB,EAAMj5B,IAAI,IAAM4S,EAAO,EAAF,GACrBqmB,EAAMj5B,IAAI,GAAM4S,EAAO,GAAF,GACrBqmB,EAAMj5B,IAAI,IAAM4S,EAAO,EAAF,GACrBqmB,EAAMG,QAAQ,CAAC,IAAM,IAAM,KAAOxmB,EAAO,EAAF,GACvCqmB,EAAMj5B,IAAI,IAAM4S,EAAO,GAAF,GACrBqmB,EAAMj5B,IAAI,IAAM4S,EAAO,GAAF,GAuFvB,OApFAqmB,EAAMG,QAAQQ,EAAa,EAAF,KACzBX,EAAMG,QAAQQ,EAAa,EAAF,KACzBX,EAAMj5B,IAAI,IAAM,EAAF,KACdi5B,EAAMG,QAAQQ,EAAa,EAAF,KACzBX,EAAMG,QAAQQ,EAAa,EAAF,KACzBX,EAAMj5B,IAAI,IAAM,EAAF,KACdi5B,EAAMG,QAAQQ,EAAa,EAAF,KACzBX,EAAMj5B,IAAI,IAAM,EAAF,KACdi5B,EAAMG,QAAQQ,EAAa,EAAF,KACzBX,EAAMG,QAAQQ,EAAa,EAAF,KACzBX,EAAMj5B,IAAI,IAAM,EAAF,KACdi5B,EAAMG,QAAQQ,EAAa,EAAF,KACzBX,EAAMj5B,IAAI,IAAM,EAAF,KAEdi5B,EAAMj5B,IAAI,GAAM,EAAF,KACdi5B,EAAMG,QAAQO,EAAY,EAAF,KACxBV,EAAMj5B,IAAI,IAAM,EAAF,KACdi5B,EAAMG,QAAQ,CAAC,IAAM,GAAM,GAAM,GAAM,GAAO,EAAF,KAC5CH,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,EAAF,KAE3BwzC,EAAMG,QAAQ,CAAC,GAAM,GAAM,IAAO,EAAF,KAChCH,EAAMG,QAAQO,EAAY,EAAF,KACxBV,EAAMG,QAAQQ,EAAa,EAAF,KACzBX,EAAMj5B,IAAI,IAAM,EAAF,KACdi5B,EAAMj5B,IAAI,IAAM,EAAF,KAEdi5B,EAAMj5B,IAAI,GAAM,EAAF,MACdi5B,EAAMG,QAAQ3zC,EAAE,GAAM,KAAO,EAAF,KAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,EAAF,KAC3BwzC,EAAMG,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,EAAF,KACtCH,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,EAAF,KAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,KAAO,EAAF,KAC3BwzC,EAAMG,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,EAAF,KACtCH,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,EAAF,KAC3BwzC,EAAMj5B,IAAI,IAAM,EAAF,KACdi5B,EAAMG,QAAQ3zC,EAAE,GAAM,KAAO,EAAF,KAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,EAAF,KAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,EAAF,KAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,EAAF,KAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,KAAO,EAAF,KAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,EAAF,KAE3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,EAAF,KAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,EAAF,KAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,KAAO,EAAF,MAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,EAAF,MAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,EAAF,MAC3BwzC,EAAMG,QAAQ,CAAC,GAAM,GAAM,IAAO,EAAF,MAChCH,EAAMG,QAAQ3zC,EAAE,GAAM,KAAO,EAAF,MAE3BwzC,EAAMj5B,IAAI,GAAM,EAAF,MACdi5B,EAAMG,QAAQQ,EAAa,EAAF,KACzBX,EAAMj5B,IAAI,IAAM,EAAF,KACdi5B,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,EAAF,KAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,EAAF,MAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,EAAF,MAC3BwzC,EAAMG,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,EAAF,MACtCH,EAAMG,QAAQQ,EAAa,GAAF,MACzBX,EAAMG,QAAQ3zC,EAAE,GAAM,KAAO,GAAF,MAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,GAAF,MAC3BwzC,EAAMG,QAAQQ,EAAa,GAAF,MACzBX,EAAMj5B,IAAI,IAAM,GAAF,MACdi5B,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,GAAF,MAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,GAAF,MAC3BwzC,EAAMG,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,GAAF,MACtCH,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,GAAF,MAC3BwzC,EAAMG,QAAQQ,EAAa,GAAF,MACzBX,EAAMj5B,IAAI,IAAM,GAAF,MACdi5B,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,GAAF,MAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,GAAF,MAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,IAAO,GAAF,MAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,KAAO,GAAF,OAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,KAAO,GAAF,OAC3BwzC,EAAMG,QAAQ3zC,EAAE,GAAM,KAAO,EAAF,OAC3BwzC,EAAMG,QAAQQ,EAAa,GAAF,OACzBX,EAAMG,QAAQO,EAAY,GAAF,OACxBV,EAAMj5B,IAAI,IAAM,GAAF,MACdi5B,EAAMG,QAAQ,CAAC,GAAM,IAAM,GAAM,IAAO,GAAF,MAEtCH,EAAMj5B,IAxHoB,IAwHK,EAAF,KAC7Bi5B,EAAMj5B,IAzHoB,IAyHK,EAAF,KAC7Bi5B,EAAMj5B,IA1HoB,IA0HK,EAAF,KAC7Bi5B,EAAMj5B,IA3HoB,IA2HK,GAAF,MAC7Bi5B,EAAMj5B,IA5HoB,IA4HK,GAAF,OACtBi5B,EAtH6B,GAwJtC,kBAyBE,WACqBa,QAAA,IAAAA,MAAgC,EAAAP,wBADrD,MAGE,cAAO,K,OAFY,EAAAO,eAInB,EAAKC,aAAe,EACpB,EAAKC,aAAe,EAAKD,aACzB,EAAK1d,QAAU,IAAI,EAAAlC,OACnB,EAAKkC,QAAQ/B,SAAS,GACtB,EAAK2f,SAAW,EAChB,EAAK1lB,mBAAqB,EAG1B,EAAK2lB,gBAAkB,SAACtlC,EAAMC,EAAOC,KACrC,EAAKqlC,kBAAoB,SAAC5oC,KAC1B,EAAK6oC,cAAgB,SAAC9sB,EAAe1C,KACrC,EAAKyvB,cAAgB,SAAC/sB,KACtB,EAAKgtB,gBAAkB,SAAC1nB,GAAwC,OAAAA,GAChE,EAAK2nB,cAAgB,EAAKL,gBAC1B,EAAKM,iBAAmBn1C,OAAOY,OAAO,MACtC,EAAKw0C,aAAep1C,OAAOY,OAAO,MAClC,EAAKy0C,aAAer1C,OAAOY,OAAO,MAClC,EAAK00C,WAAa,IAAI,EAAA/e,UACtB,EAAKgf,WAAa,IAAI,EAAAxe,UACtB,EAAKye,cAAgB,EAAKP,gBAG1B,EAAKtoB,cAAc,CAAC7D,MAAO,OAAO,e,EAmWtC,OAvZ0C,OAuD9B,YAAA2sB,YAAV,SAAsBp8B,EAAyBq8B,QAAA,IAAAA,MAAA,CAAwB,GAAM,MAC3E,IAAIvgB,EAAM,EACV,GAAI9b,EAAGwQ,OAAQ,CACb,GAAIxQ,EAAGwQ,OAAO/lB,OAAS,EACrB,MAAM,IAAID,MAAM,qCAGlB,IADAsxB,EAAM9b,EAAGwQ,OAAO7d,WAAW,KAChB,GAAOmpB,GAAOA,EAAM,GAC7B,MAAM,IAAItxB,MAAM,wCAGpB,GAAIwV,EAAG2P,cAAe,CACpB,GAAI3P,EAAG2P,cAAcllB,OAAS,EAC5B,MAAM,IAAID,MAAM,iDAElB,IAAK,IAAIvE,EAAI,EAAGA,EAAI+Z,EAAG2P,cAAcllB,SAAUxE,EAAG,CAChD,IAAMq2C,EAAet8B,EAAG2P,cAAchd,WAAW1M,GACjD,GAAI,GAAOq2C,GAAgBA,EAAe,GACxC,MAAM,IAAI9xC,MAAM,8CAElBsxB,IAAQ,EACRA,GAAOwgB,GAGX,GAAwB,IAApBt8B,EAAGyP,MAAMhlB,OACX,MAAM,IAAID,MAAM,+BAElB,IAAM+xC,EAAYv8B,EAAGyP,MAAM9c,WAAW,GACtC,GAAI0pC,EAAW,GAAKE,GAAaA,EAAYF,EAAW,GACtD,MAAM,IAAI7xC,MAAM,0BAA0B6xC,EAAW,GAAE,OAAOA,EAAW,IAK3E,OAHAvgB,IAAQ,EACRA,GAAOygB,GAKF,YAAAztB,cAAP,SAAqBF,GAEnB,IADA,IAAMkN,EAAgB,GACflN,GACLkN,EAAIzsB,KAAK2G,OAAOC,aAAqB,IAAR2Y,IAC7BA,IAAU,EAEZ,OAAOkN,EAAI0gB,UAAUj3B,KAAK,KAGrB,YAAAld,QAAP,WACEF,KAAK4zC,aAAep1C,OAAOY,OAAO,MAClCY,KAAK2zC,iBAAmBn1C,OAAOY,OAAO,MACtCY,KAAK6zC,aAAer1C,OAAOY,OAAO,MAClCY,KAAK8zC,WAAW5zC,UAChBF,KAAK+zC,WAAW7zC,WAGX,YAAAinB,gBAAP,SAAuB5Z,GACrBvN,KAAK0zC,cAAgBnmC,GAEhB,YAAA+mC,kBAAP,WACEt0C,KAAK0zC,cAAgB1zC,KAAKqzC,iBAGrB,YAAAtlB,cAAP,SAAqBlW,EAAyBtK,GAC5C,IAAMkZ,EAAQzmB,KAAKi0C,YAAYp8B,EAAI,CAAC,GAAM,WACTxT,IAA7BrE,KAAK6zC,aAAaptB,KACpBzmB,KAAK6zC,aAAaptB,GAAS,IAE7B,IAAM6N,EAAct0B,KAAK6zC,aAAaptB,GAEtC,OADA6N,EAAYptB,KAAKqG,GACV,CACLrN,QAAS,WACP,IAAMq0B,EAAeD,EAAY7vB,QAAQ8I,IACnB,IAAlBgnB,GACFD,EAAYntB,OAAOotB,EAAc,MAKlC,YAAApJ,cAAP,SAAqBtT,EAAyBtK,GAC5CvN,KAAK6zC,aAAa7zC,KAAKi0C,YAAYp8B,EAAI,CAAC,GAAM,OAAU,CAACtK,IAEpD,YAAAgnC,gBAAP,SAAuB18B,GACjB7X,KAAK6zC,aAAa7zC,KAAKi0C,YAAYp8B,EAAI,CAAC,GAAM,eAAgB7X,KAAK6zC,aAAa7zC,KAAKi0C,YAAYp8B,EAAI,CAAC,GAAM,QAE3G,YAAAgP,sBAAP,SAA6BtZ,GAC3BvN,KAAKwzC,cAAgBjmC,GAGhB,YAAA+c,kBAAP,SAAyBoB,EAAcne,GACrCvN,KAAK2zC,iBAAiBjoB,EAAKlhB,WAAW,IAAM+C,GAEvC,YAAAinC,oBAAP,SAA2B9oB,GACrB1rB,KAAK2zC,iBAAiBjoB,EAAKlhB,WAAW,YAAYxK,KAAK2zC,iBAAiBjoB,EAAKlhB,WAAW,KAEvF,YAAAsc,0BAAP,SAAiCvZ,GAC/BvN,KAAKszC,kBAAoB/lC,GAGpB,YAAAogB,cAAP,SAAqB9V,EAAyBtK,GAC5C,IAAMkZ,EAAQzmB,KAAKi0C,YAAYp8B,QACExT,IAA7BrE,KAAK4zC,aAAantB,KACpBzmB,KAAK4zC,aAAantB,GAAS,IAE7B,IAAM6N,EAAct0B,KAAK4zC,aAAantB,GAEtC,OADA6N,EAAYptB,KAAKqG,GACV,CACLrN,QAAS,WACP,IAAMq0B,EAAeD,EAAY7vB,QAAQ8I,IACnB,IAAlBgnB,GACFD,EAAYntB,OAAOotB,EAAc,MAKlC,YAAAlN,cAAP,SAAqBxP,EAAyBtK,GAC5CvN,KAAK4zC,aAAa5zC,KAAKi0C,YAAYp8B,IAAO,CAACtK,IAEtC,YAAAknC,gBAAP,SAAuB58B,GACjB7X,KAAK4zC,aAAa5zC,KAAKi0C,YAAYp8B,YAAa7X,KAAK4zC,aAAa5zC,KAAKi0C,YAAYp8B,KAElF,YAAA2O,sBAAP,SAA6BoH,GAC3B5tB,KAAKuzC,cAAgB3lB,GAGhB,YAAAC,cAAP,SAAqBhW,EAAyBtK,GAC5C,OAAOvN,KAAK+zC,WAAW1f,WAAWr0B,KAAKi0C,YAAYp8B,GAAKtK,IAEnD,YAAA0e,cAAP,SAAqBpU,EAAyBtK,GAC5CvN,KAAK+zC,WAAWvf,WAAWx0B,KAAKi0C,YAAYp8B,GAAKtK,IAE5C,YAAAmnC,gBAAP,SAAuB78B,GACrB7X,KAAK+zC,WAAWtf,aAAaz0B,KAAKi0C,YAAYp8B,KAEzC,YAAAoP,sBAAP,SAA6B1Z,GAC3BvN,KAAK+zC,WAAWrf,mBAAmBnnB,IAG9B,YAAAygB,cAAP,SAAqBvH,EAAelZ,GAClC,OAAOvN,KAAK8zC,WAAWzf,WAAW5N,EAAOlZ,IAEpC,YAAAwd,cAAP,SAAqBtE,EAAelZ,GAClCvN,KAAK8zC,WAAWtf,WAAW/N,EAAOlZ,IAE7B,YAAAonC,gBAAP,SAAuBluB,GACrBzmB,KAAK8zC,WAAWrf,aAAahO,IAExB,YAAAM,sBAAP,SAA6BxZ,GAC3BvN,KAAK8zC,WAAWpf,mBAAmBnnB,IAG9B,YAAAue,gBAAP,SAAuB8B,GACrB5tB,KAAKg0C,cAAgBpmB,GAEhB,YAAAgnB,kBAAP,WACE50C,KAAKg0C,cAAgBh0C,KAAKyzC,iBAGrB,YAAAniB,MAAP,WACEtxB,KAAKmzC,aAAenzC,KAAKkzC,aACzBlzC,KAAK8zC,WAAWxiB,QAChBtxB,KAAK+zC,WAAWziB,QAChBtxB,KAAKw1B,QAAQlE,QACbtxB,KAAKw1B,QAAQ/B,SAAS,GACtBzzB,KAAKozC,SAAW,EAChBpzC,KAAK0tB,mBAAqB,GAmBrB,YAAAtB,MAAP,SAAare,EAAmBzL,GAW9B,IAVA,IAAIoI,EAAO,EACPmqC,EAAa,EACb1B,EAAenzC,KAAKmzC,aAClB2B,EAAM90C,KAAK8zC,WACXiB,EAAM/0C,KAAK+zC,WACbiB,EAAUh1C,KAAKozC,SACbrvB,EAAS/jB,KAAKw1B,QACd4c,EAAoBpyC,KAAKizC,aAAab,MAGnCt0C,EAAI,EAAGA,EAAIwE,IAAUxE,EAAG,CAK/B,QADA+2C,EAAazC,EAAMe,GAAgB,IAHnCzoC,EAAOqD,EAAKjQ,IAG+D,IAAO4M,EA3Z5D,QA4ZA,GACpB,KAAK,EAGH,IAAK,IAAI,EAAI5M,EAAI,KAAO,EAAG,CACzB,GAAI,GAAKwE,IAAWoI,EAAOqD,EAAK,IAAM,IAASrD,EAAO,KAAQA,EAja9C,IAia2E,CACzF1K,KAAK0zC,cAAc3lC,EAAMjQ,EAAG,GAC5BA,EAAI,EAAI,EACR,MAEF,KAAM,GAAKwE,IAAWoI,EAAOqD,EAAK,IAAM,IAASrD,EAAO,KAAQA,EAtahD,IAsa6E,CAC3F1K,KAAK0zC,cAAc3lC,EAAMjQ,EAAG,GAC5BA,EAAI,EAAI,EACR,MAEF,KAAM,GAAKwE,IAAWoI,EAAOqD,EAAK,IAAM,IAASrD,EAAO,KAAQA,EA3ahD,IA2a6E,CAC3F1K,KAAK0zC,cAAc3lC,EAAMjQ,EAAG,GAC5BA,EAAI,EAAI,EACR,MAEF,KAAM,GAAKwE,IAAWoI,EAAOqD,EAAK,IAAM,IAASrD,EAAO,KAAQA,EAhbhD,IAgb6E,CAC3F1K,KAAK0zC,cAAc3lC,EAAMjQ,EAAG,GAC5BA,EAAI,EAAI,EACR,OAGJ,MACF,KAAK,EACCkC,KAAK2zC,iBAAiBjpC,GAAO1K,KAAK2zC,iBAAiBjpC,KAClD1K,KAAKszC,kBAAkB5oC,GAC5B1K,KAAK0tB,mBAAqB,EAC1B,MACF,KAAK,EACH,MACF,KAAK,EAUH,GAT8B1tB,KAAKg0C,cACjC,CACEiB,SAAUn3C,EACV4M,KAAI,EACJyoC,aAAY,EACZ6B,QAAO,EACPjxB,OAAM,EACNmxB,OAAO,IAEAA,MAAO,OAElB,MACF,KAAK,EAIH,IAFA,IAAMtgB,EAAW50B,KAAK4zC,aAAaoB,GAAW,EAAItqC,GAC9CwkB,EAAI0F,EAAWA,EAAStyB,OAAS,GAAK,EACnC4sB,GAAK,IAEkB,IAAxB0F,EAAS1F,GAAGnL,GAFHmL,KAMXA,EAAI,GACNlvB,KAAKuzC,cAAcyB,GAAW,EAAItqC,EAAMqZ,GAE1C/jB,KAAK0tB,mBAAqB,EAC1B,MACF,KAAK,EAEH,GACE,OAAQhjB,GACN,KAAK,GACHqZ,EAAO0P,SAAS,GAChB,MACF,KAAK,GACH1P,EAAOyP,aAAa,GACpB,MACF,QACEzP,EAAO+P,SAASppB,EAAO,aAElB5M,EAAIwE,IAAWoI,EAAOqD,EAAKjQ,IAAM,IAAQ4M,EAAO,IAC3D5M,IACA,MACF,KAAK,EACHk3C,IAAY,EACZA,GAAWtqC,EACX,MACF,KAAK,GAGH,IAFA,IAAMyqC,EAAcn1C,KAAK6zC,aAAamB,GAAW,EAAItqC,GACjD0qC,EAAKD,EAAcA,EAAY7yC,OAAS,GAAK,EAC1C8yC,GAAM,IAEe,IAAtBD,EAAYC,KAFFA,KAMZA,EAAK,GACPp1C,KAAKwzC,cAAcwB,GAAW,EAAItqC,GAEpC1K,KAAK0tB,mBAAqB,EAC1B,MACF,KAAK,GACH3J,EAAOuN,QACPvN,EAAO0P,SAAS,GAChBuhB,EAAU,EACV,MACF,KAAK,GACHD,EAAIjxB,KAAKkxB,GAAW,EAAItqC,EAAMqZ,GAC9B,MACF,KAAK,GAGH,IAAK,IAAI,EAAIjmB,EAAI,KAAO,EACtB,GAAI,GAAKwE,GAA+B,MAApBoI,EAAOqD,EAAK,KAAyB,KAATrD,GAA0B,KAATA,GAAkBA,EAAO,KAAQA,EAxgBlF,IAwgB+G,CAC7HqqC,EAAI/wB,IAAIjW,EAAMjQ,EAAG,GACjBA,EAAI,EAAI,EACR,MAGJ,MACF,KAAK,GACHi3C,EAAI7wB,OAAgB,KAATxZ,GAA0B,KAATA,GACf,KAATA,IAAemqC,GAAc,GACjC9wB,EAAOuN,QACPvN,EAAO0P,SAAS,GAChBuhB,EAAU,EACVh1C,KAAK0tB,mBAAqB,EAC1B,MACF,KAAK,EACHonB,EAAI9mC,QACJ,MACF,KAAK,EAEH,IAAK,IAAI,EAAIlQ,EAAI,GAAK,IACpB,GAAI,GAAKwE,IAAWoI,EAAOqD,EAAK,IAAM,IAASrD,EAAO,KAAQA,GAAQ,IAAO,CAC3EoqC,EAAI9wB,IAAIjW,EAAMjQ,EAAG,GACjBA,EAAI,EAAI,EACR,MAGJ,MACF,KAAK,EACHg3C,EAAI7mC,IAAa,KAATvD,GAA0B,KAATA,GACZ,KAATA,IAAemqC,GAAc,GACjC9wB,EAAOuN,QACPvN,EAAO0P,SAAS,GAChBuhB,EAAU,EACVh1C,KAAK0tB,mBAAqB,EAG9BylB,EAA4B,GAAb0B,EAIjB70C,KAAKozC,SAAW4B,EAGhBh1C,KAAKmzC,aAAeA,GAExB,EAvZA,CAA0C,EAAAtqC,YAA7B,EAAAoc,wB,i1BCjOb,YACA,QACA,QAEA,QACA,QACA,OAEA,OACA,OACA,QACA,OAEIowB,EAAiB,EAErB,cAYE,WACUr9B,EACSs9B,EACjB9R,EACAI,EACiC1rB,EACE4sB,EACD3sB,EACpBy5B,EACOxJ,GATvB,MAWE,cAAO,KAVC,EAAApwB,UACS,EAAAs9B,iBAGgB,EAAAp9B,iBACE,EAAA4sB,mBACD,EAAA3sB,kBAlB5B,EAAA+b,IAAMmhB,IAQN,EAAAE,iBAAmB,IAAI,EAAA/tC,aAe7B,IAAMkvB,EAAoB,EAAKve,gBAAgB3K,QAAQkpB,kB,OACvD,EAAK8e,yBAA2B,IAAI,EAAAxa,wBAAwB,EAAK9iB,gBACjE,EAAKu9B,cAAgB,CACnB,IAAI,EAAAC,gBAAgB,EAAKJ,eAAgB,EAAG,EAAKt9B,QAAS,EAAKw9B,yBAA0B9e,EAAmB,EAAKxC,IAAK,EAAKhc,eAAgBC,GAC3I,IAAI,EAAAw9B,qBAAqB,EAAKL,eAAgB,EAAG,EAAKt9B,QAAS,EAAKkc,IAAK,EAAKhc,eAAgBC,GAC9F,IAAI,EAAAy9B,gBAAgB,EAAKN,eAAgB,EAAG,EAAKt9B,QAAS,EAAKkc,IAAKsP,EAAWI,EAAY,EAAK1rB,eAAgBC,GAChH,IAAI,EAAA09B,kBAAkB,EAAKP,eAAgB,EAAG,EAAKt9B,QAAS,EAAKkc,IAAK,EAAKqhB,iBAAkB,EAAKr9B,eAAgBC,EAAiBy5B,EAAaxJ,IAElJ,EAAKvmC,WAAa,CAChBkZ,gBAAiB,EACjBC,iBAAkB,EAClBH,gBAAiB,EACjBC,iBAAkB,EAClBG,eAAgB,EAChBC,cAAe,EACfE,kBAAmB,EACnBE,mBAAoB,EACpBC,YAAa,EACbC,aAAc,EACd1Z,gBAAiB,EACjBC,iBAAkB,GAEpB,EAAK+zC,kBAAoBp4C,OAAOme,iBAChC,EAAKk6B,oBACL,EAAKj8B,mB,EAwJT,OAxM8B,OAU5B,sBAAW,8BAAe,C,IAA1B,WAA4D,OAAO9Z,KAAKu1C,iBAAiBppB,O,gCAyClF,YAAAjsB,QAAP,WACE,IAAgB,UAAAF,KAAKy1C,cAAL,eAAoB,CAAxB,KACRv1C,UAEJ,YAAMA,QAAO,WACb,EAAA81C,wBAAwBh2C,KAAKk0B,MAGxB,YAAA+hB,yBAAP,WAGMj2C,KAAK81C,oBAAsBp4C,OAAOme,mBACpC7b,KAAK81C,kBAAoBp4C,OAAOme,iBAChC7b,KAAKkE,SAASlE,KAAKkY,eAAezX,KAAMT,KAAKkY,eAAe1X,QAIzD,YAAA4Z,UAAP,SAAiBub,GACf31B,KAAKgY,QAAU2d,EAEf,IAAgB,UAAA31B,KAAKy1C,cAAL,eAAoB,CAA/B,IAAM13C,EAAC,KACVA,EAAEqc,UAAUpa,KAAKgY,SACjBja,EAAEuzB,UAIC,YAAAptB,SAAP,SAAgBzD,EAAcD,GAE5BR,KAAK+1C,oBAGL,IAAgB,UAAA/1C,KAAKy1C,cAAL,eAAoB,CAAxB,KACR70C,OAAOZ,KAAK6B,YAIhB7B,KAAKs1C,eAAel8B,MAAM+B,MAAWnb,KAAK6B,WAAW0Z,YAAW,KAChEvb,KAAKs1C,eAAel8B,MAAMiC,OAAYrb,KAAK6B,WAAW2Z,aAAY,MAG7D,YAAA06B,kBAAP,WACEl2C,KAAKkE,SAASlE,KAAKkY,eAAezX,KAAMT,KAAKkY,eAAe1X,OAGvD,YAAAuZ,OAAP,WACE/Z,KAAKm2C,eAAc,SAAAp4C,GAAK,OAAAA,EAAEgc,aAGrB,YAAAC,QAAP,WACEha,KAAKm2C,eAAc,SAAAp4C,GAAK,OAAAA,EAAEic,cAGrB,YAAAE,mBAAP,SAA0BlM,EAAqCC,EAAmCkM,QAAA,IAAAA,OAAA,GAChGna,KAAKm2C,eAAc,SAAAp4C,GAAK,OAAAA,EAAEmc,mBAAmBlM,EAAOC,EAAKkM,OAGpD,YAAApW,aAAP,WACE/D,KAAKm2C,eAAc,SAAAp4C,GAAK,OAAAA,EAAEgG,mBAGrB,YAAA+V,iBAAP,WACE9Z,KAAKm2C,eAAc,SAAAp4C,GAAK,OAAAA,EAAE+b,uBAGrB,YAAAnZ,MAAP,WACEX,KAAKm2C,eAAc,SAAAp4C,GAAK,OAAAA,EAAEuzB,YAGpB,YAAA6kB,cAAR,SAAsBC,GACpB,IAAgB,UAAAp2C,KAAKy1C,cAAL,eAAoB,CAClCW,EADU,QASP,YAAAC,WAAP,SAAkBroC,EAAeC,GAC/B,IAAgB,UAAAjO,KAAKy1C,cAAL,eAAoB,CAAxB,KACRx7B,cAAcjM,EAAOC,KAOnB,YAAA8nC,kBAAR,WACO/1C,KAAK8kC,iBAAiBmJ,eAQ3BjuC,KAAK6B,WAAWkZ,gBAAkB1Z,KAAKO,MAAM5B,KAAK8kC,iBAAiB3pB,MAAQzd,OAAOme,kBAKlF7b,KAAK6B,WAAWmZ,iBAAmB3Z,KAAK+Q,KAAKpS,KAAK8kC,iBAAiBzpB,OAAS3d,OAAOme,kBAMnF7b,KAAK6B,WAAWiZ,iBAAmBzZ,KAAKO,MAAM5B,KAAK6B,WAAWmZ,iBAAmBhb,KAAKmY,gBAAgB3K,QAAQ04B,YAI9GlmC,KAAK6B,WAAWqZ,cAA4D,IAA5Clb,KAAKmY,gBAAgB3K,QAAQ04B,WAAmB,EAAI7kC,KAAK4P,OAAOjR,KAAK6B,WAAWiZ,iBAAmB9a,KAAK6B,WAAWmZ,kBAAoB,GAGvKhb,KAAK6B,WAAWgZ,gBAAkB7a,KAAK6B,WAAWkZ,gBAAkB1Z,KAAK4P,MAAMjR,KAAKmY,gBAAgB3K,QAAQ8oC,eAI5Gt2C,KAAK6B,WAAWoZ,eAAiB5Z,KAAKO,MAAM5B,KAAKmY,gBAAgB3K,QAAQ8oC,cAAgB,GAIzFt2C,KAAK6B,WAAWyZ,mBAAqBtb,KAAKkY,eAAe1X,KAAOR,KAAK6B,WAAWiZ,iBAChF9a,KAAK6B,WAAWuZ,kBAAoBpb,KAAKkY,eAAezX,KAAOT,KAAK6B,WAAWgZ,gBAO/E7a,KAAK6B,WAAW2Z,aAAena,KAAK4P,MAAMjR,KAAK6B,WAAWyZ,mBAAqB5d,OAAOme,kBACtF7b,KAAK6B,WAAW0Z,YAAcla,KAAK4P,MAAMjR,KAAK6B,WAAWuZ,kBAAoB1d,OAAOme,kBAOpF7b,KAAK6B,WAAWE,iBAAmB/B,KAAK6B,WAAW2Z,aAAexb,KAAKkY,eAAe1X,KACtFR,KAAK6B,WAAWC,gBAAkB9B,KAAK6B,WAAW0Z,YAAcvb,KAAKkY,eAAezX,OAG/E,YAAAq5B,wBAAP,SAA+BvsB,GAC7B,OAAOvN,KAAKw1C,yBAAyB1b,wBAAwBvsB,IAGxD,YAAAysB,0BAAP,SAAiCC,GAC/B,OAAOj6B,KAAKw1C,yBAAyBxb,0BAA0BC,IAtMtDuQ,EAAQ,GAiBhB,MAAA5iC,gBACA,MAAAkD,kBACA,MAAA1C,iBACA,MAAAL,cACA,MAAAgD,sBArBQy/B,GAAb,CAA8B,EAAA3hC,YAAjB,EAAA2hC,Y,ubCbb,YACA,QACA,OACA,OACA,QAEA,OAUA,cAQE,WACE+L,EACAz+B,EACA6d,EACA6gB,EACA58B,EACA8b,EACA+gB,EACAvY,GARF,MAUE,YAAMqY,EAAW,OAAQz+B,EAAQ8B,EAAO+b,EAAQD,EAAY+gB,EAAevY,IAAe,K,OAhBpF,EAAAwY,gBAA0B,EAC1B,EAAAC,eAAyB,GACzB,EAAAC,uBAAqD,GAErD,EAAAvxB,UAAY,IAAI,EAAAlb,SAatB,EAAK8pB,OAAS,IAAI,EAAA4iB,UAClB,EAAKrB,yBAA2BgB,E,EA4RpC,OAhTqC,OAuB5B,YAAA51C,OAAP,SAAciY,GACZ,YAAMjY,OAAM,UAACiY,GAGb,IAAMi+B,EAAe92C,KAAKwc,UAAS,GAAO,GACtCxc,KAAK02C,kBAAoB79B,EAAIkC,iBAAmB/a,KAAK22C,iBAAmBG,IAC1E92C,KAAK02C,gBAAkB79B,EAAIkC,gBAC3B/a,KAAK22C,eAAiBG,EACtB92C,KAAK42C,uBAAyB,IAGhC52C,KAAKi0B,OAAOtzB,QACZX,KAAKi0B,OAAOrzB,OAAOZ,KAAKkY,eAAezX,KAAMT,KAAKkY,eAAe1X,OAG5D,YAAA8wB,MAAP,WACEtxB,KAAKi0B,OAAOtzB,QACZX,KAAK6Z,aAGC,YAAAk9B,aAAR,SACEC,EACAC,EACAC,EACAtpB,GAMA,IAAK,IAAIvqB,EAAI2zC,EAAU3zC,GAAK4zC,EAAS5zC,IAInC,IAHA,IAAMK,EAAML,EAAIrD,KAAKkY,eAAe5U,OAAO+rB,MACrC7qB,EAAOxE,KAAKkY,eAAe5U,OAAO6pB,MAAMxuB,IAAI+E,GAC5Cg3B,EAAewc,EAAiBA,EAAehd,oBAAoBx2B,GAAO,GACvEgY,EAAI,EAAGA,EAAI1b,KAAKkY,eAAezX,KAAMib,IAAK,CACjDlX,EAAM+b,SAAS7E,EAAG1b,KAAKqlB,WACvB,IAAIvf,EAAO9F,KAAKqlB,UAGZ8xB,GAAW,EACXC,EAAY17B,EAIhB,GAAwB,IAApB5V,EAAKI,WAAT,CAOA,GAAIw0B,EAAap4B,OAAS,GAAKoZ,IAAMgf,EAAa,GAAG,GAAI,CACvDyc,GAAW,EACX,IAAM3b,EAAQd,EAAa1I,QAK3BlsB,EAAO,IAAI,EAAA6zB,eACT35B,KAAKqlB,UACL7gB,EAAMgC,mBAAkB,EAAMg1B,EAAM,GAAIA,EAAM,IAC9CA,EAAM,GAAKA,EAAM,IAInB4b,EAAY5b,EAAM,GAAK,GAOpB2b,GAAYn3C,KAAKq3C,eAAevxC,IAQ/BsxC,EAAY5yC,EAAMlC,OAAS,GAAKkC,EAAM6b,aAAa+2B,EAAY,KAAO,EAAA7tC,iBAExEzD,EAAK6D,UAAW,SAChB7D,EAAK6D,SAAW,GAAK,IASzBikB,EACE9nB,EACA4V,EACArY,GAGFqY,EAAI07B,KASF,YAAAE,gBAAR,SAAwBN,EAAkBC,GAA1C,WACQ7f,EAAMp3B,KAAKyZ,KACXhZ,EAAOT,KAAKkY,eAAezX,KAC7B82C,EAAiB,EACjBC,EAAiB,EACjBC,EAA+B,KAEnCrgB,EAAIja,OAEJnd,KAAK+2C,aAAaC,EAAUC,EAAS,MAAM,SAACnxC,EAAM4V,EAAGrY,GAGnD,IAAIq0C,EAAgB,KAEhB5xC,EAAK0F,YAELksC,EADE5xC,EAAKuG,cACS,EAAK2L,QAAQsF,WAAW5M,IAC/B5K,EAAKmG,UACE,OAAO,EAAApB,cAAcO,WAAWtF,EAAK0G,cAAc4Q,KAAK,KAAI,IAE5D,EAAKpF,QAAQqF,KAAKvX,EAAK0G,cAAckE,IAE9C5K,EAAKoG,UACdwrC,EAAgB,OAAO,EAAA7sC,cAAcO,WAAWtF,EAAK2G,cAAc2Q,KAAK,KAAI,IACnEtX,EAAKsG,gBACdsrC,EAAgB,EAAK1/B,QAAQqF,KAAKvX,EAAK2G,cAAciE,KAGjC,OAAlB+mC,IAGFF,EAAS77B,EACT87B,EAASn0C,GAGPA,IAAMm0C,GAERpgB,EAAIjb,UAAYs7B,GAAiB,GACjC,EAAKh8B,WAAW87B,EAAQC,EAAQ/2C,EAAO82C,EAAQ,GAC/CA,EAAS77B,EACT87B,EAASn0C,GACAo0C,IAAkBC,IAE3BtgB,EAAIjb,UAAYs7B,GAAiB,GACjC,EAAKh8B,WAAW87B,EAAQC,EAAQ97B,EAAI67B,EAAQ,GAC5CA,EAAS77B,EACT87B,EAASn0C,GAGXo0C,EAAgBC,KAII,OAAlBD,IACFrgB,EAAIjb,UAAYs7B,EAChBz3C,KAAKyb,WAAW87B,EAAQC,EAAQ/2C,EAAO82C,EAAQ,IAGjDngB,EAAI5Z,WAGE,YAAAm6B,gBAAR,SAAwBX,EAAkBC,GAA1C,WACEj3C,KAAK+2C,aAAaC,EAAUC,EAASj3C,KAAKw1C,0BAA0B,SAAC1vC,EAAM4V,EAAGrY,GAC5E,IAAIyC,EAAK8F,gBAGT,EAAKgR,WAAW9W,EAAM4V,EAAGrY,GACrByC,EAAK4F,eAAe,CAGtB,GAFA,EAAK+N,KAAK0D,OAENrX,EAAK0F,YACP,GAAI1F,EAAKwG,cACP,EAAKmN,KAAK0C,UAAY,EAAKnE,QAAQoE,WAAW1L,SACzC,GAAI5K,EAAKoG,UACd,EAAKuN,KAAK0C,UAAY,OAAO,EAAAtR,cAAcO,WAAWtF,EAAK2G,cAAc2Q,KAAK,KAAI,QAC7E,CACL,IAAIvT,EAAK/D,EAAK2G,aACV,EAAK0L,gBAAgB3K,QAAQwP,4BAA8BlX,EAAK2F,UAAY5B,EAAK,IACnFA,GAAM,GAER,EAAK4P,KAAK0C,UAAY,EAAKnE,QAAQqF,KAAKxT,GAAI6G,SAG9C,GAAI5K,EAAKuG,cACP,EAAKoN,KAAK0C,UAAY,EAAKnE,QAAQsF,WAAW5M,SACzC,GAAI5K,EAAKmG,UACd,EAAKwN,KAAK0C,UAAY,OAAO,EAAAtR,cAAcO,WAAWtF,EAAK0G,cAAc4Q,KAAK,KAAI,QAC7E,CACL,IAAIxT,EAAK9D,EAAK0G,aACV,EAAK2L,gBAAgB3K,QAAQwP,4BAA8BlX,EAAK2F,UAAY7B,EAAK,IACnFA,GAAM,GAER,EAAK6P,KAAK0C,UAAY,EAAKnE,QAAQqF,KAAKzT,GAAI8G,IAIhD,EAAKkL,uBAAuBF,EAAGrY,EAAGyC,EAAKI,YACvC,EAAKuT,KAAK+D,eAKT,YAAAvD,cAAP,SAAqB+8B,EAAkBC,GAEJ,IAA7Bj3C,KAAKi0B,OAAO2jB,MAAMt1C,SAIlBtC,KAAKwZ,YACPxZ,KAAKwZ,WAAWq+B,aAGlB73C,KAAKqc,YAAY,EAAG26B,EAAUh3C,KAAKkY,eAAezX,KAAMw2C,EAAUD,EAAW,GAC7Eh3C,KAAKs3C,gBAAgBN,EAAUC,GAC/Bj3C,KAAK23C,gBAAgBX,EAAUC,KAG1B,YAAAn9B,iBAAP,WACE9Z,KAAKua,iBAAiBva,KAAKmY,gBAAgB3K,QAAQkpB,oBAM7C,YAAA2gB,eAAR,SAAuBvxC,GAGrB,GAAwB,IAApBA,EAAKI,WACP,OAAO,EAIT,GAAIJ,EAAKyE,UAAY,IACnB,OAAO,EAGT,IAAMoO,EAAQ7S,EAAKG,WAGnB,GAAIjG,KAAK42C,uBAAuBj3C,eAAegZ,GAC7C,OAAO3Y,KAAK42C,uBAAuBj+B,GAIrC3Y,KAAKyZ,KAAK0D,OACVnd,KAAKyZ,KAAK8C,KAAOvc,KAAK22C,eAKtB,IAAMmB,EAAWz2C,KAAKO,MAAM5B,KAAKyZ,KAAKs+B,YAAYp/B,GAAOwC,OAASnb,KAAK02C,gBAOvE,OAJA12C,KAAKyZ,KAAK+D,UAGVxd,KAAK42C,uBAAuBj+B,GAASm/B,EAC9BA,GAiBX,EAhTA,CAAqC,EAAAh5B,iBAAxB,EAAA42B,mB,iGClBb,iBAGE,aACE11C,KAAK43C,MAAQ,GAuBjB,OApBS,YAAAh3C,OAAP,SAAcua,EAAeE,GAC3B,IAAK,IAAIK,EAAI,EAAGA,EAAIP,EAAOO,IAAK,CAC1B1b,KAAK43C,MAAMt1C,QAAUoZ,GACvB1b,KAAK43C,MAAM1wC,KAAK,IAElB,IAAK,IAAI7D,EAAIrD,KAAK43C,MAAMl8B,GAAGpZ,OAAQe,EAAIgY,EAAQhY,IAC7CrD,KAAK43C,MAAMl8B,GAAGxU,UAAK7C,GAErBrE,KAAK43C,MAAMl8B,GAAGpZ,OAAS+Y,EAEzBrb,KAAK43C,MAAMt1C,OAAS6Y,GAGf,YAAAxa,MAAP,WACE,IAAK,IAAI+a,EAAI,EAAGA,EAAI1b,KAAK43C,MAAMt1C,OAAQoZ,IACrC,IAAK,IAAIrY,EAAI,EAAGA,EAAIrD,KAAK43C,MAAMl8B,GAAGpZ,OAAQe,IACxCrD,KAAK43C,MAAMl8B,GAAGrY,QAAKgB,GAI3B,EA3BA,GAAa,EAAAwyC,a,2dCAb,WAEA,QACA,QACA,QACA,QAEA,QACA,QAOMmB,EAAoB,CACxBtnC,IAAK,mBACLb,KAAM,GAuBR,SAAgBooC,EAAiBC,GAU/B,OAAOA,EAAMxtC,MAAQ,GAAKwtC,EAAMruC,IAAM,GAAKquC,EAAMtuC,IAAM,GAAKsuC,EAAMt/B,KAAO,EAAI,IAAMs/B,EAAMr/B,IAAM,EAAI,IAAMq/B,EAAMp/B,OAAS,EAAI,GAV9H,qBAaA,kBA2BE,WAAYE,EAA4Bm/B,GAAxC,MACE,cAAO,KAD+B,EAAAA,UAXhC,EAAAC,kBAA4B,EAG5B,EAAAC,uBAA6C,GAG7C,EAAAC,qBAAsC,KAGtC,EAAAC,QAA8B,KAIpC,EAAKC,aAAex/B,EAASC,cAAc,UAC3C,EAAKu/B,aAAar9B,MAvEA,KAwElB,EAAKq9B,aAAan9B,OAvEC,KA2EnB,EAAKo9B,UAAY,EAAA/+B,aAAa,EAAK8+B,aAAa7+B,WAAW,KAAM,CAACC,OAAO,KAEzE,IAAM8+B,EAAY1/B,EAASC,cAAc,UACzCy/B,EAAUv9B,MAAQ,EAAKg9B,QAAQp9B,gBAC/B29B,EAAUr9B,OAAS,EAAK88B,QAAQn9B,iBAChC,EAAK29B,QAAU,EAAAj/B,aAAag/B,EAAU/+B,WAAW,KAAM,CAACC,MAAO,EAAKu+B,QAAQzhB,qBAE5E,EAAKgD,OAASr4B,KAAKO,MAnFD,KAmFuB,EAAKu2C,QAAQp9B,iBACtD,EAAK69B,QAAUv3C,KAAKO,MAnFD,KAmFwB,EAAKu2C,QAAQn9B,kBACxD,IAAM69B,EAAW,EAAKnf,OAAS,EAAKkf,Q,OACpC,EAAKE,UAAY,IAAI,EAAAC,OAAOF,GAC5B,EAAKC,UAAUE,SAASH,G,EAuO5B,OArRsC,OAoD7B,YAAA34C,QAAP,WACoC,OAA9BF,KAAKs4C,uBACP56C,OAAOyG,aAAanE,KAAKs4C,sBACzBt4C,KAAKs4C,qBAAuB,OAIzB,YAAAT,WAAP,WACE73C,KAAKo4C,kBAAoB,GAGpB,YAAAn7B,KAAP,SACEma,EACA8gB,EACAx8B,EACArY,GAGA,GAAmB,KAAf60C,EAAMxtC,KACR,OAAO,EAIT,IAAK1K,KAAKi5C,UAAUf,GAClB,OAAO,EAGT,IAAMgB,EAAWjB,EAAiBC,GAC5BiB,EAAan5C,KAAK84C,UAAUn6C,IAAIu6C,GACtC,GAAIC,QAEF,OADAn5C,KAAKo5C,eAAehiB,EAAK+hB,EAAYz9B,EAAGrY,IACjC,EAET,GAAIrD,KAAKo4C,kBAhHkB,IAgH0B,CACnD,IAAI1vC,OAAK,EAEPA,EADE1I,KAAK84C,UAAUvqC,KAAOvO,KAAK84C,UAAUD,SAC/B74C,KAAK84C,UAAUvqC,KAGfvO,KAAK84C,UAAUO,OAAQ3wC,MAEjC,IAAM,EAAa1I,KAAKs5C,aAAapB,EAAOxvC,GAG5C,OAFA1I,KAAK84C,UAAUx5B,IAAI45B,EAAU,GAC7Bl5C,KAAKo5C,eAAehiB,EAAK,EAAY1b,EAAGrY,IACjC,EAET,OAAO,GAGD,YAAA41C,UAAR,SAAkBf,GAQhB,OAAOA,EAAMxtC,KAAO,KAGd,YAAA6uC,eAAR,SAAuB7wC,GACrB,OAAQA,EAAQ1I,KAAK05B,OAAU15B,KAAKm4C,QAAQp9B,iBAGtC,YAAAy+B,eAAR,SAAuB9wC,GACrB,OAAOrH,KAAKO,MAAM8G,EAAQ1I,KAAK05B,QAAU15B,KAAKm4C,QAAQn9B,kBAGhD,YAAAo+B,eAAR,SACEhiB,EACA+hB,EACAz9B,EACArY,GAGA,IAAI81C,EAAWvsC,QAAf,CAGA,IAAM6sC,EAASz5C,KAAKu5C,eAAeJ,EAAWzwC,OACxCgxC,EAAS15C,KAAKw5C,eAAeL,EAAWzwC,OAC9C0uB,EAAIuiB,UACFR,EAAWS,SAAW55C,KAAKu4C,QAAWv4C,KAAKw4C,aAC3CiB,EACAC,EACA15C,KAAKm4C,QAAQp9B,gBACb/a,KAAKm4C,QAAQn9B,iBACbU,EACArY,EACArD,KAAKm4C,QAAQp9B,gBACb/a,KAAKm4C,QAAQn9B,oBAIT,YAAA6+B,uBAAR,SAA+BjmB,GAC7B,OAAIA,EAAM5zB,KAAKm4C,QAAQxiB,OAAOtY,KAAK/a,OAC1BtC,KAAKm4C,QAAQxiB,OAAOtY,KAAKuW,GAE3B,EAAAqD,oBAAoBrD,IAGrB,YAAAkmB,oBAAR,SAA4B5B,GAC1B,OAAIl4C,KAAKm4C,QAAQzhB,kBAIRshB,EAELE,EAAMruC,KAAO,EAAA2F,uBACRxP,KAAKm4C,QAAQxiB,OAAOrY,WAEzB46B,EAAMruC,GAAK,IACN7J,KAAK65C,uBAAuB3B,EAAMruC,IAEpC7J,KAAKm4C,QAAQxiB,OAAOvZ,YAGrB,YAAA29B,oBAAR,SAA4B7B,GAC1B,OAAIA,EAAMtuC,KAAO,EAAA4F,uBACR,EAAAgB,MAAMc,OAAOtR,KAAKm4C,QAAQxiB,OAAOvZ,YAEtC87B,EAAMtuC,GAAK,IAEN5J,KAAK65C,uBAAuB3B,EAAMtuC,IAEpC5J,KAAKm4C,QAAQxiB,OAAOrY,YAKrB,YAAAg8B,aAAR,SAAqBpB,EAAyBxvC,GAC5C1I,KAAKo4C,oBAELp4C,KAAK24C,QAAQx7B,OAGb,IAAMgzB,EAAkBnwC,KAAK85C,oBAAoB5B,GAGjDl4C,KAAK24C,QAAQthB,yBAA2B,OACxCr3B,KAAK24C,QAAQx8B,UAAYg0B,EAAgBz/B,IACzC1Q,KAAK24C,QAAQh9B,SAAS,EAAG,EAAG3b,KAAKm4C,QAAQp9B,gBAAiB/a,KAAKm4C,QAAQn9B,kBACvEhb,KAAK24C,QAAQthB,yBAA2B,cAGxC,IAAMxZ,EAAaq6B,EAAMt/B,KAAO5Y,KAAKm4C,QAAQv6B,eAAiB5d,KAAKm4C,QAAQt6B,WACrEm8B,EAAY9B,EAAMp/B,OAAS,SAAW,GAC5C9Y,KAAK24C,QAAQp8B,KACRy9B,EAAS,IAAIn8B,EAAU,IAAI7d,KAAKm4C,QAAQr6B,SAAW9d,KAAKm4C,QAAQt8B,iBAAgB,MAAM7b,KAAKm4C,QAAQp6B,WACxG/d,KAAK24C,QAAQl8B,aAAe,SAE5Bzc,KAAK24C,QAAQx8B,UAAYnc,KAAK+5C,oBAAoB7B,GAAOxnC,IAGrDwnC,EAAMr/B,MACR7Y,KAAK24C,QAAQp7B,YAAc,EAAA9N,aAG7BzP,KAAK24C,QAAQh8B,SAASu7B,EAAMv/B,MAAO,EAAG3Y,KAAKm4C,QAAQn9B,iBAAmB,GACtEhb,KAAK24C,QAAQn7B,UAIb,IAAMy8B,EAAYj6C,KAAK24C,QAAQxf,aAC7B,EAAG,EAAGn5B,KAAKm4C,QAAQp9B,gBAAiB/a,KAAKm4C,QAAQn9B,kBAE/CpO,GAAU,EACT5M,KAAKm4C,QAAQzhB,oBAChB9pB,EAiFN,SAAoBqtC,EAAsBzpC,GAKxC,IAJA,IAAI5D,GAAU,EACRhO,EAAI4R,EAAMX,OAAS,GACnBO,EAAII,EAAMX,OAAS,GAAK,IACxBQ,EAAIG,EAAMX,OAAS,EAAI,IACpBqqC,EAAS,EAAGA,EAASD,EAAUlsC,KAAKzL,OAAQ43C,GAAU,EACzDD,EAAUlsC,KAAKmsC,KAAYt7C,GAC3Bq7C,EAAUlsC,KAAKmsC,EAAS,KAAO9pC,GAC/B6pC,EAAUlsC,KAAKmsC,EAAS,KAAO7pC,EACjC4pC,EAAUlsC,KAAKmsC,EAAS,GAAK,EAE7BttC,GAAU,EAGd,OAAOA,EA/FOutC,CAAWF,EAAW9J,IAIlC,IAAMz0B,EAAI1b,KAAKu5C,eAAe7wC,GACxBrF,EAAIrD,KAAKw5C,eAAe9wC,GAE9B1I,KAAKy4C,UAAU2B,aAAaH,EAAWv+B,EAAGrY,GAG1C,IAAM81C,EAAa,CACjBzwC,MAAK,EACLkE,QAAO,EACPgtC,UAAU,GAIZ,OAFA55C,KAAKq6C,kBAAkBlB,GAEhBA,GAGD,YAAAkB,kBAAR,SAA0BlB,GAA1B,aAKQ,sBAAuBz7C,SAAW,EAAAsV,WAAa,EAAAC,WAKrDjT,KAAKq4C,uBAAuBnxC,KAAKiyC,GAGC,OAA9Bn5C,KAAKs4C,uBAITt4C,KAAKs4C,qBAAuB56C,OAAO0G,YAAW,WAAM,SAAKk2C,oBArR3B,QAwRxB,YAAAA,gBAAR,sBACQC,EAAuBv6C,KAAKq4C,uBAClCr4C,KAAKq4C,uBAAyB,GAC9B36C,OAAO88C,kBAAkBx6C,KAAKw4C,cAAciC,MAAK,SAAAC,GAE/C,EAAKnC,QAAUmC,EAIf,IAAK,IAAI58C,EAAI,EAAGA,EAAIy8C,EAAqBj4C,OAAQxE,IAAK,CACtCy8C,EAAqBz8C,GAG7B87C,UAAW,MAGrB55C,KAAKs4C,qBAAuB,MAEhC,EArRA,CAAsC,EAAAqC,eAAzB,EAAAtkB,mBAyRb,kBACE,WAAYrd,EAAoBkd,G,OAC9B,cAAO,KAWX,OAbmC,OAK1B,YAAAjZ,KAAP,SACEma,EACA8gB,EACAx8B,EACArY,GAEA,OAAO,GAEX,EAbA,CAAmC,EAAAs3C,eAAtB,EAAAC,iB,qGC3Ub,8BACU,KAAAC,YAAsB,EA8ChC,OA5CS,YAAA36C,QAAP,aAMO,YAAA0a,OAAP,WACO5a,KAAK66C,aACR76C,KAAK86C,YACL96C,KAAK66C,YAAa,IAQZ,YAAAC,UAAV,aASO,YAAAjD,WAAP,aAkBF,EA/CA,GAAsB,EAAA8C,iB,0GCDtB,8BACU,KAAAI,OAAoF,GACpF,KAAAC,MAAmF,GA4B7F,OA1BS,YAAAr6C,MAAP,WACEX,KAAK+6C,OAAS,GACd/6C,KAAKg7C,MAAQ,IAGR,YAAAC,OAAP,SAAcpxC,EAAYD,EAAY7K,GAC/BiB,KAAKg7C,MAAMnxC,KACd7J,KAAKg7C,MAAMnxC,GAAM,IAEnB7J,KAAKg7C,MAAMnxC,GAAKD,GAAM7K,GAGjB,YAAAm8C,OAAP,SAAcrxC,EAAYD,GACxB,OAAO5J,KAAKg7C,MAAMnxC,GAAM7J,KAAKg7C,MAAMnxC,GAAKD,QAAMvF,GAGzC,YAAAua,SAAP,SAAgB/U,EAAYD,EAAY7K,GACjCiB,KAAK+6C,OAAOlxC,KACf7J,KAAK+6C,OAAOlxC,GAAM,IAEpB7J,KAAK+6C,OAAOlxC,GAAKD,GAAM7K,GAGlB,YAAAof,SAAP,SAAgBtU,EAAYD,GAC1B,OAAO5J,KAAK+6C,OAAOlxC,GAAM7J,KAAK+6C,OAAOlxC,GAAKD,QAAMvF,GAEpD,EA9BA,GAAa,EAAAozB,sB,8FCKb,iBAOE,WAAmBohB,GAAA,KAAAA,WANX,KAAAsC,KAA8C,GAC9C,KAAAC,MAAmC,KACnC,KAAAC,MAAmC,KACnC,KAAAC,UAAkC,GACnC,KAAA/sC,KAAe,EAsHxB,OAlHU,YAAAgtC,YAAR,SAAoBluC,GAClB,IAAMmuC,EAAOnuC,EAAKmuC,KACZlJ,EAAOjlC,EAAKilC,KACdjlC,IAASrN,KAAKo7C,QAChBp7C,KAAKo7C,MAAQ9I,GAEXjlC,IAASrN,KAAKq7C,QAChBr7C,KAAKq7C,MAAQG,GAEF,OAATA,IACFA,EAAKlJ,KAAOA,GAED,OAATA,IACFA,EAAKkJ,KAAOA,IAIR,YAAAC,YAAR,SAAoBpuC,GAClB,IAAMquC,EAAO17C,KAAKq7C,MACL,OAATK,IACFA,EAAKpJ,KAAOjlC,GAEdA,EAAKmuC,KAAOE,EACZruC,EAAKilC,KAAO,KACZtyC,KAAKq7C,MAAQhuC,EACM,OAAfrN,KAAKo7C,QACPp7C,KAAKo7C,MAAQ/tC,IAWV,YAAA2rC,SAAP,SAAgB2C,GAEd,IADA,IAAMC,EAAW57C,KAAKs7C,UACbx9C,EAAI,EAAGA,EAAI69C,EAAO79C,IACzB89C,EAAS10C,KAAK,CACZs0C,KAAM,KACNlJ,KAAM,KACNjzC,IAAK,KACLN,MAAO,QAKN,YAAAJ,IAAP,SAAWU,GAGT,IAAMgO,EAAOrN,KAAKm7C,KAAK97C,GACvB,YAAagF,IAATgJ,GACFrN,KAAKu7C,YAAYluC,GACjBrN,KAAKy7C,YAAYpuC,GACVA,EAAKtO,OAEP,MAMF,YAAA88C,UAAP,SAAiBx8C,GACf,IAAMgO,EAAOrN,KAAKm7C,KAAK97C,GACvB,YAAagF,IAATgJ,EACKA,EAAKtO,MAEP,MAGF,YAAAs6C,KAAP,WACE,IAAMyC,EAAO97C,KAAKo7C,MAClB,OAAgB,OAATU,EAAgB,KAAOA,EAAK/8C,OAG9B,YAAAugB,IAAP,SAAWjgB,EAAaN,GAEtB,IAAIsO,EAAOrN,KAAKm7C,KAAK97C,GACrB,QAAagF,IAATgJ,EAEFA,EAAOrN,KAAKm7C,KAAK97C,GACjBW,KAAKu7C,YAAYluC,GACjBA,EAAKtO,MAAQA,OACR,GAAIiB,KAAKuO,MAAQvO,KAAK64C,SAE3BxrC,EAAOrN,KAAKo7C,MACZp7C,KAAKu7C,YAAYluC,UACVrN,KAAKm7C,KAAK9tC,EAAKhO,KACtBgO,EAAKhO,IAAMA,EACXgO,EAAKtO,MAAQA,EACbiB,KAAKm7C,KAAK97C,GAAOgO,MACZ,CAEL,IAAMuuC,EAAW57C,KAAKs7C,UAClBM,EAASt5C,OAAS,IAEpB+K,EAAOuuC,EAAS3pB,OACX5yB,IAAMA,EACXgO,EAAKtO,MAAQA,GAEbsO,EAAO,CACLmuC,KAAM,KACNlJ,KAAM,KACNjzC,IAAG,EACHN,MAAK,GAGTiB,KAAKm7C,KAAK97C,GAAOgO,EACjBrN,KAAKuO,OAEPvO,KAAKy7C,YAAYpuC,IAErB,EA3HA,GAAa,EAAA0rC,U,4bCNb,IAWA,cAGE,WACExC,EACAz+B,EACA6d,EACAD,EACA+gB,EACAvY,GANF,MAQE,YAAMqY,EAAW,YAAaz+B,GAAQ,EAAM6d,EAAQD,EAAY+gB,EAAevY,IAAe,K,OAC9F,EAAK6d,c,EAiGT,OA7G0C,OAehC,YAAAA,YAAR,WACE/7C,KAAKi0B,OAAS,CACZjmB,WAAO3J,EACP4J,SAAK5J,EACL8V,sBAAkB9V,EAClBgrB,WAAOhrB,IAIJ,YAAAzD,OAAP,SAAciY,GACZ,YAAMjY,OAAM,UAACiY,GAEb7Y,KAAK+7C,eAGA,YAAAzqB,MAAP,WACMtxB,KAAKi0B,OAAOjmB,OAAShO,KAAKi0B,OAAOhmB,MACnCjO,KAAK+7C,cACL/7C,KAAK6Z,cAIF,YAAAK,mBAAP,SAA0BlM,EAAqCC,EAAmCkM,GAEhG,GAAKna,KAAKg8C,gBAAgBhuC,EAAOC,EAAKkM,EAAkBna,KAAKkY,eAAe5U,OAAO+rB,OAQnF,GAHArvB,KAAK6Z,YAGA7L,GAAUC,EAAf,CAMA,IAAMguC,EAAmBjuC,EAAM,GAAKhO,KAAKkY,eAAe5U,OAAO+rB,MACzD6sB,EAAiBjuC,EAAI,GAAKjO,KAAKkY,eAAe5U,OAAO+rB,MACrD8sB,EAAyB96C,KAAKC,IAAI26C,EAAkB,GACpDG,EAAuB/6C,KAAKiR,IAAI4pC,EAAgBl8C,KAAKkY,eAAe1X,KAAO,GAGjF,KAAI27C,GAA0Bn8C,KAAKkY,eAAe1X,MAAQ47C,EAAuB,GAAjF,CAMA,GAFAp8C,KAAKyZ,KAAK0C,UAAYnc,KAAKgY,QAAQ0f,qBAAqBhnB,IAEpDyJ,EAAkB,CACpB,IAAM1X,EAAWuL,EAAM,GACjBmN,EAAQlN,EAAI,GAAKxL,EACjB4Y,EAAS+gC,EAAuBD,EAAyB,EAC/Dn8C,KAAKyb,WAAWhZ,EAAU05C,EAAwBhhC,EAAOE,OACpD,CAEC5Y,EAAWw5C,IAAqBE,EAAyBnuC,EAAM,GAAK,EAA1E,IACMquC,EAAiBF,IAA2BC,EAAuBnuC,EAAI,GAAKjO,KAAKkY,eAAezX,KACtGT,KAAKyb,WAAWhZ,EAAU05C,EAAwBE,EAAiB55C,EAAU,GAG7E,IAAM65C,EAAkBj7C,KAAKC,IAAI86C,EAAuBD,EAAyB,EAAG,GAIpF,GAHAn8C,KAAKyb,WAAW,EAAG0gC,EAAyB,EAAGn8C,KAAKkY,eAAezX,KAAM67C,GAGrEH,IAA2BC,EAAsB,CAEnD,IAAMv6B,EAASq6B,IAAmBE,EAAuBnuC,EAAI,GAAKjO,KAAKkY,eAAezX,KACtFT,KAAKyb,WAAW,EAAG2gC,EAAsBv6B,EAAQ,IAKrD7hB,KAAKi0B,OAAOjmB,MAAQ,CAACA,EAAM,GAAIA,EAAM,IACrChO,KAAKi0B,OAAOhmB,IAAM,CAACA,EAAI,GAAIA,EAAI,IAC/BjO,KAAKi0B,OAAO9Z,iBAAmBA,EAC/Bna,KAAKi0B,OAAO5E,MAAQrvB,KAAKkY,eAAe5U,OAAO+rB,YA5C7CrvB,KAAK+7C,eA+CD,YAAAC,gBAAR,SAAwBhuC,EAAqCC,EAAmCkM,EAA2BkV,GACzH,OAAQrvB,KAAKu8C,qBAAqBvuC,EAAOhO,KAAKi0B,OAAOjmB,SAClDhO,KAAKu8C,qBAAqBtuC,EAAKjO,KAAKi0B,OAAOhmB,MAC5CkM,IAAqBna,KAAKi0B,OAAO9Z,kBACjCkV,IAAUrvB,KAAKi0B,OAAO5E,OAGlB,YAAAktB,qBAAR,SAA6BC,EAAsCC,GACjE,SAAKD,IAAWC,KAITD,EAAO,KAAOC,EAAO,IAAMD,EAAO,KAAOC,EAAO,KAE3D,EA7GA,CAXA,MAW0C39B,iBAA7B,EAAA62B,wB,ybCXb,YAEA,OAmBA,cAME,WACEY,EACAz+B,EACA6d,EACAD,EACQ6f,EACRkB,EACAvY,EACiBta,EACA84B,GATnB,MAWE,YAAMnG,EAAW,SAAUz+B,GAAQ,EAAM6d,EAAQD,EAAY+gB,EAAevY,IAAe,K,OANnF,EAAAqX,mBAGS,EAAA3xB,eACA,EAAA84B,sBAXX,EAAAC,MAAmB,IAAI,EAAAxyC,SAc7B,EAAK8pB,OAAS,CACZvY,EAAG,EACHrY,EAAG,EACHu5C,WAAW,EACXxjC,MAAO,GACP+B,MAAO,GAET,EAAK0hC,iBAAmB,CACtB,IAAO,EAAKC,iBAAiBx9C,KAAK,GAClC,MAAS,EAAKy9C,mBAAmBz9C,KAAK,GACtC,UAAa,EAAK09C,uBAAuB19C,KAAK,I,EAwLpD,OApNuC,OAiC9B,YAAAsB,OAAP,SAAciY,GACZ,YAAMjY,OAAM,UAACiY,GAEb7Y,KAAKi0B,OAAS,CACZvY,EAAG,EACHrY,EAAG,EACHu5C,WAAW,EACXxjC,MAAO,GACP+B,MAAO,IAIJ,YAAAmW,MAAP,WACEtxB,KAAKi9C,eACDj9C,KAAKk9C,2BACPl9C,KAAKk9C,yBAAyBh9C,UAC9BF,KAAKk9C,8BAA2B74C,EAChCrE,KAAK8Z,qBAIF,YAAAC,OAAP,WACM/Z,KAAKk9C,0BACPl9C,KAAKk9C,yBAAyBC,QAEhCn9C,KAAKu1C,iBAAiBnuC,KAAK,CAAE4G,MAAOhO,KAAKkY,eAAe5U,OAAOD,EAAG4K,IAAKjO,KAAKkY,eAAe5U,OAAOD,KAG7F,YAAA2W,QAAP,WACMha,KAAKk9C,yBACPl9C,KAAKk9C,yBAAyBE,SAE9Bp9C,KAAKu1C,iBAAiBnuC,KAAK,CAAE4G,MAAOhO,KAAKkY,eAAe5U,OAAOD,EAAG4K,IAAKjO,KAAKkY,eAAe5U,OAAOD,KAI/F,YAAAyW,iBAAP,e,EAAA,OACM9Z,KAAKmY,gBAAgB3K,QAAQkX,YAC1B1kB,KAAKk9C,2BACRl9C,KAAKk9C,yBAA2B,IAAIG,EAAwBr9C,KAAK08C,oBAAoBE,WAAW,WAC9F,EAAKU,SAAQ,QAIY,QAA7B,EAAAt9C,KAAKk9C,gCAAwB,SAAEh9C,UAC/BF,KAAKk9C,8BAA2B74C,GAIlCrE,KAAKu1C,iBAAiBnuC,KAAK,CAAE4G,MAAOhO,KAAKkY,eAAe5U,OAAOD,EAAG4K,IAAKjO,KAAKkY,eAAe5U,OAAOD,KAG7F,YAAAU,aAAP,WACM/D,KAAKk9C,0BACPl9C,KAAKk9C,yBAAyBK,yBAI3B,YAAAtjC,cAAP,SAAqBvX,EAAkBI,IAChC9C,KAAKk9C,0BAA4Bl9C,KAAKk9C,yBAAyBM,SAClEx9C,KAAKs9C,SAAQ,GAEbt9C,KAAKk9C,yBAAyBK,yBAI1B,YAAAD,QAAR,SAAgBG,GAEd,GAAKz9C,KAAK4jB,aAAa0M,sBAAuBtwB,KAAK4jB,aAAauM,eAAhE,CAKA,IAAMutB,EAAU19C,KAAKkY,eAAe5U,OAAO8pB,MAAQptB,KAAKkY,eAAe5U,OAAOD,EACxEs6C,EAA0BD,EAAU19C,KAAKkY,eAAe5U,OAAO+rB,MAGrE,GAAIsuB,EAA0B,GAAKA,GAA2B39C,KAAKkY,eAAe1X,KAChFR,KAAKi9C,mBADP,CAMA,IAAMW,EAAUv8C,KAAKiR,IAAItS,KAAKkY,eAAe5U,OAAOoY,EAAG1b,KAAKkY,eAAezX,KAAO,GAElF,GADAT,KAAKkY,eAAe5U,OAAO6pB,MAAMxuB,IAAI++C,GAAUn9B,SAASq9B,EAAS59C,KAAK28C,YAC3Ct4C,IAAvBrE,KAAK28C,MAAMhzC,QAAf,CAIA,IAAK3J,KAAK08C,oBAAoBE,UAAW,CACvC58C,KAAKi9C,eACLj9C,KAAKyZ,KAAK0D,OACVnd,KAAKyZ,KAAK0C,UAAYnc,KAAKgY,QAAQue,OAAO7lB,IAC1C,IAAM+T,EAAczkB,KAAKmY,gBAAgB3K,QAAQiX,YAYjD,OAXIA,GAA+B,UAAhBA,EACjBzkB,KAAK68C,iBAAiBp4B,GAAam5B,EAASD,EAAyB39C,KAAK28C,OAE1E38C,KAAK69C,kBAAkBD,EAASD,EAAyB39C,KAAK28C,OAEhE38C,KAAKyZ,KAAK+D,UACVxd,KAAKi0B,OAAOvY,EAAIkiC,EAChB59C,KAAKi0B,OAAO5wB,EAAIs6C,EAChB39C,KAAKi0B,OAAO2oB,WAAY,EACxB58C,KAAKi0B,OAAO7a,MAAQqL,OACpBzkB,KAAKi0B,OAAO9Y,MAAQnb,KAAK28C,MAAMz2C,YAKjC,IAAIlG,KAAKk9C,0BAA6Bl9C,KAAKk9C,yBAAyBY,gBAApE,CAKA,GAAI99C,KAAKi0B,OAAQ,CAEf,GAAIj0B,KAAKi0B,OAAOvY,IAAMkiC,GAClB59C,KAAKi0B,OAAO5wB,IAAMs6C,GAClB39C,KAAKi0B,OAAO2oB,YAAc58C,KAAK08C,oBAAoBE,WACnD58C,KAAKi0B,OAAO7a,QAAUpZ,KAAKmY,gBAAgB3K,QAAQiX,aACnDzkB,KAAKi0B,OAAO9Y,QAAUnb,KAAK28C,MAAMz2C,WACnC,OAEFlG,KAAKi9C,eAGPj9C,KAAKyZ,KAAK0D,OACVnd,KAAK68C,iBAAiB78C,KAAKmY,gBAAgB3K,QAAQiX,aAAe,SAASm5B,EAASD,EAAyB39C,KAAK28C,OAClH38C,KAAKyZ,KAAK+D,UAEVxd,KAAKi0B,OAAOvY,EAAIkiC,EAChB59C,KAAKi0B,OAAO5wB,EAAIs6C,EAChB39C,KAAKi0B,OAAO2oB,WAAY,EACxB58C,KAAKi0B,OAAO7a,MAAQpZ,KAAKmY,gBAAgB3K,QAAQiX,YACjDzkB,KAAKi0B,OAAO9Y,MAAQnb,KAAK28C,MAAMz2C,gBAxB7BlG,KAAKi9C,sBAzCLj9C,KAAKi9C,gBAoED,YAAAA,aAAR,WACMj9C,KAAKi0B,SACPj0B,KAAKqc,YAAYrc,KAAKi0B,OAAOvY,EAAG1b,KAAKi0B,OAAO5wB,EAAGrD,KAAKi0B,OAAO9Y,MAAO,GAClEnb,KAAKi0B,OAAS,CACZvY,EAAG,EACHrY,EAAG,EACHu5C,WAAW,EACXxjC,MAAO,GACP+B,MAAO,KAKL,YAAA2hC,iBAAR,SAAyBphC,EAAWrY,EAAWyC,GAC7C9F,KAAKyZ,KAAK0D,OACVnd,KAAKyZ,KAAK0C,UAAYnc,KAAKgY,QAAQue,OAAO7lB,IAC1C1Q,KAAK8b,oBAAoBJ,EAAGrY,EAAGrD,KAAKmY,gBAAgB3K,QAAQuwC,aAC5D/9C,KAAKyZ,KAAK+D,WAGJ,YAAAu/B,mBAAR,SAA2BrhC,EAAWrY,EAAWyC,GAC/C9F,KAAKyZ,KAAK0D,OACVnd,KAAKyZ,KAAK0C,UAAYnc,KAAKgY,QAAQue,OAAO7lB,IAC1C1Q,KAAKyb,WAAWC,EAAGrY,EAAGyC,EAAKI,WAAY,GACvClG,KAAKyZ,KAAK0C,UAAYnc,KAAKgY,QAAQwe,aAAa9lB,IAChD1Q,KAAKsc,mBAAmBxW,EAAM4V,EAAGrY,GACjCrD,KAAKyZ,KAAK+D,WAGJ,YAAAw/B,uBAAR,SAA+BthC,EAAWrY,EAAWyC,GACnD9F,KAAKyZ,KAAK0D,OACVnd,KAAKyZ,KAAK0C,UAAYnc,KAAKgY,QAAQue,OAAO7lB,IAC1C1Q,KAAK4b,uBAAuBF,EAAGrY,GAC/BrD,KAAKyZ,KAAK+D,WAGJ,YAAAqgC,kBAAR,SAA0BniC,EAAWrY,EAAWyC,GAC9C9F,KAAKyZ,KAAK0D,OACVnd,KAAKyZ,KAAKukC,YAAch+C,KAAKgY,QAAQue,OAAO7lB,IAC5C1Q,KAAK+b,kBAAkBL,EAAGrY,EAAGyC,EAAKI,WAAY,GAC9ClG,KAAKyZ,KAAK+D,WAEd,EApNA,CAAuC,EAAAsB,iBAA1B,EAAA+2B,oBAsNb,iBAcE,WACE+G,EACQzgB,GAAA,KAAAA,kBAERn8B,KAAK89C,iBAAkB,EACnBlB,GACF58C,KAAKi+C,mBAgHX,OA5GE,sBAAW,uBAAQ,C,IAAnB,WAAiC,QAASj+C,KAAKk+C,oBAAsBl+C,KAAKm+C,iB,gCAEnE,YAAAj+C,QAAP,WACMF,KAAKm+C,iBACPzgD,OAAO0gD,cAAcp+C,KAAKm+C,gBAC1Bn+C,KAAKm+C,oBAAiB95C,GAEpBrE,KAAKk+C,qBACPxgD,OAAOyG,aAAanE,KAAKk+C,oBACzBl+C,KAAKk+C,wBAAqB75C,GAExBrE,KAAKo8B,kBACP1+B,OAAO2+B,qBAAqBr8B,KAAKo8B,iBACjCp8B,KAAKo8B,qBAAkB/3B,IAIpB,YAAAk5C,sBAAP,sBACMv9C,KAAKw9C,WAITx9C,KAAKq+C,wBAA0BC,KAAKC,MAEpCv+C,KAAK89C,iBAAkB,EAClB99C,KAAKo8B,kBACRp8B,KAAKo8B,gBAAkB1+B,OAAOk/B,uBAAsB,WAClD,EAAKT,kBACL,EAAKC,qBAAkB/3B,QAKrB,YAAA45C,iBAAR,SAAyBO,GAAzB,gBAAyB,IAAAA,MAjRJ,KAmRfx+C,KAAKm+C,gBACPzgD,OAAO0gD,cAAcp+C,KAAKm+C,gBAO5Bn+C,KAAKk+C,mBAAqBxgD,OAAO0G,YAAW,WAG1C,GAAI,EAAKi6C,wBAAyB,CAChC,IAAMI,EA/RS,KA+RgBH,KAAKC,MAAQ,EAAKF,yBAEjD,GADA,EAAKA,6BAA0Bh6C,EAC3Bo6C,EAAO,EAET,YADA,EAAKR,iBAAiBQ,GAM1B,EAAKX,iBAAkB,EACvB,EAAK1hB,gBAAkB1+B,OAAOk/B,uBAAsB,WAClD,EAAKT,kBACL,EAAKC,qBAAkB/3B,KAIzB,EAAK85C,eAAiBzgD,OAAOghD,aAAY,WAEvC,GAAI,EAAKL,wBAAyB,CAGhC,IAAMI,EApTO,KAoTkBH,KAAKC,MAAQ,EAAKF,yBAGjD,OAFA,EAAKA,6BAA0Bh6C,OAC/B,EAAK45C,iBAAiBQ,GAKxB,EAAKX,iBAAmB,EAAKA,gBAC7B,EAAK1hB,gBAAkB1+B,OAAOk/B,uBAAsB,WAClD,EAAKT,kBACL,EAAKC,qBAAkB/3B,OA9TV,OAiUhBm6C,IAGE,YAAArB,MAAP,WACEn9C,KAAK89C,iBAAkB,EACnB99C,KAAKm+C,iBACPzgD,OAAO0gD,cAAcp+C,KAAKm+C,gBAC1Bn+C,KAAKm+C,oBAAiB95C,GAEpBrE,KAAKk+C,qBACPxgD,OAAOyG,aAAanE,KAAKk+C,oBACzBl+C,KAAKk+C,wBAAqB75C,GAExBrE,KAAKo8B,kBACP1+B,OAAO2+B,qBAAqBr8B,KAAKo8B,iBACjCp8B,KAAKo8B,qBAAkB/3B,IAIpB,YAAA+4C,OAAP,WAEEp9C,KAAKm9C,QAELn9C,KAAKq+C,6BAA0Bh6C,EAC/BrE,KAAKi+C,mBACLj+C,KAAKu9C,yBAET,EApIA,I,ubC3OA,YACA,OACA,QAIA,cAGE,WACEhH,EACAz+B,EACA6d,EACAD,EACA8N,EACAI,EACA6S,EACAvY,GARF,MAUE,YAAMqY,EAAW,OAAQz+B,GAAQ,EAAM6d,EAAQD,EAAY+gB,EAAevY,IAAe,K,OACzFsF,EAAUmb,qBAAoB,SAAAh3C,GAAK,SAAKi3C,qBAAqBj3C,MAC7D67B,EAAUqb,qBAAoB,SAAAl3C,GAAK,SAAKm3C,qBAAqBn3C,MAE7Di8B,EAAW+a,qBAAoB,SAAAh3C,GAAK,SAAKi3C,qBAAqBj3C,MAC9Di8B,EAAWib,qBAAoB,SAAAl3C,GAAK,SAAKm3C,qBAAqBn3C,M,EAoDlE,OAtEqC,OAqB5B,YAAA/G,OAAP,SAAciY,GACZ,YAAMjY,OAAM,UAACiY,GAEb7Y,KAAKi0B,YAAS5vB,GAGT,YAAAitB,MAAP,WACEtxB,KAAK++C,qBAGC,YAAAA,kBAAR,WACE,GAAI/+C,KAAKi0B,OAAQ,CACfj0B,KAAKqc,YAAYrc,KAAKi0B,OAAO+qB,GAAIh/C,KAAKi0B,OAAOgrB,GAAIj/C,KAAKi0B,OAAOxzB,KAAOT,KAAKi0B,OAAO+qB,GAAI,GACpF,IAAME,EAAiBl/C,KAAKi0B,OAAOkrB,GAAKn/C,KAAKi0B,OAAOgrB,GAAK,EACrDC,EAAiB,GACnBl/C,KAAKqc,YAAY,EAAGrc,KAAKi0B,OAAOgrB,GAAK,EAAGj/C,KAAKi0B,OAAOxzB,KAAMy+C,GAE5Dl/C,KAAKqc,YAAY,EAAGrc,KAAKi0B,OAAOkrB,GAAIn/C,KAAKi0B,OAAOmrB,GAAI,GACpDp/C,KAAKi0B,YAAS5vB,IAIV,YAAAu6C,qBAAR,SAA6Bj3C,GAU3B,GATIA,EAAEiC,KAAO,EAAA4F,uBACXxP,KAAKyZ,KAAK0C,UAAYnc,KAAKgY,QAAQoE,WAAW1L,IACrC/I,EAAEiC,IAAM,EAAAy1C,WAAW13C,EAAEiC,IAE9B5J,KAAKyZ,KAAK0C,UAAYnc,KAAKgY,QAAQqF,KAAK1V,EAAEiC,IAAI8G,IAE9C1Q,KAAKyZ,KAAK0C,UAAYnc,KAAKgY,QAAQsF,WAAW5M,IAG5C/I,EAAEs3C,KAAOt3C,EAAEw3C,GAEbn/C,KAAK4b,uBAAuBjU,EAAEq3C,GAAIr3C,EAAEs3C,GAAIt3C,EAAEy3C,GAAKz3C,EAAEq3C,QAC5C,CAELh/C,KAAK4b,uBAAuBjU,EAAEq3C,GAAIr3C,EAAEs3C,GAAIt3C,EAAElH,KAAOkH,EAAEq3C,IACnD,IAAK,IAAI37C,EAAIsE,EAAEs3C,GAAK,EAAG57C,EAAIsE,EAAEw3C,GAAI97C,IAC/BrD,KAAK4b,uBAAuB,EAAGvY,EAAGsE,EAAElH,MAEtCT,KAAK4b,uBAAuB,EAAGjU,EAAEw3C,GAAIx3C,EAAEy3C,IAEzCp/C,KAAKi0B,OAAStsB,GAGR,YAAAm3C,qBAAR,SAA6Bn3C,GAC3B3H,KAAK++C,qBAET,EAtEA,CAAqC,EAAAjgC,iBAAxB,EAAA82B,mB,khBCLb,WACA,OAYA,aAwBE,WACqC19B,EACL2L,EACIkB,GAFC,KAAA7M,iBACL,KAAA2L,cACI,KAAAkB,kBAnB1B,KAAAu6B,cAA0C,GAM5C,KAAAC,mBAAqB,EAGrB,KAAAX,qBAAuB,IAAI,EAAAp3C,aAE3B,KAAAs3C,qBAAuB,IAAI,EAAAt3C,aAE3B,KAAAg4C,eAAiB,IAAI,EAAAh4C,aAQ3BxH,KAAKy/C,eAAiB,CACpBzxC,WAAO3J,EACP4J,SAAK5J,GA+RX,OA5SE,sBAAW,kCAAmB,C,IAA9B,WAA4D,OAAOrE,KAAK4+C,qBAAqBzyB,O,gCAE7F,sBAAW,kCAAmB,C,IAA9B,WAA4D,OAAOnsB,KAAK8+C,qBAAqB3yB,O,gCAE7F,sBAAW,4BAAa,C,IAAxB,WAAsD,OAAOnsB,KAAKw/C,eAAerzB,O,gCAiB1E,YAAA8d,YAAP,SAAmBppC,EAAsB6+C,GACvC1/C,KAAK2/C,SAAW9+C,EAChBb,KAAK8pC,kBAAoB4V,GAQpB,YAAA9S,YAAP,SAAmB5+B,EAAeC,GAAlC,WAEOjO,KAAK8pC,yBAKwBzlC,IAA9BrE,KAAKy/C,eAAezxC,YAAmD3J,IAA5BrE,KAAKy/C,eAAexxC,KACjEjO,KAAKy/C,eAAezxC,MAAQA,EAC5BhO,KAAKy/C,eAAexxC,IAAMA,IAE1BjO,KAAKy/C,eAAezxC,MAAQ3M,KAAKiR,IAAItS,KAAKy/C,eAAezxC,MAAOA,GAChEhO,KAAKy/C,eAAexxC,IAAM5M,KAAKC,IAAItB,KAAKy/C,eAAexxC,IAAKA,IAI9DjO,KAAK8pC,kBAAkBE,SAASh8B,EAAOC,GAGnCjO,KAAK4/C,gBACPz7C,aAAanE,KAAK4/C,gBAEpB5/C,KAAK4/C,eAA8Bx7C,YAAW,WAAM,SAAKy7C,iBAAgBlc,EAAUmc,sBAM7E,YAAAD,aAAR,WACE7/C,KAAK4/C,oBAAiBv7C,EACtB,IAAMf,EAAStD,KAAKkY,eAAe5U,OAEnC,QAAkCe,IAA9BrE,KAAKy/C,eAAezxC,YAAmD3J,IAA5BrE,KAAKy/C,eAAexxC,IAAnE,CAMA,IAAM8xC,EAAwBz8C,EAAO+rB,MAAQrvB,KAAKy/C,eAAezxC,MACjE,KAAI+xC,GAAyBz8C,EAAO6pB,MAAM7qB,QAA1C,CAoBA,IAfA,IAAM09C,EAAsB18C,EAAO+rB,MAAQhuB,KAAKiR,IAAItS,KAAKy/C,eAAexxC,IAAKjO,KAAKkY,eAAe1X,MAAQ,EAYnGy/C,EAAoB5+C,KAAK+Q,KA9GP,IA8GkCpS,KAAKkY,eAAezX,MACxEy/C,EAAWlgD,KAAKkY,eAAe5U,OAAO48C,UAC1C,EAAOH,EAAuBC,EAAqBC,EAAmBA,GACjEC,EAASC,WAEd,IADA,IAAMtlB,EAAwCqlB,EAAS5N,OAC9Cx0C,EAAI,EAAGA,EAAIkC,KAAKs/C,cAAch9C,OAAQxE,IAC7CkC,KAAKogD,cAAcvlB,EAASW,MAAM6kB,MAAOxlB,EAASlxB,QAAS3J,KAAKs/C,cAAcxhD,IAIlFkC,KAAKy/C,eAAezxC,WAAQ3J,EAC5BrE,KAAKy/C,eAAexxC,SAAM5J,QAlCxBrE,KAAK6jB,YAAYc,MAAM,2DA+CpB,YAAA8a,oBAAP,SAA2Bp6B,EAAekI,EAA6BC,GACrE,QADqE,IAAAA,MAAA,KAChED,EACH,MAAM,IAAIlL,MAAM,2BAElB,IAAMi+C,EAAkC,CACtCzoC,GAAI7X,KAAKu/C,qBACTl6C,MAAK,EACLkI,QAAO,EACPgzC,WAAY/yC,EAAQ+yC,WACpBC,mBAAoBhzC,EAAQgzC,mBAC5BC,qBAAsBjzC,EAAQkzC,gBAC9BC,mBAAoBnzC,EAAQozC,cAC5BC,iBAAkBrzC,EAAQqzC,iBAC1BC,SAAUtzC,EAAQszC,UAAY,GAGhC,OADA9gD,KAAK+gD,sBAAsBT,GACpBA,EAAQzoC,IAST,YAAAkpC,sBAAR,SAA8BT,GAC5B,GAAkC,IAA9BtgD,KAAKs/C,cAAch9C,OAAvB,CAKA,IAAK,IAAIxE,EAAIkC,KAAKs/C,cAAch9C,OAAS,EAAGxE,GAAK,EAAGA,IAClD,GAAIwiD,EAAQQ,UAAY9gD,KAAKs/C,cAAcxhD,GAAGgjD,SAE5C,YADA9gD,KAAKs/C,cAAcn4C,OAAOrJ,EAAI,EAAG,EAAGwiD,GAKxCtgD,KAAKs/C,cAAcn4C,OAAO,EAAG,EAAGm5C,QAX9BtgD,KAAKs/C,cAAcp4C,KAAKo5C,IAmBrB,YAAA5gB,sBAAP,SAA6BC,GAC3B,IAAK,IAAI7hC,EAAI,EAAGA,EAAIkC,KAAKs/C,cAAch9C,OAAQxE,IAC7C,GAAIkC,KAAKs/C,cAAcxhD,GAAG+Z,KAAO8nB,EAE/B,OADA3/B,KAAKs/C,cAAcn4C,OAAOrJ,EAAG,IACtB,EAGX,OAAO,GASD,YAAAsiD,cAAR,SAAsBY,EAAkBlmB,EAAcwlB,GAKpD,IALF,IAGMW,EAHN,OAEQC,EAAM,IAAI37C,OAAO+6C,EAAQj7C,MAAM87C,QAASb,EAAQj7C,MAAM+7C,OAAS,IAAM,KAEvEC,GAAe,E,aAEjB,IAAMC,EAAML,EAAoC,iBAAvBX,EAAQC,WAA0B,EAAID,EAAQC,YACvE,IAAKe,E,OAGH,EAAKz9B,YAAYc,MAAM,+CAAgDs8B,EAAOX,G,QAUhF,GAFAe,EAAcvmB,EAAKr2B,QAAQ68C,EAAKD,EAAc,GAC9CH,EAAIv7C,UAAY07C,EAAcC,EAAIh/C,OAC9B++C,EAAc,E,cAMlB,IAAME,EAAc,EAAKrpC,eAAe5U,OAAOk+C,yBAAyBR,EAAUK,GAClF,GAAIE,EAAY,GAAK,E,cAKrB,IAAM/8C,EAAO,EAAK0T,eAAe5U,OAAO6pB,MAAMxuB,IAAI4iD,EAAY,IAC9D,IAAK/8C,E,cAIL,IAAMssB,EAAOtsB,EAAK0b,MAAMqhC,EAAY,IAC9B33C,EAAKknB,EAAQA,GAAQ,EAAK,SAAQzsB,EAEpCi8C,EAAQE,mBACVF,EAAQE,mBAAmBc,GAAK,SAAAG,GAE1B,EAAK7B,gBAGL6B,GACF,EAAKC,SAASH,EAAY,GAAIA,EAAY,GAAK,EAAKrpC,eAAe5U,OAAO+rB,MAAOiyB,EAAKhB,EAAS12C,MAInG,EAAK83C,SAASH,EAAY,GAAIA,EAAY,GAAK,EAAKrpC,eAAe5U,OAAO+rB,MAAOiyB,EAAKhB,EAAS12C,I,OA9C/D,QAA5Bq3C,EAAQC,EAAIz7C,KAAKq1B,KAAiB,C,yBA2DpC,YAAA4mB,SAAR,SAAiBhmC,EAAWrY,EAAWi+C,EAAahB,EAAuB12C,GAA3E,WACE,GAAK5J,KAAK8pC,mBAAsB9pC,KAAK2/C,SAArC,CAIA,IAAMxkC,EAAQnb,KAAK+kB,gBAAgB48B,mBAAmBL,GAChDtC,EAAKtjC,EAAI1b,KAAKkY,eAAezX,KAC7Bw+C,EAAK57C,EAAIhC,KAAKO,MAAM8Z,EAAI1b,KAAKkY,eAAezX,MAC9C2+C,GAAMJ,EAAK7jC,GAASnb,KAAKkY,eAAezX,KACxC0+C,EAAKF,EAAK59C,KAAKO,OAAOo9C,EAAK7jC,GAASnb,KAAKkY,eAAezX,MACjD,IAAP2+C,IACFA,EAAKp/C,KAAKkY,eAAezX,KACzB0+C,KAGFn/C,KAAK8pC,kBAAkB3wB,IAAI,IAAIyoC,EAC7B5C,EAAK,EACLC,EAAK,EACLG,EAAK,EACLD,EAAK,GACL,SAAAx3C,GACE,GAAI24C,EAAQ/yC,QACV,OAAO+yC,EAAQ/yC,QAAQ5F,EAAG25C,GAE5B,IAAMO,EAAYnkD,OAAO2hC,OACrBwiB,GACFA,EAAUC,OAAS,KACnBD,EAAUE,SAASC,KAAOV,GAE1BroB,QAAQC,KAAK,0DAGjB,WACE,EAAK0lB,qBAAqBx3C,KAAK,EAAK66C,sBAAsBjD,EAAIC,EAAIG,EAAID,EAAIv1C,IAC1E,EAAK+1C,SAAUzmC,UAAUC,IAAI,2BAE/B,SAAAxR,GACE,EAAK63C,eAAep4C,KAAK,EAAK66C,sBAAsBjD,EAAIC,EAAIG,EAAID,EAAIv1C,IAChE02C,EAAQG,sBAGVH,EAAQG,qBAAqB94C,EAAG25C,EAAK,CAAEtzC,MAAO,CAAE0N,EAAGsjC,EAAI37C,EAAG47C,GAAMhxC,IAAK,CAAEyN,EAAG0jC,EAAI/7C,EAAG87C,QAGrF,WACE,EAAKL,qBAAqB13C,KAAK,EAAK66C,sBAAsBjD,EAAIC,EAAIG,EAAID,EAAIv1C,IAC1E,EAAK+1C,SAAUzmC,UAAU0sB,OAAO,wBAC5B0a,EAAQK,oBACVL,EAAQK,wBAGZ,SAAAh5C,GACE,OAAI24C,EAAQO,kBACHP,EAAQO,iBAAiBl5C,EAAG25C,SAOnC,YAAAW,sBAAR,SAA8BjD,EAAYC,EAAYG,EAAYD,EAAYv1C,GAC5E,MAAO,CAAEo1C,GAAE,EAAEC,GAAE,EAAEG,GAAE,EAAED,GAAE,EAAE1+C,KAAMT,KAAKkY,eAAezX,KAAMmJ,GAAE,IAtT5C,EAAAk2C,mBAAqB,IAN3Bnc,EAAS,GAyBjB,MAAA/7B,gBACA,MAAAO,aACA,MAAAE,kBA3BQs7B,GAAb,GAAa,EAAAA,YAgUb,MACE,SACSqb,EACAC,EACAG,EACAD,EACA+C,EACAC,EACAzB,EACAE,EACAC,GARA,KAAA7B,KACA,KAAAC,KACA,KAAAG,KACA,KAAAD,KACA,KAAA+C,gBACA,KAAAC,gBACA,KAAAzB,kBACA,KAAAE,gBACA,KAAAC,oBAVE,EAAAe,a,y1BC5Ub,YACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,OAwBMQ,EAA0Bv0C,OAAOC,aAAa,KAC9Cu0C,EAA+B,IAAI98C,OAAO68C,EAAyB,KA4BzE,cAgDE,WACmBzC,EACArK,EACgBp9B,EACF0L,EACCslB,EACE/wB,EACDzX,GAPnC,MASE,cAAO,K,OARU,EAAAi/C,WACA,EAAArK,iBACgB,EAAAp9B,iBACF,EAAA0L,eACC,EAAAslB,gBACE,EAAA/wB,kBACD,EAAAzX,iBA9C3B,EAAA4hD,kBAA4B,EAqB5B,EAAAC,UAAW,EAKX,EAAAl9B,UAAsB,IAAI,EAAAlb,SAE1B,EAAAq4C,oBAA8B,EAE9B,EAAAC,uBAAyB,EAAKj6C,SAAS,IAAI,EAAAhB,cAE3C,EAAAk7C,iBAAmB,EAAKl6C,SAAS,IAAI,EAAAhB,cAErC,EAAA07B,mBAAqB,EAAK16B,SAAS,IAAI,EAAAhB,cAEvC,EAAAm7C,sBAAwB,EAAKn6C,SAAS,IAAI,EAAAhB,cAehD,EAAKo7C,mBAAqB,SAAAz2B,GAAS,SAAK02B,aAAyB12B,IACjE,EAAK22B,iBAAmB,SAAA32B,GAAS,SAAK42B,WAAuB52B,IAC7D,EAAKvI,aAAao/B,aAAY,WACxB,EAAKrgD,cACP,EAAKJ,oBAGT,EAAK0gD,cAAgB,EAAK/qC,eAAe5U,OAAO6pB,MAAM+1B,QAAO,SAAA7iB,GAAU,SAAK8iB,QAAQ9iB,MACpF,EAAK73B,SAAS,EAAK0P,eAAekY,QAAQ4R,kBAAiB,SAAAr6B,GAAK,SAAKy7C,kBAAkBz7C,OAEvF,EAAK0iC,SAEL,EAAKgZ,OAAS,IAAI,EAAAC,eAAe,EAAKprC,gBACtC,EAAKqrC,qBAAuB,E,EA2yBhC,OAp3BsC,OAwCpC,sBAAW,oCAAqB,C,IAAhC,WAAqD,OAAOvjD,KAAKyiD,uBAAuBt2B,O,gCAExF,sBAAW,8BAAe,C,IAA1B,WAAqE,OAAOnsB,KAAK0iD,iBAAiBv2B,O,gCAElG,sBAAW,gCAAiB,C,IAA5B,WAA+C,OAAOnsB,KAAKkjC,mBAAmB/W,O,gCAE9E,sBAAW,mCAAoB,C,IAA/B,WAA+E,OAAOnsB,KAAK2iD,sBAAsBx2B,O,gCA8B1G,YAAAjsB,QAAP,WACEF,KAAKwjD,6BAGA,YAAAlyB,MAAP,WACEtxB,KAAKuC,kBAOA,YAAA6nC,QAAP,WACEpqC,KAAKuC,iBACLvC,KAAKuiD,UAAW,GAMX,YAAAlY,OAAP,WACErqC,KAAKuiD,UAAW,GAGlB,sBAAW,6BAAc,C,IAAzB,WAA4D,OAAOviD,KAAKqjD,OAAOI,qB,gCAC/E,sBAAW,2BAAY,C,IAAvB,WAA0D,OAAOzjD,KAAKqjD,OAAOK,mB,gCAK7E,sBAAW,2BAAY,C,IAAvB,WACE,IAAM11C,EAAQhO,KAAKqjD,OAAOI,oBACpBx1C,EAAMjO,KAAKqjD,OAAOK,kBACxB,SAAK11C,IAAUC,KAGRD,EAAM,KAAOC,EAAI,IAAMD,EAAM,KAAOC,EAAI,K,gCAMjD,sBAAW,4BAAa,C,IAAxB,WACE,IAAMD,EAAQhO,KAAKqjD,OAAOI,oBACpBx1C,EAAMjO,KAAKqjD,OAAOK,kBACxB,IAAK11C,IAAUC,EACb,MAAO,GAGT,IAAM3K,EAAStD,KAAKkY,eAAe5U,OAC7BH,EAAmB,GAEzB,GAAkC,IAA9BnD,KAAKujD,qBAA+C,CAEtD,GAAIv1C,EAAM,KAAOC,EAAI,GACnB,MAAO,GAGT,IAAK,IAAInQ,EAAIkQ,EAAM,GAAIlQ,GAAKmQ,EAAI,GAAInQ,IAAK,CACvC,IAAM6lD,EAAWrgD,EAAOsgD,4BAA4B9lD,GAAG,EAAMkQ,EAAM,GAAIC,EAAI,IAC3E9K,EAAO+D,KAAKy8C,QAET,CAEL,IAAMtH,EAAiBruC,EAAM,KAAOC,EAAI,GAAKA,EAAI,QAAK5J,EACtDlB,EAAO+D,KAAK5D,EAAOsgD,4BAA4B51C,EAAM,IAAI,EAAMA,EAAM,GAAIquC,IAGzE,IAASv+C,EAAIkQ,EAAM,GAAK,EAAGlQ,GAAKmQ,EAAI,GAAK,EAAGnQ,IAAK,CAC/C,IAAM+lD,EAAavgD,EAAO6pB,MAAMxuB,IAAIb,GAC9B6lD,EAAWrgD,EAAOsgD,4BAA4B9lD,GAAG,GACnD+lD,GAAcA,EAAWh/C,UAC3B1B,EAAOA,EAAOb,OAAS,IAAMqhD,EAE7BxgD,EAAO+D,KAAKy8C,GAKhB,GAAI31C,EAAM,KAAOC,EAAI,GAAI,CACjB41C,EAAavgD,EAAO6pB,MAAMxuB,IAAIsP,EAAI,IAClC01C,EAAWrgD,EAAOsgD,4BAA4B31C,EAAI,IAAI,EAAM,EAAGA,EAAI,IACrE41C,GAAcA,EAAYh/C,UAC5B1B,EAAOA,EAAOb,OAAS,IAAMqhD,EAE7BxgD,EAAO+D,KAAKy8C,IAWlB,OAJwBxgD,EAAOk2B,KAAI,SAAA70B,GACjC,OAAOA,EAAK4qC,QAAQiT,EAA8B,QACjDjlC,KAAK0lB,EAAQxvB,UAAY,OAAS,O,gCAQhC,YAAA/Q,eAAP,WACEvC,KAAKqjD,OAAO9gD,iBACZvC,KAAKwjD,4BACLxjD,KAAKs8B,UACLt8B,KAAKkjC,mBAAmB97B,QAQnB,YAAAk1B,QAAP,SAAewnB,GAAf,YAEO9jD,KAAKgwC,yBACRhwC,KAAKgwC,uBAAyBtyC,OAAOk/B,uBAAsB,WAAM,SAAKwT,eAKpEtN,EAAQvvB,SAAWuwC,KACC9jD,KAAKgtC,cACT1qC,QAChBtC,KAAKyiD,uBAAuBr7C,KAAKpH,KAAKgtC,iBASpC,YAAAoD,SAAR,WACEpwC,KAAKgwC,4BAAyB3rC,EAC9BrE,KAAK0iD,iBAAiBt7C,KAAK,CACzB4G,MAAOhO,KAAKqjD,OAAOI,oBACnBx1C,IAAKjO,KAAKqjD,OAAOK,kBACjBvpC,iBAAgD,IAA9Bna,KAAKujD,wBAQpB,YAAArR,mBAAP,SAA0B/lB,GACxB,IAAM+P,EAASl8B,KAAK+jD,sBAAsB53B,GACpCne,EAAQhO,KAAKqjD,OAAOI,oBACpBx1C,EAAMjO,KAAKqjD,OAAOK,kBAExB,SAAK11C,GAAUC,GAAQiuB,IAIhBl8B,KAAKgkD,sBAAsB9nB,EAAQluB,EAAOC,IAGzC,YAAA+1C,sBAAV,SAAgC9nB,EAA0BluB,EAAyBC,GACjF,OAAQiuB,EAAO,GAAKluB,EAAM,IAAMkuB,EAAO,GAAKjuB,EAAI,IAC3CD,EAAM,KAAOC,EAAI,IAAMiuB,EAAO,KAAOluB,EAAM,IAAMkuB,EAAO,IAAMluB,EAAM,IAAMkuB,EAAO,GAAKjuB,EAAI,IAC1FD,EAAM,GAAKC,EAAI,IAAMiuB,EAAO,KAAOjuB,EAAI,IAAMiuB,EAAO,GAAKjuB,EAAI,IAC7DD,EAAM,GAAKC,EAAI,IAAMiuB,EAAO,KAAOluB,EAAM,IAAMkuB,EAAO,IAAMluB,EAAM,IAOlE,YAAAmkC,mBAAP,SAA0BhmB,GACxB,IAAM+P,EAASl8B,KAAK+jD,sBAAsB53B,GACtC+P,IACFl8B,KAAKikD,cAAc/nB,GAAQ,GAC3Bl8B,KAAKqjD,OAAOnW,kBAAe7oC,EAC3BrE,KAAKs8B,SAAQ,KAOV,YAAA6D,UAAP,WACEngC,KAAKqjD,OAAOa,mBAAoB,EAChClkD,KAAKs8B,UACLt8B,KAAKkjC,mBAAmB97B,QAGnB,YAAAg5B,YAAP,SAAmBpyB,EAAeC,GAChCjO,KAAKqjD,OAAO9gD,iBACZyL,EAAQ3M,KAAKC,IAAI0M,EAAO,GACxBC,EAAM5M,KAAKiR,IAAIrE,EAAKjO,KAAKkY,eAAe5U,OAAO6pB,MAAM7qB,OAAS,GAC9DtC,KAAKqjD,OAAOpW,eAAiB,CAAC,EAAGj/B,GACjChO,KAAKqjD,OAAOnW,aAAe,CAACltC,KAAKkY,eAAezX,KAAMwN,GACtDjO,KAAKs8B,UACLt8B,KAAKkjC,mBAAmB97B,QAOlB,YAAA+7C,QAAR,SAAgB9iB,GACOrgC,KAAKqjD,OAAOH,OAAO7iB,IAEtCrgC,KAAKs8B,WAQD,YAAAynB,sBAAR,SAA8B53B,GAC5B,IAAM+P,EAASl8B,KAAKkpC,cAAcib,UAAUh4B,EAAOnsB,KAAKs1C,eAAgBt1C,KAAKkY,eAAezX,KAAMT,KAAKkY,eAAe1X,MAAM,GAC5H,GAAK07B,EAUL,OALAA,EAAO,KACPA,EAAO,KAGPA,EAAO,IAAMl8B,KAAKkY,eAAe5U,OAAO+rB,MACjC6M,GAQD,YAAAkoB,2BAAR,SAAmCj4B,GACjC,IAAI+tB,EAAS,EAAAze,2BAA2BtP,EAAOnsB,KAAKs1C,gBAAgB,GAC9D+O,EAAiBrkD,KAAKU,eAAemB,WAAW2Z,aACtD,OAAI0+B,GAAU,GAAKA,GAAUmK,EACpB,GAELnK,EAASmK,IACXnK,GAAUmK,GAGZnK,EAAS74C,KAAKiR,IAAIjR,KAAKC,IAAI44C,GA9WG,SA+W9BA,GA/W8B,IAgXb74C,KAAKkrC,IAAI2N,GAAW74C,KAAK4P,MAAe,GAATipC,KAQ3C,YAAA/N,qBAAP,SAA4BhgB,GAC1B,OAAI2W,EAAQ3vB,MACHgZ,EAAMif,QAAUprC,KAAKmY,gBAAgB3K,QAAQ82C,8BAG/Cn4B,EAAMkf,UAOR,YAAAnB,YAAP,SAAmB/d,GAIjB,GAHAnsB,KAAKwiD,oBAAsBr2B,EAAMo4B,WAGZ,IAAjBp4B,EAAMya,SAAgB5mC,KAAK2C,eAKV,IAAjBwpB,EAAMya,OAAV,CAKA,IAAK5mC,KAAKuiD,SAAU,CAClB,IAAKviD,KAAKmsC,qBAAqBhgB,GAC7B,OAIFA,EAAMmiB,kBAIRniB,EAAM0f,iBAGN7rC,KAAKsiD,kBAAoB,EAErBtiD,KAAKuiD,UAAYp2B,EAAMkf,SACzBrrC,KAAKwkD,oBAAoBr4B,GAEJ,IAAjBA,EAAMs4B,OACRzkD,KAAK0kD,eAAev4B,GACM,IAAjBA,EAAMs4B,OACfzkD,KAAK2kD,eAAex4B,GACM,IAAjBA,EAAMs4B,QACfzkD,KAAK4kD,eAAez4B,GAIxBnsB,KAAK6kD,yBACL7kD,KAAKs8B,SAAQ,KAMP,YAAAuoB,uBAAR,sBAEM7kD,KAAKs1C,eAAe3N,gBACtB3nC,KAAKs1C,eAAe3N,cAAcl6B,iBAAiB,YAAazN,KAAK4iD,oBACrE5iD,KAAKs1C,eAAe3N,cAAcl6B,iBAAiB,UAAWzN,KAAK8iD,mBAErE9iD,KAAK8kD,yBAA2BpnD,OAAOghD,aAAY,WAAM,SAAKqG,gBAhbrC,KAsbnB,YAAAvB,0BAAR,WACMxjD,KAAKs1C,eAAe3N,gBACtB3nC,KAAKs1C,eAAe3N,cAAch6B,oBAAoB,YAAa3N,KAAK4iD,oBACxE5iD,KAAKs1C,eAAe3N,cAAch6B,oBAAoB,UAAW3N,KAAK8iD,mBAExE1E,cAAcp+C,KAAK8kD,0BACnB9kD,KAAK8kD,8BAA2BzgD,GAQ1B,YAAAmgD,oBAAR,SAA4Br4B,GACtBnsB,KAAKqjD,OAAOpW,iBACdjtC,KAAKqjD,OAAOnW,aAAeltC,KAAK+jD,sBAAsB53B,KASlD,YAAAu4B,eAAR,SAAuBv4B,GAOrB,GANAnsB,KAAKqjD,OAAO2B,qBAAuB,EACnChlD,KAAKqjD,OAAOa,mBAAoB,EAChClkD,KAAKujD,qBAAuBvjD,KAAK6sC,mBAAmB1gB,GAAS,EAAuB,EAGpFnsB,KAAKqjD,OAAOpW,eAAiBjtC,KAAK+jD,sBAAsB53B,GACnDnsB,KAAKqjD,OAAOpW,eAAjB,CAGAjtC,KAAKqjD,OAAOnW,kBAAe7oC,EAG3B,IAAMG,EAAOxE,KAAKkY,eAAe5U,OAAO6pB,MAAMxuB,IAAIqB,KAAKqjD,OAAOpW,eAAe,IACxEzoC,GAKDA,EAAKlC,SAAWtC,KAAKqjD,OAAOpW,eAAe,IAMM,IAAjDzoC,EAAKyb,SAASjgB,KAAKqjD,OAAOpW,eAAe,KAC3CjtC,KAAKqjD,OAAOpW,eAAe,OAQvB,YAAA0X,eAAR,SAAuBx4B,GACrB,IAAM+P,EAASl8B,KAAK+jD,sBAAsB53B,GACtC+P,IACFl8B,KAAKujD,qBAAuB,EAC5BvjD,KAAKikD,cAAc/nB,GAAQ,KASvB,YAAA0oB,eAAR,SAAuBz4B,GACrB,IAAM+P,EAASl8B,KAAK+jD,sBAAsB53B,GACtC+P,IACFl8B,KAAKujD,qBAAuB,EAC5BvjD,KAAKilD,cAAc/oB,EAAO,MAQvB,YAAA2Q,mBAAP,SAA0B1gB,GACxB,OAAOA,EAAMif,UAAYtI,EAAQ3vB,OAASnT,KAAKmY,gBAAgB3K,QAAQ82C,gCAQjE,YAAAzB,aAAR,SAAqB12B,GAQnB,GAJAA,EAAM+4B,2BAIDllD,KAAKqjD,OAAOpW,eAAjB,CAMA,IAAMkY,EAAuBnlD,KAAKqjD,OAAOnW,aAAe,CAACltC,KAAKqjD,OAAOnW,aAAa,GAAIltC,KAAKqjD,OAAOnW,aAAa,IAAM,KAIrH,GADAltC,KAAKqjD,OAAOnW,aAAeltC,KAAK+jD,sBAAsB53B,GACjDnsB,KAAKqjD,OAAOnW,aAAjB,CAMkC,IAA9BltC,KAAKujD,qBACHvjD,KAAKqjD,OAAOnW,aAAa,GAAKltC,KAAKqjD,OAAOpW,eAAe,GAC3DjtC,KAAKqjD,OAAOnW,aAAa,GAAK,EAE9BltC,KAAKqjD,OAAOnW,aAAa,GAAKltC,KAAKkY,eAAezX,KAEb,IAA9BT,KAAKujD,sBACdvjD,KAAKolD,gBAAgBplD,KAAKqjD,OAAOnW,cAInCltC,KAAKsiD,kBAAoBtiD,KAAKokD,2BAA2Bj4B,GAKvB,IAA9BnsB,KAAKujD,uBACHvjD,KAAKsiD,kBAAoB,EAC3BtiD,KAAKqjD,OAAOnW,aAAa,GAAKltC,KAAKkY,eAAezX,KACzCT,KAAKsiD,kBAAoB,IAClCtiD,KAAKqjD,OAAOnW,aAAa,GAAK,IAOlC,IAAM5pC,EAAStD,KAAKkY,eAAe5U,OACnC,GAAItD,KAAKqjD,OAAOnW,aAAa,GAAK5pC,EAAO6pB,MAAM7qB,OAAQ,CACrD,IAAMkC,EAAOlB,EAAO6pB,MAAMxuB,IAAIqB,KAAKqjD,OAAOnW,aAAa,IACnD1oC,GAAuD,IAA/CA,EAAKyb,SAASjgB,KAAKqjD,OAAOnW,aAAa,KACjDltC,KAAKqjD,OAAOnW,aAAa,KAKxBiY,GACHA,EAAqB,KAAOnlD,KAAKqjD,OAAOnW,aAAa,IACrDiY,EAAqB,KAAOnlD,KAAKqjD,OAAOnW,aAAa,IACrDltC,KAAKs8B,SAAQ,QA5Cbt8B,KAAKs8B,SAAQ,KAoDT,YAAAyoB,YAAR,WACE,GAAK/kD,KAAKqjD,OAAOnW,cAAiBltC,KAAKqjD,OAAOpW,gBAG1CjtC,KAAKsiD,kBAAmB,CAC1BtiD,KAAK2iD,sBAAsBv7C,KAAK,CAAEi5B,OAAQrgC,KAAKsiD,kBAAmB3Y,qBAAqB,IAKvF,IAAMrmC,EAAStD,KAAKkY,eAAe5U,OAC/BtD,KAAKsiD,kBAAoB,GACO,IAA9BtiD,KAAKujD,uBACPvjD,KAAKqjD,OAAOnW,aAAa,GAAKltC,KAAKkY,eAAezX,MAEpDT,KAAKqjD,OAAOnW,aAAa,GAAK7rC,KAAKiR,IAAIhP,EAAO+rB,MAAQrvB,KAAKkY,eAAe1X,KAAM8C,EAAO6pB,MAAM7qB,OAAS,KAEpE,IAA9BtC,KAAKujD,uBACPvjD,KAAKqjD,OAAOnW,aAAa,GAAK,GAEhCltC,KAAKqjD,OAAOnW,aAAa,GAAK5pC,EAAO+rB,OAEvCrvB,KAAKs8B,YAQD,YAAAymB,WAAR,SAAmB52B,GACjB,IAAMk5B,EAAcl5B,EAAMo4B,UAAYvkD,KAAKwiD,oBAI3C,GAFAxiD,KAAKwjD,4BAEDxjD,KAAKgtC,cAAc1qC,QAAU,GAAK+iD,EAvnBP,KAunBmDl5B,EAAMif,QACtF,GAAIprC,KAAKkY,eAAe5U,OAAO8pB,QAAUptB,KAAKkY,eAAe5U,OAAO+rB,MAAO,CACzE,IAAMi2B,EAActlD,KAAKkpC,cAAcib,UACrCh4B,EACAnsB,KAAK2/C,SACL3/C,KAAKkY,eAAezX,KACpBT,KAAKkY,eAAe1X,MACpB,GAEF,GAAI8kD,QAAkCjhD,IAAnBihD,EAAY,SAAuCjhD,IAAnBihD,EAAY,GAAkB,CAC/E,IAAMhZ,EAAW,EAAAiZ,mBAAmBD,EAAY,GAAK,EAAGA,EAAY,GAAK,EAAGtlD,KAAKkY,eAAgBlY,KAAK4jB,aAAaiJ,gBAAgB+C,uBACnI5vB,KAAK4jB,aAAaS,iBAAiBioB,GAAU,UAGxCtsC,KAAK2C,cACd3C,KAAKkjC,mBAAmB97B,QAIpB,YAAAg8C,kBAAR,SAA0Bz7C,GAA1B,WACE3H,KAAKuC,iBAKLvC,KAAKijD,cAAc/iD,UACnBF,KAAKijD,cAAgBt7C,EAAE69C,aAAar4B,MAAM+1B,QAAO,SAAA7iB,GAAU,SAAK8iB,QAAQ9iB,OAQlE,YAAAolB,oCAAR,SAA4C5B,EAAyB3nB,GAEnE,IADA,IAAIwpB,EAAYxpB,EAAO,GACdp+B,EAAI,EAAGo+B,EAAO,IAAMp+B,EAAGA,IAAK,CACnC,IAAM,EAAS+lD,EAAWtjC,SAASziB,EAAGkC,KAAKqlB,WAAWpf,WAAW3D,OAC/B,IAA9BtC,KAAKqlB,UAAUnf,WAGjBw/C,IACS,EAAS,GAAKxpB,EAAO,KAAOp+B,IAIrC4nD,GAAa,EAAS,GAG1B,OAAOA,GAGF,YAAA3Y,aAAP,SAAoBppC,EAAaD,EAAapB,GAC5CtC,KAAKqjD,OAAO9gD,iBACZvC,KAAKwjD,4BACLxjD,KAAKqjD,OAAOpW,eAAiB,CAACtpC,EAAKD,GACnC1D,KAAKqjD,OAAO2B,qBAAuB1iD,EACnCtC,KAAKs8B,WAOC,YAAAqpB,WAAR,SAAmBzpB,EAA0B0pB,EAAuCC,EAAyCC,GAE3H,QAFkF,IAAAD,OAAA,QAAyC,IAAAC,OAAA,KAEvH5pB,EAAO,IAAMl8B,KAAKkY,eAAezX,MAArC,CAIA,IAAM6C,EAAStD,KAAKkY,eAAe5U,OAC7BugD,EAAavgD,EAAO6pB,MAAMxuB,IAAIu9B,EAAO,IAC3C,GAAK2nB,EAAL,CAIA,IAAMr/C,EAAOlB,EAAOsgD,4BAA4B1nB,EAAO,IAAI,GAGvD1b,EAAaxgB,KAAKylD,oCAAoC5B,EAAY3nB,GAClEtB,EAAWpa,EAGTulC,EAAa7pB,EAAO,GAAK1b,EAC3BwlC,EAAoB,EACpBC,EAAqB,EACrBC,EAAqB,EACrBC,EAAsB,EAE1B,GAAgC,MAA5B3hD,EAAK4hD,OAAO5lC,GAAqB,CAEnC,KAAOA,EAAa,GAAqC,MAAhChc,EAAK4hD,OAAO5lC,EAAa,IAChDA,IAEF,KAAOoa,EAAWp2B,EAAKlC,QAAwC,MAA9BkC,EAAK4hD,OAAOxrB,EAAW,IACtDA,QAEG,CAKL,IAAIn4B,EAAWy5B,EAAO,GAClBra,EAASqa,EAAO,GAIkB,IAAlC2nB,EAAW39C,SAASzD,KACtBujD,IACAvjD,KAEkC,IAAhCohD,EAAW39C,SAAS2b,KACtBokC,IACApkC,KAIF,IAAM,EAASgiC,EAAWvjC,UAAUuB,GAAQvf,OAO5C,IANI,EAAS,IACX6jD,GAAuB,EAAS,EAChCvrB,GAAY,EAAS,GAIhBn4B,EAAW,GAAK+d,EAAa,IAAMxgB,KAAKqmD,qBAAqBxC,EAAWtjC,SAAS9d,EAAW,EAAGzC,KAAKqlB,aAAa,CACtHw+B,EAAWtjC,SAAS9d,EAAW,EAAGzC,KAAKqlB,WACvC,IAAM,EAASrlB,KAAKqlB,UAAUpf,WAAW3D,OACP,IAA9BtC,KAAKqlB,UAAUnf,YAEjB8/C,IACAvjD,KACS,EAAS,IAGlByjD,GAAsB,EAAS,EAC/B1lC,GAAc,EAAS,GAEzBA,IACA/d,IAEF,KAAOof,EAASgiC,EAAWvhD,QAAUs4B,EAAW,EAAIp2B,EAAKlC,SAAWtC,KAAKqmD,qBAAqBxC,EAAWtjC,SAASsB,EAAS,EAAG7hB,KAAKqlB,aAAa,CAC9Iw+B,EAAWtjC,SAASsB,EAAS,EAAG7hB,KAAKqlB,WACrC,IAAM,EAASrlB,KAAKqlB,UAAUpf,WAAW3D,OACP,IAA9BtC,KAAKqlB,UAAUnf,YAEjB+/C,IACApkC,KACS,EAAS,IAGlBskC,GAAuB,EAAS,EAChCvrB,GAAY,EAAS,GAEvBA,IACA/Y,KAKJ+Y,IAIA,IAAI5sB,EACAwS,EACEulC,EACAC,EACAE,EAIF5jD,EAASjB,KAAKiR,IAAItS,KAAKkY,eAAezX,KACxCm6B,EACEpa,EACAwlC,EACAC,EACAC,EACAC,GAEJ,GAAKP,GAA4E,KAA5CphD,EAAKkB,MAAM8a,EAAYoa,GAAU0rB,OAAtE,CAKA,GAAIT,GACY,IAAV73C,GAA8C,KAA/B61C,EAAWxjC,aAAa,GAAqB,CAC9D,IAAMkmC,EAAqBjjD,EAAO6pB,MAAMxuB,IAAIu9B,EAAO,GAAK,GACxD,GAAIqqB,GAAsB1C,EAAWh/C,WAA+E,KAAlE0hD,EAAmBlmC,aAAargB,KAAKkY,eAAezX,KAAO,GAAqB,CAChI,IAAM+lD,EAA2BxmD,KAAK2lD,WAAW,CAAC3lD,KAAKkY,eAAezX,KAAO,EAAGy7B,EAAO,GAAK,IAAI,GAAO,GAAM,GAC7G,GAAIsqB,EAA0B,CAC5B,IAAMtM,EAASl6C,KAAKkY,eAAezX,KAAO+lD,EAAyBx4C,MACnEA,GAASksC,EACT53C,GAAU43C,IAOlB,GAAI4L,GACE93C,EAAQ1L,IAAWtC,KAAKkY,eAAezX,MAAkE,KAA1DojD,EAAWxjC,aAAargB,KAAKkY,eAAezX,KAAO,GAAqB,CACzH,IAAMgmD,EAAiBnjD,EAAO6pB,MAAMxuB,IAAIu9B,EAAO,GAAK,GACpD,GAAIuqB,GAAkBA,EAAe5hD,WAAgD,KAAnC4hD,EAAepmC,aAAa,GAAqB,CACjG,IAAMqmC,EAAuB1mD,KAAK2lD,WAAW,CAAC,EAAGzpB,EAAO,GAAK,IAAI,GAAO,GAAO,GAC3EwqB,IACFpkD,GAAUokD,EAAqBpkD,SAMvC,MAAO,CAAE0L,MAAK,EAAE1L,OAAM,OAQd,YAAA2hD,cAAV,SAAwB/nB,EAA0B0pB,GAChD,IAAMe,EAAe3mD,KAAK2lD,WAAWzpB,EAAQ0pB,GAC7C,GAAIe,EAAc,CAEhB,KAAOA,EAAa34C,MAAQ,GAC1B24C,EAAa34C,OAAShO,KAAKkY,eAAezX,KAC1Cy7B,EAAO,KAETl8B,KAAKqjD,OAAOpW,eAAiB,CAAC0Z,EAAa34C,MAAOkuB,EAAO,IACzDl8B,KAAKqjD,OAAO2B,qBAAuB2B,EAAarkD,SAQ5C,YAAA8iD,gBAAR,SAAwBlpB,GACtB,IAAMyqB,EAAe3mD,KAAK2lD,WAAWzpB,GAAQ,GAC7C,GAAIyqB,EAAc,CAIhB,IAHA,IAAI7jD,EAASo5B,EAAO,GAGbyqB,EAAa34C,MAAQ,GAC1B24C,EAAa34C,OAAShO,KAAKkY,eAAezX,KAC1CqC,IAKF,IAAK9C,KAAKqjD,OAAOuD,6BACf,KAAOD,EAAa34C,MAAQ24C,EAAarkD,OAAStC,KAAKkY,eAAezX,MACpEkmD,EAAarkD,QAAUtC,KAAKkY,eAAezX,KAC3CqC,IAIJ9C,KAAKqjD,OAAOnW,aAAe,CAACltC,KAAKqjD,OAAOuD,6BAA+BD,EAAa34C,MAAQ24C,EAAa34C,MAAQ24C,EAAarkD,OAAQQ,KASlI,YAAAujD,qBAAR,SAA6BvgD,GAG3B,OAAwB,IAApBA,EAAKI,YAGFlG,KAAKmY,gBAAgB3K,QAAQq5C,cAAcpiD,QAAQqB,EAAKG,aAAe,GAOtE,YAAAg/C,cAAV,SAAwBzgD,GACtB,IAAMsiD,EAAe9mD,KAAKkY,eAAe5U,OAAOyjD,uBAAuBviD,GACvExE,KAAKqjD,OAAOpW,eAAiB,CAAC,EAAG6Z,EAAazG,OAC9CrgD,KAAKqjD,OAAOnW,aAAe,CAACltC,KAAKkY,eAAezX,KAAMqmD,EAAaE,MACnEhnD,KAAKqjD,OAAO2B,qBAAuB,GAl3B1Bvb,EAAgB,GAmDxB,MAAA7hC,gBACA,MAAAG,cACA,MAAAiD,eACA,MAAA5C,iBACA,MAAA6C,iBAvDQw+B,GAAb,CAAsC,EAAA5gC,YAAzB,EAAA4gC,oB,sGC1Db,iBAuBE,WACUvxB,GAAA,KAAAA,iBApBH,KAAAgsC,mBAA6B,EAO7B,KAAAc,qBAA+B,EAgHxC,OA5FS,YAAAziD,eAAP,WACEvC,KAAKitC,oBAAiB5oC,EACtBrE,KAAKktC,kBAAe7oC,EACpBrE,KAAKkkD,mBAAoB,EACzBlkD,KAAKglD,qBAAuB,GAM9B,sBAAW,kCAAmB,C,IAA9B,WACE,OAAIhlD,KAAKkkD,kBACA,CAAC,EAAG,GAGRlkD,KAAKktC,cAAiBltC,KAAKitC,gBAIzBjtC,KAAK4mD,6BAA+B5mD,KAAKktC,aAHvCltC,KAAKitC,gB,gCAUhB,sBAAW,gCAAiB,C,IAA5B,WACE,GAAIjtC,KAAKkkD,kBACP,MAAO,CAAClkD,KAAKkY,eAAezX,KAAMT,KAAKkY,eAAe5U,OAAO8pB,MAAQptB,KAAKkY,eAAe1X,KAAO,GAGlG,GAAKR,KAAKitC,eAAV,CAKA,IAAKjtC,KAAKktC,cAAgBltC,KAAK4mD,6BAA8B,CAC3D,IAAMK,EAAkBjnD,KAAKitC,eAAe,GAAKjtC,KAAKglD,qBACtD,OAAIiC,EAAkBjnD,KAAKkY,eAAezX,KACjC,CAACwmD,EAAkBjnD,KAAKkY,eAAezX,KAAMT,KAAKitC,eAAe,GAAK5rC,KAAKO,MAAMqlD,EAAkBjnD,KAAKkY,eAAezX,OAEzH,CAACwmD,EAAiBjnD,KAAKitC,eAAe,IAI/C,OAAIjtC,KAAKglD,sBAEHhlD,KAAKktC,aAAa,KAAOltC,KAAKitC,eAAe,GACxC,CAAC5rC,KAAKC,IAAItB,KAAKitC,eAAe,GAAKjtC,KAAKglD,qBAAsBhlD,KAAKktC,aAAa,IAAKltC,KAAKktC,aAAa,IAG3GltC,KAAKktC,e,gCAMP,YAAA0Z,2BAAP,WACE,IAAM54C,EAAQhO,KAAKitC,eACbh/B,EAAMjO,KAAKktC,aACjB,SAAKl/B,IAAUC,KAGRD,EAAM,GAAKC,EAAI,IAAOD,EAAM,KAAOC,EAAI,IAAMD,EAAM,GAAKC,EAAI,KAQ9D,YAAAi1C,OAAP,SAAc7iB,GAUZ,OARIrgC,KAAKitC,iBACPjtC,KAAKitC,eAAe,IAAM5M,GAExBrgC,KAAKktC,eACPltC,KAAKktC,aAAa,IAAM7M,GAItBrgC,KAAKktC,cAAgBltC,KAAKktC,aAAa,GAAK,GAC9CltC,KAAKuC,kBACE,IAILvC,KAAKitC,gBAAkBjtC,KAAKitC,eAAe,GAAK,IAClDjtC,KAAKitC,eAAe,GAAK,IAEpB,IAEX,EA3HA,GAAa,EAAAqW,kB,0GCNb,YAyEA,SAAS4D,EAAmB1P,EAAgB2P,EAAiB1Q,EAA+B2Q,GAC1F,IAAM1kD,EAAW80C,EAAS6P,EAAkB5Q,EAAee,GACrD10C,EAASqkD,EAAUE,EAAkB5Q,EAAe0Q,GAI1D,OAAOG,EAFYjmD,KAAKkrC,IAAI7pC,EAAWI,GAiCzC,SAA0B00C,EAAgB2P,EAAiB1Q,GAKzD,IAJA,IAAI8Q,EAAc,EACZ7kD,EAAW80C,EAAS6P,EAAkB5Q,EAAee,GACrD10C,EAASqkD,EAAUE,EAAkB5Q,EAAe0Q,GAEjDrpD,EAAI,EAAGA,EAAIuD,KAAKkrC,IAAI7pC,EAAWI,GAAShF,IAAK,CACpD,IAAM0pD,EAAmD,MAAvCC,EAAkBjQ,EAAQ2P,IAA6B,EAAI,EACvE3iD,EAAOiyC,EAAcnzC,OAAO6pB,MAAMxuB,IAAI+D,EAAY8kD,EAAY1pD,GAChE0G,GAAQA,EAAKK,WACf0iD,IAIJ,OAAOA,EA9C0CG,CAAiBlQ,EAAQ2P,EAAS1Q,GAEzDnK,EAASmb,EAAkBjQ,EAAQ2P,GAAUC,IAmDzE,SAASC,EAAkB5Q,EAA+BkR,GAKxD,IAJA,IAAI5rB,EAAW,EACXv3B,EAAOiyC,EAAcnzC,OAAO6pB,MAAMxuB,IAAIgpD,GACtCC,EAAYpjD,GAAQA,EAAKK,UAEtB+iD,GAAaD,GAAc,GAAKA,EAAalR,EAAcj2C,MAChEu7B,IAEA6rB,GADApjD,EAAOiyC,EAAcnzC,OAAO6pB,MAAMxuB,MAAMgpD,KACpBnjD,EAAKK,UAG3B,OAAOk3B,EA8BT,SAAS0rB,EAAkBjQ,EAAgB2P,GACzC,OAAO3P,EAAS2P,EAAU,IAAe,IAY3C,SAAStD,EACPphD,EACAC,EACAmf,EACA/e,EACA+kD,EACApR,GAMA,IAJA,IAAIqR,EAAarlD,EACbklD,EAAajlD,EACbqlD,EAAY,GAETD,IAAejmC,GAAU8lC,IAAe7kD,GAC7CglD,GAAcD,EAAU,GAAK,EAEzBA,GAAWC,EAAarR,EAAch2C,KAAO,GAC/CsnD,GAAatR,EAAcnzC,OAAOsgD,4BAChC+D,GAAY,EAAOllD,EAAUqlD,GAE/BA,EAAa,EACbrlD,EAAW,EACXklD,MACUE,GAAWC,EAAa,IAClCC,GAAatR,EAAcnzC,OAAOsgD,4BAChC+D,GAAY,EAAO,EAAGllD,EAAW,GAGnCA,EADAqlD,EAAarR,EAAch2C,KAAO,EAElCknD,KAIJ,OAAOI,EAAYtR,EAAcnzC,OAAOsgD,4BACtC+D,GAAY,EAAOllD,EAAUqlD,GAQjC,SAASxb,EAASkb,EAAsBJ,GACtC,IAAMY,EAAOZ,EAAoB,IAAM,IACvC,OAAO,EAAA5zC,GAAG4B,IAAM4yC,EAAMR,EASxB,SAASF,EAAO3L,EAAesM,GAC7BtM,EAAQt6C,KAAKO,MAAM+5C,GAEnB,IADA,IAAIuM,EAAM,GACDpqD,EAAI,EAAGA,EAAI69C,EAAO79C,IACzBoqD,GAAOD,EAET,OAAOC,EAnOT,8BAAmCC,EAAiBhB,EAAiB1Q,EAA+B2Q,GAClG,IAWII,EAXEjQ,EAASd,EAAcnzC,OAAOoY,EAC9B87B,EAASf,EAAcnzC,OAAOD,EAGpC,IAAKozC,EAAcnzC,OAAO8oC,cACxB,OAsCJ,SAA0BmL,EAAgBC,EAAgB2Q,EAAiBhB,EAAiB1Q,EAA+B2Q,GACzH,GAAqF,IAAjFF,EAAmB1P,EAAQ2P,EAAS1Q,EAAe2Q,GAAmB9kD,OACxE,MAAO,GAET,OAAOglD,EAAOzD,EACZtM,EAAQC,EAAQD,EAChBC,EAAS6P,EAAkB5Q,EAAee,IAAS,EAAOf,GAC1Dn0C,OAAQgqC,EAAS,IAAgB8a,IA7C1BgB,CAAiB7Q,EAAQC,EAAQ2Q,EAAShB,EAAS1Q,EAAe2Q,GACvEF,EAAmB1P,EAAQ2P,EAAS1Q,EAAe2Q,GA+DzD,SAA4B7P,EAAgBC,EAAgB2Q,EAAiBhB,EAAiB1Q,EAA+B2Q,GAC3H,IAAI1kD,EAEFA,EADEwkD,EAAmB1P,EAAQ2P,EAAS1Q,EAAe2Q,GAAmB9kD,OAAS,EACtE6kD,EAAUE,EAAkB5Q,EAAe0Q,GAE3C3P,EAGb,IAAM10C,EAASqkD,EACTK,EAyDR,SAA6BjQ,EAAgBC,EAAgB2Q,EAAiBhB,EAAiB1Q,EAA+B2Q,GAC5H,IAAI1kD,EAEFA,EADEwkD,EAAmBiB,EAAShB,EAAS1Q,EAAe2Q,GAAmB9kD,OAAS,EACvE6kD,EAAUE,EAAkB5Q,EAAe0Q,GAE3C3P,EAGb,GAAKD,EAAS4Q,GACZzlD,GAAYykD,GACX5P,GAAU4Q,GACXzlD,EAAWykD,EACX,MAAO,IAET,MAAO,IAvEWkB,CAAoB9Q,EAAQC,EAAQ2Q,EAAShB,EAAS1Q,EAAe2Q,GAEvF,OAAOE,EAAOzD,EACZtM,EAAQ70C,EAAUylD,EAASrlD,EACb,MAAd0kD,EAA+B/Q,GAC/Bn0C,OAAQgqC,EAASkb,EAAWJ,IA5E1BkB,CAAmB/Q,EAAQC,EAAQ2Q,EAAShB,EAAS1Q,EAAe2Q,GAKxE,GAAI5P,IAAW2P,EAEb,OADAK,EAAYjQ,EAAS4Q,EAAU,IAAiB,IACzCb,EAAOjmD,KAAKkrC,IAAIgL,EAAS4Q,GAAU7b,EAASkb,EAAWJ,IAEhEI,EAAYhQ,EAAS2P,EAAU,IAAiB,IAChD,IAAMoB,EAAgBlnD,KAAKkrC,IAAIiL,EAAS2P,GAIxC,OAAOG,EAaT,SAAwBkB,EAAe/R,GACrC,OAAOA,EAAch2C,KAAO+nD,EAjBRC,CAAejR,EAAS2P,EAAUgB,EAAU5Q,EAAQd,IACrE8R,EAAgB,GAAK9R,EAAch2C,KAAO,IACtB+2C,EAAS2P,EAAU5P,EAAS4Q,GAQpC,GAPY7b,EAASkb,EAAWJ,M,ygBCrCjD,WAGA,aAiBE,WAC2BjvC,GAAA,KAAAA,kBAoC7B,OAjDE,sBAAkB,iBAAY,C,IAA9B,WACE,IAAK8wB,EAAayf,cAAe,CAC/B,IAAMC,EAA8CjrD,OAAQkrD,cAAsBlrD,OAAQmrD,mBAC1F,IAAKF,EAEH,OADA1vB,QAAQC,KAAK,4FACN,KAET+P,EAAayf,cAAgB,IAAIC,EAEnC,OAAO1f,EAAayf,e,gCAQf,YAAA1a,cAAP,WACE,IAAM5W,EAAM6R,EAAa6f,aACzB,GAAK1xB,EAAL,CAGA,IAAM2xB,EAAkB3xB,EAAI4xB,qBAC5B5xB,EAAI6xB,gBAAgBjpD,KAAKkpD,qBAAqBlpD,KAAKmpD,gBAAgBnpD,KAAKmY,gBAAgB3K,QAAQ47C,aAAa,SAAC9lD,GAC5GylD,EAAgBzlD,OAASA,EACzBylD,EAAgBM,QAAQjyB,EAAIkyB,aAC5BP,EAAgB/6C,MAAM,QAIlB,YAAAk7C,qBAAR,SAA6BK,GAK3B,IAJA,IAAMC,EAAe9rD,OAAO+rD,KAAKF,GAC3B/8B,EAAMg9B,EAAalnD,OACnBonD,EAAQ,IAAI/6C,WAAW6d,GAEpB1uB,EAAI,EAAGA,EAAI0uB,EAAK1uB,IACvB4rD,EAAM5rD,GAAK0rD,EAAah/C,WAAW1M,GAGrC,OAAO4rD,EAAMpmD,QAGP,YAAA6lD,gBAAR,SAAwBQ,GAKtB,OAHiBA,EAAQvwB,MAAM,KAGf,IApDP6P,EAAY,GAkBpB,MAAA7gC,kBAlBQ6gC,GAAb,GAAa,EAAAA,gB,y1BCHb,WACA,OACA,OAEA,OAUA,cAaE,WACmB0W,EACArK,EACgBp9B,EACDgxB,EACIzC,EACFtuB,GANpC,MAQE,cAAO,K,OAPU,EAAAwnC,WACA,EAAArK,iBACgB,EAAAp9B,iBACD,EAAAgxB,gBACI,EAAAzC,oBACF,EAAAtuB,kBAlB5B,EAAAyxC,OAAuB,GAEvB,EAAAC,iBAA2B,EAO3B,EAAAC,iBAA6D,MAACzlD,OAAWA,GACzE,EAAA0lD,wBAAkC,EAYxC,EAAKvhD,SAAS,EAAA+9B,yBAAyB,EAAKoZ,SAAU,aAAa,SAAAh4C,GAAK,SAAKqiD,aAAariD,OAG1F,EAAKi7C,mBAAqB,SAAAj7C,GAAK,SAAKk7C,aAAal7C,IACjD,EAAKsiD,oBAAsB,SAAAtiD,GAAK,SAAKuiD,cAAcviD,IACnD,EAAKwiD,eAAiB,SAAAxiD,GAAK,SAAKyiD,SAASziD,I,EA8L7C,OA1NsC,OA+B7B,YAAAzH,QAAP,WACE,YAAMA,QAAO,WACbF,KAAKqqD,eAGA,YAAAlxC,IAAP,SAAWmxC,GACTtqD,KAAK4pD,OAAO1iD,KAAKojD,GACU,IAAvBtqD,KAAK4pD,OAAOtnD,QACdtC,KAAKuqD,aAIF,YAAAvgB,SAAP,SAAgBh8B,EAAgBC,GAE9B,GAA2B,IAAvBjO,KAAK4pD,OAAOtnD,OAAhB,CAKK0L,GAAUC,IACbD,EAAQ,EACRC,EAAMjO,KAAKkY,eAAe1X,KAAO,GAInC,IAAK,IAAI1C,EAAI,EAAGA,EAAIkC,KAAK4pD,OAAOtnD,OAAQxE,IAAK,CAC3C,IAAMwsD,EAAOtqD,KAAK4pD,OAAO9rD,IACpBwsD,EAAKrL,GAAKjxC,GAASs8C,EAAKrL,IAAMhxC,EAAM,GACpCq8C,EAAKnL,GAAKnxC,GAASs8C,EAAKnL,IAAMlxC,EAAM,GACpCq8C,EAAKrL,GAAKjxC,GAASs8C,EAAKnL,GAAKlxC,EAAM,KAClCjO,KAAKwqD,cAAgBxqD,KAAKwqD,eAAiBF,IAC7CtqD,KAAKwqD,aAAa5J,gBAClB5gD,KAAKwqD,kBAAenmD,GAEtBrE,KAAK4pD,OAAOziD,OAAOrJ,IAAK,IAKD,IAAvBkC,KAAK4pD,OAAOtnD,QACdtC,KAAKqqD,gBAID,YAAAE,UAAR,WACOvqD,KAAK6pD,kBACR7pD,KAAK6pD,iBAAkB,EACvB7pD,KAAK2/C,SAASlyC,iBAAiB,YAAazN,KAAK4iD,oBACjD5iD,KAAK2/C,SAASlyC,iBAAiB,aAAczN,KAAKiqD,qBAClDjqD,KAAK2/C,SAASlyC,iBAAiB,QAASzN,KAAKmqD,kBAIzC,YAAAE,YAAR,WACMrqD,KAAK6pD,kBACP7pD,KAAK6pD,iBAAkB,EACvB7pD,KAAK2/C,SAAShyC,oBAAoB,YAAa3N,KAAK4iD,oBACpD5iD,KAAK2/C,SAAShyC,oBAAoB,aAAc3N,KAAKiqD,qBACrDjqD,KAAK2/C,SAAShyC,oBAAoB,QAAS3N,KAAKmqD,kBAI5C,YAAAtH,aAAR,SAAqBl7C,GAGf3H,KAAK8pD,iBAAiB,KAAOniD,EAAE8iD,OAASzqD,KAAK8pD,iBAAiB,KAAOniD,EAAE8pC,QACzEzxC,KAAK0qD,SAAS/iD,GAEd3H,KAAK8pD,iBAAmB,CAACniD,EAAE8iD,MAAO9iD,EAAE8pC,SAIhC,YAAAiZ,SAAR,SAAiB/iD,GAAjB,WACQ2iD,EAAOtqD,KAAK2qD,iBAAiBhjD,GAG/B2iD,IAAStqD,KAAKwqD,eAMdxqD,KAAKwqD,eACPxqD,KAAKwqD,aAAa5J,gBAClB5gD,KAAKwqD,kBAAenmD,EAChBrE,KAAK4qD,iBACPzmD,aAAanE,KAAK4qD,kBAKjBN,IAGLtqD,KAAKwqD,aAAeF,EAGhBA,EAAKnI,eACPmI,EAAKnI,cAAcx6C,GAIrB3H,KAAK4qD,gBAAkBltD,OAAO0G,YAAW,WAAM,SAAKymD,WAAWljD,KAAI3H,KAAKmY,gBAAgB3K,QAAQs9C,6BAG1F,YAAAD,WAAR,SAAmBljD,GACjB3H,KAAK4qD,qBAAkBvmD,EACvB,IAAMimD,EAAOtqD,KAAK2qD,iBAAiBhjD,GAC/B2iD,GAAQA,EAAK5J,iBACf4J,EAAK5J,gBAAgB/4C,IAIjB,YAAAqiD,aAAR,SAAqBriD,GAMnB,GAHA3H,KAAK+pD,wBAA0B/pD,KAAK+qD,sBAG/B/qD,KAAK6pD,gBAAV,CAMA,IAAMS,EAAOtqD,KAAK2qD,iBAAiBhjD,IAC/B2iD,aAAI,EAAJA,EAAMzJ,iBAAiBl5C,MACzBA,EAAEkkC,iBACFlkC,EAAEu9C,8BAIE,YAAAgF,cAAR,SAAsBviD,GAGhB3H,KAAKwqD,eACPxqD,KAAKwqD,aAAa5J,gBAClB5gD,KAAKwqD,kBAAenmD,EAChBrE,KAAK4qD,iBACPzmD,aAAanE,KAAK4qD,mBAKhB,YAAAR,SAAR,SAAiBziD,GAGf,IAAM2iD,EAAOtqD,KAAK2qD,iBAAiBhjD,GAC7BqjD,EAAyBhrD,KAAK+qD,sBAEhCT,GAAQU,IAA2BhrD,KAAK+pD,0BAC1CO,EAAKpI,cAAcv6C,GACnBA,EAAEkkC,iBACFlkC,EAAEu9C,6BAIE,YAAA6F,oBAAR,WACE,IAAM/d,EAAgBhtC,KAAKymC,kBAAkBuG,cAC7C,OAAOA,EAAgBA,EAAc1qC,OAAS,GAGxC,YAAAqoD,iBAAR,SAAyBhjD,GACvB,IAAMu0B,EAASl8B,KAAKkpC,cAAcib,UAAUx8C,EAAG3H,KAAKs1C,eAAgBt1C,KAAKkY,eAAezX,KAAMT,KAAKkY,eAAe1X,MAClH,GAAK07B,EAKL,IAFA,IAAMxgB,EAAIwgB,EAAO,GACX74B,EAAI64B,EAAO,GACRp+B,EAAI,EAAGA,EAAIkC,KAAK4pD,OAAOtnD,OAAQxE,IAAK,CAC3C,IAAMwsD,EAAOtqD,KAAK4pD,OAAO9rD,GACzB,GAAIwsD,EAAKrL,KAAOqL,EAAKnL,IAEnB,GAAI97C,IAAMinD,EAAKrL,IAAMvjC,GAAK4uC,EAAKtL,IAAMtjC,EAAI4uC,EAAKlL,GAC5C,OAAOkL,OAIT,GAAKjnD,IAAMinD,EAAKrL,IAAMvjC,GAAK4uC,EAAKtL,IAC3B37C,IAAMinD,EAAKnL,IAAMzjC,EAAI4uC,EAAKlL,IAC1B/7C,EAAIinD,EAAKrL,IAAM57C,EAAIinD,EAAKnL,GAC3B,OAAOmL,IApNJvgB,EAAgB,GAgBxB,MAAAniC,gBACA,MAAAoD,eACA,MAAAE,mBACA,MAAA9C,kBAnBQ2hC,GAAb,CAAsC,EAAAlhC,YAAzB,EAAAkhC,oB,4bCdb,YAGA,QACA,QACA,OACA,OACA,QAEA,QASA,cA0BE,WACmB9pC,EACAS,GAFnB,MAIE,cAAO,KAHU,EAAAT,YACA,EAAAS,iBAvBX,EAAAuqD,qBAA+B,EAiB/B,EAAAC,gBAA4B,GAE5B,EAAAC,iBAA2B,GAOjC,EAAKC,uBAAyBpyC,SAASC,cAAc,OACrD,EAAKmyC,uBAAuBlyC,UAAUC,IAAI,uBAE1C,EAAKkyC,cAAgBryC,SAASC,cAAc,OAC5C,EAAKoyC,cAAcnyC,UAAUC,IAAI,4BACjC,EAAKkyC,cAAcxjB,aAAa,OAAQ,QACxC,EAAKyjB,aAAe,GACpB,IAAK,IAAIxtD,EAAI,EAAGA,EAAI,EAAKmC,UAAUO,KAAM1C,IACvC,EAAKwtD,aAAaxtD,GAAK,EAAKytD,+BAC5B,EAAKF,cAAc/xC,YAAY,EAAKgyC,aAAaxtD,IAmBnD,GAhBA,EAAK0tD,0BAA4B,SAAA7jD,GAAK,SAAK8jD,iBAAiB9jD,EAAG,IAC/D,EAAK+jD,6BAA+B,SAAA/jD,GAAK,SAAK8jD,iBAAiB9jD,EAAG,IAClE,EAAK2jD,aAAa,GAAG79C,iBAAiB,QAAS,EAAK+9C,2BACpD,EAAKF,aAAa,EAAKA,aAAahpD,OAAS,GAAGmL,iBAAiB,QAAS,EAAKi+C,8BAE/E,EAAKC,yBACL,EAAKP,uBAAuB9xC,YAAY,EAAK+xC,eAE7C,EAAKO,qBAAuB,IAAI,EAAA9uB,gBAAgB,EAAK+uB,YAAYvsD,KAAK,IACtE,EAAKwsD,eAEL,EAAKC,YAAc/yC,SAASC,cAAc,OAC1C,EAAK8yC,YAAY7yC,UAAUC,IAAI,eAC/B,EAAK4yC,YAAYlkB,aAAa,YAAa,aAC3C,EAAKujB,uBAAuB9xC,YAAY,EAAKyyC,cAExC,EAAK9rD,UAAUY,QAClB,MAAM,IAAIwB,MAAM,oD,OAElB,EAAKpC,UAAUY,QAAQmrD,sBAAsB,aAAc,EAAKZ,wBAEhE,EAAK5iD,SAAS,EAAKojD,sBACnB,EAAKpjD,SAAS,EAAKvI,UAAUiE,UAAS,SAAAyD,GAAK,SAAKskD,UAAUtkD,EAAEnH,UAC5D,EAAKgI,SAAS,EAAKvI,UAAU0+B,UAAS,SAAAh3B,GAAK,SAAKmkD,aAAankD,EAAEqG,MAAOrG,EAAEsG,SACxE,EAAKzF,SAAS,EAAKvI,UAAUw+B,UAAS,WAAM,SAAKqtB,mBAEjD,EAAKtjD,SAAS,EAAKvI,UAAUskC,YAAW,SAAAv+B,GAAQ,SAAKkmD,QAAQlmD,OAC7D,EAAKwC,SAAS,EAAKvI,UAAUm+B,YAAW,WAAM,SAAK8tB,QAAQ,UAC3D,EAAK1jD,SAAS,EAAKvI,UAAUukC,WAAU,SAAA2nB,GAAc,SAAKC,OAAOD,OACjE,EAAK3jD,SAAS,EAAKvI,UAAUy+B,OAAM,SAAA/2B,GAAK,SAAKq7B,OAAOr7B,EAAEtI,SACtD,EAAKmJ,SAAS,EAAKvI,UAAU8Z,QAAO,WAAM,SAAKsyC,uBAC/C,EAAK7jD,SAAS,EAAK9H,eAAe8oC,oBAAmB,WAAM,SAAKmiB,6BAEhE,EAAKW,kBAAoB,IAAI,EAAA7uB,iBAC7B,EAAKj1B,SAAS,EAAK8jD,mBACnB,EAAKA,kBAAkBtvB,aAAY,WAAM,SAAK2uB,4BAG9C,EAAKnjD,SAAS,EAAA+9B,yBAAyB7oC,OAAQ,UAAU,WAAM,SAAKiuD,6B,EAmMxE,OApR0C,OAoFjC,YAAAzrD,QAAP,WACE,YAAMA,QAAO,WACb,EAAAqZ,wBAAwBvZ,KAAKorD,wBAC7BprD,KAAKsrD,aAAahpD,OAAS,GAGrB,YAAAmpD,iBAAR,SAAyB9jD,EAAestC,GACtC,IAAMsX,EAA+B5kD,EAAE2G,OACjCk+C,EAAwBxsD,KAAKsrD,aAA0B,IAAbrW,EAAoC,EAAIj1C,KAAKsrD,aAAahpD,OAAS,GAKnH,GAFiBiqD,EAAgBE,aAAa,oBACd,IAAbxX,EAAoC,IAAM,GAAGj1C,KAAKC,UAAUqD,OAAO6pB,MAAM7qB,SAOxFqF,EAAE+kD,gBAAkBF,EAAxB,CAKA,IAAIG,EACAC,EAgBJ,GAfiB,IAAb3X,GACF0X,EAAqBJ,EACrBK,EAAwB5sD,KAAKsrD,aAAar5B,MAC1CjyB,KAAKqrD,cAActpC,YAAY6qC,KAE/BD,EAAqB3sD,KAAKsrD,aAAat5B,QACvC46B,EAAwBL,EACxBvsD,KAAKqrD,cAActpC,YAAY4qC,IAIjCA,EAAmBh/C,oBAAoB,QAAS3N,KAAKwrD,2BACrDoB,EAAsBj/C,oBAAoB,QAAS3N,KAAK0rD,8BAGvC,IAAbzW,EAAmC,CACrC,IAAM4X,EAAa7sD,KAAKurD,+BACxBvrD,KAAKsrD,aAAawB,QAAQD,GAC1B7sD,KAAKqrD,cAAcW,sBAAsB,aAAca,OAClD,CACCA,EAAa7sD,KAAKurD,+BACxBvrD,KAAKsrD,aAAapkD,KAAK2lD,GACvB7sD,KAAKqrD,cAAc/xC,YAAYuzC,GAIjC7sD,KAAKsrD,aAAa,GAAG79C,iBAAiB,QAASzN,KAAKwrD,2BACpDxrD,KAAKsrD,aAAatrD,KAAKsrD,aAAahpD,OAAS,GAAGmL,iBAAiB,QAASzN,KAAK0rD,8BAG/E1rD,KAAKC,UAAU2G,YAAyB,IAAbquC,GAAqC,EAAI,GAGpEj1C,KAAKsrD,aAA0B,IAAbrW,EAAoC,EAAIj1C,KAAKsrD,aAAahpD,OAAS,GAAG48B,QAGxFv3B,EAAEkkC,iBACFlkC,EAAEu9C,6BAGI,YAAA+G,UAAR,SAAkBzrD,GAEhBR,KAAKsrD,aAAatrD,KAAKsrD,aAAahpD,OAAS,GAAGqL,oBAAoB,QAAS3N,KAAK0rD,8BAGlF,IAAK,IAAI5tD,EAAIkC,KAAKqrD,cAAc0B,SAASzqD,OAAQxE,EAAIkC,KAAKC,UAAUO,KAAM1C,IACxEkC,KAAKsrD,aAAaxtD,GAAKkC,KAAKurD,+BAC5BvrD,KAAKqrD,cAAc/xC,YAAYtZ,KAAKsrD,aAAaxtD,IAGnD,KAAOkC,KAAKsrD,aAAahpD,OAAS9B,GAChCR,KAAKqrD,cAActpC,YAAY/hB,KAAKsrD,aAAar5B,OAInDjyB,KAAKsrD,aAAatrD,KAAKsrD,aAAahpD,OAAS,GAAGmL,iBAAiB,QAASzN,KAAK0rD,8BAE/E1rD,KAAK2rD,0BAGC,YAAAJ,6BAAR,WACE,IAAM1qD,EAAUmY,SAASC,cAAc,OAIvC,OAHApY,EAAQgnC,aAAa,OAAQ,YAC7BhnC,EAAQsnC,UAAY,EACpBnoC,KAAKgtD,sBAAsBnsD,GACpBA,GAGD,YAAAurD,OAAR,SAAeD,GACb,IAAK,IAAIruD,EAAI,EAAGA,EAAIquD,EAAYruD,IAC9BkC,KAAKksD,QAAQ,MAIT,YAAAA,QAAR,SAAgBlmD,GAAhB,WACE,GAAIhG,KAAKirD,qBAAuBgC,GAAsB,CACpD,GAAIjtD,KAAKkrD,gBAAgB5oD,OAAS,EAEZtC,KAAKkrD,gBAAgBl5B,UACrBhsB,IAClBhG,KAAKmrD,kBAAoBnlD,QAG3BhG,KAAKmrD,kBAAoBnlD,EAGd,OAATA,IACFhG,KAAKirD,uBAC6BgC,KAA9BjtD,KAAKirD,uBACPjrD,KAAK+rD,YAAYjd,aAAe3N,EAAQlf,gBAKxC,EAAA9O,OACEnT,KAAK+rD,YAAYjd,aAAe9uC,KAAK+rD,YAAYjd,YAAYxsC,OAAS,IAAMtC,KAAK+rD,YAAYpnB,YAC/FvgC,YAAW,WACT,EAAKgnD,uBAAuB9xC,YAAY,EAAKyyC,eAC5C,KAMH,YAAAM,iBAAR,WACErsD,KAAK+rD,YAAYjd,YAAc,GAC/B9uC,KAAKirD,qBAAuB,EAGxB,EAAA93C,OACF,EAAAoG,wBAAwBvZ,KAAK+rD,cAIzB,YAAA/oB,OAAR,SAAekqB,GACbltD,KAAKqsD,mBACLrsD,KAAKkrD,gBAAgBhkD,KAAKgmD,IAGpB,YAAApB,aAAR,SAAqB99C,EAAgBC,GACnCjO,KAAK4rD,qBAAqBtvB,QAAQtuB,EAAOC,EAAKjO,KAAKC,UAAUO,OAGvD,YAAAqrD,YAAR,SAAoB79C,EAAeC,GAGjC,IAFA,IAAM3K,EAAkBtD,KAAKC,UAAUqD,OACjC6pD,EAAU7pD,EAAO6pB,MAAM7qB,OAAOyN,WAC3BjS,EAAIkQ,EAAOlQ,GAAKmQ,EAAKnQ,IAAK,CACjC,IAAM+8B,EAAWv3B,EAAOsgD,4BAA4BtgD,EAAO+rB,MAAQvxB,GAAG,GAChEsvD,GAAY9pD,EAAO+rB,MAAQvxB,EAAI,GAAGiS,WAClClP,EAAUb,KAAKsrD,aAAaxtD,GAC9B+C,IACsB,IAApBg6B,EAASv4B,OACXzB,EAAQwsD,UAAY,SAEpBxsD,EAAQiuC,YAAcjU,EAExBh6B,EAAQgnC,aAAa,gBAAiBulB,GACtCvsD,EAAQgnC,aAAa,eAAgBslB,IAGzCntD,KAAKstD,uBAGC,YAAA3B,uBAAR,WACE,GAAK3rD,KAAKU,eAAemB,WAAWE,iBAApC,CAGI/B,KAAKsrD,aAAahpD,SAAWtC,KAAKC,UAAUO,MAC9CR,KAAKisD,UAAUjsD,KAAKC,UAAUO,MAEhC,IAAK,IAAI1C,EAAI,EAAGA,EAAIkC,KAAKC,UAAUO,KAAM1C,IACvCkC,KAAKgtD,sBAAsBhtD,KAAKsrD,aAAaxtD,MAIzC,YAAAkvD,sBAAR,SAA8BnsD,GAC5BA,EAAQuY,MAAMiC,OAAYrb,KAAKU,eAAemB,WAAWE,iBAAgB,MAGnE,YAAAurD,oBAAR,WACuC,IAAjCttD,KAAKmrD,iBAAiB7oD,SAG1BtC,KAAK+rD,YAAYjd,aAAe9uC,KAAKmrD,iBACrCnrD,KAAKmrD,iBAAmB,KAE5B,EApRA,CAA0C,EAAAtiD,YAA7B,EAAAu8B,wB,o1BCjBb,YACA,OACA,OAEA,OACA,OACA,OACA,QACA,QASImoB,EAAiB,EAOrB,cAcE,WACUv1C,EACS2nC,EACArK,EACAtN,EACAwlB,EACAC,EACkB3oB,EACD3sB,EACDD,GATnC,MAWE,cAAO,K,OAVC,EAAAF,UACS,EAAA2nC,WACA,EAAArK,iBACA,EAAAtN,mBACA,EAAAwlB,aACA,EAAAC,cACkB,EAAA3oB,mBACD,EAAA3sB,kBACD,EAAAD,iBArB3B,EAAAw1C,eAAyBH,IAKzB,EAAAjC,aAA8B,GAmBpC,EAAKD,cAAgBryC,SAASC,cAAc,OAC5C,EAAKoyC,cAAcnyC,UAAUC,IAxCL,cAyCxB,EAAKkyC,cAAcjyC,MAAM8sB,WAAa,SACtC,EAAKmlB,cAAcxjB,aAAa,cAAe,QAC/C,EAAK8lB,oBAAoB,EAAKz1C,eAAezX,KAAM,EAAKyX,eAAe1X,MACvE,EAAKotD,oBAAsB50C,SAASC,cAAc,OAClD,EAAK20C,oBAAoB10C,UAAUC,IAzCf,mBA0CpB,EAAKy0C,oBAAoB/lB,aAAa,cAAe,QAErD,EAAKhmC,WAAa,CAChBkZ,gBAAiB,EACjBC,iBAAkB,EAClBH,gBAAiB,EACjBC,iBAAkB,EAClBG,eAAgB,EAChBC,cAAe,EACfE,kBAAmB,EACnBE,mBAAoB,EACpBC,YAAa,EACbC,aAAc,EACd1Z,gBAAiB,EACjBC,iBAAkB,GAEpB,EAAKg0C,oBACL,EAAK8X,aAEL,EAAKC,YAAc,IAAI,EAAAC,sBAAsB/0C,SAAU,EAAKb,gBAAiB,EAAKH,SAElF,EAAK2nC,SAASzmC,UAAUC,IApEE,4BAoE0B,EAAKu0C,gBACzD,EAAKpY,eAAeh8B,YAAY,EAAK+xC,eACrC,EAAK/V,eAAeh8B,YAAY,EAAKs0C,qBAErC,EAAKJ,WAAW7O,qBAAoB,SAAAh3C,GAAK,SAAKqmD,aAAarmD,MAC3D,EAAK6lD,WAAW3O,qBAAoB,SAAAl3C,GAAK,SAAKsmD,aAAatmD,MAE3D,EAAK8lD,YAAY9O,qBAAoB,SAAAh3C,GAAK,SAAKqmD,aAAarmD,MAC5D,EAAK8lD,YAAY5O,qBAAoB,SAAAl3C,GAAK,SAAKsmD,aAAatmD,M,EAqThE,OAnXiC,OAY/B,sBAAW,8BAAe,C,IAA1B,WAA4D,OAAO,IAAI,EAAAH,cAAoC2kB,O,gCAqDpG,YAAAjsB,QAAP,WACEF,KAAK2/C,SAASzmC,UAAU0sB,OAhFE,4BAgF6B5lC,KAAK0tD,gBAI5D,EAAAn0C,wBAAwBvZ,KAAKqrD,cAAerrD,KAAK4tD,oBAAqB5tD,KAAKkuD,mBAAoBluD,KAAKmuD,yBAEpG,YAAMjuD,QAAO,YAGP,YAAA61C,kBAAR,WACE/1C,KAAK6B,WAAWkZ,gBAAkB/a,KAAK8kC,iBAAiB3pB,MAAQzd,OAAOme,iBACvE7b,KAAK6B,WAAWmZ,iBAAmB3Z,KAAK+Q,KAAKpS,KAAK8kC,iBAAiBzpB,OAAS3d,OAAOme,kBACnF7b,KAAK6B,WAAWgZ,gBAAkB7a,KAAK6B,WAAWkZ,gBAAkB1Z,KAAK4P,MAAMjR,KAAKmY,gBAAgB3K,QAAQ8oC,eAC5Gt2C,KAAK6B,WAAWiZ,iBAAmBzZ,KAAKO,MAAM5B,KAAK6B,WAAWmZ,iBAAmBhb,KAAKmY,gBAAgB3K,QAAQ04B,YAC9GlmC,KAAK6B,WAAWoZ,eAAiB,EACjCjb,KAAK6B,WAAWqZ,cAAgB,EAChClb,KAAK6B,WAAWuZ,kBAAoBpb,KAAK6B,WAAWgZ,gBAAkB7a,KAAKkY,eAAezX,KAC1FT,KAAK6B,WAAWyZ,mBAAqBtb,KAAK6B,WAAWiZ,iBAAmB9a,KAAKkY,eAAe1X,KAC5FR,KAAK6B,WAAW0Z,YAAcla,KAAK4P,MAAMjR,KAAK6B,WAAWuZ,kBAAoB1d,OAAOme,kBACpF7b,KAAK6B,WAAW2Z,aAAena,KAAK4P,MAAMjR,KAAK6B,WAAWyZ,mBAAqB5d,OAAOme,kBACtF7b,KAAK6B,WAAWC,gBAAkB9B,KAAK6B,WAAW0Z,YAAcvb,KAAKkY,eAAezX,KACpFT,KAAK6B,WAAWE,iBAAmB/B,KAAK6B,WAAW2Z,aAAexb,KAAKkY,eAAe1X,KAEtF,IAAsB,UAAAR,KAAKsrD,aAAL,eAAmB,CAApC,IAAMzqD,EAAO,KAChBA,EAAQuY,MAAM+B,MAAWnb,KAAK6B,WAAW0Z,YAAW,KACpD1a,EAAQuY,MAAMiC,OAAYrb,KAAK6B,WAAWE,iBAAgB,KAC1DlB,EAAQuY,MAAM8sB,WAAgBlmC,KAAK6B,WAAWE,iBAAgB,KAE9DlB,EAAQuY,MAAMg1C,SAAW,SAGtBpuD,KAAKmuD,0BACRnuD,KAAKmuD,wBAA0Bn1C,SAASC,cAAc,SACtDjZ,KAAKs1C,eAAeh8B,YAAYtZ,KAAKmuD,0BAGvC,IAAME,EACDruD,KAAKsuD,kBAAiB,wFAIdtuD,KAAK6B,WAAWC,gBAAe,MAG5C9B,KAAKmuD,wBAAwBd,UAAYgB,EAEzCruD,KAAK4tD,oBAAoBx0C,MAAMiC,OAASrb,KAAKgoC,iBAAiB5uB,MAAMiC,OACpErb,KAAKs1C,eAAel8B,MAAM+B,MAAWnb,KAAK6B,WAAW0Z,YAAW,KAChEvb,KAAKs1C,eAAel8B,MAAMiC,OAAYrb,KAAK6B,WAAW2Z,aAAY,MAG7D,YAAApB,UAAP,SAAiBub,GACf31B,KAAKgY,QAAU2d,EACf31B,KAAK6tD,cAGC,YAAAA,WAAR,sBACO7tD,KAAKkuD,qBACRluD,KAAKkuD,mBAAqBl1C,SAASC,cAAc,SACjDjZ,KAAKs1C,eAAeh8B,YAAYtZ,KAAKkuD,qBAIvC,IAAIG,EACCruD,KAAKsuD,kBAAiB,yBACdtuD,KAAKgY,QAAQsF,WAAW5M,IAAG,kBACrB1Q,KAAKmY,gBAAgB3K,QAAQuQ,WAAU,gBACzC/d,KAAKmY,gBAAgB3K,QAAQsQ,SAAQ,OAGtDuwC,GACKruD,KAAKsuD,kBAAiB,cAAc,EAAAC,WAAU,oBAChCvuD,KAAKmY,gBAAgB3K,QAAQqQ,WAAU,KAErD7d,KAAKsuD,kBAAiB,SAAS,EAAAC,WAAU,mBAC3BvuD,KAAKmY,gBAAgB3K,QAAQoQ,eAAc,KAEzD5d,KAAKsuD,kBAAiB,SAAS,EAAAE,aAAY,0BAIhDH,GACE,+BAAsCruD,KAAK0tD,eAAiB,iCAK9DW,GACE,0BAAiCruD,KAAK0tD,eAAiB,8BAEhC1tD,KAAKgY,QAAQue,OAAO7lB,IAAG,aAClC1Q,KAAKgY,QAAQwe,aAAa9lB,IAAG,gCAGlB1Q,KAAKgY,QAAQwe,aAAa9lB,IAAG,aACxC1Q,KAAKgY,QAAQue,OAAO7lB,IAAG,OAIrC29C,GACKruD,KAAKsuD,kBAAiB,mCAAkD,EAAAG,aAAY,IAAI,EAAAC,yBAAwB,yBAC5F1uD,KAAKgY,QAAQue,OAAO7lB,IAAG,2BAG3C1Q,KAAKsuD,kBAAiB,6BAA4C,EAAAG,aAAY,IAAI,EAAAE,mBAAkB,SAAS,EAAAD,yBAAwB,mCACjG1uD,KAAK0tD,eAAiB,0BAE1D1tD,KAAKsuD,kBAAiB,6BAA4C,EAAAG,aAAY,IAAI,EAAAE,mBAAkB,IAAI,EAAAD,yBAAwB,6BACjG1uD,KAAK0tD,eAAiB,0BAErD1tD,KAAKsuD,kBAAiB,6BAA4C,EAAAG,aAAY,IAAI,EAAAC,yBAAwB,wBACvF1uD,KAAKgY,QAAQue,OAAO7lB,IAAG,YAClC1Q,KAAKgY,QAAQwe,aAAa9lB,IAAG,KAErC1Q,KAAKsuD,kBAAiB,iBAA6B,EAAAG,aAAY,IAAI,EAAAG,uBAAsB,kBAC5E5uD,KAAKmY,gBAAgB3K,QAAQuwC,YAAW,UAAU/9C,KAAKgY,QAAQue,OAAO7lB,IAAG,WAEtF1Q,KAAKsuD,kBAAiB,iBAA6B,EAAAG,aAAY,IAAI,EAAAI,6BAA4B,2BACzE7uD,KAAKgY,QAAQue,OAAO7lB,IAAG,WAGlD29C,GACKruD,KAAKsuD,kBAAiB,8FAOtBtuD,KAAKsuD,kBAAiB,iEAEHtuD,KAAKgY,QAAQ0f,qBAAqBhnB,IAAG,KAG7D1Q,KAAKgY,QAAQqF,KAAKyxC,SAAQ,SAAC3wD,EAAGL,GAC5BuwD,GACK,EAAKC,kBAAiB,cAAuBxwD,EAAC,aAAaK,EAAEuS,IAAG,MAChE,EAAK49C,kBAAiB,cAAuBxwD,EAAC,wBAAwBK,EAAEuS,IAAG,SAElF29C,GACKruD,KAAKsuD,kBAAiB,cAAuB,EAAA9+C,uBAAsB,aAAa,EAAAgB,MAAMc,OAAOtR,KAAKgY,QAAQoE,YAAY1L,IAAG,MACzH1Q,KAAKsuD,kBAAiB,cAAuB,EAAA9+C,uBAAsB,wBAAwBxP,KAAKgY,QAAQsF,WAAW5M,IAAG,MAE3H1Q,KAAKkuD,mBAAmBb,UAAYgB,GAG/B,YAAApY,yBAAP,WACEj2C,KAAK+1C,qBAGC,YAAA4X,oBAAR,SAA4BltD,EAAcD,GAExC,IAAK,IAAI1C,EAAIkC,KAAKsrD,aAAahpD,OAAQxE,GAAK0C,EAAM1C,IAAK,CACrD,IAAM4F,EAAMsV,SAASC,cAAc,OACnCjZ,KAAKqrD,cAAc/xC,YAAY5V,GAC/B1D,KAAKsrD,aAAapkD,KAAKxD,GAGzB,KAAO1D,KAAKsrD,aAAahpD,OAAS9B,GAChCR,KAAKqrD,cAActpC,YAAY/hB,KAAKsrD,aAAar5B,QAI9C,YAAA/tB,SAAP,SAAgBzD,EAAcD,GAC5BR,KAAK2tD,oBAAoBltD,EAAMD,GAC/BR,KAAK+1C,qBAGA,YAAAG,kBAAP,WACEl2C,KAAK+1C,qBAGA,YAAAh8B,OAAP,WACE/Z,KAAKqrD,cAAcnyC,UAAU0sB,OAzPb,gBA4PX,YAAA5rB,QAAP,WACEha,KAAKqrD,cAAcnyC,UAAUC,IA7Pb,gBAgQX,YAAAe,mBAAP,SAA0BlM,EAAqCC,EAAmCkM,GAEhG,KAAOna,KAAK4tD,oBAAoBb,SAASzqD,QACvCtC,KAAK4tD,oBAAoB7rC,YAAY/hB,KAAK4tD,oBAAoBb,SAAS,IAIzE,GAAK/+C,GAAUC,EAAf,CAKA,IAAMguC,EAAmBjuC,EAAM,GAAKhO,KAAKkY,eAAe5U,OAAO+rB,MACzD6sB,EAAiBjuC,EAAI,GAAKjO,KAAKkY,eAAe5U,OAAO+rB,MACrD8sB,EAAyB96C,KAAKC,IAAI26C,EAAkB,GACpDG,EAAuB/6C,KAAKiR,IAAI4pC,EAAgBl8C,KAAKkY,eAAe1X,KAAO,GAGjF,KAAI27C,GAA0Bn8C,KAAKkY,eAAe1X,MAAQ47C,EAAuB,GAAjF,CAKA,IAAM2S,EAAmB/1C,SAAS+uB,yBAElC,GAAI5tB,EACF40C,EAAiBz1C,YACftZ,KAAKgvD,wBAAwB7S,EAAwBnuC,EAAM,GAAIC,EAAI,GAAImuC,EAAuBD,EAAyB,QAEpH,CAEL,IAAM15C,EAAWw5C,IAAqBE,EAAyBnuC,EAAM,GAAK,EACpE6T,EAASs6B,IAA2BC,EAAuBnuC,EAAI,GAAKjO,KAAKkY,eAAezX,KAC9FsuD,EAAiBz1C,YAAYtZ,KAAKgvD,wBAAwB7S,EAAwB15C,EAAUof,IAE5F,IAAMy6B,EAAkBF,EAAuBD,EAAyB,EAGxE,GAFA4S,EAAiBz1C,YAAYtZ,KAAKgvD,wBAAwB7S,EAAyB,EAAG,EAAGn8C,KAAKkY,eAAezX,KAAM67C,IAE/GH,IAA2BC,EAAsB,CAEnD,IAAM,EAASF,IAAmBE,EAAuBnuC,EAAI,GAAKjO,KAAKkY,eAAezX,KACtFsuD,EAAiBz1C,YAAYtZ,KAAKgvD,wBAAwB5S,EAAsB,EAAG,KAGvFp8C,KAAK4tD,oBAAoBt0C,YAAYy1C,MAS/B,YAAAC,wBAAR,SAAgCtrD,EAAaurD,EAAkBC,EAAgBnzB,QAAA,IAAAA,MAAA,GAC7E,IAAMl7B,EAAUmY,SAASC,cAAc,OAKvC,OAJApY,EAAQuY,MAAMiC,OAAY0gB,EAAW/7B,KAAK6B,WAAWE,iBAAgB,KACrElB,EAAQuY,MAAMyY,IAASnuB,EAAM1D,KAAK6B,WAAWE,iBAAgB,KAC7DlB,EAAQuY,MAAMwiB,KAAUqzB,EAAWjvD,KAAK6B,WAAWC,gBAAe,KAClEjB,EAAQuY,MAAM+B,MAAWnb,KAAK6B,WAAWC,iBAAmBotD,EAASD,GAAS,KACvEpuD,GAGF,YAAAkD,aAAP,aAIO,YAAA+V,iBAAP,WAEE9Z,KAAK+1C,oBACL/1C,KAAK6tD,cAGA,YAAAltD,MAAP,WACE,IAAgB,UAAAX,KAAKsrD,aAAL,eAAmB,CAAvB,KACR+B,UAAY,KAIX,YAAAhX,WAAP,SAAkBroC,EAAeC,GAK/B,IAJA,IAAMkhD,EAAkBnvD,KAAKkY,eAAe5U,OAAO8pB,MAAQptB,KAAKkY,eAAe5U,OAAOD,EAChFu6C,EAAUv8C,KAAKiR,IAAItS,KAAKkY,eAAe5U,OAAOoY,EAAG1b,KAAKkY,eAAezX,KAAO,GAC5EikB,EAAc1kB,KAAKmY,gBAAgB3K,QAAQkX,YAExCrhB,EAAI2K,EAAO3K,GAAK4K,EAAK5K,IAAK,CACjC,IAAM+rD,EAAapvD,KAAKsrD,aAAajoD,GACrC+rD,EAAW/B,UAAY,GAEvB,IAAM3pD,EAAML,EAAIrD,KAAKkY,eAAe5U,OAAO+rB,MACrCwL,EAAW76B,KAAKkY,eAAe5U,OAAO6pB,MAAMxuB,IAAI+E,GAChD+gB,EAAczkB,KAAKmY,gBAAgB3K,QAAQiX,YACjD2qC,EAAW91C,YAAYtZ,KAAK8tD,YAAYuB,UAAUx0B,EAAWn3B,IAAQyrD,EAAiB1qC,EAAam5B,EAASl5B,EAAa1kB,KAAK6B,WAAWC,gBAAiB9B,KAAKkY,eAAezX,SAIlL,sBAAY,gCAAiB,C,IAA7B,WACE,MAAO,6BAA4BT,KAAK0tD,gB,gCAGnC,YAAA5zB,wBAAP,SAA+BvsB,GAA2C,OAAQ,GAC3E,YAAAysB,0BAAP,SAAiCC,GAA6B,OAAO,GAE7D,YAAA+zB,aAAR,SAAqBrmD,GACnB3H,KAAKsvD,kBAAkB3nD,EAAEq3C,GAAIr3C,EAAEy3C,GAAIz3C,EAAEs3C,GAAIt3C,EAAEw3C,GAAIx3C,EAAElH,MAAM,IAGjD,YAAAwtD,aAAR,SAAqBtmD,GACnB3H,KAAKsvD,kBAAkB3nD,EAAEq3C,GAAIr3C,EAAEy3C,GAAIz3C,EAAEs3C,GAAIt3C,EAAEw3C,GAAIx3C,EAAElH,MAAM,IAGjD,YAAA6uD,kBAAR,SAA0B5zC,EAAW0jC,EAAY/7C,EAAW87C,EAAY1+C,EAAc8uD,GACpF,KAAO7zC,IAAM0jC,GAAM/7C,IAAM87C,GAAI,CAC3B,IAAMz7C,EAAM1D,KAAKsrD,aAAajoD,GAC9B,IAAKK,EACH,OAEF,IAAM8rD,EAAoB9rD,EAAIqpD,SAASrxC,GACnC8zC,IACFA,EAAKp2C,MAAMq2C,eAAiBF,EAAU,YAAc,UAEhD7zC,GAAKjb,IACTib,EAAI,EACJrY,OA/WKonC,EAAW,GAqBnB,MAAA3/B,kBACA,MAAA1C,iBACA,MAAAR,iBAvBQ6iC,GAAb,CAAiC,EAAA5hC,YAApB,EAAA4hC,e,8RCxBb,WACA,OACA,OAEA,QAGa,EAAA8jB,WAAa,aACb,EAAAmB,UAAY,YACZ,EAAAlB,aAAe,eACf,EAAAmB,gBAAkB,kBAClB,EAAAlB,aAAe,eACf,EAAAE,mBAAqB,qBACrB,EAAAD,yBAA2B,qBAC3B,EAAAE,uBAAyB,mBACzB,EAAAC,6BAA+B,yBAE5C,iBAGE,WACmBnnB,EACAvvB,EACTH,GAFS,KAAA0vB,YACA,KAAAvvB,kBACT,KAAAH,UALF,KAAAqN,UAAsB,IAAI,EAAAlb,SA+KpC,OAtKS,YAAAiQ,UAAP,SAAiBub,GACf31B,KAAKgY,QAAU2d,GAGV,YAAA05B,UAAP,SAAiBx0B,EAAuB+0B,EAAsBnrC,EAAiCm5B,EAAiBl5B,EAAsBypB,EAAmB1tC,GASvJ,IARA,IAAMqnC,EAAW9nC,KAAK0nC,UAAUK,yBAO5B8nB,EAAa,EACRn0C,EAAIra,KAAKiR,IAAIuoB,EAASv4B,OAAQ7B,GAAQ,EAAGib,GAAK,EAAGA,IACxD,GAAImf,EAASta,SAAS7E,EAAG1b,KAAKqlB,WAAW9a,YAAc,EAAAhB,gBAAmBqmD,GAAel0C,IAAMkiC,EAAU,CACvGiS,EAAan0C,EAAI,EACjB,MAIJ,IAASA,EAAI,EAAGA,EAAIm0C,EAAYn0C,IAAK,CACnCmf,EAASta,SAAS7E,EAAG1b,KAAKqlB,WAC1B,IAAMlK,EAAQnb,KAAKqlB,UAAUnf,WAG7B,GAAc,IAAViV,EAAJ,CAIA,IAAM20C,EAAc9vD,KAAK0nC,UAAUzuB,cAAc,QAKjD,GAJIkC,EAAQ,IACV20C,EAAY12C,MAAM+B,MAAWgzB,EAAYhzB,EAAK,MAG5Cy0C,GAAel0C,IAAMkiC,EAOvB,OANAkS,EAAY52C,UAAUC,IAAI,EAAAs1C,cAEtB/pC,GACForC,EAAY52C,UAAUC,IAAI,EAAAw1C,oBAGpBlqC,GACN,IAAK,MACHqrC,EAAY52C,UAAUC,IAAI,EAAAy1C,wBAC1B,MACF,IAAK,YACHkB,EAAY52C,UAAUC,IAAI,EAAA01C,8BAC1B,MACF,QACEiB,EAAY52C,UAAUC,IAAI,EAAAu1C,0BAK5B1uD,KAAKqlB,UAAU5Z,UACjBqkD,EAAY52C,UAAUC,IAAI,EAAAo1C,YAGxBvuD,KAAKqlB,UAAUxZ,YACjBikD,EAAY52C,UAAUC,IAAI,EAAAq1C,cAGxBxuD,KAAKqlB,UAAUvZ,SACjBgkD,EAAY52C,UAAUC,IAAI,EAAAu2C,WAGxB1vD,KAAKqlB,UAAU3Z,eACjBokD,EAAY52C,UAAUC,IAAI,EAAAw2C,iBAGxB3vD,KAAKqlB,UAAUzZ,cACjBkkD,EAAYhhB,YAAc,EAAAtlC,qBAE1BsmD,EAAYhhB,YAAc9uC,KAAKqlB,UAAUpf,YAAc,EAAAuD,qBAGzD,IAAII,EAAK5J,KAAKqlB,UAAU7Y,aACpB6R,EAAcre,KAAKqlB,UAAUtZ,iBAC7BlC,EAAK7J,KAAKqlB,UAAU5Y,aACpB8R,EAAcve,KAAKqlB,UAAUrZ,iBAC3BR,IAAcxL,KAAKqlB,UAAU7Z,YACnC,GAAIA,EAAW,CACb,IAAMgT,EAAO5U,EACbA,EAAKC,EACLA,EAAK2U,EACL,IAAMC,EAAQJ,EACdA,EAAcE,EACdA,EAAcE,EAIhB,OAAQJ,GACN,KAAK,SACL,KAAK,SACCre,KAAKqlB,UAAU5Z,UAAY7B,EAAK,GAAK5J,KAAKmY,gBAAgB3K,QAAQwP,6BACpEpT,GAAM,GAEH5J,KAAK+vD,sBAAsBD,EAAa9vD,KAAKgY,QAAQoE,WAAYpc,KAAKgY,QAAQqF,KAAKzT,KACtFkmD,EAAY52C,UAAUC,IAAI,YAAYvP,GAExC,MACF,KAAK,SACH,IAAM,EAAQ,EAAAiG,KAAKwB,QAChBzH,GAAM,GAAM,IACZA,GAAO,EAAK,IACA,IAAb,GAEG5J,KAAK+vD,sBAAsBD,EAAa9vD,KAAKgY,QAAQoE,WAAY,IACpEpc,KAAKgwD,UAAUF,EAAa,UAAUG,EAASrmD,EAAGmG,SAAS,IAAK,IAAK,IAEvE,MACF,KAAK,EACL,QACO/P,KAAK+vD,sBAAsBD,EAAa9vD,KAAKgY,QAAQoE,WAAYpc,KAAKgY,QAAQsF,aAC7E9R,GACFskD,EAAY52C,UAAUC,IAAI,YAAY,EAAA3J,wBAM9C,OAAQ+O,GACN,KAAK,SACL,KAAK,SACHuxC,EAAY52C,UAAUC,IAAI,YAAYtP,GACtC,MACF,KAAK,SACH7J,KAAKgwD,UAAUF,EAAa,qBAAqBG,EAASpmD,EAAGkG,SAAS,IAAK,IAAK,IAChF,MACF,KAAK,EACL,QACMvE,GACFskD,EAAY52C,UAAUC,IAAI,YAAY,EAAA3J,wBAI5Cs4B,EAASxuB,YAAYw2C,IAEvB,OAAOhoB,GAGD,YAAAioB,sBAAR,SAA8BlvD,EAAsBgJ,EAAYD,GAC9D,GAA0D,IAAtD5J,KAAKmY,gBAAgB3K,QAAQwQ,qBAC/B,OAAO,EAIT,IAAIC,EAAgBje,KAAKgY,QAAQkG,cAAcC,SAASne,KAAKqlB,UAAUxb,GAAI7J,KAAKqlB,UAAUzb,IAQ1F,YALsBvF,IAAlB4Z,IACFA,EAAgB,EAAAzN,MAAMW,oBAAoBtH,EAAID,EAAI5J,KAAKmY,gBAAgB3K,QAAQwQ,sBAC/Ehe,KAAKgY,QAAQkG,cAAcU,SAAS5e,KAAKqlB,UAAUxb,GAAI7J,KAAKqlB,UAAUzb,GAAIqU,UAAiB,SAGzFA,IACFje,KAAKgwD,UAAUnvD,EAAS,SAASod,EAAcvN,MACxC,IAMH,YAAAs/C,UAAR,SAAkBnvD,EAAsBuY,GACtCvY,EAAQgnC,aAAa,QAAS,IAAGhnC,EAAQ4rD,aAAa,UAAY,IAAKrzC,EAAK,MAEhF,EAhLA,GAkLA,SAAS62C,EAASn1B,EAAco1B,EAAiB5tD,GAC/C,KAAOw4B,EAAKx4B,OAASA,GACnBw4B,EAAOo1B,EAAUp1B,EAEnB,OAAOA,EAtLI,EAAAizB,yB,6GChBb,YAGMoC,EAA2D,CAE/DC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KAGVC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,KAAM,KACZC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAM,MAGd,iCACEhsB,EACAisB,EACAt+C,EACAk6B,GAEA,IAAMlqC,EAA0B,CAC9BmK,KAAM,EAGNs+B,QAAQ,EAERvsC,SAAKgF,GAEDqtD,GAAalsB,EAAG6F,SAAW,EAAI,IAAM7F,EAAG4F,OAAS,EAAI,IAAM5F,EAAG2F,QAAU,EAAI,IAAM3F,EAAGkI,QAAU,EAAI,GACzG,OAAQlI,EAAGmI,SACT,KAAK,EACY,sBAAXnI,EAAGnmC,IAEH8D,EAAO9D,IADLoyD,EACW,EAAAj+C,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAGN,wBAAXowB,EAAGnmC,IAER8D,EAAO9D,IADLoyD,EACW,EAAAj+C,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAGN,yBAAXowB,EAAGnmC,IAER8D,EAAO9D,IADLoyD,EACW,EAAAj+C,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAGN,wBAAXowB,EAAGnmC,MAER8D,EAAO9D,IADLoyD,EACW,EAAAj+C,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,MAG1B,MACF,KAAK,EAEH,GAAIowB,EAAG6F,SAAU,CACfloC,EAAO9D,IAAM,EAAAmU,GAAGS,GAChB,MACK,GAAIuxB,EAAG4F,OAAQ,CACpBjoC,EAAO9D,IAAM,EAAAmU,GAAG4B,IAAM,EAAA5B,GAAGkC,IACzB,MAEFvS,EAAO9D,IAAM,EAAAmU,GAAGkC,IAChB,MACF,KAAK,EAEH,GAAI8vB,EAAG6F,SAAU,CACfloC,EAAO9D,IAAM,EAAAmU,GAAG4B,IAAM,KACtB,MAEFjS,EAAO9D,IAAM,EAAAmU,GAAGU,GAChB/Q,EAAOyoC,QAAS,EAChB,MACF,KAAK,GAEHzoC,EAAO9D,IAAMmmC,EAAG4F,OAAS,EAAA53B,GAAG4B,IAAM,EAAA5B,GAAGc,GAAK,EAAAd,GAAGc,GAC7CnR,EAAOyoC,QAAS,EAChB,MACF,KAAK,GAEHzoC,EAAO9D,IAAM,EAAAmU,GAAG4B,IACZowB,EAAG4F,SACLjoC,EAAO9D,IAAM,EAAAmU,GAAG4B,IAAM,EAAA5B,GAAG4B,KAE3BjS,EAAOyoC,QAAS,EAChB,MACF,KAAK,GAEH,GAAIpG,EAAGkI,QACL,MAEEgkB,GACFvuD,EAAO9D,IAAM,EAAAmU,GAAG4B,IAAM,OAASs8C,EAAY,GAAK,IAI5CvuD,EAAO9D,MAAQ,EAAAmU,GAAG4B,IAAM,UAC1BjS,EAAO9D,IAAM,EAAAmU,GAAG4B,KAAOjC,EAAQ,IAAM,WAGvChQ,EAAO9D,IADEoyD,EACI,EAAAj+C,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAExB,MACF,KAAK,GAEH,GAAIowB,EAAGkI,QACL,MAEEgkB,GACFvuD,EAAO9D,IAAM,EAAAmU,GAAG4B,IAAM,OAASs8C,EAAY,GAAK,IAI5CvuD,EAAO9D,MAAQ,EAAAmU,GAAG4B,IAAM,UAC1BjS,EAAO9D,IAAM,EAAAmU,GAAG4B,KAAOjC,EAAQ,IAAM,WAGvChQ,EAAO9D,IADEoyD,EACI,EAAAj+C,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAExB,MACF,KAAK,GAEH,GAAIowB,EAAGkI,QACL,MAEEgkB,GACFvuD,EAAO9D,IAAM,EAAAmU,GAAG4B,IAAM,OAASs8C,EAAY,GAAK,IAI3Cv+C,GAAShQ,EAAO9D,MAAQ,EAAAmU,GAAG4B,IAAM,UACpCjS,EAAO9D,IAAM,EAAAmU,GAAG4B,IAAM,UAGxBjS,EAAO9D,IADEoyD,EACI,EAAAj+C,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAExB,MACF,KAAK,GAEH,GAAIowB,EAAGkI,QACL,MAEEgkB,GACFvuD,EAAO9D,IAAM,EAAAmU,GAAG4B,IAAM,OAASs8C,EAAY,GAAK,IAI3Cv+C,GAAShQ,EAAO9D,MAAQ,EAAAmU,GAAG4B,IAAM,UACpCjS,EAAO9D,IAAM,EAAAmU,GAAG4B,IAAM,UAGxBjS,EAAO9D,IADEoyD,EACI,EAAAj+C,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAExB,MACF,KAAK,GAEEowB,EAAG6F,UAAa7F,EAAG2F,UAGtBhoC,EAAO9D,IAAM,EAAAmU,GAAG4B,IAAM,OAExB,MACF,KAAK,GAGDjS,EAAO9D,IADLqyD,EACW,EAAAl+C,GAAG4B,IAAM,OAASs8C,EAAY,GAAK,IAEnC,EAAAl+C,GAAG4B,IAAM,MAExB,MACF,KAAK,GAGDjS,EAAO9D,IADLqyD,EACW,EAAAl+C,GAAG4B,IAAM,OAASs8C,EAAY,GAAK,IACvCD,EACI,EAAAj+C,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAExB,MACF,KAAK,GAGDjS,EAAO9D,IADLqyD,EACW,EAAAl+C,GAAG4B,IAAM,OAASs8C,EAAY,GAAK,IACvCD,EACI,EAAAj+C,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAExB,MACF,KAAK,GAECowB,EAAG6F,SACLloC,EAAOmK,KAAO,EAEdnK,EAAO9D,IAAM,EAAAmU,GAAG4B,IAAM,MAExB,MACF,KAAK,GAECowB,EAAG6F,SACLloC,EAAOmK,KAAO,EAEdnK,EAAO9D,IAAM,EAAAmU,GAAG4B,IAAM,MAExB,MACF,KAAK,IAGDjS,EAAO9D,IADLqyD,EACW,EAAAl+C,GAAG4B,IAAM,OAASs8C,EAAY,GAAK,IAEnC,EAAAl+C,GAAG4B,IAAM,KAExB,MACF,KAAK,IAEDjS,EAAO9D,IADLqyD,EACW,EAAAl+C,GAAG4B,IAAM,OAASs8C,EAAY,GAAK,IAEnC,EAAAl+C,GAAG4B,IAAM,KAExB,MACF,KAAK,IAEDjS,EAAO9D,IADLqyD,EACW,EAAAl+C,GAAG4B,IAAM,OAASs8C,EAAY,GAAK,IAEnC,EAAAl+C,GAAG4B,IAAM,KAExB,MACF,KAAK,IAEDjS,EAAO9D,IADLqyD,EACW,EAAAl+C,GAAG4B,IAAM,OAASs8C,EAAY,GAAK,IAEnC,EAAAl+C,GAAG4B,IAAM,KAExB,MACF,KAAK,IAEDjS,EAAO9D,IADLqyD,EACW,EAAAl+C,GAAG4B,IAAM,QAAUs8C,EAAY,GAAK,IAEpC,EAAAl+C,GAAG4B,IAAM,OAExB,MACF,KAAK,IAEDjS,EAAO9D,IADLqyD,EACW,EAAAl+C,GAAG4B,IAAM,QAAUs8C,EAAY,GAAK,IAEpC,EAAAl+C,GAAG4B,IAAM,OAExB,MACF,KAAK,IAEDjS,EAAO9D,IADLqyD,EACW,EAAAl+C,GAAG4B,IAAM,QAAUs8C,EAAY,GAAK,IAEpC,EAAAl+C,GAAG4B,IAAM,OAExB,MACF,KAAK,IAEDjS,EAAO9D,IADLqyD,EACW,EAAAl+C,GAAG4B,IAAM,QAAUs8C,EAAY,GAAK,IAEpC,EAAAl+C,GAAG4B,IAAM,OAExB,MACF,KAAK,IAEDjS,EAAO9D,IADLqyD,EACW,EAAAl+C,GAAG4B,IAAM,QAAUs8C,EAAY,GAAK,IAEpC,EAAAl+C,GAAG4B,IAAM,OAExB,MACF,KAAK,IAEDjS,EAAO9D,IADLqyD,EACW,EAAAl+C,GAAG4B,IAAM,QAAUs8C,EAAY,GAAK,IAEpC,EAAAl+C,GAAG4B,IAAM,OAExB,MACF,KAAK,IAEDjS,EAAO9D,IADLqyD,EACW,EAAAl+C,GAAG4B,IAAM,QAAUs8C,EAAY,GAAK,IAEpC,EAAAl+C,GAAG4B,IAAM,OAExB,MACF,KAAK,IAEDjS,EAAO9D,IADLqyD,EACW,EAAAl+C,GAAG4B,IAAM,QAAUs8C,EAAY,GAAK,IAEpC,EAAAl+C,GAAG4B,IAAM,OAExB,MACF,QAEE,IAAIowB,EAAG2F,SAAY3F,EAAG6F,UAAa7F,EAAG4F,QAAW5F,EAAGkI,QAiB7C,GAAMv6B,IAASk6B,IAAoB7H,EAAG4F,QAAW5F,EAAGkI,QAUhDv6B,IAAUqyB,EAAG4F,SAAW5F,EAAG2F,SAAW3F,EAAGkI,QAC/B,KAAflI,EAAGmI,UACLxqC,EAAOmK,KAAO,GAEPk4B,EAAGnmC,MAAQmmC,EAAG2F,UAAY3F,EAAG4F,SAAW5F,EAAGkI,SAAWlI,EAAGmI,SAAW,IAAwB,IAAlBnI,EAAGnmC,IAAIiD,OAE1Fa,EAAO9D,IAAMmmC,EAAGnmC,IACPmmC,EAAGnmC,KAAOmmC,EAAG2F,SACP,MAAX3F,EAAGnmC,MACL8D,EAAO9D,IAAM,EAAAmU,GAAGgC,QAnBgD,CAElE,IAAMm8C,EAAaxB,EAAqB3qB,EAAGmI,SACrCtuC,EAAMsyD,GAAcA,EAAYnsB,EAAG6F,SAAe,EAAJ,GACpD,GAAIhsC,EACF8D,EAAO9D,IAAM,EAAAmU,GAAG4B,IAAM/V,OACjB,GAAImmC,EAAGmI,SAAW,IAAMnI,EAAGmI,SAAW,GAAI,CAC/C,IAAMA,EAAUnI,EAAG2F,QAAU3F,EAAGmI,QAAU,GAAKnI,EAAGmI,QAAU,GAC5DxqC,EAAO9D,IAAM,EAAAmU,GAAG4B,IAAMvH,OAAOC,aAAa6/B,SAxBxCnI,EAAGmI,SAAW,IAAMnI,EAAGmI,SAAW,GACpCxqC,EAAO9D,IAAMwO,OAAOC,aAAa03B,EAAGmI,QAAU,IACtB,KAAfnI,EAAGmI,QACZxqC,EAAO9D,IAAM,EAAAmU,GAAGC,IACP+xB,EAAGmI,SAAW,IAAMnI,EAAGmI,SAAW,GAE3CxqC,EAAO9D,IAAMwO,OAAOC,aAAa03B,EAAGmI,QAAU,GAAK,IAC3B,KAAfnI,EAAGmI,QACZxqC,EAAO9D,IAAM,EAAAmU,GAAGkC,IACQ,MAAf8vB,EAAGmI,QACZxqC,EAAO9D,IAAM,EAAAmU,GAAG4B,IACQ,MAAfowB,EAAGmI,QACZxqC,EAAO9D,IAAM,EAAAmU,GAAG6B,GACQ,MAAfmwB,EAAGmI,UACZxqC,EAAO9D,IAAM,EAAAmU,GAAG8B,IA2BxB,OAAOnS,I,s1BC/WT,YACA,OACA,OACA,QACA,OAEA,OACA,OAQA,cA2BE,WACUyuD,EACAn1B,EACRqK,EACiB5I,EACC2zB,EACFpb,GANlB,MAQE,cAAO,KAwBP,GA/BQ,EAAAmb,YACA,EAAAn1B,YAvBF,EAAAq1B,WAAqB,EACrB,EAAAC,mBAA6B,EAC7B,EAAAC,yBAAmC,EACnC,EAAAC,wBAAkC,EAClC,EAAAC,aAAuB,EACvB,EAAAC,cAAwB,EACxB,EAAAC,gBAAmC,CACzCpkD,WAAO3J,EACP4J,SAAK5J,EACL8V,kBAAkB,GAGZ,EAAAk4C,oBAAsB,IAAI,EAAA7qD,aAE1B,EAAAy7B,UAAY,IAAI,EAAAz7B,aAEhB,EAAA8qD,kBAAoB,IAAI,EAAA9qD,aAe9B,EAAKgB,SAAS,CAAEtI,QAAS,WAAM,SAAK0xD,UAAU1xD,aAE9C,EAAKqyD,iBAAmB,IAAI,EAAAz1B,iBAAgB,SAAC9uB,EAAOC,GAAQ,SAAK49C,YAAY79C,EAAOC,MACpF,EAAKzF,SAAS,EAAK+pD,kBAEnB,EAAKjG,kBAAoB,IAAI,EAAA7uB,iBAC7B,EAAK6uB,kBAAkBtvB,aAAY,WAAM,SAAKiZ,8BAC9C,EAAKztC,SAAS,EAAK8jD,mBAEnB,EAAK9jD,SAASiuC,EAAcvyC,UAAS,SAAAyD,GAAK,SAAK6qD,mBAC/C,EAAKhqD,SAAS01B,EAAe0K,gBAAe,WAAM,SAAKgpB,UAAU93C,uBACjE,EAAKtR,SAASqpD,EAAgBY,kBAAiB,WAAM,SAAKvc,wBAG1D,EAAK0b,UAAUhoB,iBAAgB,SAAAjiC,GAAK,SAAKglC,YAAYhlC,EAAEqG,MAAOrG,EAAEsG,KAAK,MAIrE,EAAKzF,SAAS,EAAA+9B,yBAAyB7oC,OAAQ,UAAU,WAAM,SAAKu4C,+BAIhE,yBAA0Bv4C,OAAQ,CACpC,IAAM,EAAW,IAAIg1D,sBAAqB,SAAA/qD,GAAK,SAAKgrD,sBAAsBhrD,EAAEA,EAAErF,OAAS,MAAK,CAAEswD,UAAW,IACzG,EAASC,QAAQ/rB,GACjB,EAAKt+B,SAAS,CAAEtI,QAAS,WAAM,SAAS4yD,gB,SAmI9C,OAjMmC,OAmBjC,sBAAW,iCAAkB,C,IAA7B,WAA6D,OAAO9yD,KAAKqyD,oBAAoBlmC,O,gCAE7F,sBAAW,qCAAsB,C,IAAjC,WAA8E,OAAOnsB,KAAKijC,UAAU9W,O,gCAEpG,sBAAW,+BAAgB,C,IAA3B,WAAwE,OAAOnsB,KAAKsyD,kBAAkBnmC,O,gCAEtG,sBAAW,yBAAU,C,IAArB,WAA6C,OAAOnsB,KAAK4xD,UAAU/vD,Y,gCAyC3D,YAAA8wD,sBAAR,SAA8B58B,GAC5B/1B,KAAK8xD,UAAwC,IAA5B/7B,EAAMg9B,mBAClB/yD,KAAK8xD,WAAa9xD,KAAK+xD,oBAC1B/xD,KAAK2sC,YAAY,EAAG3sC,KAAKy8B,UAAY,GACrCz8B,KAAK+xD,mBAAoB,IAItB,YAAAplB,YAAP,SAAmB3+B,EAAeC,EAAa+kD,QAAA,IAAAA,OAAA,GACzChzD,KAAK8xD,UACP9xD,KAAK+xD,mBAAoB,GAGtBiB,IACHhzD,KAAKgyD,yBAA0B,GAEjChyD,KAAKuyD,iBAAiBj2B,QAAQtuB,EAAOC,EAAKjO,KAAKy8B,aAGzC,YAAAovB,YAAR,SAAoB79C,EAAeC,GACjCjO,KAAK4xD,UAAUvb,WAAWroC,EAAOC,GAG7BjO,KAAKiyD,yBACPjyD,KAAK4xD,UAAU13C,mBAAmBla,KAAKoyD,gBAAgBpkD,MAAOhO,KAAKoyD,gBAAgBnkD,IAAKjO,KAAKoyD,gBAAgBj4C,kBAC7Gna,KAAKiyD,wBAAyB,GAI3BjyD,KAAKgyD,yBACRhyD,KAAKijC,UAAU77B,KAAK,CAAE4G,MAAK,EAAEC,IAAG,IAElCjO,KAAKgyD,yBAA0B,GAG1B,YAAApxD,OAAP,SAAcH,EAAcD,GAC1BR,KAAKy8B,UAAYj8B,EACjBR,KAAKizD,uBAGA,YAAAC,cAAP,WACElzD,KAAK4xD,UAAU93C,mBACf9Z,KAAK2sC,YAAY,EAAG3sC,KAAKy8B,UAAY,GACrCz8B,KAAKizD,uBAGC,YAAAA,oBAAR,WAEMjzD,KAAK4xD,UAAU/vD,WAAW0Z,cAAgBvb,KAAKkyD,cAAgBlyD,KAAK4xD,UAAU/vD,WAAW2Z,eAAiBxb,KAAKmyD,eAGnHnyD,KAAKqyD,oBAAoBjrD,KAAKpH,KAAK4xD,UAAU/vD,aAGxC,YAAA3B,QAAP,WACE,YAAMA,QAAO,YAGR,YAAA8kC,YAAP,SAAmB6D,GAAnB,WAEE7oC,KAAK4xD,UAAU1xD,UACfF,KAAK4xD,UAAY/oB,EACjB7oC,KAAK4xD,UAAUhoB,iBAAgB,SAAAjiC,GAAK,SAAKglC,YAAYhlC,EAAEqG,MAAOrG,EAAEsG,KAAK,MAGrEjO,KAAKiyD,wBAAyB,EAC9BjyD,KAAKwyD,gBAGC,YAAAA,aAAR,WACMxyD,KAAK8xD,UACP9xD,KAAK+xD,mBAAoB,EAEzB/xD,KAAK2sC,YAAY,EAAG3sC,KAAKy8B,UAAY,IAIlC,YAAAriB,UAAP,SAAiBub,GACf31B,KAAK4xD,UAAUx3C,UAAUub,GACzB31B,KAAKwyD,gBAGA,YAAAvc,yBAAP,WACEj2C,KAAK4xD,UAAU3b,2BACfj2C,KAAK2sC,YAAY,EAAG3sC,KAAKy8B,UAAY,IAGhC,YAAAv4B,SAAP,SAAgBzD,EAAcD,GAC5BR,KAAK4xD,UAAU1tD,SAASzD,EAAMD,GAC9BR,KAAKwyD,gBAIA,YAAAtc,kBAAP,WACEl2C,KAAK4xD,UAAU1b,qBAGV,YAAAn8B,OAAP,WACE/Z,KAAK4xD,UAAU73C,UAGV,YAAAC,QAAP,WACEha,KAAK4xD,UAAU53C,WAGV,YAAAE,mBAAP,SAA0BlM,EAAqCC,EAAmCkM,GAChGna,KAAKoyD,gBAAgBpkD,MAAQA,EAC7BhO,KAAKoyD,gBAAgBnkD,IAAMA,EAC3BjO,KAAKoyD,gBAAgBj4C,iBAAmBA,EACxCna,KAAK4xD,UAAU13C,mBAAmBlM,EAAOC,EAAKkM,IAGzC,YAAApW,aAAP,WACE/D,KAAK4xD,UAAU7tD,gBAGV,YAAApD,MAAP,WACEX,KAAK4xD,UAAUjxD,SAGV,YAAAm5B,wBAAP,SAA+BvsB,GAC7B,OAAOvN,KAAK4xD,UAAU93B,wBAAwBvsB,IAGzC,YAAAysB,0BAAP,SAAiCC,GAC/B,OAAOj6B,KAAK4xD,UAAU53B,0BAA0BC,IA/LvC6O,EAAa,GA+BrB,MAAA1gC,iBACA,MAAA0C,kBACA,MAAAlD,iBAjCQkhC,GAAb,CAAmC,EAAAjgC,YAAtB,EAAAigC,iB,4gBChBb,WACA,OAGA,aAYE,WACE9vB,EACAlY,EACkCqX,GAAA,KAAAA,kBAZ7B,KAAAgD,MAAgB,EAChB,KAAAE,OAAiB,EAKhB,KAAA83C,kBAAoB,IAAI,EAAA3rD,aAQ9BxH,KAAKozD,iBAAmB,IAAIC,EAAmBr6C,EAAUlY,EAAed,KAAKmY,iBAWjF,OArBE,sBAAW,2BAAY,C,IAAvB,WAAqC,OAAOnY,KAAKmb,MAAQ,GAAKnb,KAAKqb,OAAS,G,gCAG5E,sBAAW,+BAAgB,C,IAA3B,WAA8C,OAAOrb,KAAKmzD,kBAAkBhnC,O,gCAUrE,YAAA4Y,QAAP,WACE,IAAM5hC,EAASnD,KAAKozD,iBAAiBruB,UACjC5hC,EAAOgY,QAAUnb,KAAKmb,OAAShY,EAAOkY,SAAWrb,KAAKqb,SACxDrb,KAAKmb,MAAQhY,EAAOgY,MACpBnb,KAAKqb,OAASlY,EAAOkY,OACrBrb,KAAKmzD,kBAAkB/rD,SAzBhBmhC,EAAe,GAevB,MAAAngC,kBAfQmgC,GAAb,GAAa,EAAAA,kBA6Cb,iBAIE,WACUb,EACA4rB,EACAn7C,GAFA,KAAAuvB,YACA,KAAA4rB,iBACA,KAAAn7C,kBANF,KAAAo7C,QAA0B,CAAEp4C,MAAO,EAAGE,OAAQ,GAQpDrb,KAAKwzD,gBAAkBxzD,KAAK0nC,UAAUzuB,cAAc,QACpDjZ,KAAKwzD,gBAAgBt6C,UAAUC,IAAI,8BACnCnZ,KAAKwzD,gBAAgB1kB,YAAc,IACnC9uC,KAAKwzD,gBAAgB3rB,aAAa,cAAe,QACjD7nC,KAAKszD,eAAeh6C,YAAYtZ,KAAKwzD,iBAmBzC,OAhBS,YAAAzuB,QAAP,WACE/kC,KAAKwzD,gBAAgBp6C,MAAM2E,WAAa/d,KAAKmY,gBAAgB3K,QAAQuQ,WACrE/d,KAAKwzD,gBAAgBp6C,MAAM0E,SAAc9d,KAAKmY,gBAAgB3K,QAAQsQ,SAAQ,KAG9E,IAAM21C,EAAWzzD,KAAKwzD,gBAAgB93B,wBAStC,OALuB,IAAnB+3B,EAASt4C,OAAmC,IAApBs4C,EAASp4C,SACnCrb,KAAKuzD,QAAQp4C,MAAQs4C,EAASt4C,MAC9Bnb,KAAKuzD,QAAQl4C,OAASha,KAAK+Q,KAAKqhD,EAASp4C,SAGpCrb,KAAKuzD,SAEhB,EAhCA,I,ygBCjDA,WACA,QAEA,aAGE,WACmC7yD,EACEokC,GADF,KAAApkC,iBACE,KAAAokC,mBAqBvC,OAjBS,YAAAqf,UAAP,SAAiBh4B,EAA2CtrB,EAAsBi7B,EAAkBC,EAAkBE,GACpH,OAAO,EAAAkoB,UACLh4B,EACAtrB,EACAi7B,EACAC,EACA/7B,KAAK8kC,iBAAiBmJ,aACtBjuC,KAAKU,eAAemB,WAAWC,gBAC/B9B,KAAKU,eAAemB,WAAWE,iBAC/Bk6B,IAIG,YAAA4O,iBAAP,SAAwB1e,EAAmBtrB,EAAsBi7B,EAAkBC,GACjF,IAAMG,EAASl8B,KAAKmkD,UAAUh4B,EAAOtrB,EAASi7B,EAAUC,GACxD,OAAO,EAAA8O,iBAAiB3O,IAxBfiN,EAAY,GAIpB,MAAAl+B,gBACA,MAAAH,mBALQq+B,GAAb,GAAa,EAAAA,gB,m1BCAb,WACA,OACA,OACA,OAYA,cAkBE,WACmCjxB,GADnC,MAGE,cAAO,K,OAF0B,EAAAA,iBAf3B,EAAAw7C,eAAkC,GAGlC,EAAAC,sBAAuC,GAEvC,EAAAC,aAAuB,EAEvB,EAAAC,aAAuB,EAEvB,EAAAjV,qBAAuB,EAAKp2C,SAAS,IAAI,EAAAhB,cAEzC,EAAAs3C,qBAAuB,EAAKt2C,SAAS,IAAI,EAAAhB,cAO/C,EAAKgB,SAAS,EAAAsrD,0BAA0B,EAAKH,wB,EA4VjD,OAlXgC,OAc9B,sBAAW,kCAAmB,C,IAA9B,WAA4D,OAAO3zD,KAAK4+C,qBAAqBzyB,O,gCAE7F,sBAAW,kCAAmB,C,IAA9B,WAA4D,OAAOnsB,KAAK8+C,qBAAqB3yB,O,gCAStF,YAAAyT,qBAAP,SAA4BC,GAA5B,WAEE,OADA7/B,KAAK0zD,eAAexsD,KAAK24B,GAClB,CACL3/B,QAAS,WAEP,IAAM6zD,EAAgB,EAAKL,eAAejvD,QAAQo7B,IAE3B,IAAnBk0B,GACF,EAAKL,eAAevsD,OAAO4sD,EAAe,MAM3C,YAAA9pB,YAAP,SAAmBppC,EAAsBmzD,EAA6BC,GAAtE,WACEj0D,KAAK2/C,SAAW9+C,EAChBb,KAAKkpC,cAAgB8qB,EACrBh0D,KAAKU,eAAiBuzD,EAEtBj0D,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAK2/C,SAAU,cAAc,WAClE,EAAKiU,aAAc,EACnB,EAAK7U,wBAEP/+C,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAK2/C,SAAU,YAAa3/C,KAAK6iD,aAAavjD,KAAKU,QAC1FA,KAAKwI,SAAS,EAAA+9B,yBAAyBvmC,KAAK2/C,SAAU,QAAS3/C,KAAKoqD,SAAS9qD,KAAKU,SAG5E,YAAA6iD,aAAR,SAAqB12B,GAGnB,GAFAnsB,KAAKk0D,gBAAkB/nC,EAElBnsB,KAAK2/C,UAAa3/C,KAAKkpC,cAA5B,CAIA,IAAM+L,EAAWj1C,KAAKm0D,wBAAwBhoC,EAAOnsB,KAAK2/C,SAAU3/C,KAAKkpC,eACzE,GAAK+L,EAAL,CAGAj1C,KAAK4zD,aAAc,EAInB,IADA,IAAMQ,EAAejoC,EAAMioC,eAClBt2D,EAAI,EAAGA,EAAIs2D,EAAa9xD,OAAQxE,IAAK,CAC5C,IAAMwQ,EAAS8lD,EAAat2D,GAE5B,GAAIwQ,EAAO4K,UAAUrG,SAAS,SAC5B,MAGF,GAAIvE,EAAO4K,UAAUrG,SAAS,eAC5B,OAIC7S,KAAKq0D,iBAAoBpf,EAASv5B,IAAM1b,KAAKq0D,gBAAgB34C,GAAKu5B,EAAS5xC,IAAMrD,KAAKq0D,gBAAgBhxD,IACzGrD,KAAK0qD,SAASzV,GACdj1C,KAAKq0D,gBAAkBpf,MAInB,YAAAyV,SAAR,SAAiBzV,GAGf,GAAIj1C,KAAK6zD,cAAgB5e,EAAS5xC,EAGhC,OAFArD,KAAK++C,yBACL/+C,KAAKs0D,YAAYrf,GAAU,GAKGj1C,KAAKu0D,cAAgBv0D,KAAKw0D,gBAAgBx0D,KAAKu0D,aAAaE,KAAMxf,KAEhGj1C,KAAK++C,oBACL/+C,KAAKs0D,YAAYrf,GAAU,KAIvB,YAAAqf,YAAR,SAAoBrf,EAA+Byf,GAAnD,WACO10D,KAAK20D,wBAA2BD,IACnC10D,KAAK20D,uBAAyB,IAAI11C,IAClCjf,KAAK6zD,YAAc5e,EAAS5xC,GAE9B,IAAIuxD,GAAe,EAGnB50D,KAAK0zD,eAAe5E,SAAQ,SAACjvB,EAAc/hC,G,MACrC42D,GAC+C,QAA9B,EAAG,EAAKC,8BAAsB,eAAEh2D,IAAIb,MAOrD82D,EAAe,EAAKC,yBAAyB/2D,EAAGm3C,EAAU2f,IAG5D/0B,EAAai1B,aAAa7f,EAAS5xC,GAAG,SAAC0xD,G,QACrC,IAAI,EAAKnB,YAAT,CAGA,IAAMoB,EAA+CD,aAAK,EAALA,EAAO17B,KAAI,SAAAo7B,GAAS,OAAGA,KAAI,MACrD,QAA3B,IAAKE,8BAAsB,SAAEr1C,IAAIxhB,EAAGk3D,GACpCJ,EAAe,EAAKC,yBAAyB/2D,EAAGm3C,EAAU2f,IAI3B,QAA3B,IAAKD,8BAAsB,eAAEpmD,QAAS,EAAKmlD,eAAepxD,QAC5D,EAAK2yD,yBAAyBhgB,EAAS5xC,EAAG,EAAKsxD,gCAOjD,YAAAM,yBAAR,SAAiC5xD,EAAW6xD,GAE1C,IADA,IAAMC,EAAgB,IAAIC,IACjBt3D,EAAI,EAAGA,EAAIo3D,EAAQ3mD,KAAMzQ,IAAK,CACrC,IAAMu3D,EAAgBH,EAAQv2D,IAAIb,GAClC,GAAKu3D,EAGL,IAAK,IAAI,EAAI,EAAG,EAAIA,EAAc/yD,OAAQ,IAIxC,IAHA,IAAMgzD,EAAgBD,EAAc,GAC9B9d,EAAS+d,EAAcb,KAAKj5B,MAAMxtB,MAAM3K,EAAIA,EAAI,EAAIiyD,EAAcb,KAAKj5B,MAAMxtB,MAAM0N,EACnF65C,EAAOD,EAAcb,KAAKj5B,MAAMvtB,IAAI5K,EAAIA,EAAIrD,KAAKkY,eAAezX,KAAO60D,EAAcb,KAAKj5B,MAAMvtB,IAAIyN,EACjGA,EAAI67B,EAAQ77B,GAAK65C,EAAM75C,IAAK,CACnC,GAAIy5C,EAAch2C,IAAIzD,GAAI,CACxB25C,EAAcluD,OAAO,IAAK,GAC1B,MAEFguD,EAAch8C,IAAIuC,MAMlB,YAAAm5C,yBAAR,SAAiCnsD,EAAeusC,EAA+B2f,GAA/E,I,EAAA,OACE,IAAK50D,KAAK20D,uBACR,OAAOC,EAOT,IAJA,IAAMG,EAAQ/0D,KAAK20D,uBAAuBh2D,IAAI+J,GAG1C8sD,GAAgB,EACXtmC,EAAI,EAAGA,EAAIxmB,EAAOwmB,IACpBlvB,KAAK20D,uBAAuBx1C,IAAI+P,KAAMlvB,KAAK20D,uBAAuBh2D,IAAIuwB,KACzEsmC,GAAgB,GAMpB,IAAKA,GAAiBT,EAAO,CAC3B,IAAMU,EAAiBV,EAAMW,MAAK,SAAAjB,GAAQ,SAAKD,gBAAgBC,EAAKA,KAAMxf,MACtEwgB,IACFb,GAAe,EACf50D,KAAK21D,eAAeF,IAKxB,GAAIz1D,KAAK20D,uBAAuBpmD,OAASvO,KAAK0zD,eAAepxD,SAAWsyD,EAEtE,IAAS1lC,EAAI,EAAGA,EAAIlvB,KAAK20D,uBAAuBpmD,KAAM2gB,IAAK,CACzD,IAAM0mC,EAAgD,QAArC,EAAG51D,KAAK20D,uBAAuBh2D,IAAIuwB,UAAE,eAAEwmC,MAAK,SAAAjB,GAAQ,SAAKD,gBAAgBC,EAAKA,KAAMxf,MACrG,GAAI2gB,EAAa,CACfhB,GAAe,EACf50D,KAAK21D,eAAeC,GACpB,OAKN,OAAOhB,GAGD,YAAAxK,SAAR,SAAiBj+B,GACf,GAAKnsB,KAAK2/C,UAAa3/C,KAAKkpC,eAAkBlpC,KAAKu0D,aAAnD,CAIA,IAAMtf,EAAWj1C,KAAKm0D,wBAAwBhoC,EAAOnsB,KAAK2/C,SAAU3/C,KAAKkpC,eAEpE+L,GAIDj1C,KAAKw0D,gBAAgBx0D,KAAKu0D,aAAaE,KAAMxf,IAC/Cj1C,KAAKu0D,aAAaE,KAAK30D,SAASqsB,EAAOnsB,KAAKu0D,aAAaE,KAAK35B,QAI1D,YAAAikB,kBAAR,SAA0Br8C,EAAmBI,GACtC9C,KAAK2/C,UAAa3/C,KAAKu0D,cAAiBv0D,KAAKk0D,mBAK7CxxD,IAAaI,GAAW9C,KAAKu0D,aAAaE,KAAKj5B,MAAMxtB,MAAM3K,GAAKX,GAAY1C,KAAKu0D,aAAaE,KAAKj5B,MAAMvtB,IAAI5K,GAAKP,KACrH9C,KAAK61D,WAAW71D,KAAK2/C,SAAU3/C,KAAKu0D,aAAaE,KAAMz0D,KAAKk0D,iBAC5Dl0D,KAAKu0D,kBAAelwD,EACpB,EAAAsE,aAAa3I,KAAK2zD,yBAId,YAAAgC,eAAR,SAAuBL,GAAvB,WACE,GAAKt1D,KAAK2/C,UAAa3/C,KAAKk0D,iBAAoBl0D,KAAKkpC,cAArD,CAIA,IAAM+L,EAAWj1C,KAAKm0D,wBAAwBn0D,KAAKk0D,gBAAiBl0D,KAAK2/C,SAAU3/C,KAAKkpC,eAEnF+L,GAKDj1C,KAAKw0D,gBAAgBc,EAAcb,KAAMxf,KAC3Cj1C,KAAKu0D,aAAee,EACpBt1D,KAAKu0D,aAAaxoC,MAAQ,CACxB+pC,YAAa,CACXC,eAA8C1xD,IAAnCixD,EAAcb,KAAKqB,aAAmCR,EAAcb,KAAKqB,YAAYC,UAChGC,mBAAkD3xD,IAAnCixD,EAAcb,KAAKqB,aAAmCR,EAAcb,KAAKqB,YAAYE,eAEtGC,WAAW,GAEbj2D,KAAKk2D,WAAWl2D,KAAK2/C,SAAU2V,EAAcb,KAAMz0D,KAAKk0D,iBAGxDoB,EAAcb,KAAKqB,YAAc,GACjCt3D,OAAO23D,iBAAiBb,EAAcb,KAAKqB,YAAa,CACtDE,cAAe,CACbr3D,IAAK,0BAA8B,QAA9B,EAAuB,QAAvB,EAAM,EAAK41D,oBAAY,eAAExoC,aAAK,eAAE+pC,YAAYE,eACjD12C,IAAK,SAAA4X,G,SACkB,QAAjB,IAAKq9B,oBAAY,eAAExoC,QAAS,EAAKwoC,aAAaxoC,MAAM+pC,YAAYE,gBAAkB9+B,IACpF,EAAKq9B,aAAaxoC,MAAM+pC,YAAYE,cAAgB9+B,EAChD,EAAKq9B,aAAaxoC,MAAMkqC,YACb,QAAb,IAAKtW,gBAAQ,SAAEzmC,UAAUk9C,OAAO,uBAAwBl/B,OAKhE6+B,UAAW,CACTp3D,IAAK,0BAA8B,QAA9B,EAAuB,QAAvB,EAAM,EAAK41D,oBAAY,eAAExoC,aAAK,eAAE+pC,YAAYC,WACjDz2C,IAAK,SAAA4X,G,WACkB,QAAjB,IAAKq9B,oBAAY,eAAExoC,SAAiC,QAAxB,EAAiB,QAAjB,IAAKwoC,oBAAY,eAAExoC,aAAK,eAAE+pC,YAAYC,aAAc7+B,IAClF,EAAKq9B,aAAaxoC,MAAM+pC,YAAYC,UAAY7+B,EAC5C,EAAKq9B,aAAaxoC,MAAMkqC,WAC1B,EAAKI,oBAAoBf,EAAcb,KAAMv9B,QAQnDl3B,KAAKU,gBACPV,KAAK2zD,sBAAsBzsD,KAAKlH,KAAKU,eAAeqoC,wBAAuB,SAAAphC,GAGzE,IAAMqG,EAAoB,IAAZrG,EAAEqG,MAAc,EAAIrG,EAAEqG,MAAQ,EAAI,EAAKkK,eAAe5U,OAAO+rB,MAC3E,EAAK0vB,kBAAkB/wC,EAAOrG,EAAEsG,IAAM,EAAI,EAAKiK,eAAe5U,OAAO+rB,cAMnE,YAAA6mC,WAAV,SAAqBr1D,EAAsB4zD,EAAatoC,G,OACjC,QAArB,EAAInsB,KAAKu0D,oBAAY,eAAExoC,SACrB/rB,KAAKu0D,aAAaxoC,MAAMkqC,WAAY,EAChCj2D,KAAKu0D,aAAaxoC,MAAM+pC,YAAYC,WACtC/1D,KAAKq2D,oBAAoB5B,GAAM,GAE7Bz0D,KAAKu0D,aAAaxoC,MAAM+pC,YAAYE,eACtCn1D,EAAQqY,UAAUC,IAAI,yBAItBs7C,EAAK6B,OACP7B,EAAK6B,MAAMnqC,EAAOsoC,EAAK35B,OAInB,YAAAu7B,oBAAR,SAA4B5B,EAAa8B,GACvC,IAAM/6B,EAAQi5B,EAAKj5B,MACbg7B,EAAex2D,KAAKkY,eAAe5U,OAAO+rB,MAC1ClD,EAAQnsB,KAAKy2D,0BAA0Bj7B,EAAMxtB,MAAM0N,EAAI,EAAG8f,EAAMxtB,MAAM3K,EAAImzD,EAAe,EAAGh7B,EAAMvtB,IAAIyN,EAAG8f,EAAMvtB,IAAI5K,EAAImzD,EAAe,OAAGnyD,IAC/HkyD,EAAYv2D,KAAK4+C,qBAAuB5+C,KAAK8+C,sBACrD13C,KAAK+kB,IAGL,YAAA0pC,WAAV,SAAqBh1D,EAAsB4zD,EAAatoC,G,OACjC,QAArB,EAAInsB,KAAKu0D,oBAAY,eAAExoC,SACrB/rB,KAAKu0D,aAAaxoC,MAAMkqC,WAAY,EAChCj2D,KAAKu0D,aAAaxoC,MAAM+pC,YAAYC,WACtC/1D,KAAKq2D,oBAAoB5B,GAAM,GAE7Bz0D,KAAKu0D,aAAaxoC,MAAM+pC,YAAYE,eACtCn1D,EAAQqY,UAAU0sB,OAAO,yBAIzB6uB,EAAKiC,OACPjC,EAAKiC,MAAMvqC,EAAOsoC,EAAK35B,OASnB,YAAA05B,gBAAR,SAAwBC,EAAaxf,GACnC,IAAM0hB,EAAWlC,EAAKj5B,MAAMxtB,MAAM3K,IAAMoxD,EAAKj5B,MAAMvtB,IAAI5K,EACjDuzD,EAAkBnC,EAAKj5B,MAAMxtB,MAAM3K,EAAI4xC,EAAS5xC,EAChDwzD,EAAiBpC,EAAKj5B,MAAMvtB,IAAI5K,EAAI4xC,EAAS5xC,EAInD,OAASszD,GAAYlC,EAAKj5B,MAAMxtB,MAAM0N,GAAKu5B,EAASv5B,GAAK+4C,EAAKj5B,MAAMvtB,IAAIyN,GAAKu5B,EAASv5B,GACnFk7C,GAAmBnC,EAAKj5B,MAAMvtB,IAAIyN,GAAKu5B,EAASv5B,GAChDm7C,GAAkBpC,EAAKj5B,MAAMxtB,MAAM0N,GAAKu5B,EAASv5B,GACjDk7C,GAAmBC,IACpBpC,EAAKj5B,MAAMxtB,MAAM3K,GAAK4xC,EAAS5xC,GAC/BoxD,EAAKj5B,MAAMvtB,IAAI5K,GAAK4xC,EAAS5xC,GAOzB,YAAA8wD,wBAAR,SAAgChoC,EAAmBtrB,EAAsBmzD,GACvE,IAAM93B,EAAS83B,EAAa7P,UAAUh4B,EAAOtrB,EAASb,KAAKkY,eAAezX,KAAMT,KAAKkY,eAAe1X,MACpG,GAAK07B,EAIL,MAAO,CAAExgB,EAAGwgB,EAAO,GAAI74B,EAAG64B,EAAO,GAAKl8B,KAAKkY,eAAe5U,OAAO+rB,QAG3D,YAAAonC,0BAAR,SAAkCzX,EAAYC,EAAYG,EAAYD,EAAYv1C,GAChF,MAAO,CAAEo1C,GAAE,EAAEC,GAAE,EAAEG,GAAE,EAAED,GAAE,EAAE1+C,KAAMT,KAAKkY,eAAezX,KAAMmJ,GAAE,IAhXlDi6B,EAAU,GAmBlB,MAAAj8B,iBAnBQi8B,GAAb,CAAgC,EAAAh7B,YAAnB,EAAAg7B,c,0GChBb,iBAGE,WACU6K,GAAA,KAAAA,YAOZ,OAHE,sBAAW,wBAAS,C,IAApB,WACE,OAAO11B,SAAS89C,gBAAkB92D,KAAK0uC,WAAa11B,SAAS+9C,Y,gCAEjE,EAXA,GAAa,EAAA1uB,sB,obCgBb,WACA,OACA,QACA,QACA,QACA,QAEA,QACA,OACA,QACA,QACA,QACA,QACA,QAGA,QACA,QAEA,cAiCE,WACE76B,GADF,MAGE,cAAO,K,OAlBD,EAAAwpD,UAAY,IAAI,EAAAxvD,aAEhB,EAAAyvD,QAAU,IAAI,EAAAzvD,aAEZ,EAAA6e,YAAc,IAAI,EAAA7e,aAEpB,EAAAykD,UAAY,IAAI,EAAAzkD,aAEd,EAAA8e,UAAY,IAAI,EAAA9e,aAaxB,EAAKi8B,sBAAwB,IAAI,EAAAyzB,qBACjC,EAAKh5B,eAAiB,IAAI,EAAAi5B,eAAe3pD,GACzC,EAAKi2B,sBAAsB6E,WAAW,EAAAlgC,gBAAiB,EAAK81B,gBAC5D,EAAKhmB,eAAiB,EAAK1P,SAAS,EAAKi7B,sBAAsBC,eAAe,EAAA0zB,gBAC9E,EAAK3zB,sBAAsB6E,WAAW,EAAA1gC,eAAgB,EAAKsQ,gBAC3D,EAAK2L,YAAc,EAAK4f,sBAAsBC,eAAe,EAAA2zB,YAC7D,EAAK5zB,sBAAsB6E,WAAW,EAAAngC,YAAa,EAAK0b,aACxD,EAAKD,aAAe,EAAKpb,SAAS,EAAKi7B,sBAAsBC,eAAe,EAAA4zB,aAAa,WAAM,SAAK72B,qBACpG,EAAKgD,sBAAsB6E,WAAW,EAAAvgC,aAAc,EAAK6b,cACzD,EAAKkB,kBAAoB,EAAK2e,sBAAsBC,eAAe,EAAA6zB,kBACnE,EAAK9zB,sBAAsB6E,WAAW,EAAAxgC,kBAAmB,EAAKgd,mBAC9D,EAAKD,iBAAmB,EAAK4e,sBAAsBC,eAAe,EAAA8zB,iBAClE,EAAK/zB,sBAAsB6E,WAAW,EAAArgC,iBAAkB,EAAK4c,kBAC7D,EAAK4d,eAAiB,EAAKgB,sBAAsBC,eAAe,EAAA+zB,gBAChE,EAAKh0B,sBAAsB6E,WAAW,EAAAjgC,gBAAiB,EAAKo6B,gBAC5D,EAAK7d,gBAAkB,EAAK6e,sBAAsBC,eAAe,EAAAg0B,gBACjE,EAAKj0B,sBAAsB6E,WAAW,EAAAtgC,gBAAiB,EAAK4c,iBAG5D,EAAKkf,cAAgB,IAAI,EAAArR,aAAa,EAAKva,eAAgB,EAAK0M,gBAAiB,EAAKhB,aAAc,EAAKiB,iBAAkB,EAAKhB,YAAa,EAAKqa,eAAgB,EAAKpZ,kBAAmB,EAAK2d,gBAC/L,EAAKj6B,SAAS,EAAA87B,aAAa,EAAKR,cAAc1F,WAAY,EAAK/X,cAC/D,EAAK7d,SAAS,EAAKs7B,eAGnB,EAAKt7B,SAAS,EAAA87B,aAAa,EAAKpsB,eAAehU,SAAU,EAAK+nD,YAC9D,EAAKzjD,SAAS,EAAA87B,aAAa,EAAK1gB,aAAa0a,OAAQ,EAAK24B,UAC1D,EAAKzuD,SAAS,EAAA87B,aAAa,EAAK1gB,aAAa2a,SAAU,EAAKy4B,YAC5D,EAAKxuD,SAAS,EAAK01B,eAAe0K,gBAAe,SAAAvpC,GAAO,SAAKwlC,eAAexlC,OAG5E,EAAKs4D,aAAe,IAAI,EAAAC,aAAY,SAAA7pD,GAAQ,SAAK+1B,cAAc1X,MAAMre,M,EAkOzE,OAvS2C,OAmBzC,sBAAW,uBAAQ,C,IAAnB,WAAwC,OAAO/N,KAAKg3D,UAAU7qC,O,gCAE9D,sBAAW,qBAAM,C,IAAjB,WAAsC,OAAOnsB,KAAKi3D,QAAQ9qC,O,gCAE1D,sBAAW,yBAAU,C,IAArB,WAAwC,OAAOnsB,KAAKqmB,YAAY8F,O,gCAEhE,sBAAW,uBAAQ,C,IAAnB,WAAgE,OAAOnsB,KAAKisD,UAAU9/B,O,gCAEtF,sBAAW,uBAAQ,C,IAAnB,WAAwC,OAAOnsB,KAAKsmB,UAAU6F,O,gCAE9D,sBAAW,mBAAI,C,IAAf,WAA4B,OAAOnsB,KAAKkY,eAAezX,M,gCACvD,sBAAW,mBAAI,C,IAAf,WAA4B,OAAOT,KAAKkY,eAAe1X,M,gCACvD,sBAAW,sBAAO,C,IAAlB,WAAmC,OAAOR,KAAKkY,eAAekY,S,gCAyCvD,YAAAlwB,QAAP,W,MACMF,KAAKuI,cAGT,YAAMrI,QAAO,WACI,QAAjB,EAAAF,KAAK63D,oBAAY,SAAE33D,UACnBF,KAAK63D,kBAAexzD,IAGf,YAAAs8B,MAAP,SAAa5yB,EAA2B6f,GACtC5tB,KAAK23D,aAAah3B,MAAM5yB,EAAM6f,IAGzB,YAAAkqC,UAAP,SAAiB/pD,GACf/N,KAAK23D,aAAaG,UAAU/pD,IAGvB,YAAAnN,OAAP,SAAc8a,EAAWrY,GACnBg+B,MAAM3lB,IAAM2lB,MAAMh+B,KAItBqY,EAAIra,KAAKC,IAAIoa,EAAG,EAAAq8C,cAChB10D,EAAIhC,KAAKC,IAAI+B,EAAG,EAAA20D,cAEhBh4D,KAAKkY,eAAetX,OAAO8a,EAAGrY,KAOzB,YAAA8gC,OAAP,SAActjB,EAA2Bhc,QAAA,IAAAA,OAAA,GACvC,IAEIsc,EAFE7d,EAAStD,KAAKkY,eAAe5U,QAGnC6d,EAAUnhB,KAAKi4D,mBACC92C,EAAQ7e,SAAWtC,KAAKS,MAAQ0gB,EAAQjB,MAAM,KAAOW,EAAUjX,IAAMuX,EAAQhB,MAAM,KAAOU,EAAUhX,KAClHsX,EAAU7d,EAAOksB,aAAa3O,EAAWhc,GACzC7E,KAAKi4D,iBAAmB92C,GAE1BA,EAAQtc,UAAYA,EAEpB,IAAMqzD,EAAS50D,EAAO8pB,MAAQ9pB,EAAOihB,UAC/B4zC,EAAY70D,EAAO8pB,MAAQ9pB,EAAOkhB,aAExC,GAAyB,IAArBlhB,EAAOihB,UAAiB,CAE1B,IAAM6zC,EAAsB90D,EAAO6pB,MAAMkrC,OAGrCF,IAAc70D,EAAO6pB,MAAM7qB,OAAS,EAClC81D,EACF90D,EAAO6pB,MAAMmrC,UAAUp3C,SAASC,GAEhC7d,EAAO6pB,MAAMjmB,KAAKia,EAAQ7V,SAG5BhI,EAAO6pB,MAAMhmB,OAAOgxD,EAAY,EAAG,EAAGh3C,EAAQ7V,SAI3C8sD,EASCp4D,KAAKkY,eAAeqgD,kBACtBj1D,EAAO+rB,MAAQhuB,KAAKC,IAAIgC,EAAO+rB,MAAQ,EAAG,KAT5C/rB,EAAO8pB,QAEFptB,KAAKkY,eAAeqgD,iBACvBj1D,EAAO+rB,aASN,CAGL,IAAM+C,EAAqB+lC,EAAYD,EAAS,EAChD50D,EAAO6pB,MAAMkF,cAAc6lC,EAAS,EAAG9lC,EAAqB,GAAI,GAChE9uB,EAAO6pB,MAAM7N,IAAI64C,EAAWh3C,EAAQ7V,SAKjCtL,KAAKkY,eAAeqgD,kBACvBj1D,EAAO+rB,MAAQ/rB,EAAO8pB,OAIxBptB,KAAK6kB,iBAAiB4K,eAAensB,EAAOihB,UAAWjhB,EAAOkhB,cAE9DxkB,KAAKsmB,UAAUlf,KAAK9D,EAAO+rB,QAUtB,YAAAzoB,YAAP,SAAmBkmC,EAAcnD,GAC/B,IAAMrmC,EAAStD,KAAKkY,eAAe5U,OACnC,GAAIwpC,EAAO,EAAG,CACZ,GAAqB,IAAjBxpC,EAAO+rB,MACT,OAEFrvB,KAAKkY,eAAeqgD,iBAAkB,OAC7BzrB,EAAOxpC,EAAO+rB,OAAS/rB,EAAO8pB,QACvCptB,KAAKkY,eAAeqgD,iBAAkB,GAGxC,IAAMC,EAAWl1D,EAAO+rB,MACxB/rB,EAAO+rB,MAAQhuB,KAAKC,IAAID,KAAKiR,IAAIhP,EAAO+rB,MAAQyd,EAAMxpC,EAAO8pB,OAAQ,GAGjEorC,IAAal1D,EAAO+rB,QAInBsa,GACH3pC,KAAKsmB,UAAUlf,KAAK9D,EAAO+rB,SAQxB,YAAAiR,YAAP,SAAmBC,GACjBvgC,KAAK4G,YAAY25B,GAAavgC,KAAKQ,KAAO,KAMrC,YAAAggC,YAAP,WACExgC,KAAK4G,aAAa5G,KAAKkY,eAAe5U,OAAO+rB,QAMxC,YAAAoR,eAAP,WACEzgC,KAAK4G,YAAY5G,KAAKkY,eAAe5U,OAAO8pB,MAAQptB,KAAKkY,eAAe5U,OAAO+rB,QAG1E,YAAAqR,aAAP,SAAoBl8B,GAClB,IAAMi0D,EAAej0D,EAAOxE,KAAKkY,eAAe5U,OAAO+rB,MAClC,IAAjBopC,GACFz4D,KAAK4G,YAAY6xD,IAKd,YAAA1qC,cAAP,SAAqBlW,EAAyB+V,GAC5C,OAAO5tB,KAAK8jC,cAAc/V,cAAclW,EAAI+V,IAIvC,YAAAC,cAAP,SAAqBhW,EAAyB+V,GAC5C,OAAO5tB,KAAK8jC,cAAcjW,cAAchW,EAAI+V,IAIvC,YAAAD,cAAP,SAAqB9V,EAAyB+V,GAC5C,OAAO5tB,KAAK8jC,cAAcnW,cAAc9V,EAAI+V,IAIvC,YAAAI,cAAP,SAAqBvH,EAAemH,GAClC,OAAO5tB,KAAK8jC,cAAc9V,cAAcvH,EAAOmH,IAGvC,YAAA2V,OAAV,WACMvjC,KAAKk+B,eAAe1wB,QAAQkrD,aAC9B14D,KAAK24D,sBAIF,YAAArnC,MAAP,WACEtxB,KAAK8jC,cAAcxS,QACnBtxB,KAAKkY,eAAeoZ,QACpBtxB,KAAK4kB,gBAAgB0M,QACrBtxB,KAAK4jB,aAAa0N,QAClBtxB,KAAK8kB,kBAAkBwM,SAGf,YAAAuT,eAAV,SAAyBxlC,G,MAEvB,OAAQA,GACN,IAAK,aACHW,KAAKowB,QAAQxvB,OAAOZ,KAAKS,KAAMT,KAAKQ,MACpC,MACF,IAAK,cACCR,KAAKk+B,eAAe1wB,QAAQkrD,YAC9B14D,KAAK24D,sBAEY,QAAjB,EAAA34D,KAAK63D,oBAAY,SAAE33D,UACnBF,KAAK63D,kBAAexzD,KAMlB,YAAAs0D,mBAAV,sBACE,IAAK34D,KAAK63D,aAAc,CACtB,IAAM,EAA6B,GACnC,EAAY3wD,KAAKlH,KAAKo+B,WAAW,EAAAw6B,8BAA8Bt5D,KAAK,KAAMU,KAAKkY,kBAC/E,EAAYhR,KAAKlH,KAAK2tB,cAAc,CAAErG,MAAO,MAAO,WAElD,OADA,EAAAsxC,8BAA8B,EAAK1gD,iBAC5B,MAETlY,KAAK63D,aAAe,CAClB33D,QAAS,WACP,IAAgB,2BAAa,CAAjB,KACRA,eAMd,EAvSA,CAA2C,EAAA2I,YAArB,EAAA4lC,gB,uVC/BtB,WACA,QAEA,aAIE,a,IAAY,sDAFJ,KAAAoqB,SAAW,IAAI55C,IAGrB,IAA4B,UAAA65C,EAAA,eAAS,CAA1B,WAACjhD,EAAE,KAAEkhD,EAAO,KACrB/4D,KAAKsf,IAAIzH,EAAIkhD,IAqBnB,OAjBS,YAAAz5C,IAAP,SAAczH,EAA2BmhD,GACvC,IAAM71D,EAASnD,KAAK64D,SAASl6D,IAAIkZ,GAEjC,OADA7X,KAAK64D,SAASv5C,IAAIzH,EAAImhD,GACf71D,GAGF,YAAA2rD,QAAP,SAAelhC,GACb5tB,KAAK64D,SAAS/J,SAAQ,SAAC/vD,EAAOM,GAAQ,OAAAuuB,EAASvuB,EAAKN,OAG/C,YAAAogB,IAAP,SAAWtH,GACT,OAAO7X,KAAK64D,SAAS15C,IAAItH,IAGpB,YAAAlZ,IAAP,SAAckZ,GACZ,OAAO7X,KAAK64D,SAASl6D,IAAIkZ,IAE7B,EA3BA,GAAa,EAAAohD,oBA6Bb,iBAGE,aAFiB,KAAAC,UAA+B,IAAID,EAGlDj5D,KAAKk5D,UAAU55C,IAAI,EAAApX,sBAAuBlI,MAiC9C,OA9BS,YAAAsoC,WAAP,SAAqBzwB,EAA2BmhD,GAC9Ch5D,KAAKk5D,UAAU55C,IAAIzH,EAAImhD,IAGlB,YAAAG,WAAP,SAAqBthD,GACnB,OAAO7X,KAAKk5D,UAAUv6D,IAAIkZ,IAGrB,YAAA6rB,eAAP,SAAyBxkB,G,IAAW,wDAIlC,IAHA,IAAMk6C,EAAsB,EAAAC,uBAAuBn6C,GAAMo6C,MAAK,SAAChpD,EAAGD,GAAM,OAAAC,EAAE5H,MAAQ2H,EAAE3H,SAE9E6wD,EAAqB,GACF,MAAAH,EAAA,eAAqB,CAAzC,IAAMI,EAAU,KACbT,EAAU/4D,KAAKk5D,UAAUv6D,IAAI66D,EAAW3hD,IAC9C,IAAKkhD,EACH,MAAM,IAAI12D,MAAM,oBAAoB6c,EAAK7gB,KAAI,+BAA+Bm7D,EAAW3hD,GAAE,KAE3F0hD,EAAYryD,KAAK6xD,GAGnB,IAAMU,EAAqBL,EAAoB92D,OAAS,EAAI82D,EAAoB,GAAG1wD,MAAQgxD,EAAKp3D,OAGhG,GAAIo3D,EAAKp3D,SAAWm3D,EAClB,MAAM,IAAIp3D,MAAM,gDAAgD6c,EAAK7gB,KAAI,iBAAgBo7D,EAAqB,GAAC,mBAAmBC,EAAKp3D,OAAM,qBAI/I,OAAO,IAAI4c,EAAI,WAAJA,EAAI,aAAQw6C,EAASH,OAEpC,EArCA,GAAa,EAAArC,wB,quBCtCb,IAiBYyC,EAjBZ,QAiBA,SAAYA,GACV,qBACA,mBACA,mBACA,qBACA,iBALF,CAAYA,EAAA,EAAAA,WAAA,EAAAA,SAAQ,KAQpB,IAAMC,EAAoD,CACxDj1C,MAAOg1C,EAASE,MAChBC,KAAMH,EAASI,KACf7gC,KAAMygC,EAASK,KACfhuC,MAAO2tC,EAASM,MAChBC,IAAKP,EAASQ,KAKhB,aAKE,WACoChiD,GADpC,WACoC,KAAAA,kBAElCnY,KAAKo6D,kBACLp6D,KAAKmY,gBAAgBywB,gBAAe,SAAAvpC,GACtB,aAARA,GACF,EAAK+6D,qBA6Cb,OAxCU,YAAAA,gBAAR,WACEp6D,KAAKq6D,UAAYT,EAAqB55D,KAAKmY,gBAAgB3K,QAAQw+B,WAG7D,YAAAsuB,wBAAR,SAAgCC,GAC9B,IAAK,IAAIz8D,EAAI,EAAGA,EAAIy8D,EAAej4D,OAAQxE,IACR,mBAAtBy8D,EAAez8D,KACxBy8D,EAAez8D,GAAKy8D,EAAez8D,OAKjC,YAAA08D,KAAR,SAAaltD,EAAemtD,EAAiBF,GAC3Cv6D,KAAKs6D,wBAAwBC,GAC7BjtD,EAAKrP,KAAI,MAATqP,EAAI,GAAM2rB,QAhCK,aAgCiBwhC,GAAYF,KAGvC,YAAA51C,MAAP,SAAa81C,G,IAAiB,wDACxBz6D,KAAKq6D,WAAaV,EAASE,OAC7B75D,KAAKw6D,KAAKvhC,QAAQyhC,IAAKD,EAASF,IAI7B,YAAAT,KAAP,SAAYW,G,IAAiB,wDACvBz6D,KAAKq6D,WAAaV,EAASI,MAC7B/5D,KAAKw6D,KAAKvhC,QAAQ6gC,KAAMW,EAASF,IAI9B,YAAArhC,KAAP,SAAYuhC,G,IAAiB,wDACvBz6D,KAAKq6D,WAAaV,EAASK,MAC7Bh6D,KAAKw6D,KAAKvhC,QAAQC,KAAMuhC,EAASF,IAI9B,YAAAvuC,MAAP,SAAayuC,G,IAAiB,wDACxBz6D,KAAKq6D,WAAaV,EAASM,OAC7Bj6D,KAAKw6D,KAAKvhC,QAAQjN,MAAOyuC,EAASF,IArD3BlD,EAAU,GAMlB,MAAAjvD,kBANQivD,GAAb,GAAa,EAAAA,c,o3BCnCb,WACA,QAEA,OACA,OAEa,EAAAU,aAAe,EACf,EAAAC,aAAe,EAE5B,kBAcE,WAC2B7/C,GAD3B,MAGE,cAAO,K,OAFkB,EAAAA,kBARpB,EAAAogD,iBAA2B,EAE1B,EAAAtM,UAAY,IAAI,EAAAzkD,aAStB,EAAK/G,KAAOY,KAAKC,IAAI6W,EAAgB3K,QAAQ/M,KAAM,EAAAs3D,cACnD,EAAKv3D,KAAOa,KAAKC,IAAI6W,EAAgB3K,QAAQhN,KAAM,EAAAw3D,cACnD,EAAK5nC,QAAU,IAAI,EAAAuqC,UAAUxiD,EAAiB,G,EAqBlD,OAzCmC,OAUjC,sBAAW,uBAAQ,C,IAAnB,WAAgE,OAAOnY,KAAKisD,UAAU9/B,O,gCAEtF,sBAAW,qBAAM,C,IAAjB,WAA+B,OAAOnsB,KAAKowB,QAAQ6R,Q,gCAW5C,YAAA/hC,QAAP,WACE,YAAMA,QAAO,WACbF,KAAKowB,QAAQlwB,WAGR,YAAAU,OAAP,SAAcH,EAAcD,GAC1BR,KAAKS,KAAOA,EACZT,KAAKQ,KAAOA,EACZR,KAAKowB,QAAQxvB,OAAOH,EAAMD,GAC1BR,KAAKowB,QAAQiV,cAAcrlC,KAAKS,MAChCT,KAAKisD,UAAU7kD,KAAK,CAAE3G,KAAI,EAAED,KAAI,KAG3B,YAAA8wB,MAAP,WACEtxB,KAAKowB,QAAQlwB,UACbF,KAAKowB,QAAU,IAAI,EAAAuqC,UAAU36D,KAAKmY,gBAAiBnY,MACnDA,KAAKu4D,iBAAkB,GAvCdnB,EAAa,GAerB,MAAAhvD,kBAfQgvD,GAAb,CAAmC,EAAAvuD,YAAtB,EAAAuuD,iB,ibCPb,YACA,OAQA,cAaE,WACEl5B,EACAuY,GAFF,MAIE,cAAO,K,OAXD,EAAA2M,kBAAoB,EAAK56C,SAAS,IAAI,EAAAhB,cAa5C,EAAKm6B,QAAU,IAAI,EAAAi5B,QAAO,EAAM18B,EAAgBuY,GAChD,EAAK9U,QAAQk5B,mBAIb,EAAKC,KAAO,IAAI,EAAAF,QAAO,EAAO18B,EAAgBuY,GAC9C,EAAKskB,cAAgB,EAAKp5B,QAE1B,EAAK0D,gB,EAiFT,OA5G+B,OAO7B,sBAAW,+BAAgB,C,IAA3B,WAA0F,OAAOrlC,KAAKojD,kBAAkBj3B,O,gCA0BxH,sBAAW,kBAAG,C,IAAd,WACE,OAAOnsB,KAAK86D,M,gCAMd,sBAAW,qBAAM,C,IAAjB,WACE,OAAO96D,KAAK+6D,e,gCAMd,sBAAW,qBAAM,C,IAAjB,WACE,OAAO/6D,KAAK2hC,S,gCAMP,YAAAnR,qBAAP,WACMxwB,KAAK+6D,gBAAkB/6D,KAAK2hC,UAGhC3hC,KAAK2hC,QAAQjmB,EAAI1b,KAAK86D,KAAKp/C,EAC3B1b,KAAK2hC,QAAQt+B,EAAIrD,KAAK86D,KAAKz3D,EAI3BrD,KAAK86D,KAAKn6D,QACVX,KAAK+6D,cAAgB/6D,KAAK2hC,QAC1B3hC,KAAKojD,kBAAkBh8C,KAAK,CAC1Bo+C,aAAcxlD,KAAK2hC,QACnBq5B,eAAgBh7D,KAAK86D,SAOlB,YAAAzqC,kBAAP,SAAyB4qC,GACnBj7D,KAAK+6D,gBAAkB/6D,KAAK86D,OAKhC96D,KAAK86D,KAAKD,iBAAiBI,GAC3Bj7D,KAAK86D,KAAKp/C,EAAI1b,KAAK2hC,QAAQjmB,EAC3B1b,KAAK86D,KAAKz3D,EAAIrD,KAAK2hC,QAAQt+B,EAC3BrD,KAAK+6D,cAAgB/6D,KAAK86D,KAC1B96D,KAAKojD,kBAAkBh8C,KAAK,CAC1Bo+C,aAAcxlD,KAAK86D,KACnBE,eAAgBh7D,KAAK2hC,YASlB,YAAA/gC,OAAP,SAAcs6D,EAAiBC,GAC7Bn7D,KAAK2hC,QAAQ/gC,OAAOs6D,EAASC,GAC7Bn7D,KAAK86D,KAAKl6D,OAAOs6D,EAASC,IAOrB,YAAA91B,cAAP,SAAqBvnC,GACnBkC,KAAK2hC,QAAQ0D,cAAcvnC,GAC3BkC,KAAK86D,KAAKz1B,cAAcvnC,IAE5B,EA5GA,CANA,KAM+B+K,YAAlB,EAAA8xD,a,uICXb,YAGA,QACA,OACA,OACA,QACA,QAEA,QACA,OAEa,EAAAS,gBAAkB,WAS/B,iBAoBE,WACUC,EACAljD,EACAD,GAFA,KAAAmjD,iBACA,KAAAljD,kBACA,KAAAD,iBArBH,KAAAmX,MAAgB,EAChB,KAAAjC,MAAgB,EAChB,KAAA/pB,EAAY,EACZ,KAAAqY,EAAY,EAKZ,KAAA8V,OAAiB,EACjB,KAAAD,OAAiB,EACjB,KAAAE,iBAAmB,EAAAhS,kBAAkBnU,QACrC,KAAAomB,aAAqC,EAAA5B,gBACrC,KAAAkP,QAAoB,GACnB,KAAAs8B,UAAuB,EAAAnxD,SAASF,aAAa,CAAC,EAAG,EAAAZ,eAAgB,EAAAC,gBAAiB,EAAAC,iBAClF,KAAAgyD,gBAA6B,EAAApxD,SAASF,aAAa,CAAC,EAAG,EAAAT,qBAAsB,EAAAC,sBAAuB,EAAAC,uBAS1G1J,KAAKw7D,MAAQx7D,KAAKkY,eAAezX,KACjCT,KAAKy7D,MAAQz7D,KAAKkY,eAAe1X,KACjCR,KAAKmtB,MAAQ,IAAI,EAAAuuC,aAA0B17D,KAAK27D,wBAAwB37D,KAAKy7D,QAC7Ez7D,KAAKukB,UAAY,EACjBvkB,KAAKwkB,aAAexkB,KAAKy7D,MAAQ,EACjCz7D,KAAKqlC,gBAkjBT,OA/iBS,YAAA5X,YAAP,SAAmBqD,GAUjB,OATIA,GACF9wB,KAAKs7D,UAAU1xD,GAAKknB,EAAKlnB,GACzB5J,KAAKs7D,UAAUzxD,GAAKinB,EAAKjnB,GACzB7J,KAAKs7D,UAAUxxD,SAAWgnB,EAAKhnB,WAE/B9J,KAAKs7D,UAAU1xD,GAAK,EACpB5J,KAAKs7D,UAAUzxD,GAAK,EACpB7J,KAAKs7D,UAAUxxD,SAAW,IAAI,EAAAC,eAEzB/J,KAAKs7D,WAGP,YAAAM,kBAAP,SAAyB9qC,GAUvB,OATIA,GACF9wB,KAAKu7D,gBAAgB3xD,GAAKknB,EAAKlnB,GAC/B5J,KAAKu7D,gBAAgB1xD,GAAKinB,EAAKjnB,GAC/B7J,KAAKu7D,gBAAgBzxD,SAAWgnB,EAAKhnB,WAErC9J,KAAKu7D,gBAAgB3xD,GAAK,EAC1B5J,KAAKu7D,gBAAgB1xD,GAAK,EAC1B7J,KAAKu7D,gBAAgBzxD,SAAW,IAAI,EAAAC,eAE/B/J,KAAKu7D,iBAGP,YAAA/rC,aAAP,SAAoBsB,EAAsBjsB,GACxC,OAAO,IAAI,EAAAuc,WAAWphB,KAAKkY,eAAezX,KAAMT,KAAKytB,YAAYqD,GAAOjsB,IAG1E,sBAAW,4BAAa,C,IAAxB,WACE,OAAO7E,KAAKq7D,gBAAkBr7D,KAAKmtB,MAAMuF,UAAY1yB,KAAKy7D,O,gCAG5D,sBAAW,iCAAkB,C,IAA7B,WACE,IACMI,EADY77D,KAAKotB,MAAQptB,KAAKqD,EACNrD,KAAKqvB,MACnC,OAAQwsC,GAAa,GAAKA,EAAY77D,KAAKy7D,O,gCAQrC,YAAAE,wBAAR,SAAgCn7D,GAC9B,IAAKR,KAAKq7D,eACR,OAAO76D,EAGT,IAAMs7D,EAAsBt7D,EAAOR,KAAKmY,gBAAgB3K,QAAQuuD,WAEhE,OAAOD,EAAsB,EAAAV,gBAAkB,EAAAA,gBAAkBU,GAM5D,YAAAjB,iBAAP,SAAwBI,GACtB,GAA0B,IAAtBj7D,KAAKmtB,MAAM7qB,OAAc,MACV+B,IAAb42D,IACFA,EAAW,EAAAx7C,mBAGb,IADA,IAAI3hB,EAAIkC,KAAKy7D,MACN39D,KACLkC,KAAKmtB,MAAMjmB,KAAKlH,KAAKwvB,aAAayrC,MAQjC,YAAAt6D,MAAP,WACEX,KAAKqvB,MAAQ,EACbrvB,KAAKotB,MAAQ,EACbptB,KAAKqD,EAAI,EACTrD,KAAK0b,EAAI,EACT1b,KAAKmtB,MAAQ,IAAI,EAAAuuC,aAA0B17D,KAAK27D,wBAAwB37D,KAAKy7D,QAC7Ez7D,KAAKukB,UAAY,EACjBvkB,KAAKwkB,aAAexkB,KAAKy7D,MAAQ,EACjCz7D,KAAKqlC,iBAQA,YAAAzkC,OAAP,SAAcs6D,EAAiBC,GAE7B,IAAMa,EAAWh8D,KAAKytB,YAAY,EAAAhO,mBAI5Bw8C,EAAej8D,KAAK27D,wBAAwBR,GAOlD,GANIc,EAAej8D,KAAKmtB,MAAMuF,YAC5B1yB,KAAKmtB,MAAMuF,UAAYupC,GAKrBj8D,KAAKmtB,MAAM7qB,OAAS,EAAG,CAEzB,GAAItC,KAAKw7D,MAAQN,EACf,IAAK,IAAIp9D,EAAI,EAAGA,EAAIkC,KAAKmtB,MAAM7qB,OAAQxE,IACrCkC,KAAKmtB,MAAMxuB,IAAIb,GAAI8C,OAAOs6D,EAASc,GAKvC,IAAIE,EAAS,EACb,GAAIl8D,KAAKy7D,MAAQN,EACf,IAAK,IAAI93D,EAAIrD,KAAKy7D,MAAOp4D,EAAI83D,EAAS93D,IAChCrD,KAAKmtB,MAAM7qB,OAAS64D,EAAUn7D,KAAKotB,QACjCptB,KAAKmY,gBAAgB3K,QAAQkrD,YAG/B14D,KAAKmtB,MAAMjmB,KAAK,IAAI,EAAAka,WAAW85C,EAASc,IAEpCh8D,KAAKotB,MAAQ,GAAKptB,KAAKmtB,MAAM7qB,QAAUtC,KAAKotB,MAAQptB,KAAKqD,EAAI64D,EAAS,GAGxEl8D,KAAKotB,QACL8uC,IACIl8D,KAAKqvB,MAAQ,GAEfrvB,KAAKqvB,SAKPrvB,KAAKmtB,MAAMjmB,KAAK,IAAI,EAAAka,WAAW85C,EAASc,UAMhD,IAAS34D,EAAIrD,KAAKy7D,MAAOp4D,EAAI83D,EAAS93D,IAChCrD,KAAKmtB,MAAM7qB,OAAS64D,EAAUn7D,KAAKotB,QACjCptB,KAAKmtB,MAAM7qB,OAAStC,KAAKotB,MAAQptB,KAAKqD,EAAI,EAE5CrD,KAAKmtB,MAAM8E,OAGXjyB,KAAKotB,QACLptB,KAAKqvB,UAQb,GAAI4sC,EAAej8D,KAAKmtB,MAAMuF,UAAW,CAEvC,IAAMypC,EAAen8D,KAAKmtB,MAAM7qB,OAAS25D,EACrCE,EAAe,IACjBn8D,KAAKmtB,MAAMiC,UAAU+sC,GACrBn8D,KAAKotB,MAAQ/rB,KAAKC,IAAItB,KAAKotB,MAAQ+uC,EAAc,GACjDn8D,KAAKqvB,MAAQhuB,KAAKC,IAAItB,KAAKqvB,MAAQ8sC,EAAc,GACjDn8D,KAAKwxB,OAASnwB,KAAKC,IAAItB,KAAKwxB,OAAS2qC,EAAc,IAErDn8D,KAAKmtB,MAAMuF,UAAYupC,EAIzBj8D,KAAK0b,EAAIra,KAAKiR,IAAItS,KAAK0b,EAAGw/C,EAAU,GACpCl7D,KAAKqD,EAAIhC,KAAKiR,IAAItS,KAAKqD,EAAG83D,EAAU,GAChCe,IACFl8D,KAAKqD,GAAK64D,GAEZl8D,KAAKuxB,OAASlwB,KAAKiR,IAAItS,KAAKuxB,OAAQ2pC,EAAU,GAE9Cl7D,KAAKukB,UAAY,EAKnB,GAFAvkB,KAAKwkB,aAAe22C,EAAU,EAE1Bn7D,KAAKo8D,mBACPp8D,KAAKq8D,QAAQnB,EAASC,GAGlBn7D,KAAKw7D,MAAQN,GACf,IAASp9D,EAAI,EAAGA,EAAIkC,KAAKmtB,MAAM7qB,OAAQxE,IACrCkC,KAAKmtB,MAAMxuB,IAAIb,GAAI8C,OAAOs6D,EAASc,GAKzCh8D,KAAKw7D,MAAQN,EACbl7D,KAAKy7D,MAAQN,GAGf,sBAAY,+BAAgB,C,IAA5B,WACE,OAAOn7D,KAAKq7D,iBAAmBr7D,KAAKmY,gBAAgB3K,QAAQkrD,a,gCAGtD,YAAA2D,QAAR,SAAgBnB,EAAiBC,GAC3Bn7D,KAAKw7D,QAAUN,IAKfA,EAAUl7D,KAAKw7D,MACjBx7D,KAAKs8D,cAAcpB,EAASC,GAE5Bn7D,KAAKu8D,eAAerB,EAASC,KAIzB,YAAAmB,cAAR,SAAsBpB,EAAiBC,GACrC,IAAMqB,EAAqB,EAAAC,6BAA6Bz8D,KAAKmtB,MAAOntB,KAAKw7D,MAAON,EAASl7D,KAAKotB,MAAQptB,KAAKqD,EAAGrD,KAAKytB,YAAY,EAAAhO,oBAC/H,GAAI+8C,EAASl6D,OAAS,EAAG,CACvB,IAAMo6D,EAAkB,EAAAC,4BAA4B38D,KAAKmtB,MAAOqvC,GAChE,EAAAI,2BAA2B58D,KAAKmtB,MAAOuvC,EAAgBG,QACvD78D,KAAK88D,4BAA4B5B,EAASC,EAASuB,EAAgBK,gBAI/D,YAAAD,4BAAR,SAAoC5B,EAAiBC,EAAiB4B,GAIpE,IAHA,IAAMf,EAAWh8D,KAAKytB,YAAY,EAAAhO,mBAE9Bu9C,EAAsBD,EACnBC,KAAwB,GACV,IAAfh9D,KAAKotB,OACHptB,KAAKqD,EAAI,GACXrD,KAAKqD,IAEHrD,KAAKmtB,MAAM7qB,OAAS64D,GAEtBn7D,KAAKmtB,MAAMjmB,KAAK,IAAI,EAAAka,WAAW85C,EAASc,MAGtCh8D,KAAKqvB,QAAUrvB,KAAKotB,OACtBptB,KAAKqvB,QAEPrvB,KAAKotB,SAGTptB,KAAKwxB,OAASnwB,KAAKC,IAAItB,KAAKwxB,OAASurC,EAAc,IAG7C,YAAAR,eAAR,SAAuBrB,EAAiBC,GAOtC,IANA,IAAMa,EAAWh8D,KAAKytB,YAAY,EAAAhO,mBAG5Bw9C,EAAW,GACbC,EAAgB,EAEX75D,EAAIrD,KAAKmtB,MAAM7qB,OAAS,EAAGe,GAAK,EAAGA,IAAK,CAE/C,IAAIkD,EAAWvG,KAAKmtB,MAAMxuB,IAAI0E,GAC9B,MAAKkD,IAAaA,EAAS1B,WAAa0B,EAAS8a,oBAAsB65C,GAAvE,CAMA,IADA,IAAMiC,EAA6B,CAAC52D,GAC7BA,EAAS1B,WAAaxB,EAAI,GAC/BkD,EAAWvG,KAAKmtB,MAAMxuB,MAAM0E,GAC5B85D,EAAarQ,QAAQvmD,GAKvB,IAAM62D,EAAYp9D,KAAKotB,MAAQptB,KAAKqD,EACpC,KAAI+5D,GAAa/5D,GAAK+5D,EAAY/5D,EAAI85D,EAAa76D,QAAnD,CAIA,IAAM+6D,EAAiBF,EAAaA,EAAa76D,OAAS,GAAG+e,mBACvDi8C,EAAkB,EAAAC,+BAA+BJ,EAAcn9D,KAAKw7D,MAAON,GAC3EsC,EAAaF,EAAgBh7D,OAAS66D,EAAa76D,OACrDm7D,OAAY,EAGdA,EAFiB,IAAfz9D,KAAKotB,OAAeptB,KAAKqD,IAAMrD,KAAKmtB,MAAM7qB,OAAS,EAEtCjB,KAAKC,IAAI,EAAGtB,KAAKqD,EAAIrD,KAAKmtB,MAAMuF,UAAY8qC,GAE5Cn8D,KAAKC,IAAI,EAAGtB,KAAKmtB,MAAM7qB,OAAStC,KAAKmtB,MAAMuF,UAAY8qC,GAKxE,IADA,IAAME,EAAyB,GACtB5/D,EAAI,EAAGA,EAAI0/D,EAAY1/D,IAAK,CACnC,IAAMqjB,EAAUnhB,KAAKwvB,aAAa,EAAA/P,mBAAmB,GACrDi+C,EAASx2D,KAAKia,GAEZu8C,EAASp7D,OAAS,IACpB26D,EAAS/1D,KAAK,CAGZ8G,MAAO3K,EAAI85D,EAAa76D,OAAS46D,EACjCQ,SAAQ,IAEVR,GAAiBQ,EAASp7D,QAE5B66D,EAAaj2D,KAAI,MAAjBi2D,EAAqBO,GAGrB,IAAIC,EAAgBL,EAAgBh7D,OAAS,EACzCmf,EAAU67C,EAAgBK,GACd,IAAZl8C,IAEFA,EAAU67C,IADVK,IAKF,IAFA,IAAIC,EAAeT,EAAa76D,OAASk7D,EAAa,EAClDh8C,EAAS67C,EACNO,GAAgB,GAAG,CACxB,IAAMC,EAAcx8D,KAAKiR,IAAIkP,EAAQC,GAQrC,GAPA07C,EAAaQ,GAAer8C,cAAc67C,EAAaS,GAAep8C,EAASq8C,EAAap8C,EAAUo8C,EAAaA,GAAa,GAEhH,KADhBp8C,GAAWo8C,KAGTp8C,EAAU67C,IADVK,IAIa,KADfn8C,GAAUq8C,GACQ,CAChBD,IACA,IAAME,EAAoBz8D,KAAKC,IAAIs8D,EAAc,GACjDp8C,EAAS,EAAAu8C,4BAA4BZ,EAAcW,EAAmB99D,KAAKw7D,QAK/E,IAAS19D,EAAI,EAAGA,EAAIq/D,EAAa76D,OAAQxE,IACnCw/D,EAAgBx/D,GAAKo9D,GACvBiC,EAAar/D,GAAGkiB,QAAQs9C,EAAgBx/D,GAAIk+D,GAMhD,IADA,IAAIgB,EAAsBQ,EAAaC,EAChCT,KAAwB,GACV,IAAfh9D,KAAKotB,MACHptB,KAAKqD,EAAI83D,EAAU,GACrBn7D,KAAKqD,IACLrD,KAAKmtB,MAAM8E,QAEXjyB,KAAKotB,QACLptB,KAAKqvB,SAIHrvB,KAAKotB,MAAQ/rB,KAAKiR,IAAItS,KAAKmtB,MAAMuF,UAAW1yB,KAAKmtB,MAAM7qB,OAAS46D,GAAiB/B,IAC/En7D,KAAKotB,QAAUptB,KAAKqvB,OACtBrvB,KAAKqvB,QAEPrvB,KAAKotB,SAIXptB,KAAKwxB,OAASnwB,KAAKiR,IAAItS,KAAKwxB,OAASgsC,EAAYx9D,KAAKotB,MAAQ+tC,EAAU,KAM1E,GAAI8B,EAAS36D,OAAS,EAAG,CAGvB,IAAM07D,EAA+B,GAG/BC,EAA8B,GACpC,IAASngE,EAAI,EAAGA,EAAIkC,KAAKmtB,MAAM7qB,OAAQxE,IACrCmgE,EAAc/2D,KAAKlH,KAAKmtB,MAAMxuB,IAAIb,IAEpC,IAAMogE,EAAsBl+D,KAAKmtB,MAAM7qB,OAEnC67D,EAAoBD,EAAsB,EAC1CE,EAAoB,EACpBC,EAAepB,EAASmB,GAC5Bp+D,KAAKmtB,MAAM7qB,OAASjB,KAAKiR,IAAItS,KAAKmtB,MAAMuF,UAAW1yB,KAAKmtB,MAAM7qB,OAAS46D,GACvE,IAAIoB,EAAqB,EACzB,IAASxgE,EAAIuD,KAAKiR,IAAItS,KAAKmtB,MAAMuF,UAAY,EAAGwrC,EAAsBhB,EAAgB,GAAIp/D,GAAK,EAAGA,IAChG,GAAIugE,GAAgBA,EAAarwD,MAAQmwD,EAAoBG,EAAoB,CAE/E,IAAK,IAAIC,EAAQF,EAAaX,SAASp7D,OAAS,EAAGi8D,GAAS,EAAGA,IAC7Dv+D,KAAKmtB,MAAM7N,IAAIxhB,IAAKugE,EAAaX,SAASa,IAE5CzgE,IAGAkgE,EAAa92D,KAAK,CAChBwB,MAAOy1D,EAAoB,EAC3B99B,OAAQg+B,EAAaX,SAASp7D,SAGhCg8D,GAAsBD,EAAaX,SAASp7D,OAC5C+7D,EAAepB,IAAWmB,QAE1Bp+D,KAAKmtB,MAAM7N,IAAIxhB,EAAGmgE,EAAcE,MAKpC,IAAIK,EAAqB,EACzB,IAAS1gE,EAAIkgE,EAAa17D,OAAS,EAAGxE,GAAK,EAAGA,IAC5CkgE,EAAalgE,GAAG4K,OAAS81D,EACzBx+D,KAAKmtB,MAAMsxC,gBAAgBr3D,KAAK42D,EAAalgE,IAC7C0gE,GAAsBR,EAAalgE,GAAGuiC,OAExC,IAAM87B,EAAe96D,KAAKC,IAAI,EAAG48D,EAAsBhB,EAAgBl9D,KAAKmtB,MAAMuF,WAC9EypC,EAAe,GACjBn8D,KAAKmtB,MAAMuxC,cAAct3D,KAAK+0D,KAoB7B,YAAA3a,yBAAP,SAAgCr7C,EAAmBk7C,EAAqBj7C,GACtE,SADsE,IAAAA,OAAA,GAC/Di7C,GAAa,CAClB,IAAM78C,EAAOxE,KAAKmtB,MAAMxuB,IAAIwH,GAC5B,IAAK3B,EACH,MAAO,EAAE,GAAI,GAGf,IADA,IAAM,EAAS,EAAcA,EAAK6c,mBAAqB7c,EAAKlC,OACnDxE,EAAI,EAAGA,EAAI,IAAUA,EAM5B,GALI0G,EAAK7F,IAAIb,GAAG,EAAAqL,yBAGdk4C,GAAe78C,EAAK7F,IAAIb,GAAG,EAAAoL,sBAAsB5G,QAAU,GAEzD++C,EAAc,EAChB,MAAO,CAACl7C,EAAWrI,GAGvBqI,IAEF,MAAO,CAACA,EAAW,IAad,YAAAy9C,4BAAP,SAAmCz9C,EAAmBC,EAAoB3D,EAAsBof,QAAtB,IAAApf,MAAA,GACxE,IAAM+B,EAAOxE,KAAKmtB,MAAMxuB,IAAIwH,GAC5B,OAAK3B,EAGEA,EAAKgC,kBAAkBJ,EAAW3D,EAAUof,GAF1C,IAKJ,YAAAklC,uBAAP,SAA8B1jD,GAI5B,IAHA,IAAIg9C,EAAQh9C,EACR2jD,EAAO3jD,EAEJg9C,EAAQ,GAAKrgD,KAAKmtB,MAAMxuB,IAAI0hD,GAAQx7C,WACzCw7C,IAGF,KAAO2G,EAAO,EAAIhnD,KAAKmtB,MAAM7qB,QAAUtC,KAAKmtB,MAAMxuB,IAAIqoD,EAAO,GAAIniD,WAC/DmiD,IAEF,MAAO,CAAE3G,MAAK,EAAE2G,KAAI,IAOf,YAAA3hB,cAAP,SAAqBvnC,GAUnB,IATIA,QACGkC,KAAK6uB,KAAK/wB,KACbA,EAAIkC,KAAK8uB,SAAShxB,KAGpBkC,KAAK6uB,KAAO,GACZ/wB,EAAI,GAGCA,EAAIkC,KAAKw7D,MAAO19D,GAAKkC,KAAKmY,gBAAgB3K,QAAQmxD,aACvD3+D,KAAK6uB,KAAK/wB,IAAK,GAQZ,YAAAgxB,SAAP,SAAgBpT,GAId,IAHIA,UACFA,EAAI1b,KAAK0b,IAEH1b,KAAK6uB,OAAOnT,IAAMA,EAAI,IAC9B,OAAOA,GAAK1b,KAAKw7D,MAAQx7D,KAAKw7D,MAAQ,EAAI9/C,EAAI,EAAI,EAAIA,GAOjD,YAAA2S,SAAP,SAAgB3S,GAId,IAHIA,UACFA,EAAI1b,KAAK0b,IAEH1b,KAAK6uB,OAAOnT,IAAMA,EAAI1b,KAAKw7D,QACnC,OAAO9/C,GAAK1b,KAAKw7D,MAAQx7D,KAAKw7D,MAAQ,EAAI9/C,EAAI,EAAI,EAAIA,GAGjD,YAAAskB,UAAP,SAAiB38B,GAAjB,WACQu7D,EAAS,IAAI,EAAAC,OAAOx7D,GA0B1B,OAzBArD,KAAKg/B,QAAQ93B,KAAK03D,GAClBA,EAAOp2D,SAASxI,KAAKmtB,MAAM+1B,QAAO,SAAA7iB,GAChCu+B,EAAOp6D,MAAQ67B,EAEXu+B,EAAOp6D,KAAO,GAChBo6D,EAAO1+D,cAGX0+D,EAAOp2D,SAASxI,KAAKmtB,MAAM2xC,UAAS,SAAA3yC,GAC9ByyC,EAAOp6D,MAAQ2nB,EAAMzjB,QACvBk2D,EAAOp6D,MAAQ2nB,EAAMkU,YAGzBu+B,EAAOp2D,SAASxI,KAAKmtB,MAAM4xC,UAAS,SAAA5yC,GAE9ByyC,EAAOp6D,MAAQ2nB,EAAMzjB,OAASk2D,EAAOp6D,KAAO2nB,EAAMzjB,MAAQyjB,EAAMkU,QAClEu+B,EAAO1+D,UAIL0+D,EAAOp6D,KAAO2nB,EAAMzjB,QACtBk2D,EAAOp6D,MAAQ2nB,EAAMkU,YAGzBu+B,EAAOp2D,SAASo2D,EAAOI,WAAU,WAAM,SAAKC,cAAcL,OACnDA,GAGD,YAAAK,cAAR,SAAsBL,GACpB5+D,KAAKg/B,QAAQ73B,OAAOnH,KAAKg/B,QAAQv6B,QAAQm6D,GAAS,IAG7C,YAAA1e,SAAP,SAAgB95C,EAAoBoa,EAAqBoa,EAAmBskC,EAAwBC,GAClG,OAAO,IAAIC,EAAqBp/D,KAAMoG,EAAWoa,EAAYoa,EAAUskC,EAAeC,IAE1F,EAhlBA,GAAa,EAAAvE,SA8lBb,iBAGE,WACUt5B,EACA+9B,EACAC,EACAC,EACAC,EACAC,QAHA,IAAAH,MAAA,QACA,IAAAC,MAAoBj+B,EAAQnU,MAAM7qB,aAClC,IAAAk9D,MAAA,QACA,IAAAC,MAAA,GALA,KAAAn+B,UACA,KAAA+9B,aACA,KAAAC,cACA,KAAAC,YACA,KAAAC,iBACA,KAAAC,eAEJz/D,KAAKs/D,YAAc,IACrBt/D,KAAKs/D,YAAc,GAEjBt/D,KAAKu/D,UAAYv/D,KAAKshC,QAAQnU,MAAM7qB,SACtCtC,KAAKu/D,UAAYv/D,KAAKshC,QAAQnU,MAAM7qB,QAEtCtC,KAAK0/D,SAAW1/D,KAAKs/D,YA0BzB,OAvBS,YAAAnf,QAAP,WACE,OAAOngD,KAAK0/D,SAAW1/D,KAAKu/D,WAGvB,YAAAjtB,KAAP,WACE,IAAM9W,EAAQx7B,KAAKshC,QAAQylB,uBAAuB/mD,KAAK0/D,UAEnDlkC,EAAM6kB,MAAQrgD,KAAKs/D,YAAct/D,KAAKw/D,iBACxChkC,EAAM6kB,MAAQrgD,KAAKs/D,YAAct/D,KAAKw/D,gBAEpChkC,EAAMwrB,KAAOhnD,KAAKu/D,UAAYv/D,KAAKy/D,eACrCjkC,EAAMwrB,KAAOhnD,KAAKu/D,UAAYv/D,KAAKy/D,cAGrCjkC,EAAM6kB,MAAQh/C,KAAKC,IAAIk6B,EAAM6kB,MAAO,GACpC7kB,EAAMwrB,KAAO3lD,KAAKiR,IAAIkpB,EAAMwrB,KAAMhnD,KAAKshC,QAAQnU,MAAM7qB,QAErD,IADA,IAAIqH,EAAU,GACL7L,EAAI09B,EAAM6kB,MAAOviD,GAAK09B,EAAMwrB,OAAQlpD,EAC3C6L,GAAW3J,KAAKshC,QAAQsiB,4BAA4B9lD,EAAGkC,KAAKq/D,YAG9D,OADAr/D,KAAK0/D,SAAWlkC,EAAMwrB,KAAO,EACtB,CAACxrB,MAAK,EAAE7xB,QAAO,IAE1B,EA3CA,GAAa,EAAAy1D,wB,oGClnBb,WAgBA,aAYE,WACUO,GAAA,KAAAA,aARH,KAAAC,gBAAkB,IAAI,EAAAp4D,aAEtB,KAAAi3D,gBAAkB,IAAI,EAAAj3D,aAEtB,KAAAk3D,cAAgB,IAAI,EAAAl3D,aAMzBxH,KAAK6/D,OAAS,IAAIh8D,MAAS7D,KAAK2/D,YAChC3/D,KAAKs/D,YAAc,EACnBt/D,KAAK8/D,QAAU,EAmMnB,OA9ME,sBAAW,uBAAQ,C,IAAnB,WAA8C,OAAO9/D,KAAK4/D,gBAAgBzzC,O,gCAE1E,sBAAW,uBAAQ,C,IAAnB,WAA8C,OAAOnsB,KAAKy+D,gBAAgBtyC,O,gCAE1E,sBAAW,qBAAM,C,IAAjB,WAAsC,OAAOnsB,KAAK0+D,cAAcvyC,O,gCAUhE,sBAAW,wBAAS,C,IAApB,WACE,OAAOnsB,KAAK2/D,Y,IAGd,SAAqB1D,GAEnB,GAAIj8D,KAAK2/D,aAAe1D,EAAxB,CAOA,IADA,IAAM8D,EAAW,IAAIl8D,MAAqBo4D,GACjCn+D,EAAI,EAAGA,EAAIuD,KAAKiR,IAAI2pD,EAAcj8D,KAAKsC,QAASxE,IACvDiiE,EAASjiE,GAAKkC,KAAK6/D,OAAO7/D,KAAKggE,gBAAgBliE,IAEjDkC,KAAK6/D,OAASE,EACd//D,KAAK2/D,WAAa1D,EAClBj8D,KAAKs/D,YAAc,I,gCAGrB,sBAAW,qBAAM,C,IAAjB,WACE,OAAOt/D,KAAK8/D,S,IAGd,SAAkBG,GAChB,GAAIA,EAAYjgE,KAAK8/D,QACnB,IAAK,IAAIhiE,EAAIkC,KAAK8/D,QAAShiE,EAAImiE,EAAWniE,IACxCkC,KAAK6/D,OAAO/hE,QAAKuG,EAGrBrE,KAAK8/D,QAAUG,G,gCAWV,YAAAthE,IAAP,SAAW+J,GACT,OAAO1I,KAAK6/D,OAAO7/D,KAAKggE,gBAAgBt3D,KAWnC,YAAA4W,IAAP,SAAW5W,EAAe3J,GACxBiB,KAAK6/D,OAAO7/D,KAAKggE,gBAAgBt3D,IAAU3J,GAQtC,YAAAmI,KAAP,SAAYnI,GACViB,KAAK6/D,OAAO7/D,KAAKggE,gBAAgBhgE,KAAK8/D,UAAY/gE,EAC9CiB,KAAK8/D,UAAY9/D,KAAK2/D,YACxB3/D,KAAKs/D,cAAgBt/D,KAAKs/D,YAAct/D,KAAK2/D,WAC7C3/D,KAAK0+D,cAAct3D,KAAK,IAExBpH,KAAK8/D,WASF,YAAAxH,QAAP,WACE,GAAIt4D,KAAK8/D,UAAY9/D,KAAK2/D,WACxB,MAAM,IAAIt9D,MAAM,4CAIlB,OAFArC,KAAKs/D,cAAgBt/D,KAAKs/D,YAAct/D,KAAK2/D,WAC7C3/D,KAAK0+D,cAAct3D,KAAK,GACjBpH,KAAK6/D,OAAO7/D,KAAKggE,gBAAgBhgE,KAAK8/D,QAAU,KAMzD,sBAAW,qBAAM,C,IAAjB,WACE,OAAO9/D,KAAK8/D,UAAY9/D,KAAK2/D,Y,gCAOxB,YAAA1tC,IAAP,WACE,OAAOjyB,KAAK6/D,OAAO7/D,KAAKggE,gBAAgBhgE,KAAK8/D,UAAY,KAYpD,YAAA34D,OAAP,SAAc6G,EAAekyD,G,IAAqB,wDAEhD,GAAIA,EAAa,CACf,IAAK,IAAIpiE,EAAIkQ,EAAOlQ,EAAIkC,KAAK8/D,QAAUI,EAAapiE,IAClDkC,KAAK6/D,OAAO7/D,KAAKggE,gBAAgBliE,IAAMkC,KAAK6/D,OAAO7/D,KAAKggE,gBAAgBliE,EAAIoiE,IAE9ElgE,KAAK8/D,SAAWI,EAIlB,IAASpiE,EAAIkC,KAAK8/D,QAAU,EAAGhiE,GAAKkQ,EAAOlQ,IACzCkC,KAAK6/D,OAAO7/D,KAAKggE,gBAAgBliE,EAAIqiE,EAAM79D,SAAWtC,KAAK6/D,OAAO7/D,KAAKggE,gBAAgBliE,IAEzF,IAASA,EAAI,EAAGA,EAAIqiE,EAAM79D,OAAQxE,IAChCkC,KAAK6/D,OAAO7/D,KAAKggE,gBAAgBhyD,EAAQlQ,IAAMqiE,EAAMriE,GAIvD,GAAIkC,KAAK8/D,QAAUK,EAAM79D,OAAStC,KAAK2/D,WAAY,CACjD,IAAMS,EAAepgE,KAAK8/D,QAAUK,EAAM79D,OAAUtC,KAAK2/D,WACzD3/D,KAAKs/D,aAAec,EACpBpgE,KAAK8/D,QAAU9/D,KAAK2/D,WACpB3/D,KAAK0+D,cAAct3D,KAAKg5D,QAExBpgE,KAAK8/D,SAAWK,EAAM79D,QAQnB,YAAA8sB,UAAP,SAAiBusB,GACXA,EAAQ37C,KAAK8/D,UACfnkB,EAAQ37C,KAAK8/D,SAEf9/D,KAAKs/D,aAAe3jB,EACpB37C,KAAK8/D,SAAWnkB,EAChB37C,KAAK0+D,cAAct3D,KAAKu0C,IAGnB,YAAAtpB,cAAP,SAAqBrkB,EAAe2tC,EAAezB,GACjD,KAAIyB,GAAS,GAAb,CAGA,GAAI3tC,EAAQ,GAAKA,GAAShO,KAAK8/D,QAC7B,MAAM,IAAIz9D,MAAM,+BAElB,GAAI2L,EAAQksC,EAAS,EACnB,MAAM,IAAI73C,MAAM,gDAGlB,GAAI63C,EAAS,EAAG,CACd,IAAK,IAAIp8C,EAAI69C,EAAQ,EAAG79C,GAAK,EAAGA,IAC9BkC,KAAKsf,IAAItR,EAAQlQ,EAAIo8C,EAAQl6C,KAAKrB,IAAIqP,EAAQlQ,IAEhD,IAAMuiE,EAAgBryD,EAAQ2tC,EAAQzB,EAAUl6C,KAAK8/D,QACrD,GAAIO,EAAe,EAEjB,IADArgE,KAAK8/D,SAAWO,EACTrgE,KAAK8/D,QAAU9/D,KAAK2/D,YACzB3/D,KAAK8/D,UACL9/D,KAAKs/D,cACLt/D,KAAK0+D,cAAct3D,KAAK,QAI5B,IAAStJ,EAAI,EAAGA,EAAI69C,EAAO79C,IACzBkC,KAAKsf,IAAItR,EAAQlQ,EAAIo8C,EAAQl6C,KAAKrB,IAAIqP,EAAQlQ,MAW5C,YAAAkiE,gBAAR,SAAwBt3D,GACtB,OAAQ1I,KAAKs/D,YAAc52D,GAAS1I,KAAK2/D,YAE7C,EApNA,GAAa,EAAAjE,gB,6BCuLb,SAAgBqC,EAA4B5wC,EAAqBrvB,EAAW2C,GAE1E,GAAI3C,IAAMqvB,EAAM7qB,OAAS,EACvB,OAAO6qB,EAAMrvB,GAAGujB,mBAKlB,IAAMi/C,GAAenzC,EAAMrvB,GAAGsiB,WAAW3f,EAAO,IAAuC,IAAhC0sB,EAAMrvB,GAAGoI,SAASzF,EAAO,GAC1E8/D,EAA2D,IAA7BpzC,EAAMrvB,EAAI,GAAGoI,SAAS,GAC1D,OAAIo6D,GAAcC,EACT9/D,EAAO,EAETA,E,iNAtMT,wCAA6C0sB,EAAkCqzC,EAAiBtF,EAAiBuF,EAAyBzE,GAKxI,IAFA,IAAMQ,EAAqB,GAElBn5D,EAAI,EAAGA,EAAI8pB,EAAM7qB,OAAS,EAAGe,IAAK,CAEzC,IAAIvF,EAAIuF,EACJkD,EAAW4mB,EAAMxuB,MAAMb,GAC3B,GAAKyI,EAAS1B,UAAd,CAMA,IADA,IAAMs4D,EAA6B,CAAChwC,EAAMxuB,IAAI0E,IACvCvF,EAAIqvB,EAAM7qB,QAAUiE,EAAS1B,WAClCs4D,EAAaj2D,KAAKX,GAClBA,EAAW4mB,EAAMxuB,MAAMb,GAKzB,GAAI2iE,GAAmBp9D,GAAKo9D,EAAkB3iE,EAC5CuF,GAAK85D,EAAa76D,OAAS,MAD7B,CAUA,IAJA,IAAIq7D,EAAgB,EAChBl8C,EAAUs8C,EAA4BZ,EAAcQ,EAAe6C,GACnE5C,EAAe,EACfp8C,EAAS,EACNo8C,EAAeT,EAAa76D,QAAQ,CACzC,IAAMo+D,EAAuB3C,EAA4BZ,EAAcS,EAAc4C,GAC/EG,EAAoBD,EAAuBl/C,EAC3Co/C,EAAqB1F,EAAUz5C,EAC/Bo8C,EAAcx8D,KAAKiR,IAAIquD,EAAmBC,GAEhDzD,EAAaQ,GAAer8C,cAAc67C,EAAaS,GAAep8C,EAAQC,EAASo8C,GAAa,IAEpGp8C,GAAWo8C,KACK3C,IACdyC,IACAl8C,EAAU,IAEZD,GAAUq8C,KACK6C,IACb9C,IACAp8C,EAAS,GAIK,IAAZC,GAAmC,IAAlBk8C,GAC2C,IAA1DR,EAAaQ,EAAgB,GAAGz3D,SAASg1D,EAAU,KACrDiC,EAAaQ,GAAer8C,cAAc67C,EAAaQ,EAAgB,GAAIzC,EAAU,EAAGz5C,IAAW,GAAG,GAEtG07C,EAAaQ,EAAgB,GAAG39C,QAAQk7C,EAAU,EAAGc,IAM3DmB,EAAaQ,GAAe58C,aAAaU,EAASy5C,EAASc,GAI3D,IADA,IAAI6E,EAAgB,EACX,EAAI1D,EAAa76D,OAAS,EAAG,EAAI,IACpC,EAAIq7D,GAAwD,IAAvCR,EAAa,GAAG97C,oBADE,IAEzCw/C,IAMAA,EAAgB,IAClBrE,EAASt1D,KAAK7D,EAAI85D,EAAa76D,OAASu+D,GACxCrE,EAASt1D,KAAK25D,IAGhBx9D,GAAK85D,EAAa76D,OAAS,IAE7B,OAAOk6D,GAQT,uCAA4CrvC,EAAkCqvC,GAM5E,IALA,IAAMK,EAAmB,GAErBiE,EAAoB,EACpBC,EAAoBvE,EAASsE,GAC7BE,EAAoB,EACfljE,EAAI,EAAGA,EAAIqvB,EAAM7qB,OAAQxE,IAChC,GAAIijE,IAAsBjjE,EAAG,CAC3B,IAAM+iE,EAAgBrE,IAAWsE,GAGjC3zC,EAAMyyC,gBAAgBx4D,KAAK,CACzBsB,MAAO5K,EAAIkjE,EACX3gC,OAAQwgC,IAGV/iE,GAAK+iE,EAAgB,EACrBG,GAAqBH,EACrBE,EAAoBvE,IAAWsE,QAE/BjE,EAAO31D,KAAKpJ,GAGhB,MAAO,CACL++D,OAAM,EACNE,aAAciE,IAUlB,sCAA2C7zC,EAAkC8zC,GAG3E,IADA,IAAMC,EAA+B,GAC5BpjE,EAAI,EAAGA,EAAImjE,EAAU3+D,OAAQxE,IACpCojE,EAAeh6D,KAAKimB,EAAMxuB,IAAIsiE,EAAUnjE,KAI1C,IAASA,EAAI,EAAGA,EAAIojE,EAAe5+D,OAAQxE,IACzCqvB,EAAM7N,IAAIxhB,EAAGojE,EAAepjE,IAE9BqvB,EAAM7qB,OAAS2+D,EAAU3+D,QAiB3B,0CAA+C66D,EAA4BqD,EAAiBtF,GAS1F,IARA,IAAMiG,EAA2B,GAC3BC,EAAcjE,EAAa9jC,KAAI,SAACt7B,EAAGD,GAAM,OAAAigE,EAA4BZ,EAAcr/D,EAAG0iE,MAAUa,QAAO,SAACzhE,EAAGzB,GAAM,OAAAyB,EAAIzB,KAIvHqjB,EAAS,EACT8/C,EAAU,EACVC,EAAiB,EACdA,EAAiBH,GAAa,CACnC,GAAIA,EAAcG,EAAiBrG,EAAS,CAE1CiG,EAAej6D,KAAKk6D,EAAcG,GAClC,MAEF//C,GAAU05C,EACV,IAAMsG,EAAmBzD,EAA4BZ,EAAcmE,EAASd,GACxEh/C,EAASggD,IACXhgD,GAAUggD,EACVF,KAEF,IAAMG,EAA8D,IAA/CtE,EAAamE,GAASp7D,SAASsb,EAAS,GACzDigD,GACFjgD,IAEF,IAAMquC,EAAa4R,EAAevG,EAAU,EAAIA,EAChDiG,EAAej6D,KAAK2oD,GACpB0R,GAAkB1R,EAGpB,OAAOsR,GAGT,iC,8aCxMA,WAIA,cAWE,WACS38D,GADT,MAGE,cAAO,K,OAFA,EAAAA,OATD,EAAA0vB,IAAc2qC,EAAO6C,UACtB,EAAAC,YAAsB,EAIrB,EAAAC,WAAa,IAAI,EAAAp6D,a,EAkB3B,OA1B4B,OAM1B,sBAAW,iBAAE,C,IAAb,WAA0B,OAAOxH,KAAKk0B,K,gCAGtC,sBAAW,wBAAS,C,IAApB,WAAuC,OAAOl0B,KAAK4hE,WAAWz1C,O,gCAQvD,YAAAjsB,QAAP,WACMF,KAAK2hE,aAGT3hE,KAAK2hE,YAAa,EAClB3hE,KAAKwE,MAAQ,EAEbxE,KAAK4hE,WAAWx6D,SAvBH,EAAAs6D,QAAU,EAyB3B,EA1BA,CAHA,KAG4B74D,YAAf,EAAAg2D,U,6ICHb,WACA,QACA,QAMa,EAAAgD,mBAAqB,ioBAGrB,EAAAC,gBAAoCtjE,OAAOkhB,OAAO,CAC7Djf,KAAM,GACND,KAAM,GACNkkB,aAAa,EACbD,YAAa,QACbs5B,YAAa,EACbqL,UAAY,EAAAyY,mBACZrzB,UAAW,OACXxxB,4BAA4B,EAC5Bq0B,mBAAoB,MACpBC,sBAAuB,EACvBvzB,WAAY,kCACZD,SAAU,GACVD,WAAY,SACZD,eAAgB,OAChBsoB,WAAY,EACZ4kB,yBAA0B,IAC1BxU,cAAe,EACftK,SAAU,OACV+vB,WAAY,IACZxqB,kBAAmB,EACnB5kB,kBAAkB,EAClB0gB,iBAAiB,EACjBiX,+BAA+B,EAC/BtmC,qBAAsB,EACtB+jD,cAAc,EACd5jC,kBAAkB,EAClBzH,mBAAmB,EACnBioC,aAAc,EACd7mC,MAAO,GACPiP,sBAAuB,EAAA5zB,MACvBo3B,aAAc,SACdrgB,cAAe,GACfwuC,aAAa,EACb7R,cAAe,eAEf54B,YAAY,EACZ0B,SAAU,QACV0e,cAAc,IAMhB,IAAM2zB,EAA2B,CAAC,OAAQ,QAE1C,aAQE,WAAYx0D,GAHJ,KAAAy0D,gBAAkB,IAAI,EAAAz6D,aAI5BxH,KAAKwN,QAAU,EAAAlC,MAAM,EAAAw2D,iBACrB,IAAgB,UAAAtjE,OAAOyiB,KAAKzT,GAAZ,eAAsB,CAAjC,IAAM+lB,EAAC,KACV,GAAIA,KAAKvzB,KAAKwN,QAAS,CACrB,IAAM00D,EAAW10D,EAAQ+lB,GACzBvzB,KAAKwN,QAAQ+lB,GAAK2uC,IAyE1B,OAhFE,sBAAW,6BAAc,C,IAAzB,WAA8C,OAAOliE,KAAKiiE,gBAAgB91C,O,gCAYnE,YAAA6U,UAAP,SAAiB3hC,EAAaN,GAC5B,KAAMM,KAAO,EAAAyiE,iBACX,MAAM,IAAIz/D,MAAM,uBAAyBhD,EAAM,KAEjD,IAA+C,IAA3C2iE,EAAyBv9D,QAAQpF,GACnC,MAAM,IAAIgD,MAAM,WAAWhD,EAAG,wCAE5BW,KAAKwN,QAAQnO,KAASN,IAI1BA,EAAQiB,KAAKmiE,2BAA2B9iE,EAAKN,GAGzCiB,KAAKwN,QAAQnO,KAASN,IAI1BiB,KAAKwN,QAAQnO,GAAON,EACpBiB,KAAKiiE,gBAAgB76D,KAAK/H,MAGpB,YAAA8iE,2BAAR,SAAmC9iE,EAAaN,GAC9C,OAAQM,GACN,IAAK,YACL,IAAK,cACL,IAAK,aACL,IAAK,iBACL,IAAK,eACL,IAAK,gBACEN,IACHA,EAAQ,EAAA+iE,gBAAgBziE,IAE1B,MACF,IAAK,cACHN,EAAQsC,KAAKO,MAAM7C,GAErB,IAAK,aACL,IAAK,eACH,GAAIA,EAAQ,EACV,MAAM,IAAIsD,MAAShD,EAAG,kCAAkCN,GAE1D,MACF,IAAK,uBACHA,EAAQsC,KAAKC,IAAI,EAAGD,KAAKiR,IAAI,GAAIjR,KAAK4P,MAAc,GAARlS,GAAc,KAC1D,MACF,IAAK,aAEH,IADAA,EAAQsC,KAAKiR,IAAIvT,EAAO,aACZ,EACV,MAAM,IAAIsD,MAAShD,EAAG,kCAAkCN,GAE1D,MACF,IAAK,wBACL,IAAK,oBACH,GAAIA,GAAS,EACX,MAAM,IAAIsD,MAAShD,EAAG,8CAA8CN,GAI1E,OAAOA,GAGF,YAAAgiC,UAAP,SAAiB1hC,GACf,KAAMA,KAAO,EAAAyiE,iBACX,MAAM,IAAIz/D,MAAM,uBAAuBhD,EAAG,KAE5C,OAAOW,KAAKwN,QAAQnO,IAExB,EAtFA,GAAa,EAAA83D,kB,o1BC1Db,WACA,OAEA,QACA,OAEMiL,EAAwB5jE,OAAOkhB,OAAO,CAC1CqN,YAAY,IAGRs1C,EAA8C7jE,OAAOkhB,OAAO,CAChEkQ,uBAAuB,EACvBG,mBAAmB,EACnBQ,oBAAoB,EACpBhC,QAAQ,EACRL,mBAAmB,EACnB+B,WAAW,EACXnD,YAAY,IAGd,cAkBE,WAEE2T,EACiCvoB,EACH2L,EACI1L,GALpC,MAOE,cAAO,K,OAJ0B,EAAAD,iBACH,EAAA2L,cACI,EAAA1L,kBApB7B,EAAAmY,qBAA+B,EAC/B,EAAAH,gBAA0B,EAOzB,EAAA8mC,QAAU,EAAKzuD,SAAS,IAAI,EAAAhB,cAE5B,EAAA86D,aAAe,EAAK95D,SAAS,IAAI,EAAAhB,cAEjC,EAAAwvD,UAAY,EAAKxuD,SAAS,IAAI,EAAAhB,cAWpC,EAAK+6D,gBAAkB9hC,EACvB,EAAKj4B,SAAS,CAAEtI,QAAS,WAAM,SAAKqiE,qBAAkBl+D,KACtD,EAAK2oB,MAAQ,EAAA1hB,MAAM82D,GACnB,EAAKv1C,gBAAkB,EAAAvhB,MAAM+2D,G,EAqCjC,OAlEiC,OAY/B,sBAAW,qBAAM,C,IAAjB,WAAsC,OAAOriE,KAAKi3D,QAAQ9qC,O,gCAE1D,sBAAW,0BAAW,C,IAAtB,WAAyC,OAAOnsB,KAAKsiE,aAAan2C,O,gCAElE,sBAAW,uBAAQ,C,IAAnB,WAAwC,OAAOnsB,KAAKg3D,UAAU7qC,O,gCAgBvD,YAAAmF,MAAP,WACEtxB,KAAKgtB,MAAQ,EAAA1hB,MAAM82D,GACnBpiE,KAAK6sB,gBAAkB,EAAAvhB,MAAM+2D,IAGxB,YAAAh+C,iBAAP,SAAwBtW,EAAcy0D,GAEpC,QAFoC,IAAAA,OAAA,IAEhCxiE,KAAKmY,gBAAgB3K,QAAQu0D,aAAjC,CAKA,IAAMz+D,EAAStD,KAAKkY,eAAe5U,OAC/BA,EAAO8pB,QAAU9pB,EAAO+rB,OAC1BrvB,KAAKuiE,kBAIHC,GACFxiE,KAAKsiE,aAAal7D,OAIpBpH,KAAK6jB,YAAYc,MAAM,iBAAiB5W,EAAI,KAAK,WAAM,OAAAA,EAAKqrB,MAAM,IAAIC,KAAI,SAAA1xB,GAAK,OAAAA,EAAE6C,WAAW,SAC5FxK,KAAKi3D,QAAQ7vD,KAAK2G,KAGb,YAAA00D,mBAAP,SAA0B10D,GACpB/N,KAAKmY,gBAAgB3K,QAAQu0D,eAGjC/hE,KAAK6jB,YAAYc,MAAM,mBAAmB5W,EAAI,KAAK,WAAM,OAAAA,EAAKqrB,MAAM,IAAIC,KAAI,SAAA1xB,GAAK,OAAAA,EAAE6C,WAAW,SAC9FxK,KAAKg3D,UAAU5vD,KAAK2G,KAhEXupD,EAAW,GAqBnB,MAAA1vD,gBACA,MAAAO,aACA,MAAAC,kBAvBQkvD,GAAb,CAAiC,EAAAzuD,YAApB,EAAAyuD,e,6gBCrBb,WACA,OAMMoL,EAAyD,CAM7DC,KAAM,CACJ52B,OAAQ,EACR62B,SAAU,WAAM,WAOlBC,IAAK,CACH92B,OAAQ,EACR62B,SAAU,SAACj7D,GAET,OAAiB,IAAbA,EAAEi/B,QAAiD,IAAbj/B,EAAEqf,SAI5Crf,EAAEujC,MAAO,EACTvjC,EAAEo6B,KAAM,EACRp6B,EAAEqqB,OAAQ,GACH,KAQX8wC,MAAO,CACL/2B,OAAQ,GACR62B,SAAU,SAACj7D,GAET,OAAiB,KAAbA,EAAEqf,SAWV+7C,KAAM,CACJh3B,OAAQ,GACR62B,SAAU,SAACj7D,GAET,OAAiB,KAAbA,EAAEqf,QAAgD,IAAbrf,EAAEi/B,SAW/Co8B,IAAK,CACHj3B,OACE,GAEF62B,SAAU,SAACj7D,GAAuB,YAWtC,SAASs7D,EAAUt7D,EAAoBu7D,GACrC,IAAIx4D,GAAQ/C,EAAEujC,KAAO,GAAiB,IAAMvjC,EAAEqqB,MAAQ,EAAkB,IAAMrqB,EAAEo6B,IAAM,EAAgB,GAoBtG,OAnBiB,IAAbp6B,EAAEi/B,QACJl8B,GAAQ,GACRA,GAAQ/C,EAAEqf,SAEVtc,GAAmB,EAAX/C,EAAEi/B,OACK,EAAXj/B,EAAEi/B,SACJl8B,GAAQ,IAEK,EAAX/C,EAAEi/B,SACJl8B,GAAQ,KAEO,KAAb/C,EAAEqf,OACJtc,GAAQ,GACc,IAAb/C,EAAEqf,QAAkCk8C,IAG7Cx4D,GAAQ,IAGLA,EAGT,IAAMy4D,EAAIt1D,OAAOC,aAKXs1D,EAAwD,CAM5DC,QAAS,SAAC17D,GACR,IAAMoc,EAAS,CAACk/C,EAAUt7D,GAAG,GAAS,GAAIA,EAAEhE,IAAM,GAAIgE,EAAEjE,IAAM,IAK9D,OAAIqgB,EAAO,GAAK,KAAOA,EAAO,GAAK,KAAOA,EAAO,GAAK,IAC7C,GAEF,MAASo/C,EAAEp/C,EAAO,IAAMo/C,EAAEp/C,EAAO,IAAMo/C,EAAEp/C,EAAO,KAOzDu/C,IAAK,SAAC37D,GACJ,IAAM2f,EAAsB,IAAb3f,EAAEqf,QAA8C,IAAbrf,EAAEi/B,OAAoC,IAAM,IAC9F,MAAO,MAASq8B,EAAUt7D,GAAG,GAAK,IAAIA,EAAEhE,IAAG,IAAIgE,EAAEjE,IAAM4jB,IAoB3D,aAQE,WACmCpP,EACF0L,GADE,KAAA1L,iBACF,KAAA0L,eATzB,KAAA2/C,WAAmD,GACnD,KAAAC,WAAkD,GAClD,KAAAC,gBAA0B,GAC1B,KAAAC,gBAA0B,GAC1B,KAAAC,kBAAoB,IAAI,EAAAn8D,aACxB,KAAAo8D,WAAqC,KAO3C,IAAmB,UAAAplE,OAAOyiB,KAAKyhD,GAAZ,eAAgC,CAA9C,IAAM,EAAI,KAAoC1iE,KAAK6jE,YAAY,EAAMnB,EAAkB,IAC5F,IAAmB,UAAAlkE,OAAOyiB,KAAKmiD,GAAZ,eAAgC,CAA9C,IAAM,EAAI,KAAoCpjE,KAAK8jE,YAAY,EAAMV,EAAkB,IAE5FpjE,KAAKsxB,QAiIT,OA9HS,YAAAuyC,YAAP,SAAmBxlE,EAAc0lE,GAC/B/jE,KAAKujE,WAAWllE,GAAQ0lE,GAGnB,YAAAD,YAAP,SAAmBzlE,EAAc2lE,GAC/BhkE,KAAKwjE,WAAWnlE,GAAQ2lE,GAG1B,sBAAW,6BAAc,C,IAAzB,WACE,OAAOhkE,KAAKyjE,iB,IAOd,SAA0BplE,GACxB,IAAK2B,KAAKujE,WAAWllE,GACnB,MAAM,IAAIgE,MAAM,qBAAqBhE,EAAI,KAE3C2B,KAAKyjE,gBAAkBplE,EACvB2B,KAAK2jE,kBAAkBv8D,KAAKpH,KAAKujE,WAAWllE,GAAM0tC,S,gCATpD,sBAAW,mCAAoB,C,IAA/B,WACE,OAAwD,IAAjD/rC,KAAKujE,WAAWvjE,KAAKyjE,iBAAiB13B,Q,gCAW/C,sBAAW,6BAAc,C,IAAzB,WACE,OAAO/rC,KAAK0jE,iB,IAGd,SAA0BrlE,GACxB,IAAK2B,KAAKwjE,WAAWnlE,GACnB,MAAM,IAAIgE,MAAM,qBAAqBhE,EAAI,KAE3C2B,KAAK0jE,gBAAkBrlE,G,gCAGlB,YAAAizB,MAAP,WACEtxB,KAAKgwB,eAAiB,OACtBhwB,KAAKkwB,eAAiB,UACtBlwB,KAAK4jE,WAAa,MAMpB,sBAAW,+BAAgB,C,IAA3B,WACE,OAAO5jE,KAAK2jE,kBAAkBx3C,O,gCAazB,YAAA8e,kBAAP,SAAyBtjC,GAEvB,GAAIA,EAAEhE,IAAM,GAAKgE,EAAEhE,KAAO3D,KAAKkY,eAAezX,MACvCkH,EAAEjE,IAAM,GAAKiE,EAAEjE,KAAO1D,KAAKkY,eAAe1X,KAC/C,OAAO,EAIT,GAAiB,IAAbmH,EAAEi/B,QAAiD,KAAbj/B,EAAEqf,OAC1C,OAAO,EAET,GAAiB,IAAbrf,EAAEi/B,QAAgD,KAAbj/B,EAAEqf,OACzC,OAAO,EAET,GAAiB,IAAbrf,EAAEi/B,SAAkD,IAAbj/B,EAAEqf,QAAgD,IAAbrf,EAAEqf,QAChF,OAAO,EAQT,GAJArf,EAAEhE,MACFgE,EAAEjE,MAGe,KAAbiE,EAAEqf,QAAmChnB,KAAK4jE,YAAc5jE,KAAKikE,eAAejkE,KAAK4jE,WAAYj8D,GAC/F,OAAO,EAIT,IAAK3H,KAAKujE,WAAWvjE,KAAKyjE,iBAAiBb,SAASj7D,GAClD,OAAO,EAIT,IAAMu8D,EAASlkE,KAAKwjE,WAAWxjE,KAAK0jE,iBAAiB/7D,GAYrD,OAXIu8D,IAE2B,YAAzBlkE,KAAK0jE,gBACP1jE,KAAK4jB,aAAa6+C,mBAAmByB,GAErClkE,KAAK4jB,aAAaS,iBAAiB6/C,GAAQ,IAI/ClkE,KAAK4jE,WAAaj8D,GAEX,GAGF,YAAAskC,cAAP,SAAqBF,GACnB,MAAO,CACLo4B,QAAkB,EAATp4B,GACTq4B,MAAgB,EAATr4B,GACPs4B,QAAkB,EAATt4B,GACTu4B,QAAkB,EAATv4B,GACTP,SAAmB,GAATO,KAIN,YAAAk4B,eAAR,SAAuBM,EAAqBC,GAC1C,OAAID,EAAG5gE,MAAQ6gE,EAAG7gE,MACd4gE,EAAG7gE,MAAQ8gE,EAAG9gE,MACd6gE,EAAG39B,SAAW49B,EAAG59B,SACjB29B,EAAGv9C,SAAWw9C,EAAGx9C,SACjBu9C,EAAGr5B,OAASs5B,EAAGt5B,OACfq5B,EAAGxiC,MAAQyiC,EAAGziC,KACdwiC,EAAGvyC,QAAUwyC,EAAGxyC,YA9IXulC,EAAgB,GASxB,MAAA3vD,gBACA,MAAAG,eAVQwvD,GAAb,GAAa,EAAAA,oB,4gBC9Jb,WAEA,aASE,WACmCr/C,GAAA,KAAAA,iBAEjClY,KAAKusB,aAiCT,OAvCE,sBAAW,oBAAK,C,IAAhB,WAA6B,OAAOvsB,KAAK20B,Q,gCACzC,sBAAW,kBAAG,C,IAAd,WAA2B,OAAO30B,KAAK80B,M,gCAQhC,YAAAvI,WAAP,WACEvsB,KAAK20B,OAAS30B,KAAKkY,eAAe5U,OAAOD,EACzCrD,KAAK80B,KAAO90B,KAAKkY,eAAe5U,OAAOD,GAGlC,YAAAgqB,UAAP,SAAiBhqB,GACXA,EAAIrD,KAAK20B,OACX30B,KAAK20B,OAAStxB,EACLA,EAAIrD,KAAK80B,OAClB90B,KAAK80B,KAAOzxB,IAIT,YAAAosB,eAAP,SAAsBwvB,EAAYE,GAChC,GAAIF,EAAKE,EAAI,CACX,IAAM3gC,EAAOygC,EACbA,EAAKE,EACLA,EAAK3gC,EAEHygC,EAAKj/C,KAAK20B,SACZ30B,KAAK20B,OAASsqB,GAEZE,EAAKn/C,KAAK80B,OACZ90B,KAAK80B,KAAOqqB,IAIT,YAAA3sB,aAAP,WACExyB,KAAKyvB,eAAe,EAAGzvB,KAAKkY,eAAe1X,KAAO,IA3CzCg3D,EAAe,GAUvB,MAAA5vD,iBAVQ4vD,GAAb,GAAa,EAAAA,mB,sGCFb,WACA,QAGA,aASE,aANQ,KAAAiN,WAAuDjmE,OAAOY,OAAO,MACrE,KAAAi2B,QAAkB,GAElB,KAAAqvC,UAAY,IAAI,EAAAl9D,aAItB,IAAMm9D,EAAkB,IAAI,EAAAC,UAC5B5kE,KAAKwI,SAASm8D,GACd3kE,KAAKq1B,QAAUsvC,EAAgB/hC,QAC/B5iC,KAAK6kE,gBAAkBF,EA2D3B,OAjEE,sBAAW,uBAAQ,C,IAAnB,WAAwC,OAAO3kE,KAAK0kE,UAAUv4C,O,gCAS9D,sBAAW,uBAAQ,C,IAAnB,WACE,OAAO3tB,OAAOyiB,KAAKjhB,KAAKykE,a,gCAG1B,sBAAW,4BAAa,C,IAAxB,WACE,OAAOzkE,KAAKq1B,S,IAGd,SAAyBuN,GACvB,IAAK5iC,KAAKykE,WAAW7hC,GACnB,MAAM,IAAIvgC,MAAM,4BAA4BugC,EAAO,KAErD5iC,KAAKq1B,QAAUuN,EACf5iC,KAAK6kE,gBAAkB7kE,KAAKykE,WAAW7hC,GACvC5iC,KAAK0kE,UAAUt9D,KAAKw7B,I,gCAGf,YAAAp6B,SAAP,SAAgBg6B,GACdxiC,KAAKykE,WAAWjiC,EAASI,SAAWJ,GAM/B,YAAAlV,QAAP,SAAew3C,GACb,OAAO9kE,KAAK6kE,gBAAgBv3C,QAAQw3C,IAG/B,YAAAnjB,mBAAP,SAA0B9hD,GAGxB,IAFA,IAAIsD,EAAS,EACPb,EAASzC,EAAEyC,OACRxE,EAAI,EAAGA,EAAIwE,IAAUxE,EAAG,CAC/B,IAAI4M,EAAO7K,EAAE2K,WAAW1M,GAExB,GAAI,OAAU4M,GAAQA,GAAQ,MAAQ,CACpC,KAAM5M,GAAKwE,EAMT,OAAOa,EAASnD,KAAKstB,QAAQ5iB,GAE/B,IAAMC,EAAS9K,EAAE2K,WAAW1M,GAGxB,OAAU6M,GAAUA,GAAU,MAChCD,EAAyB,MAAjBA,EAAO,OAAkBC,EAAS,MAAS,MAEnDxH,GAAUnD,KAAKstB,QAAQ3iB,GAG3BxH,GAAUnD,KAAKstB,QAAQ5iB,GAEzB,OAAOvH,GAEX,EAxEA,GAAa,EAAAs0D,kB,iGCJb,IA0DIrlB,EA1DJ,QAIM2yB,EAAgB,CACpB,CAAC,IAAQ,KAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KA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","file":"28.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { Event } from '@theia/core/lib/common/event';\nimport { WidgetOpenerOptions } from '@theia/core/lib/browser';\nimport { TerminalWidgetOptions, TerminalWidget } from './terminal-widget';\n\n/**\n * Service manipulating terminal widgets.\n */\nexport const TerminalService = Symbol('TerminalService');\nexport interface TerminalService {\n\n    /**\n     * Create new terminal with predefined options.\n     * @param options - terminal options.\n     */\n    newTerminal(options: TerminalWidgetOptions): Promise<TerminalWidget>;\n\n    /**\n     * Display new terminal widget.\n     * @param terminal - widget to attach.\n     * @deprecated use #open\n     */\n    activateTerminal(terminal: TerminalWidget): void;\n\n    open(terminal: TerminalWidget, options?: WidgetOpenerOptions): void;\n\n    readonly all: TerminalWidget[];\n\n    /**\n     * @param id - the widget id (NOT the terminal id!)\n     * @return the widget\n     */\n    getById(id: string): TerminalWidget | undefined;\n\n    /**\n     * @param id - the terminal id (NOT the terminal widget id!)\n     * @return the widget\n     */\n    getByTerminalId(terminalId: number): TerminalWidget | undefined;\n\n    /**\n     * Returns detected default shell.\n     */\n    getDefaultShell(): Promise<string>;\n\n    readonly onDidCreateTerminal: Event<TerminalWidget>;\n\n    readonly currentTerminal: TerminalWidget | undefined;\n\n    readonly onDidChangeCurrentTerminal: Event<TerminalWidget | undefined>;\n\n    readonly lastUsedTerminal: TerminalWidget | undefined;\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Event } from '@theia/core';\nimport { BaseWidget } from '@theia/core/lib/browser';\nimport { CommandLineOptions } from '@theia/process/lib/common/shell-command-builder';\nimport { TerminalSearchWidget } from '../search/terminal-search-widget';\nimport { TerminalProcessInfo } from '../../common/base-terminal-protocol';\n\nexport interface TerminalDimensions {\n    cols: number;\n    rows: number;\n}\n\n/**\n * Terminal UI widget.\n */\nexport abstract class TerminalWidget extends BaseWidget {\n\n    abstract processId: Promise<number>;\n\n    /**\n     * Get the current executable and arguments.\n     */\n    abstract processInfo: Promise<TerminalProcessInfo>;\n\n    /** Terminal kind that indicates whether a terminal is created by a user or by some extension for a user */\n    abstract readonly kind: 'user' | string;\n\n    abstract readonly terminalId: number;\n\n    abstract readonly dimensions: TerminalDimensions;\n\n    /**\n     * Start terminal and return terminal id.\n     * @param id - terminal id.\n     */\n    abstract start(id?: number): Promise<number>;\n\n    /**\n     * Send text to the terminal server.\n     * @param text - text content.\n     */\n    abstract sendText(text: string): void;\n\n    /**\n     * Resolves when the command is successfully sent, this doesn't mean that it\n     * was evaluated. Might reject if terminal wasn't properly started yet.\n     *\n     * Note that this method will try to escape your arguments as if it was\n     * someone inputting everything in a shell.\n     *\n     * Supported shells: `bash`, `cmd.exe`, `wsl.exe`, `pwsh/powershell.exe`\n     */\n    abstract executeCommand(commandOptions: CommandLineOptions): Promise<void>;\n\n    /** Event that fires when the terminal is connected or reconnected */\n    abstract onDidOpen: Event<void>;\n\n    /** Event that fires when the terminal fails to connect or reconnect */\n    abstract onDidOpenFailure: Event<void>;\n\n    /** Event that fires when the terminal size changed */\n    abstract onSizeChanged: Event<{ cols: number; rows: number; }>;\n\n    /** Event that fires when the terminal input data */\n    abstract onData: Event<string>;\n\n    abstract scrollLineUp(): void;\n\n    abstract scrollLineDown(): void;\n\n    abstract scrollToTop(): void;\n\n    abstract scrollToBottom(): void;\n\n    abstract scrollPageUp(): void;\n\n    abstract scrollPageDown(): void;\n\n    abstract resetTerminal(): void;\n    /**\n     * Event which fires when terminal did closed. Event value contains closed terminal widget definition.\n     */\n    abstract onTerminalDidClose: Event<TerminalWidget>;\n\n    /**\n     * Cleat terminal output.\n     */\n    abstract clearOutput(): void;\n\n    abstract writeLine(line: string): void;\n\n    abstract write(data: string): void;\n\n    abstract resize(cols: number, rows: number): void;\n\n    /**\n     * Return Terminal search box widget.\n     */\n    abstract getSearchBox(): TerminalSearchWidget;\n    /**\n     * Whether the terminal process has child processes.\n     */\n    abstract hasChildProcesses(): Promise<boolean>;\n\n    abstract setTitle(title: string): void;\n}\n\n/**\n * Terminal widget options.\n */\nexport const TerminalWidgetOptions = Symbol('TerminalWidgetOptions');\nexport interface TerminalWidgetOptions {\n\n    /**\n     * Human readable terminal representation on the UI.\n     */\n    readonly title?: string;\n\n    /**\n     * Path to the executable shell. For example: `/bin/bash`, `bash`, `sh`.\n     */\n    readonly shellPath?: string;\n\n    /**\n     * Shell arguments to executable shell, for example: [`-l`] - without login.\n     */\n    readonly shellArgs?: string[];\n\n    /**\n     * Current working directory.\n     */\n    readonly cwd?: string;\n\n    /**\n     * Environment variables for terminal.\n     */\n    readonly env?: { [key: string]: string | null };\n\n    /**\n     * In case `destroyTermOnClose` is true - terminal process will be destroyed on close terminal widget, otherwise will be kept\n     * alive.\n     */\n    readonly destroyTermOnClose?: boolean;\n\n    /**\n     * Terminal server side can send to the client `terminal title` to display this value on the UI. If\n     * useServerTitle = true then display this title, otherwise display title defined by 'title' argument.\n     */\n    readonly useServerTitle?: boolean;\n\n    /**\n     * Whether it is a pseudo terminal where an extension controls its input and output.\n     */\n    readonly isPseudoTerminal?: boolean;\n\n    /**\n     * Terminal id. Should be unique for all DOM.\n     */\n    readonly id?: string;\n\n    /**\n     * Terminal attributes. Can be useful to apply some implementation specific information.\n     */\n    readonly attributes?: { [key: string]: string | null };\n\n    /**\n     * Terminal kind that indicates whether a terminal is created by a user or by some extension for a user\n     */\n    readonly kind?: 'user' | string;\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { ReactWidget } from '@theia/core/lib/browser/widgets/react-widget';\nimport * as React from 'react';\nimport '../../../src/browser/style/terminal-search.css';\nimport { Terminal } from 'xterm';\nimport { SearchAddon, ISearchOptions } from 'xterm-addon-search';\nimport { Key } from '@theia/core/lib/browser';\n\nexport const TERMINAL_SEARCH_WIDGET_FACTORY_ID = 'terminal-search';\nexport const TerminalSearchWidgetFactory = Symbol('TerminalSearchWidgetFactory');\nexport type TerminalSearchWidgetFactory = (terminal: Terminal) => TerminalSearchWidget;\n\n@injectable()\nexport class TerminalSearchWidget extends ReactWidget {\n\n    private searchInput: HTMLInputElement | null;\n    private searchBox: HTMLDivElement | null;\n    private searchOptions: ISearchOptions = {};\n    private searchAddon: SearchAddon;\n\n    @inject(Terminal)\n    protected terminal: Terminal;\n\n    @postConstruct()\n    protected init(): void {\n        this.node.classList.add('theia-search-terminal-widget-parent');\n\n        this.searchAddon = new SearchAddon();\n        this.terminal.loadAddon(this.searchAddon);\n\n        this.hide();\n        this.update();\n    }\n\n    protected render(): React.ReactNode {\n        return <div className='theia-search-terminal-widget'>\n            <div className='theia-search-elem-box' ref={searchBox => this.searchBox = searchBox} >\n                <input\n                    title='Find'\n                    type='text'\n                    placeholder='Find'\n                    ref={ip => this.searchInput = ip}\n                    onKeyUp={this.onInputChanged}\n                    onFocus={this.onSearchInputFocus}\n                    onBlur={this.onSearchInputBlur}\n                />\n                <div title='Match case' tabIndex={0} className='search-elem match-case' onClick={this.handleCaseSensitiveOptionClicked}></div>\n                <div title='Match whole word' tabIndex={0} className='search-elem whole-word' onClick={this.handleWholeWordOptionClicked}></div>\n                <div title='Use regular expression' tabIndex={0} className='search-elem use-regexp' onClick={this.handleRegexOptionClicked}></div>\n            </div>\n            <button title='Previous match' className='search-elem arrow-up' onClick={this.handlePreviousButtonClicked}></button>\n            <button title='Next match' className='search-elem arrow-down' onClick={this.handleNextButtonClicked}></button>\n            <button title='Close' className='search-elem close' onClick={this.handleHide}></button>\n       </div>;\n    }\n\n    onSearchInputFocus = (): void => {\n        if (this.searchBox) {\n            this.searchBox.classList.add('focused');\n        }\n    };\n\n    onSearchInputBlur = (): void => {\n        if (this.searchBox) {\n            this.searchBox.classList.remove('focused');\n        }\n    };\n\n    private handleHide = (): void => {\n        this.hide();\n    };\n\n    private handleCaseSensitiveOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.caseSensitive = !this.searchOptions.caseSensitive;\n        this.updateSearchInputBox(this.searchOptions.caseSensitive, event.currentTarget);\n    };\n\n    private handleWholeWordOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.wholeWord = !this.searchOptions.wholeWord;\n        this.updateSearchInputBox(this.searchOptions.wholeWord, event.currentTarget);\n    };\n\n    private handleRegexOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.regex = !this.searchOptions.regex;\n        this.updateSearchInputBox(this.searchOptions.regex, event.currentTarget);\n    };\n\n    private updateSearchInputBox(enable: boolean, optionElement: HTMLSpanElement): void {\n        if (enable) {\n            optionElement.classList.add('option-enabled');\n        } else {\n            optionElement.classList.remove('option-enabled');\n        }\n        this.searchInput!.focus();\n    }\n\n    private onInputChanged = (event: React.KeyboardEvent): void => {\n        // move to previous search result on `Shift + Enter`\n        if (event && event.shiftKey && event.keyCode === Key.ENTER.keyCode) {\n            this.search(false, 'previous');\n            return;\n        }\n        // move to next search result on `Enter`\n        if (event && event.keyCode === Key.ENTER.keyCode) {\n            this.search(false, 'next');\n            return;\n        }\n\n        this.search(true, 'next');\n    };\n\n    search(incremental: boolean, searchDirection: 'next' | 'previous'): void {\n        if (this.searchInput) {\n            this.searchOptions.incremental = incremental;\n            const searchText = this.searchInput.value;\n\n            if (searchDirection === 'next') {\n                this.searchAddon.findNext(searchText, this.searchOptions);\n            }\n\n            if (searchDirection === 'previous') {\n                this.searchAddon.findPrevious(searchText, this.searchOptions);\n            }\n        }\n    }\n\n    private handleNextButtonClicked = (): void => {\n        this.search(false, 'next');\n    };\n\n    private handlePreviousButtonClicked = (): void => {\n        this.search(false, 'previous');\n    };\n\n    onAfterHide(): void {\n        this.terminal.focus();\n    }\n\n    onAfterShow(): void {\n        if (this.searchInput) {\n            this.searchInput.select();\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { TerminalWidgetImpl } from './terminal-widget-impl';\n\nexport const TerminalContribution = Symbol('TerminalContribution');\nexport interface TerminalContribution {\n    onCreate(term: TerminalWidgetImpl): void;\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, postConstruct } from 'inversify';\nimport { isFirefox } from '@theia/core/lib/browser';\n\n@injectable()\nexport class TerminalCopyOnSelectionHandler {\n\n    private textToCopy: string;\n    private interceptCopy: boolean;\n\n    private copyListener = (ev: ClipboardEvent) => {\n        if (this.interceptCopy && ev.clipboardData) {\n            ev.clipboardData.setData('text/plain', this.textToCopy);\n            ev.preventDefault();\n        }\n    };\n\n    @postConstruct()\n    protected init(): void {\n        document.addEventListener('copy', this.copyListener);\n    }\n\n    private async clipBoardCopyIsGranted(): Promise<boolean> {\n        // Unfortunately Firefox doesn't support permission check `clipboard-write`, so let try to copy anyway,\n        if (isFirefox) {\n            return true;\n        }\n        try {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const permissions = (navigator as any).permissions;\n            const { state } = await permissions.query({ name: 'clipboard-write' });\n            if (state === 'granted') {\n                return true;\n            }\n        } catch (e) { }\n\n        return false;\n    }\n\n    private executeCommandCopy(): void {\n        try {\n            this.interceptCopy = true;\n            document.execCommand('copy');\n            this.interceptCopy = false;\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    private async writeToClipBoard(): Promise<void> {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const clipboard = (navigator as any).clipboard;\n\n        if (!clipboard) {\n            this.executeCommandCopy();\n            return;\n        }\n\n        try {\n            await clipboard.writeText(this.textToCopy);\n        } catch (e) {\n            this.executeCommandCopy();\n        }\n    }\n\n    async copy(text: string): Promise<void> {\n        this.textToCopy = text;\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const permissions = (navigator as any).permissions;\n        if (permissions && permissions.query && await this.clipBoardCopyIsGranted()) {\n            await this.writeToClipBoard();\n        } else {\n            this.executeCommandCopy();\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Bitsler and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService, PreferenceContribution, PreferenceSchema } from '@theia/core/lib/browser';\nimport { EDITOR_FONT_DEFAULTS } from '@theia/editor/lib/browser';\n\nexport const TerminalConfigSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        'terminal.enableCopy': {\n            type: 'boolean',\n            description: 'Enable ctrl-c (cmd-c on macOS) to copy selected text',\n            default: true\n        },\n        'terminal.enablePaste': {\n            type: 'boolean',\n            description: 'Enable ctrl-v (cmd-v on macOS) to paste from clipboard',\n            default: true\n        },\n        'terminal.integrated.fontFamily': {\n            type: 'string',\n            description: 'Controls the font family of the terminal.',\n            default: EDITOR_FONT_DEFAULTS.fontFamily\n        },\n        'terminal.integrated.fontSize': {\n            type: 'number',\n            description: 'Controls the font size in pixels of the terminal.',\n            minimum: 6,\n            default: EDITOR_FONT_DEFAULTS.fontSize\n        },\n        'terminal.integrated.fontWeight': {\n            type: 'string',\n            enum: ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'],\n            description: 'The font weight to use within the terminal for non-bold text.',\n            default: 'normal'\n        },\n        'terminal.integrated.fontWeightBold': {\n            type: 'string',\n            enum: ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'],\n            description: 'The font weight to use within the terminal for bold text.',\n            default: 'bold'\n        },\n        'terminal.integrated.drawBoldTextInBrightColors': {\n            description: 'Controls whether to draw bold text in bright colors.',\n            type: 'boolean',\n            default: true,\n        },\n        'terminal.integrated.letterSpacing': {\n            description: 'Controls the letter spacing of the terminal, this is an integer value which represents the amount of additional pixels to add between characters.',\n            type: 'number',\n            default: 1\n        },\n        'terminal.integrated.lineHeight': {\n            description: 'Controls the line height of the terminal, this number is multiplied by the terminal font size to get the actual line-height in pixels.',\n            type: 'number',\n            minimum: 1,\n            default: 1\n        },\n        'terminal.integrated.scrollback': {\n            description: 'Controls the maximum amount of lines the terminal keeps in its buffer.',\n            type: 'number',\n            default: 1000\n        },\n        'terminal.integrated.fastScrollSensitivity': {\n            description: 'Controls the scrolling speed when pressing \\'alt\\'.',\n            type: 'number',\n            default: 5,\n        },\n        'terminal.integrated.rendererType': {\n            description: 'Controls how the terminal is rendered.',\n            type: 'string',\n            enum: ['canvas', 'dom'],\n            default: 'canvas'\n        },\n        'terminal.integrated.copyOnSelection': {\n            description: 'Controls whether text selected in the terminal will be copied to the clipboard.',\n            type: 'boolean',\n            default: false,\n        },\n        'terminal.integrated.cursorBlinking': {\n            description: 'Controls whether the terminal cursor blinks.',\n            type: 'boolean',\n            default: false\n        },\n        'terminal.integrated.cursorStyle': {\n            description: 'Controls the style of the terminal cursor.',\n            enum: ['block', 'underline', 'line'],\n            default: 'block'\n        },\n        'terminal.integrated.cursorWidth': {\n            description: 'Controls the width of the cursor when \\'terminal.integrated.cursorStyle\\' is set to \\'line\\'.',\n            markdownDescription: 'Controls the width of the cursor when `#terminal.integrated.cursorStyle#` is set to `line`.',\n            type: 'number',\n            default: 1\n        },\n        'terminal.integrated.shell.windows': {\n            type: ['string', 'null'],\n            description: 'The path of the shell that the terminal uses on Windows. (default: C:\\\\Windows\\\\System32\\\\cmd.exe).',\n            markdownDescription: 'The path of the shell that the terminal uses on Windows. (default: C:\\\\Windows\\\\System32\\\\cmd.exe).',\n            default: undefined\n        },\n        'terminal.integrated.shell.osx': {\n            type: ['string', 'null'],\n            description: `The path of the shell that the terminal uses on macOS (default: ${process.env.SHELL || '/bin/bash'}).`,\n            markdownDescription: `The path of the shell that the terminal uses on macOS (default: ${process.env.SHELL || '/bin/bash'}).`,\n            default: undefined\n        },\n        'terminal.integrated.shell.linux': {\n            type: ['string', 'null'],\n            description: `The path of the shell that the terminal uses on Linux (default: ${process.env.SHELL || '/bin/bash'}).`,\n            markdownDescription: `The path of the shell that the terminal uses on Linux (default: ${process.env.SHELL || '/bin/bash'}).`,\n            default: undefined\n        },\n        'terminal.integrated.shellArgs.windows': {\n            type: 'array',\n            description: 'The command line arguments to use when on the Windows terminal.',\n            markdownDescription: 'The command line arguments to use when on the Windows terminal.',\n            default: []\n        },\n        'terminal.integrated.shellArgs.osx': {\n            type: 'array',\n            description: 'The command line arguments to use when on the macOS terminal.',\n            markdownDescription: 'The command line arguments to use when on the macOS terminal.',\n            default: [\n                '-l'\n            ]\n        },\n        'terminal.integrated.shellArgs.linux': {\n            type: 'array',\n            description: 'The command line arguments to use when on the Linux terminal.',\n            markdownDescription: 'The command line arguments to use when on the Linux terminal.',\n            default: []\n        },\n    }\n};\n\nexport interface TerminalConfiguration {\n    'terminal.enableCopy': boolean\n    'terminal.enablePaste': boolean\n    'terminal.integrated.fontFamily': string\n    'terminal.integrated.fontSize': number\n    'terminal.integrated.fontWeight': FontWeight\n    'terminal.integrated.fontWeightBold': FontWeight,\n    'terminal.integrated.drawBoldTextInBrightColors': boolean,\n    'terminal.integrated.letterSpacing': number\n    'terminal.integrated.lineHeight': number,\n    'terminal.integrated.scrollback': number,\n    'terminal.integrated.fastScrollSensitivity': number,\n    'terminal.integrated.rendererType': TerminalRendererType,\n    'terminal.integrated.copyOnSelection': boolean,\n    'terminal.integrated.cursorBlinking': boolean,\n    'terminal.integrated.cursorStyle': CursorStyleVSCode,\n    'terminal.integrated.cursorWidth': number,\n    'terminal.integrated.shell.windows': string | undefined,\n    'terminal.integrated.shell.osx': string | undefined,\n    'terminal.integrated.shell.linux': string | undefined,\n    'terminal.integrated.shellArgs.windows': string[],\n    'terminal.integrated.shellArgs.osx': string[],\n    'terminal.integrated.shellArgs.linux': string[],\n}\n\ntype FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\nexport type CursorStyle = 'block' | 'underline' | 'bar';\n// VS Code uses 'line' to represent 'bar'. The following conversion is necessary to support their preferences.\nexport type CursorStyleVSCode = CursorStyle | 'line';\nexport type TerminalRendererType = 'canvas' | 'dom';\nexport const DEFAULT_TERMINAL_RENDERER_TYPE = 'canvas';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isTerminalRendererType(arg: any): arg is TerminalRendererType {\n    return typeof arg === 'string' && (arg === 'canvas' || arg === 'dom');\n}\n\nexport const TerminalPreferences = Symbol('TerminalPreferences');\nexport type TerminalPreferences = PreferenceProxy<TerminalConfiguration>;\n\nexport function createTerminalPreferences(preferences: PreferenceService): TerminalPreferences {\n    return createPreferenceProxy(preferences, TerminalConfigSchema);\n}\n\nexport function bindTerminalPreferences(bind: interfaces.Bind): void {\n    bind(TerminalPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createTerminalPreferences(preferences);\n    });\n    bind(PreferenceContribution).toConstantValue({ schema: TerminalConfigSchema });\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ITheme } from 'xterm';\nimport { injectable, inject } from 'inversify';\nimport { ColorRegistry, ColorDefaults } from '@theia/core/lib/browser/color-registry';\nimport { ThemeService } from '@theia/core/lib/browser/theming';\n\n/**\n * It should be aligned with https://github.com/microsoft/vscode/blob/0dfa355b3ad185a6289ba28a99c141ab9e72d2be/src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts#L40\n */\nexport const terminalAnsiColorMap: { [key: string]: { index: number, defaults: ColorDefaults } } = {\n    'terminal.ansiBlack': {\n        index: 0,\n        defaults: {\n            light: '#000000',\n            dark: '#000000',\n            hc: '#000000'\n        }\n    },\n    'terminal.ansiRed': {\n        index: 1,\n        defaults: {\n            light: '#cd3131',\n            dark: '#cd3131',\n            hc: '#cd0000'\n        }\n    },\n    'terminal.ansiGreen': {\n        index: 2,\n        defaults: {\n            light: '#00BC00',\n            dark: '#0DBC79',\n            hc: '#00cd00'\n        }\n    },\n    'terminal.ansiYellow': {\n        index: 3,\n        defaults: {\n            light: '#949800',\n            dark: '#e5e510',\n            hc: '#cdcd00'\n        }\n    },\n    'terminal.ansiBlue': {\n        index: 4,\n        defaults: {\n            light: '#0451a5',\n            dark: '#2472c8',\n            hc: '#0000ee'\n        }\n    },\n    'terminal.ansiMagenta': {\n        index: 5,\n        defaults: {\n            light: '#bc05bc',\n            dark: '#bc3fbc',\n            hc: '#cd00cd'\n        }\n    },\n    'terminal.ansiCyan': {\n        index: 6,\n        defaults: {\n            light: '#0598bc',\n            dark: '#11a8cd',\n            hc: '#00cdcd'\n        }\n    },\n    'terminal.ansiWhite': {\n        index: 7,\n        defaults: {\n            light: '#555555',\n            dark: '#e5e5e5',\n            hc: '#e5e5e5'\n        }\n    },\n    'terminal.ansiBrightBlack': {\n        index: 8,\n        defaults: {\n            light: '#666666',\n            dark: '#666666',\n            hc: '#7f7f7f'\n        }\n    },\n    'terminal.ansiBrightRed': {\n        index: 9,\n        defaults: {\n            light: '#cd3131',\n            dark: '#f14c4c',\n            hc: '#ff0000'\n        }\n    },\n    'terminal.ansiBrightGreen': {\n        index: 10,\n        defaults: {\n            light: '#14CE14',\n            dark: '#23d18b',\n            hc: '#00ff00'\n        }\n    },\n    'terminal.ansiBrightYellow': {\n        index: 11,\n        defaults: {\n            light: '#b5ba00',\n            dark: '#f5f543',\n            hc: '#ffff00'\n        }\n    },\n    'terminal.ansiBrightBlue': {\n        index: 12,\n        defaults: {\n            light: '#0451a5',\n            dark: '#3b8eea',\n            hc: '#5c5cff'\n        }\n    },\n    'terminal.ansiBrightMagenta': {\n        index: 13,\n        defaults: {\n            light: '#bc05bc',\n            dark: '#d670d6',\n            hc: '#ff00ff'\n        }\n    },\n    'terminal.ansiBrightCyan': {\n        index: 14,\n        defaults: {\n            light: '#0598bc',\n            dark: '#29b8db',\n            hc: '#00ffff'\n        }\n    },\n    'terminal.ansiBrightWhite': {\n        index: 15,\n        defaults: {\n            light: '#a5a5a5',\n            dark: '#e5e5e5',\n            hc: '#ffffff'\n        }\n    }\n};\n\n@injectable()\nexport class TerminalThemeService {\n\n    @inject(ColorRegistry)\n    protected readonly colorRegistry: ColorRegistry;\n\n    readonly onDidChange = ThemeService.get().onThemeChange;\n\n    get theme(): ITheme {\n        const foregroundColor = this.colorRegistry.getCurrentColor('terminal.foreground');\n        const backgroundColor = this.colorRegistry.getCurrentColor('terminal.background') || this.colorRegistry.getCurrentColor('panel.background');\n        const cursorColor = this.colorRegistry.getCurrentColor('terminalCursor.foreground') || foregroundColor;\n        const cursorAccentColor = this.colorRegistry.getCurrentColor('terminalCursor.background') || backgroundColor;\n        const selectionColor = this.colorRegistry.getCurrentColor('terminal.selectionBackground');\n\n        const theme: ITheme = {\n            background: backgroundColor,\n            foreground: foregroundColor,\n            cursor: cursorColor,\n            cursorAccent: cursorAccentColor,\n            selection: selectionColor\n        };\n        // eslint-disable-next-line guard-for-in\n        for (const id in terminalAnsiColorMap) {\n            const colorId = id.substring(13);\n            const colorName = colorId.charAt(0).toLowerCase() + colorId.slice(1);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (theme as any)[colorName] = this.colorRegistry.getCurrentColor(id);\n        }\n        return theme;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Terminal, RendererType } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { inject, injectable, named, postConstruct } from 'inversify';\nimport { ContributionProvider, Disposable, Event, Emitter, ILogger, DisposableCollection } from '@theia/core';\nimport { Widget, Message, WebSocketConnectionProvider, StatefulWidget, isFirefox, MessageLoop, KeyCode } from '@theia/core/lib/browser';\nimport { isOSX } from '@theia/core/lib/common';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { ShellTerminalServerProxy, IShellTerminalPreferences } from '../common/shell-terminal-protocol';\nimport { terminalsPath } from '../common/terminal-protocol';\nimport { IBaseTerminalServer, TerminalProcessInfo } from '../common/base-terminal-protocol';\nimport { TerminalWatcher } from '../common/terminal-watcher';\nimport { TerminalWidgetOptions, TerminalWidget, TerminalDimensions } from './base/terminal-widget';\nimport { MessageConnection } from 'vscode-jsonrpc';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { TerminalPreferences, TerminalRendererType, isTerminalRendererType, DEFAULT_TERMINAL_RENDERER_TYPE, CursorStyle } from './terminal-preferences';\nimport { TerminalContribution } from './terminal-contribution';\nimport URI from '@theia/core/lib/common/uri';\nimport { TerminalService } from './base/terminal-service';\nimport { TerminalSearchWidgetFactory, TerminalSearchWidget } from './search/terminal-search-widget';\nimport { TerminalCopyOnSelectionHandler } from './terminal-copy-on-selection-handler';\nimport { TerminalThemeService } from './terminal-theme-service';\nimport { CommandLineOptions, ShellCommandBuilder } from '@theia/process/lib/common/shell-command-builder';\n\nexport const TERMINAL_WIDGET_FACTORY_ID = 'terminal';\n\nexport interface TerminalWidgetFactoryOptions extends Partial<TerminalWidgetOptions> {\n    /* a unique string per terminal */\n    created: string\n}\n\n@injectable()\nexport class TerminalWidgetImpl extends TerminalWidget implements StatefulWidget {\n\n    private readonly TERMINAL = 'Terminal';\n    protected terminalKind = 'user';\n    protected _terminalId = -1;\n    protected readonly onTermDidClose = new Emitter<TerminalWidget>();\n    protected fitAddon: FitAddon;\n    protected term: Terminal;\n    protected searchBox: TerminalSearchWidget;\n    protected restored = false;\n    protected closeOnDispose = true;\n    protected waitForConnection: Deferred<MessageConnection> | undefined;\n    protected hoverMessage: HTMLDivElement;\n    protected lastTouchEnd: TouchEvent | undefined;\n\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(WebSocketConnectionProvider) protected readonly webSocketConnectionProvider: WebSocketConnectionProvider;\n    @inject(TerminalWidgetOptions) options: TerminalWidgetOptions;\n    @inject(ShellTerminalServerProxy) protected readonly shellTerminalServer: ShellTerminalServerProxy;\n    @inject(TerminalWatcher) protected readonly terminalWatcher: TerminalWatcher;\n    @inject(ILogger) @named('terminal') protected readonly logger: ILogger;\n    @inject('terminal-dom-id') public readonly id: string;\n    @inject(TerminalPreferences) protected readonly preferences: TerminalPreferences;\n    @inject(ContributionProvider) @named(TerminalContribution) protected readonly terminalContributionProvider: ContributionProvider<TerminalContribution>;\n    @inject(TerminalService) protected readonly terminalService: TerminalService;\n    @inject(TerminalSearchWidgetFactory) protected readonly terminalSearchBoxFactory: TerminalSearchWidgetFactory;\n    @inject(TerminalCopyOnSelectionHandler) protected readonly copyOnSelectionHandler: TerminalCopyOnSelectionHandler;\n    @inject(TerminalThemeService) protected readonly themeService: TerminalThemeService;\n    @inject(ShellCommandBuilder) protected readonly shellCommandBuilder: ShellCommandBuilder;\n\n    protected readonly onDidOpenEmitter = new Emitter<void>();\n    readonly onDidOpen: Event<void> = this.onDidOpenEmitter.event;\n\n    protected readonly onDidOpenFailureEmitter = new Emitter<void>();\n    readonly onDidOpenFailure: Event<void> = this.onDidOpenFailureEmitter.event;\n\n    protected readonly onSizeChangedEmitter = new Emitter<{ cols: number; rows: number; }>();\n    readonly onSizeChanged: Event<{ cols: number; rows: number; }> = this.onSizeChangedEmitter.event;\n\n    protected readonly onDataEmitter = new Emitter<string>();\n    readonly onData: Event<string> = this.onDataEmitter.event;\n\n    protected readonly toDisposeOnConnect = new DisposableCollection();\n\n    @postConstruct()\n    protected init(): void {\n        this.setTitle(this.options.title || this.TERMINAL);\n        this.title.iconClass = 'fa fa-terminal';\n\n        if (this.options.kind) {\n            this.terminalKind = this.options.kind;\n        }\n\n        if (this.options.destroyTermOnClose === true) {\n            this.toDispose.push(Disposable.create(() =>\n                this.term.dispose()\n            ));\n        }\n\n        this.title.closable = true;\n        this.addClass('terminal-container');\n\n        this.term = new Terminal({\n            cursorBlink: this.preferences['terminal.integrated.cursorBlinking'],\n            cursorStyle: this.getCursorStyle(),\n            cursorWidth: this.preferences['terminal.integrated.cursorWidth'],\n            fontFamily: this.preferences['terminal.integrated.fontFamily'],\n            fontSize: this.preferences['terminal.integrated.fontSize'],\n            fontWeight: this.preferences['terminal.integrated.fontWeight'],\n            fontWeightBold: this.preferences['terminal.integrated.fontWeightBold'],\n            drawBoldTextInBrightColors: this.preferences['terminal.integrated.drawBoldTextInBrightColors'],\n            letterSpacing: this.preferences['terminal.integrated.letterSpacing'],\n            lineHeight: this.preferences['terminal.integrated.lineHeight'],\n            scrollback: this.preferences['terminal.integrated.scrollback'],\n            fastScrollSensitivity: this.preferences['terminal.integrated.fastScrollSensitivity'],\n            rendererType: this.getTerminalRendererType(this.preferences['terminal.integrated.rendererType']),\n            theme: this.themeService.theme\n        });\n\n        this.fitAddon = new FitAddon();\n        this.term.loadAddon(this.fitAddon);\n\n        this.hoverMessage = document.createElement('div');\n        this.hoverMessage.textContent = 'Cmd + click to follow link';\n        this.hoverMessage.style.position = 'fixed';\n        // TODO use `var(--theia-editorHoverWidget-foreground) with a newer Monaco version\n        this.hoverMessage.style.color = 'var(--theia-editorWidget-foreground)';\n        this.hoverMessage.style.backgroundColor = 'var(--theia-editorHoverWidget-background)';\n        this.hoverMessage.style.borderColor = 'var(--theia-editorHoverWidget-border)';\n        this.hoverMessage.style.borderWidth = '0.5px';\n        this.hoverMessage.style.borderStyle = 'solid';\n        this.hoverMessage.style.padding = '5px';\n        // Above the xterm.js canvas layers:\n        // https://github.com/xtermjs/xterm.js/blob/ff790236c1b205469f17a21246141f512d844295/src/renderer/Renderer.ts#L41-L46\n        this.hoverMessage.style.zIndex = '10';\n        // Initially invisible:\n        this.hoverMessage.style.display = 'none';\n        this.node.appendChild(this.hoverMessage);\n\n        this.toDispose.push(this.preferences.onPreferenceChanged(change => {\n            const lastSeparator = change.preferenceName.lastIndexOf('.');\n            if (lastSeparator > 0) {\n                let preferenceName = change.preferenceName.substr(lastSeparator + 1);\n                let preferenceValue = this.preferences[change.preferenceName];\n\n                if (preferenceName === 'rendererType') {\n                    const newRendererType: string = this.preferences[change.preferenceName] as string;\n                    if (newRendererType !== this.getTerminalRendererType(newRendererType)) {\n                        // given terminal renderer type is not supported or invalid\n                        preferenceValue = DEFAULT_TERMINAL_RENDERER_TYPE;\n                    }\n                }\n\n                // Convert the terminal preference into a valid `xterm` option.\n                if (preferenceName === 'cursorBlinking') {\n                    preferenceName = 'cursorBlink';\n                } else if (preferenceName === 'cursorStyle') {\n                    preferenceValue = this.getCursorStyle();\n                }\n\n                this.term.setOption(preferenceName, preferenceValue);\n                this.needsResize = true;\n                this.update();\n            }\n        }));\n\n        this.toDispose.push(this.themeService.onDidChange(() => this.term.setOption('theme', this.themeService.theme)));\n        this.attachCustomKeyEventHandler();\n        const titleChangeListenerDispose = this.term.onTitleChange((title: string) => {\n            if (this.options.useServerTitle) {\n                this.title.label = title;\n            }\n        });\n        this.toDispose.push(titleChangeListenerDispose);\n\n        this.toDispose.push(this.terminalWatcher.onTerminalError(({ terminalId, error }) => {\n            if (terminalId === this.terminalId) {\n                this.dispose();\n                this.onTermDidClose.fire(this);\n                this.onTermDidClose.dispose();\n                this.logger.error(`The terminal process terminated. Cause: ${error}`);\n            }\n        }));\n        this.toDispose.push(this.terminalWatcher.onTerminalExit(({ terminalId }) => {\n            if (terminalId === this.terminalId) {\n                this.dispose();\n                this.onTermDidClose.fire(this);\n                this.onTermDidClose.dispose();\n            }\n        }));\n        this.toDispose.push(this.toDisposeOnConnect);\n        this.toDispose.push(this.shellTerminalServer.onDidCloseConnection(() => {\n            const disposable = this.shellTerminalServer.onDidOpenConnection(() => {\n                disposable.dispose();\n                this.reconnectTerminalProcess();\n            });\n            this.toDispose.push(disposable);\n        }));\n        this.toDispose.push(this.onTermDidClose);\n        this.toDispose.push(this.onDidOpenEmitter);\n        this.toDispose.push(this.onDidOpenFailureEmitter);\n        this.toDispose.push(this.onSizeChangedEmitter);\n        this.toDispose.push(this.onDataEmitter);\n\n        const touchEndListener = (event: TouchEvent) => {\n            if (this.node.contains(event.target as Node)) {\n                this.lastTouchEnd = event;\n            }\n        };\n        document.addEventListener('touchend', touchEndListener, { passive: true });\n        this.onDispose(() => {\n            document.removeEventListener('touchend', touchEndListener);\n        });\n\n        this.toDispose.push(this.term.onSelectionChange(() => {\n            if (this.copyOnSelection) {\n                this.copyOnSelectionHandler.copy(this.term.getSelection());\n            }\n        }));\n\n        this.toDispose.push(this.term.onResize(data => {\n            this.onSizeChangedEmitter.fire(data);\n        }));\n\n        this.toDispose.push(this.term.onData(data => {\n            this.onDataEmitter.fire(data);\n        }));\n\n        for (const contribution of this.terminalContributionProvider.getContributions()) {\n            contribution.onCreate(this);\n        }\n\n        this.searchBox = this.terminalSearchBoxFactory(this.term);\n        this.toDispose.push(this.searchBox);\n    }\n\n    get kind(): 'user' | string {\n        return this.terminalKind;\n    }\n\n    /**\n     * Get the cursor style compatible with `xterm`.\n     * @returns CursorStyle\n     */\n    private getCursorStyle(): CursorStyle {\n        const value = this.preferences['terminal.integrated.cursorStyle'];\n        return value === 'line' ? 'bar' : value;\n    }\n\n    /**\n     * Returns given renderer type if it is valid and supported or default renderer otherwise.\n     *\n     * @param terminalRendererType desired terminal renderer type\n     */\n    private getTerminalRendererType(terminalRendererType?: string | TerminalRendererType): RendererType {\n        if (terminalRendererType && isTerminalRendererType(terminalRendererType)) {\n            return terminalRendererType;\n        }\n        return DEFAULT_TERMINAL_RENDERER_TYPE;\n    }\n\n    showHoverMessage(x: number, y: number, message: string): void {\n        this.hoverMessage.innerText = message;\n        this.hoverMessage.style.display = 'inline';\n        this.hoverMessage.style.top = `${y - 30}px`;\n        this.hoverMessage.style.left = `${x - 60}px`;\n    }\n\n    hideHover(): void {\n        this.hoverMessage.style.display = 'none';\n    }\n\n    getTerminal(): Terminal {\n        return this.term;\n    }\n\n    getSearchBox(): TerminalSearchWidget {\n        return this.searchBox;\n    }\n\n    get dimensions(): TerminalDimensions {\n        return {\n            cols: this.term.cols,\n            rows: this.term.rows,\n        };\n    }\n\n    get cwd(): Promise<URI> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        if (this.terminalService.getById(this.id)) {\n            return this.shellTerminalServer.getCwdURI(this.terminalId)\n                .then(cwdUrl => new URI(cwdUrl));\n        }\n        return Promise.resolve(new URI());\n    }\n\n    get processId(): Promise<number> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        return this.shellTerminalServer.getProcessId(this.terminalId);\n    }\n\n    get processInfo(): Promise<TerminalProcessInfo> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        return this.shellTerminalServer.getProcessInfo(this.terminalId);\n    }\n\n    get terminalId(): number {\n        return this._terminalId;\n    }\n\n    get lastTouchEndEvent(): TouchEvent | undefined {\n        return this.lastTouchEnd;\n    }\n\n    onDispose(onDispose: () => void): void {\n        this.toDispose.push(Disposable.create(onDispose));\n    }\n\n    clearOutput(): void {\n        this.term.clear();\n    }\n\n    async hasChildProcesses(): Promise<boolean> {\n        return this.shellTerminalServer.hasChildProcesses(await this.processId);\n    }\n\n    storeState(): object {\n        this.closeOnDispose = false;\n        if (this.options.isPseudoTerminal) {\n            return {};\n        }\n        return { terminalId: this.terminalId, titleLabel: this.title.label };\n    }\n\n    restoreState(oldState: object): void {\n        // pseudo terminal can not restore\n        if (this.options.isPseudoTerminal) {\n            this.dispose();\n            return;\n        }\n        if (this.restored === false) {\n            const state = oldState as { terminalId: number, titleLabel: string };\n            /* This is a workaround to issue #879 */\n            this.restored = true;\n            this.title.label = state.titleLabel;\n            this.start(state.terminalId);\n        }\n    }\n\n    /**\n     * Create a new shell terminal in the back-end and attach it to a\n     * new terminal widget.\n     * If id is provided attach to the terminal for this id.\n     */\n    async start(id?: number): Promise<number> {\n        this._terminalId = typeof id !== 'number' ? await this.createTerminal() : await this.attachTerminal(id);\n        this.resizeTerminalProcess();\n        this.connectTerminalProcess();\n        if (IBaseTerminalServer.validateId(this.terminalId)) {\n            this.onDidOpenEmitter.fire(undefined);\n            return this.terminalId;\n        }\n        this.onDidOpenFailureEmitter.fire(undefined);\n        throw new Error('Failed to start terminal' + (id ? ` for id: ${id}.` : '.'));\n    }\n\n    protected async attachTerminal(id: number): Promise<number> {\n        const terminalId = await this.shellTerminalServer.attach(id);\n        if (IBaseTerminalServer.validateId(terminalId)) {\n            return terminalId;\n        }\n        this.logger.error(`Error attaching to terminal id ${id}, the terminal is most likely gone. Starting up a new terminal instead.`);\n        if (this.kind === 'user') {\n            return this.createTerminal();\n        } else {\n            return -1;\n        }\n    }\n\n    protected async createTerminal(): Promise<number> {\n        let rootURI = this.options.cwd;\n        if (!rootURI) {\n            const root = (await this.workspaceService.roots)[0];\n            rootURI = root && root.uri;\n        }\n        const { cols, rows } = this.term;\n\n        const terminalId = await this.shellTerminalServer.create({\n            shellPreferences: this.shellPreferences,\n            shell: this.options.shellPath,\n            args: this.options.shellArgs,\n            env: this.options.env,\n            isPseudo: this.options.isPseudoTerminal,\n            rootURI,\n            cols,\n            rows\n        });\n        if (IBaseTerminalServer.validateId(terminalId)) {\n            return terminalId;\n        }\n        throw new Error('Error creating terminal widget, see the backend error log for more information.');\n    }\n\n    processMessage(msg: Message): void {\n        super.processMessage(msg);\n        switch (msg.type) {\n            case 'fit-request':\n                this.onFitRequest(msg);\n                break;\n            default:\n                break;\n        }\n    }\n    protected onFitRequest(msg: Message): void {\n        super.onFitRequest(msg);\n        MessageLoop.sendMessage(this, Widget.ResizeMessage.UnknownSize);\n    }\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.term.focus();\n    }\n    protected onAfterShow(msg: Message): void {\n        super.onAfterShow(msg);\n        this.update();\n    }\n    protected onAfterAttach(msg: Message): void {\n        Widget.attach(this.searchBox, this.node);\n        super.onAfterAttach(msg);\n        this.update();\n    }\n    protected onBeforeDetach(msg: Message): void {\n        Widget.detach(this.searchBox);\n        super.onBeforeDetach(msg);\n    }\n    protected onResize(msg: Widget.ResizeMessage): void {\n        super.onResize(msg);\n        this.needsResize = true;\n        this.update();\n    }\n\n    protected needsResize = true;\n    protected onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        if (!this.isVisible || !this.isAttached) {\n            return;\n        }\n\n        this.open();\n\n        if (this.needsResize) {\n            this.resizeTerminal();\n            this.needsResize = false;\n\n            this.resizeTerminalProcess();\n        }\n    }\n\n    // Device status code emitted by Xterm.js\n    // Check: https://github.com/xtermjs/xterm.js/blob/release/3.14/src/InputHandler.ts#L1055-L1082\n    protected readonly deviceStatusCodes = new Set(['\\u001B[>0;276;0c', '\\u001B[>85;95;0c', '\\u001B[>83;40003;0c', '\\u001B[?1;2c', '\\u001B[?6c']);\n\n    protected connectTerminalProcess(): void {\n        if (typeof this.terminalId !== 'number') {\n            return;\n        }\n        if (this.options.isPseudoTerminal) {\n            return;\n        }\n        this.toDisposeOnConnect.dispose();\n        this.toDispose.push(this.toDisposeOnConnect);\n        const waitForConnection = this.waitForConnection = new Deferred<MessageConnection>();\n        this.webSocketConnectionProvider.listen({\n            path: `${terminalsPath}/${this.terminalId}`,\n            onConnection: connection => {\n                connection.onNotification('onData', (data: string) => this.write(data));\n\n                // Excludes the device status code emitted by Xterm.js\n                const sendData = (data?: string) => {\n                    if (data && !this.deviceStatusCodes.has(data)) {\n                        return connection.sendRequest('write', data);\n                    }\n                };\n\n                const disposable = this.term.onData(sendData);\n                connection.onDispose(() => disposable.dispose());\n\n                this.toDisposeOnConnect.push(connection);\n                connection.listen();\n                if (waitForConnection) {\n                    waitForConnection.resolve(connection);\n                }\n            }\n        }, { reconnecting: false });\n    }\n    protected async reconnectTerminalProcess(): Promise<void> {\n        if (this.options.isPseudoTerminal) {\n            return;\n        }\n        if (typeof this.terminalId === 'number') {\n            await this.start(this.terminalId);\n        }\n    }\n\n    protected termOpened = false;\n    protected initialData = '';\n    protected open(): void {\n        if (this.termOpened) {\n            return;\n        }\n        this.term.open(this.node);\n        if (this.initialData) {\n            this.term.write(this.initialData);\n        }\n        this.termOpened = true;\n        this.initialData = '';\n\n        if (isFirefox) {\n            // The software scrollbars don't work with xterm.js, so we disable the scrollbar if we are on firefox.\n            if (this.term.element) {\n                (this.term.element.children.item(0) as HTMLElement).style.overflow = 'hidden';\n            }\n        }\n    }\n\n    write(data: string): void {\n        if (this.termOpened) {\n            this.term.write(data);\n        } else {\n            this.initialData += data;\n        }\n    }\n\n    resize(cols: number, rows: number): void {\n        this.term.resize(cols, rows);\n    }\n\n    sendText(text: string): void {\n        if (this.waitForConnection) {\n            this.waitForConnection.promise.then(connection =>\n                connection.sendRequest('write', text)\n            );\n        }\n    }\n\n    async executeCommand(commandOptions: CommandLineOptions): Promise<void> {\n        this.sendText(this.shellCommandBuilder.buildCommand(await this.processInfo, commandOptions) + '\\n');\n    }\n\n    scrollLineUp(): void {\n        this.term.scrollLines(-1);\n    }\n\n    scrollLineDown(): void {\n        this.term.scrollLines(1);\n    }\n\n    scrollToTop(): void {\n        this.term.scrollToTop();\n    }\n\n    scrollToBottom(): void {\n        this.term.scrollToBottom();\n    }\n\n    scrollPageUp(): void {\n        this.term.scrollPages(-1);\n    }\n\n    scrollPageDown(): void {\n        this.term.scrollPages(1);\n    }\n\n    resetTerminal(): void {\n        this.term.reset();\n    }\n\n    writeLine(text: string): void {\n        this.term.writeln(text);\n    }\n\n    get onTerminalDidClose(): Event<TerminalWidget> {\n        return this.onTermDidClose.event;\n    }\n\n    dispose(): void {\n        /* Close the backend terminal only when explicitly closing the terminal\n         * a refresh for example won't close it.  */\n        if (this.closeOnDispose === true && typeof this.terminalId === 'number') {\n            this.shellTerminalServer.close(this.terminalId);\n            this.onTermDidClose.fire(this);\n        }\n        super.dispose();\n    }\n\n    protected resizeTerminal(): void {\n        const geo = this.fitAddon.proposeDimensions();\n        const cols = geo.cols;\n        const rows = geo.rows - 1; // subtract one row for margin\n        this.term.resize(cols, rows);\n    }\n\n    protected resizeTerminalProcess(): void {\n        if (this.options.isPseudoTerminal) {\n            return;\n        }\n        if (!IBaseTerminalServer.validateId(this.terminalId)\n            && !this.terminalService.getById(this.id)) {\n            return;\n        }\n        const { cols, rows } = this.term;\n        this.shellTerminalServer.resize(this.terminalId, cols, rows);\n    }\n\n    protected get enableCopy(): boolean {\n        return this.preferences['terminal.enableCopy'];\n    }\n\n    protected get enablePaste(): boolean {\n        return this.preferences['terminal.enablePaste'];\n    }\n\n    protected get shellPreferences(): IShellTerminalPreferences {\n        return {\n            shell: {\n                Windows: this.preferences['terminal.integrated.shell.windows'],\n                Linux: this.preferences['terminal.integrated.shell.linux'],\n                OSX: this.preferences['terminal.integrated.shell.osx'],\n            },\n            shellArgs: {\n                Windows: this.preferences['terminal.integrated.shellArgs.windows'],\n                Linux: this.preferences['terminal.integrated.shellArgs.linux'],\n                OSX: this.preferences['terminal.integrated.shellArgs.osx'],\n            }\n        };\n    }\n\n    protected customKeyHandler(event: KeyboardEvent): boolean {\n        const keyBindings = KeyCode.createKeyCode(event).toString();\n        const ctrlCmdCopy = (isOSX && keyBindings === 'meta+c') || (!isOSX && keyBindings === 'ctrl+c');\n        const ctrlCmdPaste = (isOSX && keyBindings === 'meta+v') || (!isOSX && keyBindings === 'ctrl+v');\n        if (ctrlCmdCopy && this.enableCopy && this.term.hasSelection()) {\n            return false;\n        }\n        if (ctrlCmdPaste && this.enablePaste) {\n            return false;\n        }\n        return true;\n    }\n\n    protected get copyOnSelection(): boolean {\n        return this.preferences['terminal.integrated.copyOnSelection'];\n    }\n\n    protected attachCustomKeyEventHandler(): void {\n        this.term.attachCustomKeyEventHandler(e => this.customKeyHandler(e));\n    }\n\n    setTitle(title: string): void {\n        this.title.caption = title;\n        this.title.label = title;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { JsonRpcServer } from '@theia/core/lib/common/messaging/proxy-factory';\nimport { Disposable } from '@theia/core';\n\nexport interface TerminalProcessInfo {\n    executable: string\n    arguments: string[]\n}\n\nexport interface IBaseTerminalServerOptions { }\n\nexport interface IBaseTerminalServer extends JsonRpcServer<IBaseTerminalClient> {\n    create(IBaseTerminalServerOptions: object): Promise<number>;\n    getProcessId(id: number): Promise<number>;\n    getProcessInfo(id: number): Promise<TerminalProcessInfo>;\n    getCwdURI(id: number): Promise<string>;\n    resize(id: number, cols: number, rows: number): Promise<void>;\n    attach(id: number): Promise<number>;\n    close(id: number): Promise<void>;\n    getDefaultShell(): Promise<string>;\n}\nexport namespace IBaseTerminalServer {\n    export function validateId(id?: number): boolean {\n        return typeof id === 'number' && id !== -1;\n    }\n}\n\nexport interface IBaseTerminalExitEvent {\n    terminalId: number;\n\n    // Exactly one of code and signal will be set.\n    code?: number;\n    signal?: string;\n}\n\nexport interface IBaseTerminalErrorEvent {\n    terminalId: number;\n    error: Error\n}\n\nexport interface IBaseTerminalClient {\n    onTerminalExitChanged(event: IBaseTerminalExitEvent): void;\n    onTerminalError(event: IBaseTerminalErrorEvent): void;\n}\n\nexport class DispatchingBaseTerminalClient {\n\n    protected readonly clients = new Set<IBaseTerminalClient>();\n\n    push(client: IBaseTerminalClient): Disposable {\n        this.clients.add(client);\n        return Disposable.create(() => this.clients.delete(client));\n    }\n\n    onTerminalExitChanged(event: IBaseTerminalExitEvent): void {\n        this.clients.forEach(c => {\n            try {\n                c.onTerminalExitChanged(event);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    onTerminalError(event: IBaseTerminalErrorEvent): void {\n\n        this.clients.forEach(c => {\n            try {\n                c.onTerminalError(event);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { JsonRpcProxy } from '@theia/core';\nimport { IBaseTerminalServer, IBaseTerminalServerOptions } from './base-terminal-protocol';\nimport { OS } from '@theia/core/lib/common/os';\n\nexport const IShellTerminalServer = Symbol('IShellTerminalServer');\n\nexport interface IShellTerminalServer extends IBaseTerminalServer {\n    hasChildProcesses(processId: number | undefined): Promise<boolean>;\n}\n\nexport const shellTerminalPath = '/services/shell-terminal';\n\nexport type ShellTerminalOSPreferences<T> = {\n    [key in OS.Type]: T\n};\n\nexport interface IShellTerminalPreferences {\n    shell: ShellTerminalOSPreferences<string | undefined>,\n    shellArgs: ShellTerminalOSPreferences<string[]>\n};\n\nexport interface IShellTerminalServerOptions extends IBaseTerminalServerOptions {\n    shellPreferences?: IShellTerminalPreferences,\n    shell?: string,\n    args?: string[],\n    rootURI?: string,\n    cols?: number,\n    rows?: number,\n    env?: { [key: string]: string | null };\n    isPseudo?: boolean,\n}\n\nexport const ShellTerminalServerProxy = Symbol('ShellTerminalServerProxy');\nexport type ShellTerminalServerProxy = JsonRpcProxy<IShellTerminalServer>;\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { IBaseTerminalServer, IBaseTerminalServerOptions } from './base-terminal-protocol';\n\nexport const ITerminalServer = Symbol('ITerminalServer');\n\nexport const terminalPath = '/services/terminal';\nexport const terminalsPath = '/services/terminals';\n\nexport interface ITerminalServer extends IBaseTerminalServer {\n    create(ITerminalServerOptions: object): Promise<number>;\n}\n\nexport interface ITerminalServerOptions extends IBaseTerminalServerOptions {\n    command: string,\n    args?: string[],\n    options?: object\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { IBaseTerminalClient, IBaseTerminalExitEvent, IBaseTerminalErrorEvent } from './base-terminal-protocol';\n\n@injectable()\nexport class TerminalWatcher {\n\n    getTerminalClient(): IBaseTerminalClient {\n        const exitEmitter = this.onTerminalExitEmitter;\n        const errorEmitter = this.onTerminalErrorEmitter;\n        return {\n            onTerminalExitChanged(event: IBaseTerminalExitEvent): void {\n                exitEmitter.fire(event);\n            },\n            onTerminalError(event: IBaseTerminalErrorEvent): void {\n                errorEmitter.fire(event);\n            }\n        };\n    }\n\n    private onTerminalExitEmitter = new Emitter<IBaseTerminalExitEvent>();\n    private onTerminalErrorEmitter = new Emitter<IBaseTerminalErrorEvent>();\n\n    get onTerminalExit(): Event<IBaseTerminalExitEvent> {\n        return this.onTerminalExitEmitter.event;\n    }\n\n    get onTerminalError(): Event<IBaseTerminalErrorEvent> {\n        return this.onTerminalErrorEmitter.event;\n    }\n}\n","\nvar content = require(\"!!../../../../../css-loader/index.js!./terminal-search.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./terminal-search.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./terminal-search.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2019 Red Hat, Inc. and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-search-terminal-widget-parent {\\n    background: var(--theia-sideBar-background);\\n    position: absolute;\\n    margin: 0px;\\n    border: var(--theia-border-width) solid transparent;\\n    padding: 0px;\\n    top: 1px;\\n    right: 19px;\\n\\n    z-index: 10;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box {\\n    display: flex;\\n    margin: 0px;\\n    border: var(--theia-border-width) solid transparent;\\n    padding: 0px;\\n    align-items: center;\\n    color: var(--theia-input-foreground);\\n    background: var(--theia-input-background);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box input {\\n    margin-left: 5px;\\n    padding: 0px;\\n    width: 100px;\\n    height: 18px;\\n    color: inherit;\\n    background-color: inherit;\\n    border: var(--theia-border-width) solid transparent;\\n    outline: none;\\n}\\n\\n.theia-search-terminal-widget-parent .search-elem {\\n    border: var(--theia-border-width) solid transparent;\\n    background-position: center;\\n    background-repeat: no-repeat;\\n    height: 18px;\\n    width: 18px;\\n    margin: 1px;\\n    opacity: 0.7;\\n    outline: none;\\n}\\n\\n.theia-search-terminal-widget-parent .search-elem:hover {\\n    opacity: 1;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box.focused {\\n    border: var(--theia-border-width) solid var(--theia-focusBorder);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box .search-elem.option-enabled {\\n    border: var(--theia-border-width) solid var(--theia-inputOption-activeBorder);\\n    background-color: var(--theia-inputOption-activeBackground);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box .whole-word {\\n    background-image: var(--theia-icon-whole-word);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box .match-case {\\n    background-image: var(--theia-icon-case-sensitive);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box .use-regexp {\\n    background-image: var(--theia-icon-regex);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget {\\n    margin: 2px;\\n    display: flex;\\n    align-items: center;\\n    font: var(--theia-content-font-size);\\n    color: var(--theia-input-foreground);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget button {\\n    background-color: transparent;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget button:focus {\\n    border: var(--theia-border-width) var(--theia-focusBorder) solid;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget .search-elem.close {\\n    background-image: var(--theia-icon-close);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget .search-elem.arrow-up {\\n    background-image: var(--theia-icon-arrow-up);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget .search-elem.arrow-down {\\n    background-image: var(--theia-icon-arrow-down);\\n}\\n\", \"\"]);\n\n// exports\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (<any>this._terminal)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (<any>this._terminal)._core;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - core.viewport.scrollBarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / core._renderService.dimensions.actualCellWidth)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / core._renderService.dimensions.actualCellHeight))\n    };\n    return geometry;\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SearchAddon\"] = factory();\n\telse\n\t\troot[\"SearchAddon\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, IDisposable, ITerminalAddon, ISelectionPosition } from 'xterm';\n\nexport interface ISearchOptions {\n  regex?: boolean;\n  wholeWord?: boolean;\n  caseSensitive?: boolean;\n  incremental?: boolean;\n}\n\nexport interface ISearchPosition {\n  startCol: number;\n  startRow: number;\n}\n\nexport interface ISearchResult {\n  term: string;\n  col: number;\n  row: number;\n}\n\nconst NON_WORD_CHARACTERS = ' ~!@#$%^&*()+`-=[]{}|\\;:\"\\',./<>?';\nconst LINES_CACHE_TIME_TO_LIVE = 15 * 1000; // 15 secs\n\nexport class SearchAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  /**\n   * translateBufferLineToStringWithWrap is a fairly expensive call.\n   * We memoize the calls into an array that has a time based ttl.\n   * _linesCache is also invalidated when the terminal cursor moves.\n   */\n  private _linesCache: string[] | undefined;\n  private _linesCacheTimeoutId = 0;\n  private _cursorMoveListener: IDisposable | undefined;\n  private _resizeListener: IDisposable | undefined;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void { }\n\n  /**\n   * Find the next instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @return Whether a result was found.\n   */\n  public findNext(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n\n    if (!term || term.length === 0) {\n      this._terminal.clearSelection();\n      return false;\n    }\n\n    let startCol = 0;\n    let startRow = 0;\n    let currentSelection: ISelectionPosition | undefined;\n    if (this._terminal.hasSelection()) {\n      const incremental = searchOptions ? searchOptions.incremental : false;\n      // Start from the selection end if there is a selection\n      // For incremental search, use existing row\n      currentSelection = this._terminal.getSelectionPosition()!;\n      startRow = incremental ? currentSelection.startRow : currentSelection.endRow;\n      startCol = incremental ? currentSelection.startColumn : currentSelection.endColumn;\n    }\n\n    this._initLinesCache();\n\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    // Search startRow\n    let result = this._findInLine(term, searchPosition, searchOptions);\n\n    // Search from startRow + 1 to end\n    if (!result) {\n\n      for (let y = startRow + 1; y < this._terminal.buffer.baseY + this._terminal.rows; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        // If the current line is wrapped line, increase index of column to ignore the previous scan\n        // Otherwise, reset beginning column index to zero with set new unwrapped line index\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the bottom and didn't search from the very top wrap back up\n    if (!result && startRow !== 0) {\n      for (let y = 0; y < startRow; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    // If there is only one result, return true.\n    if (!result && currentSelection) return true;\n\n    // Set selection and scroll if a result was found\n    return this._selectResult(result);\n  }\n\n  /**\n   * Find the previous instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @return Whether a result was found.\n   */\n  public findPrevious(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n\n    if (!term || term.length === 0) {\n      this._terminal.clearSelection();\n      return false;\n    }\n\n    const isReverseSearch = true;\n    let startRow = this._terminal.buffer.baseY + this._terminal.rows;\n    let startCol = this._terminal.cols;\n    let result: ISearchResult | undefined;\n    const incremental = searchOptions ? searchOptions.incremental : false;\n    let currentSelection: ISelectionPosition | undefined;\n    if (this._terminal.hasSelection()) {\n      currentSelection = this._terminal.getSelectionPosition()!;\n      // Start from selection start if there is a selection\n      startRow = currentSelection.startRow;\n      startCol = currentSelection.startColumn;\n    }\n\n    this._initLinesCache();\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    if (incremental) {\n      result = this._findInLine(term, searchPosition, searchOptions, false);\n      if (!(result && result.row === startRow && result.col === startCol)) {\n        result = this._findInLine(term, searchPosition, searchOptions, true);\n      }\n    } else {\n      result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n    }\n\n    // Search from startRow - 1 to top\n    if (!result) {\n      searchPosition.startCol = Math.max(searchPosition.startCol, this._terminal.cols);\n      for (let y = startRow - 1; y >= 0; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the top and didn't search from the very bottom wrap back down\n    if (!result && startRow !== (this._terminal.buffer.baseY + this._terminal.rows)) {\n      for (let y = (this._terminal.buffer.baseY + this._terminal.rows); y > startRow; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    // If there is only one result, return true.\n    if (!result && currentSelection) return true;\n\n    // Set selection and scroll if a result was found\n    return this._selectResult(result);\n  }\n\n  /**\n   * Sets up a line cache with a ttl\n   */\n  private _initLinesCache(): void {\n    const terminal = this._terminal!;\n    if (!this._linesCache) {\n      this._linesCache = new Array(terminal.buffer.length);\n      this._cursorMoveListener = terminal.onCursorMove(() => this._destroyLinesCache());\n      this._resizeListener = terminal.onResize(() => this._destroyLinesCache());\n    }\n\n    window.clearTimeout(this._linesCacheTimeoutId);\n    this._linesCacheTimeoutId = window.setTimeout(() => this._destroyLinesCache(), LINES_CACHE_TIME_TO_LIVE);\n  }\n\n  private _destroyLinesCache(): void {\n    this._linesCache = undefined;\n    if (this._cursorMoveListener) {\n      this._cursorMoveListener.dispose();\n      this._cursorMoveListener = undefined;\n    }\n    if (this._resizeListener) {\n      this._resizeListener.dispose();\n      this._resizeListener = undefined;\n    }\n    if (this._linesCacheTimeoutId) {\n      window.clearTimeout(this._linesCacheTimeoutId);\n      this._linesCacheTimeoutId = 0;\n    }\n  }\n\n  /**\n   * A found substring is a whole word if it doesn't have an alphanumeric character directly adjacent to it.\n   * @param searchIndex starting indext of the potential whole word substring\n   * @param line entire string in which the potential whole word was found\n   * @param term the substring that starts at searchIndex\n   */\n  private _isWholeWord(searchIndex: number, line: string, term: string): boolean {\n    return (((searchIndex === 0) || (NON_WORD_CHARACTERS.indexOf(line[searchIndex - 1]) !== -1)) &&\n      (((searchIndex + term.length) === line.length) || (NON_WORD_CHARACTERS.indexOf(line[searchIndex + term.length]) !== -1)));\n  }\n\n  /**\n   * Searches a line for a search term. Takes the provided terminal line and searches the text line, which may contain\n   * subsequent terminal lines if the text is wrapped. If the provided line number is part of a wrapped text line that\n   * started on an earlier line then it is skipped since it will be properly searched when the terminal line that the\n   * text starts on is searched.\n   * @param term The search term.\n   * @param position The position to start the search.\n   * @param searchOptions Search options.\n   * @return The search result if it was found.\n   */\n  protected _findInLine(term: string, searchPosition: ISearchPosition, searchOptions: ISearchOptions = {}, isReverseSearch: boolean = false): ISearchResult | undefined {\n    const terminal = this._terminal!;\n    let row = searchPosition.startRow;\n    const col = searchPosition.startCol;\n\n    // Ignore wrapped lines, only consider on unwrapped line (first row of command string).\n    const firstLine = terminal.buffer.getLine(row);\n    if (firstLine && firstLine.isWrapped) {\n      if (isReverseSearch) {\n        searchPosition.startCol += terminal.cols;\n        return;\n      }\n\n      // This will iterate until we find the line start.\n      // When we find it, we will search using the calculated start column.\n      searchPosition.startRow--;\n      searchPosition.startCol += terminal.cols;\n      return this._findInLine(term, searchPosition, searchOptions);\n    }\n    let stringLine = this._linesCache ? this._linesCache[row] : void 0;\n    if (stringLine === void 0) {\n      stringLine = this._translateBufferLineToStringWithWrap(row, true);\n      if (this._linesCache) {\n        this._linesCache[row] = stringLine;\n      }\n    }\n\n    const searchTerm = searchOptions.caseSensitive ? term : term.toLowerCase();\n    const searchStringLine = searchOptions.caseSensitive ? stringLine : stringLine.toLowerCase();\n\n    let resultIndex = -1;\n    if (searchOptions.regex) {\n      const searchRegex = RegExp(searchTerm, 'g');\n      let foundTerm: RegExpExecArray | null;\n      if (isReverseSearch) {\n        // This loop will get the resultIndex of the _last_ regex match in the range 0..col\n        while (foundTerm = searchRegex.exec(searchStringLine.slice(0, col))) {\n          resultIndex = searchRegex.lastIndex - foundTerm[0].length;\n          term = foundTerm[0];\n          searchRegex.lastIndex -= (term.length - 1);\n        }\n      } else {\n        foundTerm = searchRegex.exec(searchStringLine.slice(col));\n        if (foundTerm && foundTerm[0].length > 0) {\n          resultIndex = col + (searchRegex.lastIndex - foundTerm[0].length);\n          term = foundTerm[0];\n        }\n      }\n    } else {\n      if (isReverseSearch) {\n        if (col - searchTerm.length >= 0) {\n          resultIndex = searchStringLine.lastIndexOf(searchTerm, col - searchTerm.length);\n        }\n      } else {\n        resultIndex = searchStringLine.indexOf(searchTerm, col);\n      }\n    }\n\n    if (resultIndex >= 0) {\n      // Adjust the row number and search index if needed since a \"line\" of text can span multiple rows\n      if (resultIndex >= terminal.cols) {\n        row += Math.floor(resultIndex / terminal.cols);\n        resultIndex = resultIndex % terminal.cols;\n      }\n      if (searchOptions.wholeWord && !this._isWholeWord(resultIndex, searchStringLine, term)) {\n        return;\n      }\n\n      const line = terminal.buffer.getLine(row);\n\n      if (line) {\n        for (let i = 0; i < resultIndex; i++) {\n          const cell = line.getCell(i);\n          if (!cell) {\n            break;\n          }\n          // Adjust the searchIndex to normalize emoji into single chars\n          const char = cell.getChars();\n          if (char.length > 1) {\n            resultIndex -= char.length - 1;\n          }\n          // Adjust the searchIndex for empty characters following wide unicode\n          // chars (eg. CJK)\n          const charWidth = cell.getWidth();\n          if (charWidth === 0) {\n            resultIndex++;\n          }\n        }\n      }\n      return {\n        term,\n        col: resultIndex,\n        row\n      };\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, including subsequent lines if they are wraps.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   */\n  private _translateBufferLineToStringWithWrap(lineIndex: number, trimRight: boolean): string {\n    const terminal = this._terminal!;\n    let lineString = '';\n    let lineWrapsToNext: boolean;\n\n    do {\n      const nextLine = terminal.buffer.getLine(lineIndex + 1);\n      lineWrapsToNext = nextLine ? nextLine.isWrapped : false;\n      const line = terminal.buffer.getLine(lineIndex);\n      if (!line) {\n        break;\n      }\n      lineString += line.translateToString(!lineWrapsToNext && trimRight).substring(0, terminal.cols);\n      lineIndex++;\n    } while (lineWrapsToNext);\n\n    return lineString;\n  }\n\n  /**\n   * Selects and scrolls to a result.\n   * @param result The result to select.\n   * @return Whethera result was selected.\n   */\n  private _selectResult(result: ISearchResult | undefined): boolean {\n    const terminal = this._terminal!;\n    if (!result) {\n      terminal.clearSelection();\n      return false;\n    }\n    terminal.select(result.col, result.row, result.term.length);\n    // If it is not in the viewport then we scroll else it just gets selected\n    if (result.row >= (terminal.buffer.viewportY + terminal.rows) || result.row < terminal.buffer.viewportY) {\n      let scroll = result.row - terminal.buffer.viewportY;\n      scroll = scroll - Math.floor(terminal.rows / 2);\n      terminal.scrollLines(scroll);\n    }\n    return true;\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 34);\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n\n  onResize: IEvent<{ cols: number, rows: number }>;\n\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface IPartialTerminalOptions {\n  allowTransparency?: boolean;\n  bellSound?: string;\n  bellStyle?: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols?: number;\n  cursorBlink?: boolean;\n  cursorStyle?: 'block' | 'underline' | 'bar';\n  cursorWidth?: number;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  rendererType?: RendererType;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollSensitivity?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  wordSeparator?: string;\n  windowOptions?: IWindowOptions;\n}\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  linkTooltipHoverDuration: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  convertEol: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..31 (32th bit unused)\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedBufferChange: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n  registerCharacterJoiner(handler: CharacterJoinerHandler): number;\n  deregisterCharacterJoiner(joinerId: number): boolean;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  isClickInSelection(event: MouseEvent): boolean;\n  selectWordAtCursor(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: undefined;\n\n  playBellSound(): void;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number   { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number      { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number     { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number    { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number       { return this.bg & BgFlags.DIM; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF)) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF)) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    switch (css.length) {\n      case 7: // #rrggbb\n        return {\n          css,\n          rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n        };\n      case 9: // #rrggbbaa\n        return {\n          css,\n          rgba: parseInt(css.slice(1), 16) >>> 0\n        };\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        return reduceLuminance(bgRgba, fgRgba, ratio);\n      }\n      return increaseLuminance(bgRgba, fgRgba, ratio);\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number): IColor {\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = !!~userAgent.indexOf('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = contains(['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'], platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = contains(['Windows', 'Win16', 'Win32', 'WinCE'], platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n\n/**\n * Return if the given array contains the given element\n * @param arr The array to search for the given element.\n * @param el The element to look for into the array\n */\nfunction contains(arr: any[], el: any): boolean {\n  return arr.indexOf(el) >= 0;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    removeElementFromParent(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', {alpha: this._alpha}));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.options, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = 'middle';\n    this._clipRow(y);\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = 'middle';\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.options.fontWeightBold : this._optionsService.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.options.fontSize * window.devicePixelRatio}px ${this._optionsService.options.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData): IColor | undefined {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._optionsService.options.minimumContrastRatio);\n\n    if (!result) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n      return undefined;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.options.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n}\n\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: ExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = {'(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2};\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): void {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n      case '\"p': // DECSCL\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n                ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = {'block': 2, 'underline': 4, 'bar': 6};\n        let style = STYLES[this._optionsService.options.cursorStyle];\n        style -= this._optionsService.options.cursorBlink ? 1 : 0;\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestScroll = new EventEmitter<IAttributeData, boolean | void>();\n  public get onRequestScroll(): IEvent<IAttributeData, boolean | void> { return this._onRequestScroll.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.setCsiHandler({final: '@'}, params => this.insertChars(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: '@'}, params => this.scrollLeft(params));\n    this._parser.setCsiHandler({final: 'A'}, params => this.cursorUp(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'A'}, params => this.scrollRight(params));\n    this._parser.setCsiHandler({final: 'B'}, params => this.cursorDown(params));\n    this._parser.setCsiHandler({final: 'C'}, params => this.cursorForward(params));\n    this._parser.setCsiHandler({final: 'D'}, params => this.cursorBackward(params));\n    this._parser.setCsiHandler({final: 'E'}, params => this.cursorNextLine(params));\n    this._parser.setCsiHandler({final: 'F'}, params => this.cursorPrecedingLine(params));\n    this._parser.setCsiHandler({final: 'G'}, params => this.cursorCharAbsolute(params));\n    this._parser.setCsiHandler({final: 'H'}, params => this.cursorPosition(params));\n    this._parser.setCsiHandler({final: 'I'}, params => this.cursorForwardTab(params));\n    this._parser.setCsiHandler({final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({final: 'L'}, params => this.insertLines(params));\n    this._parser.setCsiHandler({final: 'M'}, params => this.deleteLines(params));\n    this._parser.setCsiHandler({final: 'P'}, params => this.deleteChars(params));\n    this._parser.setCsiHandler({final: 'S'}, params => this.scrollUp(params));\n    this._parser.setCsiHandler({final: 'T'}, params => this.scrollDown(params));\n    this._parser.setCsiHandler({final: 'X'}, params => this.eraseChars(params));\n    this._parser.setCsiHandler({final: 'Z'}, params => this.cursorBackwardTab(params));\n    this._parser.setCsiHandler({final: '`'}, params => this.charPosAbsolute(params));\n    this._parser.setCsiHandler({final: 'a'}, params => this.hPositionRelative(params));\n    this._parser.setCsiHandler({final: 'b'}, params => this.repeatPrecedingCharacter(params));\n    this._parser.setCsiHandler({final: 'c'}, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.setCsiHandler({prefix: '>', final: 'c'}, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.setCsiHandler({final: 'd'}, params => this.linePosAbsolute(params));\n    this._parser.setCsiHandler({final: 'e'}, params => this.vPositionRelative(params));\n    this._parser.setCsiHandler({final: 'f'}, params => this.hVPosition(params));\n    this._parser.setCsiHandler({final: 'g'}, params => this.tabClear(params));\n    this._parser.setCsiHandler({final: 'h'}, params => this.setMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'h'}, params => this.setModePrivate(params));\n    this._parser.setCsiHandler({final: 'l'}, params => this.resetMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'l'}, params => this.resetModePrivate(params));\n    this._parser.setCsiHandler({final: 'm'}, params => this.charAttributes(params));\n    this._parser.setCsiHandler({final: 'n'}, params => this.deviceStatus(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'n'}, params => this.deviceStatusPrivate(params));\n    this._parser.setCsiHandler({intermediates: '!', final: 'p'}, params => this.softReset(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'q'}, params => this.setCursorStyle(params));\n    this._parser.setCsiHandler({final: 'r'}, params => this.setScrollRegion(params));\n    this._parser.setCsiHandler({final: 's'}, params => this.saveCursor(params));\n    this._parser.setCsiHandler({final: 't'}, params => this.windowOptions(params));\n    this._parser.setCsiHandler({final: 'u'}, params => this.restoreCursor(params));\n    this._parser.setCsiHandler({intermediates: '\\'', final: '}'}, params => this.insertColumns(params));\n    this._parser.setCsiHandler({intermediates: '\\'', final: '~'}, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.setOscHandler(0, new OscHandler((data: string) => { this.setTitle(data); this.setIconName(data); }));\n    //   1 - icon name\n    this._parser.setOscHandler(1, new OscHandler((data: string) => this.setIconName(data)));\n    //   2 - title\n    this._parser.setOscHandler(2, new OscHandler((data: string) => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.setEscHandler({final: '7'}, () => this.saveCursor());\n    this._parser.setEscHandler({final: '8'}, () => this.restoreCursor());\n    this._parser.setEscHandler({final: 'D'}, () => this.index());\n    this._parser.setEscHandler({final: 'E'}, () => this.nextLine());\n    this._parser.setEscHandler({final: 'H'}, () => this.tabSet());\n    this._parser.setEscHandler({final: 'M'}, () => this.reverseIndex());\n    this._parser.setEscHandler({final: '='}, () => this.keypadApplicationMode());\n    this._parser.setEscHandler({final: '>'}, () => this.keypadNumericMode());\n    this._parser.setEscHandler({final: 'c'}, () => this.fullReset());\n    this._parser.setEscHandler({final: 'n'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: 'o'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '|'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '}'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: '~'}, () => this.setgLevel(1));\n    this._parser.setEscHandler({intermediates: '%', final: '@'}, () => this.selectDefaultCharset());\n    this._parser.setEscHandler({intermediates: '%', final: 'G'}, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.setEscHandler({intermediates: '(', final: flag}, () => this.selectCharset('(' + flag));\n      this._parser.setEscHandler({intermediates: ')', final: flag}, () => this.selectCharset(')' + flag));\n      this._parser.setEscHandler({intermediates: '*', final: flag}, () => this.selectCharset('*' + flag));\n      this._parser.setEscHandler({intermediates: '+', final: flag}, () => this.selectCharset('+' + flag));\n      this._parser.setEscHandler({intermediates: '-', final: flag}, () => this.selectCharset('-' + flag));\n      this._parser.setEscHandler({intermediates: '.', final: flag}, () => this.selectCharset('.' + flag));\n      this._parser.setEscHandler({intermediates: '/', final: flag}, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.setEscHandler({intermediates: '#', final: '8'}, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.setDcsHandler({intermediates: '$', final: 'q'}, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public parse(data: string | Uint8Array): void {\n    let buffer = this._bufferService.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    this._logService.debug('parsing data', data);\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    this._dirtyRowService.clearRange();\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = 0; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        this._parser.parse(this._parseBuffer, len);\n      }\n    } else {\n      const len = (typeof data === 'string')\n        ? this._stringDecoder.decode(data, this._parseBuffer)\n        : this._utf8Decoder.decode(data, this._parseBuffer);\n      this._parser.parse(this._parseBuffer, len);\n    }\n\n    buffer = this._bufferService.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const buffer = this._bufferService.buffer;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.options.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = buffer.lines.get(buffer.ybase + buffer.y)!;\n\n    this._dirtyRowService.markDirty(buffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (buffer.x && end - start > 0 && bufferRow.getWidth(buffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(buffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // buffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for buffer.x to avoid overflow left\n      if (!chWidth && buffer.x) {\n        if (!bufferRow.getWidth(buffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(buffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(buffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (buffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (buffer.x < cols) {\n            bufferRow.setCellFromCodePoint(buffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          buffer.x = 0;\n          buffer.y++;\n          if (buffer.y === buffer.scrollBottom + 1) {\n            buffer.y--;\n            this._onRequestScroll.fire(this._eraseAttrData(), true);\n          } else {\n            if (buffer.y >= this._bufferService.rows) {\n              buffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            buffer.lines.get(buffer.ybase + buffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = buffer.lines.get(buffer.ybase + buffer.y)!;\n        } else {\n          buffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(buffer.x, chWidth, buffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(buffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that buffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(buffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(buffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (buffer.x < cols && end - start > 0 && bufferRow.getWidth(buffer.x) === 0 && !bufferRow.hasContent(buffer.x)) {\n      bufferRow.setCellFromCodePoint(buffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(buffer.y);\n  }\n\n  /**\n   * Forward addCsiHandler from parser.\n   */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.addCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.addCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward addDcsHandler from parser.\n   */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._parser.addDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward addEscHandler from parser.\n   */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._parser.addEscHandler(id, callback);\n  }\n\n  /**\n   * Forward addOscHandler from parser.\n   */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._parser.addOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): void {\n    this._onRequestBell.fire();\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): void {\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    this._dirtyRowService.markDirty(buffer.y);\n    if (this._optionsService.options.convertEol) {\n      buffer.x = 0;\n    }\n    buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._onRequestScroll.fire(this._eraseAttrData());\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (buffer.x >= this._bufferService.cols) {\n      buffer.x--;\n    }\n    this._dirtyRowService.markDirty(buffer.y);\n\n    this._onLineFeed.fire();\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): void {\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): void {\n    const buffer = this._bufferService.buffer;\n\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (buffer.x > 0) {\n        buffer.x--;\n      }\n      return;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (buffer.x > 0) {\n      buffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (buffer.x === 0\n          && buffer.y > buffer.scrollTop\n          && buffer.y <= buffer.scrollBottom\n          && buffer.lines.get(buffer.ybase + buffer.y)?.isWrapped)\n      {\n        buffer.lines.get(buffer.ybase + buffer.y)!.isWrapped = false;\n        buffer.y--;\n        buffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = buffer.lines.get(buffer.ybase + buffer.y)!;\n        if (line.hasWidth(buffer.x) && !line.hasContent(buffer.x)) {\n          buffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    const originalX = this._bufferService.buffer.x;\n    this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    if (this._optionsService.options.screenReaderMode) {\n      this._onA11yTab.fire(this._bufferService.buffer.x - originalX);\n    }\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): void {\n    this._charsetService.setgLevel(1);\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): void {\n    this._charsetService.setgLevel(0);\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._bufferService.buffer.x = Math.min(maxCol, Math.max(0, this._bufferService.buffer.x));\n    this._bufferService.buffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._bufferService.buffer.scrollBottom, Math.max(this._bufferService.buffer.scrollTop, this._bufferService.buffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._bufferService.buffer.y));\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = this._bufferService.buffer.scrollTop + y;\n    } else {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._bufferService.buffer.x + x, this._bufferService.buffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): void {\n    // stop at scrollTop\n    const diffToTop = this._bufferService.buffer.y - this._bufferService.buffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): void {\n    // stop at scrollBottom\n    const diffToBottom = this._bufferService.buffer.scrollBottom - this._bufferService.buffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): void {\n    this._moveCursor(-(params.params[0] || 1), 0);\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): void {\n    this.cursorDown(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): void {\n    this.cursorUp(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): void {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): void {\n    this._setCursor(this._bufferService.buffer.x, (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): void {\n    this._moveCursor(0, params.params[0] || 1);\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): void {\n    this.cursorPosition(params);\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): void {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._bufferService.buffer.tabs[this._bufferService.buffer.x];\n    } else if (param === 3) {\n      this._bufferService.buffer.tabs = {};\n    }\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    }\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.x = buffer.prevStop();\n    }\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y)!;\n    line.fill(this._bufferService.buffer.getNullCell(this._eraseAttrData()));\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): void {\n    this._restrictCursor();\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._bufferService.buffer.x, this._bufferService.cols, this._bufferService.buffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._bufferService.buffer.x + 1, true);\n        if (this._bufferService.buffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._bufferService.buffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._bufferService.buffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._bufferService.buffer.lines.trimStart(scrollBackSize);\n          this._bufferService.buffer.ybase = Math.max(this._bufferService.buffer.ybase - scrollBackSize, 0);\n          this._bufferService.buffer.ydisp = Math.max(this._bufferService.buffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): void {\n    this._restrictCursor();\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._bufferService.buffer.y, this._bufferService.buffer.x, this._bufferService.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.buffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.cols);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.ybase + buffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - buffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + buffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      buffer.lines.splice(row, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.ybase + buffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - buffer.scrollBottom;\n    j = this._bufferService.rows - 1 + buffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(row, 1);\n      buffer.lines.splice(j, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + this._bufferService.buffer.y);\n    if (line) {\n      line.insertCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + this._bufferService.buffer.y);\n    if (line) {\n      line.deleteCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 0, buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y)!;\n      line.deleteCells(0, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y)!;\n      line.insertCells(0, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = this._bufferService.buffer.lines.get(buffer.ybase + y)!;\n      line.insertCells(buffer.x, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y)!;\n      line.deleteCells(buffer.x, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + this._bufferService.buffer.y);\n    if (line) {\n      line.replaceCells(\n        this._bufferService.buffer.x,\n        this._bufferService.buffer.x + (params.params[0] || 1),\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): void {\n    if (!this._parser.precedingCodepoint) {\n      return;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n          || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters.                                  | #N      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out.                                         | #N      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): void {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): void {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): void {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): void {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._bufferService.buffer.scrollTop = 0;\n    this._bufferService.buffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._bufferService.buffer.savedX = 0;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase;\n    this._bufferService.buffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): void {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): void {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) >  this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._bufferService.buffer.scrollTop = top - 1;\n      this._bufferService.buffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): void {\n    if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n      return;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): void {\n    this._bufferService.buffer.savedX = this._bufferService.buffer.x;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    this._bufferService.buffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._charsetService.charset;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): void {\n    this._bufferService.buffer.x = this._bufferService.buffer.savedX || 0;\n    this._bufferService.buffer.y = Math.max(this._bufferService.buffer.savedY - this._bufferService.buffer.ybase, 0);\n    this._curAttrData.fg = this._bufferService.buffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._bufferService.buffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._bufferService.buffer.savedCharset) {\n      this._charsetService.charset = this._bufferService.buffer.savedCharset;\n    }\n    this._restrictCursor();\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): void {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): void {\n    this._iconName = data;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): void {\n    this._bufferService.buffer.x = 0;\n    this.index();\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): void {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): void {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): void {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): void {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return;\n    }\n    if (collectAndFlag[0] === '/') {\n      return;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    this._bufferService.buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._onRequestScroll.fire(this._eraseAttrData());\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): void {\n    this._bufferService.buffer.tabs[this._bufferService.buffer.x] = true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    if (buffer.y === buffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = buffer.scrollBottom - buffer.scrollTop;\n      buffer.lines.shiftElements(buffer.ybase + buffer.y, scrollRegionHeight, 1);\n      buffer.lines.set(buffer.ybase + buffer.y, buffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    } else {\n      buffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): void {\n    this._parser.reset();\n    this._onRequestReset.fire();\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): void {\n    this._charsetService.setgLevel(level);\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): void {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n    const buffer = this._bufferService.buffer;\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = buffer.ybase + buffer.y + yOffset;\n      const line = buffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (values[0] instanceof Array) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (value instanceof Array) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n\n  public addHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setHandler(ident: number, handler: IOscHandler): void {\n    this._handlers[ident] = [handler];\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public reset(): void {\n    // cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      this.end(false);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].put(data, start, end);\n      }\n    }\n  }\n\n  private _end(success: boolean): void {\n    // other than the old code we always have to call .end\n    // to keep the bubbling we use `success` to indicate\n    // whether a handler should execute\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'END', success);\n    } else {\n      let j = handlers.length - 1;\n      for (; j >= 0; j--) {\n        if (handlers[j].end(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        handlers[j].end(false);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._id = -1;\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean): void {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n      this._end(success);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => any) {}\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => {};\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public addHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public setHandler(ident: number, handler: IDcsHandler): void {\n    this._handlers[ident] = [handler];\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    if (this._active.length) {\n      this.unhook(false);\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let j = this._active.length - 1;\n      for (; j >= 0; j--) {\n        if (this._active[j].unhook(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams | undefined;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => any) {}\n\n  public hook(params: IParams): void {\n    this._params = params.clone();\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params || new Params());\n    }\n    this._params = undefined;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors = <IPartialColorSet>{\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(0, 16)\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'browser/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS. Do not mutate DEFAULT_ANSI_COLORS, instead make a copy\n// and mutate that.\nexport const DEFAULT_ANSI_COLORS = (() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})();\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionTransparent: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionTransparent = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selectionTransparent);\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionTransparent = color.opacity(this.colors.selectionTransparent, opacity);\n    }\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoinerRegistry, ICharacterJoiner } from 'browser/renderer/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerRegistry implements ICharacterJoinerRegistry {\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(private _bufferService: IBufferService) { }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerRegistry._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IDisposable {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] ? clone(val[key], depth - 1) : val[key]);\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi, IParser, IFunctionIdentifier, ILinkProvider, IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\nimport { ITerminal } from 'browser/Types';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { Terminal as TerminalCore } from '../Terminal';\nimport * as Strings from '../LocalizableStrings';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { AddonManager } from './AddonManager';\nimport { IParams } from 'common/parser/Types';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.options.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    return new BufferNamespaceApi(this._core.buffers);\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    this._checkProposedApi();\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'fontWeight' | 'fontWeightBold' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n}\n\nclass BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n\nclass BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _buffers: IBufferSet) {\n    this._normal = new BufferApiView(this._buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._buffers.alt, 'alternate');\n    this._buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._buffers.active === this._buffers.normal) { return this.normal; }\n    if (this._buffers.active === this._buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._buffers.alt);\n  }\n}\n\nclass BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, <ICellData>cell);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n\nclass ParserApi implements IParser {\n  constructor(private _core: ITerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean): IDisposable {\n    return this._core.addEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._core.addOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n\nclass UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ITerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2 } from 'browser/Types';\nimport { IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IKeyboardEvent, KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { ITerminalOptions as IInitializedTerminalOptions } from 'common/services/Services';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = <any>Browser;\n\n  // TODO: We should remove options once components adopt optionsService\n  public get options(): IInitializedTerminalOptions { return this.optionsService.options; }\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _charSizeService: ICharSizeService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _selectionService: ISelectionService | undefined;\n  private _soundService: ISoundService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier = this._instantiationService.createInstance(Linkifier);\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestScroll((eraseAttr, isWrapped) => this.scroll(eraseAttr, isWrapped || undefined)));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this._renderService) {\n          this._renderService.setRenderer(this._createRenderer());\n          this._renderService.onResize(this.cols, this.rows);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.options.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.options.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this._coreService.decPrivateModes.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this._coreService.decPrivateModes.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing) {\n      return;\n    }\n\n    const cellHeight = Math.ceil(this._charSizeService!.height * this.optionsService.options.lineHeight);\n    const cursorTop = this._bufferService.buffer.y * cellHeight;\n    const cursorLeft = this._bufferService.buffer.x * this._charSizeService!.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = this._charSizeService!.width + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this._coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!document.body.contains(parent)) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e)));\n    this._colorManager.setTheme(this._theme);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedBufferChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this.onScroll(() => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager!.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.element, this._mouseService, this._renderService);\n\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this._coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager!.colors, this.screenElement!, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self._coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        ev.preventDefault();\n        return this.cancel(ev);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this._coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.options.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this._coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this._coreMouseService.activeProtocol = this._coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this._coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!requestedEvents.wheel) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport!.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this._coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this._coreService.triggerDataEvent(data, true);\n        }\n        return;\n      }\n    }, { passive: true }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (requestedEvents.wheel) return;\n      if (!this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this._coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this._coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService && this._selectionService.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this._coreService.isCursorInitialized) {\n      this._coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    super.scrollLines(disp, suppressScrollEvent);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this._coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    const joinerId = this._renderService!.registerCharacterJoiner(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (this._renderService!.deregisterCharacterJoiner(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart![0],\n      startRow: this._selectionService.selectionStart![1],\n      endColumn: this._selectionService.selectionEnd![0],\n      endRow: this._selectionService.selectionEnd![1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    const result = evaluateKeyboardEvent(event, this._coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this._coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.options.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: IKeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this._coreService.triggerDataEvent(key, true);\n\n    return true;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService!.playBellSound();\n    }\n\n    // if (this._visualBell()) {\n    //   this.element.classList.add('visual-bell-active');\n    //   clearTimeout(this._visualBellTimer);\n    //   this._visualBellTimer = window.setTimeout(() => {\n    //     this.element.classList.remove('visual-bell-active');\n    //   }, 200);\n    // }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this._coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this._coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: CompositionEvent): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          this._coreService.triggerDataEvent(input, true);\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cellHeight = Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n      const cursorTop = this._bufferService.buffer.y * cellHeight;\n      const cursorLeft = this._bufferService.buffer.x * this._charSizeService.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.options.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      this._textarea.style.width = compositionViewBounds.width + 'px';\n      this._textarea.style.height = compositionViewBounds.height + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    const newScrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._lastScrollTop !== newScrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If element's scroll top changed, this can happen when hiding the element\n    if (this._lastScrollTop !== this._viewportElement.scrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio !== this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff, true);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.options.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.options.fastScrollSensitivity * this._optionsService.options.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.options.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord && !selectionService.isClickInSelection(ev)) {\n    selectionService.selectWordAtCursor(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: {[flag: number]: ExecuteHandlerType};\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.setEscHandler({final: '\\\\'}, () => {});\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public addEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): void {\n    this._escHandlers[this._identifier(id, [0x30, 0x7e])] = [handler];\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public addCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): void {\n    this._csiHandlers[this._identifier(id)] = [handler];\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public addDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.addHandler(this._identifier(id), handler);\n  }\n  public setDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): void {\n    this._dcsParser.setHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public addOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.addHandler(ident, handler);\n  }\n  public setOscHandler(ident: number, handler: IOscHandler): void {\n    this._oscParser.setHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n  }\n\n\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   */\n  public parse(data: Uint32Array, length: number): void {\n    let code = 0;\n    let transition = 0;\n    let currentState = this.currentState;\n    const osc = this._oscParser;\n    const dcs = this._dcsParser;\n    let collect = this._collect;\n    const params = this._params;\n    const table: Uint8Array = this._transitions.table;\n\n    // process input string\n    for (let i = 0; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = table[currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState,\n              collect,\n              params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // undefined or true means success and to stop bubbling\n            if (handlers[j](params) !== false) {\n              break;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(collect << 8 | code, params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          collect <<= 8;\n          collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // undefined or true means success and to stop bubbling\n            if (handlersEsc[jj]() !== false) {\n              break;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          dcs.hook(collect << 8 | code, params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              dcs.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          dcs.unhook(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          osc.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code <= 0x9f)) {\n              osc.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          osc.end(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n\n    // save collected intermediates\n    this._collect = collect;\n\n    // save state\n    this.currentState = currentState;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, CharacterJoinerHandler, ICharacterJoinerRegistry, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { CharacterJoinerRegistry } from 'browser/renderer/CharacterJoinerRegistry';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService coreService: ICoreService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.options.allowTransparency;\n    this._characterJoinerRegistry = new CharacterJoinerRegistry(this._bufferService);\n    this._renderLayers = [\n      new TextRenderLayer(this._screenElement, 0, this._colors, this._characterJoinerRegistry, allowTransparency, this._id, this._bufferService, _optionsService),\n      new SelectionRenderLayer(this._screenElement, 1, this._colors, this._id, this._bufferService, _optionsService),\n      new LinkRenderLayer(this._screenElement, 2, this._colors, this._id, linkifier, linkifier2, this._bufferService, _optionsService),\n      new CursorRenderLayer(this._screenElement, 3, this._colors, this._id, this._onRequestRedraw, this._bufferService, _optionsService, coreService, coreBrowserService)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    super.dispose();\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._colors);\n      l.reset();\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.onGridChanged(start, end);\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._characterJoinerRegistry.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._characterJoinerRegistry.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharacterJoinerRegistry, IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { JoinedCellData } from 'browser/renderer/CharacterJoinerRegistry';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    characterJoinerRegistry: ICharacterJoinerRegistry,\n    alpha: boolean,\n    rendererId: number,\n    bufferService: IBufferService,\n    optionsService: IOptionsService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n    this._characterJoinerRegistry = characterJoinerRegistry;\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    joinerRegistry: ICharacterJoinerRegistry | null,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = joinerRegistry ? joinerRegistry.getJoinedCharacters(row) : [];\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, null, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, this._characterJoinerRegistry, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        this._fillBottomLineAtCells(x, y, cell.getWidth());\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'browser/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', {alpha: true}));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', {alpha: this._config.allowTransparency}));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'middle';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight / 2);\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  protected _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorContrastCache } from 'browser/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    bufferService: IBufferService,\n    optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selectionTransparent.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    bufferService: IBufferService,\n    optionsService: IOptionsService,\n    private readonly _coreService: ICoreService,\n    private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n      this.onOptionsChanged();\n    }\n  }\n\n  public onBlur(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume();\n    } else {\n      this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n    }\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.options.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.options.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    bufferService: IBufferService,\n    optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onShowLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    @IBufferService protected readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IUnicodeService private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n    this._rowsTimeoutId = <number><any>setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency);\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onShowLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onHideLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICharSizeService, IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(<MouseEvent>event);\n    this._mouseUpListener = event => this._onMouseUp(<MouseEvent>event);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine && bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  public isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  public selectWordAtCursor(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, false);\n      this._model.selectionEnd = undefined;\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current work.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.WORD;\n      this._selectWordAt(coords, true);\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else if (this.hasSelection) {\n      this._onSelectionChange.fire();\n    }\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.options.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line && line.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line && line.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line && line.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  public serviceBrand: undefined;\n\n  private static _audioContext: AudioContext;\n\n  public static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (<any>window).AudioContext || (<any>window).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = window.setTimeout(() => this._onTooltip(e), this._optionsService.options.linkTooltipHoverDuration);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    if (zone && zone.tooltipCallback) {\n      zone.tooltipCallback(e);\n    }\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new RenderDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = <HTMLElement>e.target;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerHTML = '&nbsp;';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = new DomRendererRowFactory(document, this._optionsService, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier.onHideLinkUnderline(e => this._onLinkLeave(e));\n\n    this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.innerHTML = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.options.fontFamily};` +\n      ` font-size: ${this._optionsService.options.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.options.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.options.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.options.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionTransparent.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.innerHTML = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerHTML = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerHTML = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number { return -1; }\n  public deregisterCharacterJoiner(joinerId: number): boolean { return false; }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = <HTMLElement>row.children[x];\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'browser/Color';\nimport { IColorSet, IColor } from 'browser/Types';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private readonly _document: Document,\n    private readonly _optionsService: IOptionsService,\n    private _colors: IColorSet\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public createRow(lineData: IBufferLine, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      const width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (this._workCell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (this._workCell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (this._workCell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (this._workCell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (this._workCell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = this._workCell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      let fg = this._workCell.getFgColor();\n      let fgColorMode = this._workCell.getFgColorMode();\n      let bg = this._workCell.getBgColor();\n      let bgColorMode = this._workCell.getBgColorMode();\n      const isInverse = !!this._workCell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (this._workCell.isBold() && fg < 8 && this._optionsService.options.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.ansi[fg])) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, this._colors.background, color)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.foreground)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // Background\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          this._addStyle(charElement, `background-color:#${padStart(bg.toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          }\n      }\n\n      fragment.appendChild(charElement);\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor): boolean {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return false;\n    }\n\n    // Try get from cache first\n    let adjustedColor = this._colors.contrastCache.getColor(this._workCell.bg, this._workCell.fg);\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bg, fg, this._optionsService.options.minimumContrastRatio);\n      this._colors.contrastCache.setColor(this._workCell.bg, this._workCell.fg, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedBufferChange(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService charSizeService: ICharSizeService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(e => this._fullRefresh()));\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.intersectionRatio === 0;\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRender.fire({ start, end });\n    }\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._renderer.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._renderer.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\ninterface ILinkState {\n  decorations: ILinkDecorations;\n  isHovered: boolean;\n}\n\ninterface ILinkWithState {\n  link: ILink;\n  state?: ILinkState;\n}\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  protected _currentLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'click', this._onClick.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    this._linkProviders.forEach((linkProvider, i) => {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    });\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _onClick(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    if (this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedBufferChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    return document.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { ITerminalOptions, IDisposable, IBufferLine, IAttributeData, ICoreTerminal } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _coreService: ICoreService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _coreMouseService: ICoreMouseService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n\n  constructor(\n    options: ITerminalOptions\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this._coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this._coreService);\n    this._coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this._coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this._coreService, this._dirtyRowService, this._logService, this.optionsService, this._coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this._coreService.onData, this._onData));\n    this.register(forwardEvent(this._coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer(data => this._inputHandler.parse(data));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  public writeSync(data: string | Uint8Array): void {\n    this._writeBuffer.writeSync(data);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this._bufferService.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this._bufferService.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this._bufferService.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this._bufferService.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    // Flag rows that need updating\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    const buffer = this._bufferService.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this._bufferService.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this._bufferService.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._inputHandler.addEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._inputHandler.addDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    return this._inputHandler.addCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._inputHandler.addOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.options.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this._coreService.reset();\n    this._coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.options.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.addCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\n\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevel } = {\n  debug: LogLevel.DEBUG,\n  info: LogLevel.INFO,\n  warn: LogLevel.WARN,\n  error: LogLevel.ERROR,\n  off: LogLevel.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel!: LogLevel;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.options.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.options.cols, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.dispose();\n    this.buffers = new BufferSet(this._optionsService, this);\n    this.isUserScrolling = false;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal: Buffer;\n  private _alt: Buffer;\n  private _activeBuffer: Buffer;\n\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    optionsService: IOptionsService,\n    bufferService: IBufferService\n  ) {\n    super();\n\n    this._normal = new Buffer(true, optionsService, bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, optionsService, bufferService);\n    this._activeBuffer = this._normal;\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.options.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return {range, content};\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, IPartialTerminalOptions } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { clone } from 'common/Clone';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\n// TODO: Freeze?\nexport const DEFAULT_OPTIONS: ITerminalOptions = Object.freeze({\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  bellSound:  DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  linkTooltipHoverDuration: 500,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: true,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false\n});\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: IPartialTerminalOptions) {\n    this.options = clone(DEFAULT_OPTIONS);\n    for (const k of Object.keys(options)) {\n      if (k in this.options) {\n        const newValue = options[k as keyof IPartialTerminalOptions] as any;\n        this.options[k] = newValue;\n      }\n    }\n  }\n\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.indexOf(key) !== -1) {\n      throw new Error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n\n    value = this._sanitizeAndValidateOption(key, value);\n\n    // Don't fire an option change event if they didn't change\n    if (this.options[key] === value) {\n      return;\n    }\n\n    this.options[key] = value;\n    this._onOptionChange.fire(key);\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error(`No option with key \"${key}\"`);\n    }\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n\n  constructor(private _action: (data: string | Uint8Array) => void) { }\n\n  public writeSync(data: string | Uint8Array): void {\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    if (this._writeBuffer.length) {\n      for (let i = this._bufferOffset; i < this._writeBuffer.length; ++i) {\n        const data = this._writeBuffer[i];\n        const cb = this._callbacks[i];\n        this._action(data);\n        if (cb) cb();\n      }\n      // reset all to avoid reprocessing of chunks with scheduled innerWrite call\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      // stop scheduled innerWrite by offset > length condition\n      this._bufferOffset = 0x7FFFFFFF;\n    }\n    // handle current data chunk\n    this._action(data);\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  protected _innerWrite(): void {\n    const startTime = Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const cb = this._callbacks[this._bufferOffset];\n      this._bufferOffset++;\n\n      this._action(data);\n      this._pendingData -= data.length;\n      if (cb) cb();\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite(), 0);\n    } else {\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(<any>terminal);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n"],"sourceRoot":""}