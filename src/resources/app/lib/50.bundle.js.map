{"version":3,"sources":["webpack:///./node_modules/@theia/monaco/src/browser/monaco-command-registry.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-menu.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-status-bar-contribution.ts"],"names":[],"mappings":"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","file":"50.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { Command, CommandHandler, CommandRegistry, SelectionService } from '@theia/core';\nimport { TextEditorSelection } from '@theia/editor/lib/browser';\nimport { MonacoEditor } from './monaco-editor';\nimport { MonacoEditorProvider } from './monaco-editor-provider';\n\nexport interface MonacoEditorCommandHandler {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    execute(editor: MonacoEditor, ...args: any[]): any;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isEnabled?(editor: MonacoEditor, ...args: any[]): boolean;\n}\n@injectable()\nexport class MonacoCommandRegistry {\n\n    @inject(MonacoEditorProvider)\n    protected readonly monacoEditors: MonacoEditorProvider;\n\n    @inject(CommandRegistry) protected readonly commands: CommandRegistry;\n\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n\n    validate(command: string): string | undefined {\n        return this.commands.commandIds.indexOf(command) !== -1 ? command : undefined;\n    }\n\n    registerCommand(command: Command, handler: MonacoEditorCommandHandler): void {\n        this.commands.registerCommand({\n            ...command,\n            id: command.id\n        }, this.newHandler(handler));\n    }\n\n    registerHandler(command: string, handler: MonacoEditorCommandHandler): void {\n        this.commands.registerHandler(command, this.newHandler(handler));\n    }\n\n    protected newHandler(monacoHandler: MonacoEditorCommandHandler): CommandHandler {\n        return {\n            execute: (...args) => this.execute(monacoHandler, ...args),\n            isEnabled: (...args) => this.isEnabled(monacoHandler, ...args),\n            isVisible: (...args) => this.isVisible(monacoHandler, ...args)\n        };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected execute(monacoHandler: MonacoEditorCommandHandler, ...args: any[]): any {\n        const editor = this.monacoEditors.current;\n        if (editor) {\n            return Promise.resolve(monacoHandler.execute(editor, ...args));\n        }\n        return Promise.resolve();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected isEnabled(monacoHandler: MonacoEditorCommandHandler, ...args: any[]): boolean {\n        const editor = this.monacoEditors.current;\n        return !!editor && (!monacoHandler.isEnabled || monacoHandler.isEnabled(editor, ...args));\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected isVisible(monacoHandler: MonacoEditorCommandHandler, ...args: any[]): boolean {\n        return TextEditorSelection.is(this.selectionService.selection);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { MenuContribution, MenuModelRegistry, MAIN_MENU_BAR, MenuPath } from '@theia/core/lib/common';\nimport { EDITOR_CONTEXT_MENU } from '@theia/editor/lib/browser';\nimport { MonacoCommandRegistry } from './monaco-command-registry';\nimport MenuRegistry = monaco.actions.MenuRegistry;\n\nexport interface MonacoActionGroup {\n    id: string;\n    actions: string[];\n}\nexport namespace MonacoMenus {\n    export const SELECTION = [...MAIN_MENU_BAR, '3_selection'];\n    export const PEEK_CONTEXT_SUBMENU: MenuPath = [...EDITOR_CONTEXT_MENU, 'navigation', 'peek_submenu'];\n}\n\n@injectable()\nexport class MonacoEditorMenuContribution implements MenuContribution {\n\n    constructor(\n        @inject(MonacoCommandRegistry) protected readonly commands: MonacoCommandRegistry\n    ) { }\n\n    registerMenus(registry: MenuModelRegistry): void {\n        for (const item of MenuRegistry.getMenuItems(7)) {\n            if (!monaco.actions.isIMenuItem(item)) {\n                continue;\n            }\n            const commandId = this.commands.validate(item.command.id);\n            if (commandId) {\n                const menuPath = [...EDITOR_CONTEXT_MENU, (item.group || '')];\n                registry.registerMenuAction(menuPath, { commandId });\n            }\n        }\n\n        this.registerPeekSubmenu(registry);\n\n        registry.registerSubmenu(MonacoMenus.SELECTION, 'Selection');\n        for (const item of MenuRegistry.getMenuItems(23)) {\n            if (!monaco.actions.isIMenuItem(item)) {\n                continue;\n            }\n            const commandId = this.commands.validate(item.command.id);\n            if (commandId) {\n                const menuPath = [...MonacoMenus.SELECTION, (item.group || '')];\n                const label = this.removeMnemonic(item.command.title);\n                const order = item.order ? String(item.order) : '';\n                registry.registerMenuAction(menuPath, { commandId, order, label });\n            }\n        }\n    }\n\n    protected registerPeekSubmenu(registry: MenuModelRegistry): void {\n        registry.registerSubmenu(MonacoMenus.PEEK_CONTEXT_SUBMENU, 'Peek');\n\n        for (const item of MenuRegistry.getMenuItems(8)) {\n            const commandId = this.commands.validate(item.command.id);\n            if (commandId) {\n                const order = item.order ? String(item.order) : '';\n                registry.registerMenuAction([...MonacoMenus.PEEK_CONTEXT_SUBMENU, item.group || ''], { commandId, order });\n            }\n        }\n    }\n\n    protected removeMnemonic(label: string): string {\n        return label.replace(/\\(&&\\w\\)|&&/g, '');\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { DisposableCollection } from '@theia/core';\nimport { FrontendApplicationContribution, FrontendApplication, StatusBar, StatusBarAlignment } from '@theia/core/lib/browser';\nimport { EditorCommands, EditorManager, EditorWidget } from '@theia/editor/lib/browser';\nimport { MonacoEditor } from './monaco-editor';\n\n@injectable()\nexport class MonacoStatusBarContribution implements FrontendApplicationContribution {\n\n    protected readonly toDispose = new DisposableCollection();\n\n    constructor(\n        @inject(EditorManager) protected readonly editorManager: EditorManager,\n        @inject(StatusBar) protected readonly statusBar: StatusBar\n    ) { }\n\n    onStart(app: FrontendApplication): void {\n        this.updateStatusBar();\n        this.editorManager.onCurrentEditorChanged(() => this.updateStatusBar());\n    }\n\n    protected updateStatusBar(): void {\n        const editor = this.editorManager.currentEditor;\n        const editorModel = this.getModel(editor);\n        if (editor && editorModel) {\n            this.setConfigTabSizeWidget();\n            this.setLineEndingWidget();\n\n            this.toDispose.dispose();\n            this.toDispose.push(editorModel.onDidChangeOptions(() => {\n                this.setConfigTabSizeWidget();\n                this.setLineEndingWidget();\n            }));\n            let previous = editorModel.getEOL();\n            this.toDispose.push(editorModel.onDidChangeContent(e => {\n                if (previous !== e.eol) {\n                    previous = e.eol;\n                    this.setLineEndingWidget();\n                }\n            }));\n        } else {\n            this.removeConfigTabSizeWidget();\n            this.removeLineEndingWidget();\n        }\n    }\n\n    protected setConfigTabSizeWidget(): void {\n        const editor = this.editorManager.currentEditor;\n        const editorModel = this.getModel(editor);\n        if (editor && editorModel) {\n            const modelOptions = editorModel.getOptions();\n            const tabSize = modelOptions.tabSize;\n            const useSpaceOrTab = modelOptions.insertSpaces ? 'Spaces' : 'Tab Size';\n            this.statusBar.setElement('editor-status-tabbing-config', {\n                text: `${useSpaceOrTab}: ${tabSize}`,\n                alignment: StatusBarAlignment.RIGHT,\n                priority: 10,\n                command: EditorCommands.CONFIG_INDENTATION.id,\n                tooltip: 'Select Indentation'\n            });\n        }\n    }\n    protected removeConfigTabSizeWidget(): void {\n        this.statusBar.removeElement('editor-status-tabbing-config');\n    }\n\n    protected setLineEndingWidget(): void {\n        const editor = this.editorManager.currentEditor;\n        const editorModel = this.getModel(editor);\n        if (editor && editorModel) {\n            const eol = editorModel.getEOL();\n            const text = eol === '\\n' ? 'LF' : 'CRLF';\n            this.statusBar.setElement('editor-status-eol', {\n                text: `${text}`,\n                alignment: StatusBarAlignment.RIGHT,\n                priority: 11,\n                command: EditorCommands.CONFIG_EOL.id,\n                tooltip: 'Select End Of Line Sequence'\n            });\n        }\n    }\n    protected removeLineEndingWidget(): void {\n        this.statusBar.removeElement('editor-status-eol');\n    }\n\n    protected getModel(editor: EditorWidget | undefined): monaco.editor.IModel | undefined {\n        const monacoEditor = MonacoEditor.get(editor);\n        return monacoEditor && monacoEditor.getControl().getModel() || undefined;\n    }\n}\n"],"sourceRoot":""}