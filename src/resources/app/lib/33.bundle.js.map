{"version":3,"sources":["webpack:///./node_modules/@theia/console/src/browser/console-content-widget.tsx","webpack:///./node_modules/@theia/console/src/browser/console-history.ts","webpack:///./node_modules/@theia/console/src/browser/console-widget.ts"],"names":[],"mappings":"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","file":"33.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Message } from '@phosphor/messaging';\nimport { interfaces, Container, injectable } from 'inversify';\nimport { MenuPath } from '@theia/core';\nimport { TreeProps } from '@theia/core/lib/browser/tree';\nimport { TreeSourceNode } from '@theia/core/lib/browser/source-tree';\nimport { SourceTreeWidget, TreeElementNode } from '@theia/core/lib/browser/source-tree';\nimport { ConsoleItem } from './console-session';\nimport { Severity } from '@theia/core/lib/common/severity';\n\n@injectable()\nexport class ConsoleContentWidget extends SourceTreeWidget {\n\n    static CONTEXT_MENU: MenuPath = ['console-context-menu'];\n\n    protected _shouldScrollToEnd = true;\n\n    protected set shouldScrollToEnd(shouldScrollToEnd: boolean) {\n        this._shouldScrollToEnd = shouldScrollToEnd;\n        this.shouldScrollToRow = this._shouldScrollToEnd;\n    }\n\n    protected get shouldScrollToEnd(): boolean {\n        return this._shouldScrollToEnd;\n    }\n\n    static createContainer(parent: interfaces.Container, props?: Partial<TreeProps>): Container {\n        const child = SourceTreeWidget.createContainer(parent, {\n            contextMenuPath: ConsoleContentWidget.CONTEXT_MENU,\n            ...props\n        });\n        child.unbind(SourceTreeWidget);\n        child.bind(ConsoleContentWidget).toSelf();\n        return child;\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        this.toDisposeOnDetach.push(this.onScrollUp(() => this.shouldScrollToEnd = false));\n        this.toDisposeOnDetach.push(this.onScrollYReachEnd(() => this.shouldScrollToEnd = true));\n        this.toDisposeOnDetach.push(this.model.onChanged(() => this.revealLastOutputIfNeeded()));\n    }\n\n    protected revealLastOutputIfNeeded(): void {\n        const { root } = this.model;\n        if (this.shouldScrollToEnd && TreeSourceNode.is(root)) {\n            this.model.selectNode(root.children[root.children.length - 1]);\n        }\n    }\n\n    protected createTreeElementNodeClassNames(node: TreeElementNode): string[] {\n        const classNames = super.createTreeElementNodeClassNames(node);\n        if (node.element) {\n            const className = this.toClassName((node.element as ConsoleItem));\n            if (className) {\n                classNames.push(className);\n            }\n        }\n        return classNames;\n    }\n    protected toClassName(item: ConsoleItem): string | undefined {\n        if (item.severity === Severity.Error) {\n            return ConsoleItem.errorClassName;\n        }\n        if (item.severity === Severity.Warning) {\n            return ConsoleItem.warningClassName;\n        }\n        if (item.severity === Severity.Info) {\n            return ConsoleItem.infoClassName;\n        }\n        if (item.severity === Severity.Log) {\n            return ConsoleItem.logClassName;\n        }\n        return undefined;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class ConsoleHistory {\n\n    static limit = 50;\n\n    protected values: string[] = [];\n    protected index = -1;\n\n    push(value: string): void {\n        this.delete(value);\n        this.values.push(value);\n        this.trim();\n        this.index = this.values.length;\n    }\n    protected delete(value: string): void {\n        const index = this.values.indexOf(value);\n        if (index !== -1) {\n            this.values.splice(index, 1);\n        }\n    }\n    protected trim(): void {\n        const index = this.values.length - ConsoleHistory.limit;\n        if (index > 0) {\n            this.values.slice(index);\n        }\n    }\n\n    get current(): string | undefined {\n        return this.values[this.index];\n    }\n\n    get previous(): string | undefined {\n        this.index = Math.max(this.index - 1, -1);\n        return this.current;\n    }\n\n    get next(): string | undefined {\n        this.index = Math.min(this.index + 1, this.values.length);\n        return this.current;\n    }\n\n    store(): ConsoleHistory.Data {\n        const { values, index } = this;\n        return { values, index };\n    }\n\n    restore(object: ConsoleHistory): void {\n        this.values = object.values;\n        this.index = object.index;\n    }\n\n}\nexport namespace ConsoleHistory {\n    export interface Data {\n        values: string[],\n        index: number\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ElementExt } from '@phosphor/domutils';\nimport { injectable, inject, postConstruct, interfaces, Container } from 'inversify';\nimport { TreeSourceNode } from '@theia/core/lib/browser/source-tree';\nimport { ContextKey } from '@theia/core/lib/browser/context-key-service';\nimport { BaseWidget, PanelLayout, Widget, Message, MessageLoop, StatefulWidget, CompositeTreeNode } from '@theia/core/lib/browser';\nimport { MonacoEditor } from '@theia/monaco/lib/browser/monaco-editor';\nimport URI from '@theia/core/lib/common/uri';\nimport { MonacoEditorProvider } from '@theia/monaco/lib/browser/monaco-editor-provider';\nimport { ProtocolToMonacoConverter, MonacoToProtocolConverter } from 'monaco-languageclient/lib';\nimport { ConsoleHistory } from './console-history';\nimport { ConsoleContentWidget } from './console-content-widget';\nimport { ConsoleSession } from './console-session';\n\nexport const ConsoleOptions = Symbol('ConsoleWidgetOptions');\nexport interface ConsoleOptions {\n    id: string\n    title?: {\n        label?: string\n        iconClass?: string\n        caption?: string\n    }\n    input: {\n        uri: URI\n        options?: MonacoEditor.IOptions\n    }\n    inputFocusContextKey?: ContextKey<boolean>\n}\n\n@injectable()\nexport class ConsoleWidget extends BaseWidget implements StatefulWidget {\n\n    static styles = {\n        node: 'theia-console-widget',\n        content: 'theia-console-content',\n        input: 'theia-console-input',\n    };\n\n    static createContainer(parent: interfaces.Container, options: ConsoleOptions): Container {\n        const child = ConsoleContentWidget.createContainer(parent);\n        child.bind(ConsoleHistory).toSelf();\n        child.bind(ConsoleOptions).toConstantValue(options);\n        child.bind(ConsoleWidget).toSelf();\n        return child;\n    }\n\n    @inject(ConsoleOptions)\n    protected readonly options: ConsoleOptions;\n\n    @inject(MonacoToProtocolConverter)\n    protected readonly m2p: MonacoToProtocolConverter;\n\n    @inject(ProtocolToMonacoConverter)\n    protected readonly p2m: ProtocolToMonacoConverter;\n\n    @inject(ConsoleContentWidget)\n    readonly content: ConsoleContentWidget;\n\n    @inject(ConsoleHistory)\n    protected readonly history: ConsoleHistory;\n\n    @inject(MonacoEditorProvider)\n    protected readonly editorProvider: MonacoEditorProvider;\n\n    protected _input: MonacoEditor;\n\n    constructor() {\n        super();\n        this.node.classList.add(ConsoleWidget.styles.node);\n    }\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        const { id, title, inputFocusContextKey } = this.options;\n        const { label, iconClass, caption } = Object.assign({}, title);\n        this.id = id;\n        this.title.closable = true;\n        this.title.label = label || id;\n        if (iconClass) {\n            this.title.iconClass = iconClass;\n        }\n        this.title.caption = caption || label || id;\n\n        const layout = this.layout = new PanelLayout();\n\n        this.content.node.classList.add(ConsoleWidget.styles.content);\n        this.toDispose.push(this.content);\n        layout.addWidget(this.content);\n\n        const inputWidget = new Widget();\n        inputWidget.node.classList.add(ConsoleWidget.styles.input);\n        layout.addWidget(inputWidget);\n\n        const input = this._input = await this.createInput(inputWidget.node);\n        this.toDispose.push(input);\n        this.toDispose.push(input.getControl().onDidLayoutChange(() => this.resizeContent()));\n\n        // todo update font if fontInfo was changed only\n        // it's impossible at the moment, but will be fixed for next upgrade of monaco version\n        // see https://github.com/microsoft/vscode/commit/5084e8ca1935698c98c163e339ca664818786c6d\n        this.toDispose.push(input.getControl().onDidChangeConfiguration(() => this.updateFont()));\n\n        this.updateFont();\n        if (inputFocusContextKey) {\n            this.toDispose.push(input.onFocusChanged(() => inputFocusContextKey.set(this.hasInputFocus())));\n        }\n    }\n\n    protected createInput(node: HTMLElement): Promise<MonacoEditor> {\n        return this.editorProvider.createInline(this.options.input.uri, node, this.options.input.options);\n    }\n\n    protected updateFont(): void {\n        const { fontFamily, fontSize, lineHeight } = this._input.getControl().getOption(monaco.editor.EditorOption.fontInfo);\n        this.content.node.style.fontFamily = fontFamily;\n        this.content.node.style.fontSize = fontSize + 'px';\n        this.content.node.style.lineHeight = lineHeight + 'px';\n    }\n\n    protected _session: ConsoleSession | undefined;\n    set session(session: ConsoleSession | undefined) {\n        if (this._session === session) {\n            return;\n        }\n        this._session = session;\n        this.content.source = session;\n    }\n    get session(): ConsoleSession | undefined {\n        return this._session;\n    }\n\n    get input(): MonacoEditor {\n        return this._input;\n    }\n\n    selectAll(): void {\n        const selection = document.getSelection();\n        if (selection) {\n            selection.selectAllChildren(this.content.node);\n        }\n    }\n\n    collapseAll(): void {\n        const { root } = this.content.model;\n        if (CompositeTreeNode.is(root)) {\n            this.content.model.collapseAll(root);\n        }\n    }\n\n    clear(): void {\n        if (this.session) {\n            this.session.clear();\n        }\n    }\n\n    async execute(): Promise<void> {\n        const value = this._input.getControl().getValue();\n        this._input.getControl().setValue('');\n        this.history.push(value);\n        if (this.session) {\n            const listener = this.content.model.onNodeRefreshed(() => {\n                listener.dispose();\n                this.revealLastOutput();\n            });\n            await this.session.execute(value);\n        }\n    }\n\n    navigateBack(): void {\n        const value = this.history.previous;\n        if (value === undefined) {\n            return;\n        }\n        const editor = this.input.getControl();\n        editor.setValue(value);\n        editor.setPosition({\n            lineNumber: 1,\n            column: 1\n        });\n    }\n\n    navigateForward(): void {\n        const value = this.history.next || '';\n        const editor = this.input.getControl();\n        editor.setValue(value);\n        const lineNumber = editor.getModel()!.getLineCount();\n        const column = editor.getModel()!.getLineMaxColumn(lineNumber);\n        editor.setPosition({ lineNumber, column });\n    }\n\n    protected revealLastOutput(): void {\n        const { root } = this.content.model;\n        if (TreeSourceNode.is(root)) {\n            this.content.model.selectNode(root.children[root.children.length - 1]);\n        }\n    }\n\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this._input.focus();\n    }\n\n    protected totalHeight = -1;\n    protected totalWidth = -1;\n    protected onResize(msg: Widget.ResizeMessage): void {\n        super.onResize(msg);\n        this.totalWidth = msg.width;\n        this.totalHeight = msg.height;\n        this._input.resizeToFit();\n        this.resizeContent();\n    }\n\n    protected resizeContent(): void {\n        this.totalHeight = this.totalHeight < 0 ? this.computeHeight() : this.totalHeight;\n        const inputHeight = this._input.getControl().getLayoutInfo().height;\n        const contentHeight = this.totalHeight - inputHeight;\n        this.content.node.style.height = `${contentHeight}px`;\n        MessageLoop.sendMessage(this.content, new Widget.ResizeMessage(this.totalWidth, contentHeight));\n    }\n\n    protected computeHeight(): number {\n        const { verticalSum } = ElementExt.boxSizing(this.node);\n        return this.node.offsetHeight - verticalSum;\n    }\n\n    storeState(): object {\n        const history = this.history.store();\n        const input = this.input.storeViewState();\n        return {\n            history,\n            input\n        };\n    }\n\n    restoreState(oldState: object): void {\n        if ('history' in oldState) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.history.restore((<any>oldState)['history']);\n        }\n        this.input.getControl().setValue(this.history.current || '');\n        if ('input' in oldState) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.input.restoreViewState((<any>oldState)['input']);\n        }\n    }\n\n    hasInputFocus(): boolean {\n        return this._input && this._input.isFocused({ strict: true });\n    }\n\n}\n"],"sourceRoot":""}