{"version":3,"sources":["webpack:///./node_modules/@theia/terminal/src/browser/terminal-frontend-contribution.ts","webpack:///./node_modules/@theia/terminal/src/browser/terminal-keybinding-contexts.ts"],"names":[],"mappings":"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","file":"34.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport {\n    CommandContribution,\n    Command,\n    CommandRegistry,\n    DisposableCollection,\n    MenuContribution,\n    MenuModelRegistry,\n    isOSX,\n    SelectionService,\n    Emitter,\n    Event\n} from '@theia/core/lib/common';\nimport { QuickPickService } from '@theia/core/lib/common/quick-pick-service';\nimport {\n    ApplicationShell, KeybindingContribution, KeyCode, Key,\n    KeybindingRegistry, Widget, LabelProvider, WidgetOpenerOptions\n} from '@theia/core/lib/browser';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { WidgetManager } from '@theia/core/lib/browser';\nimport { TERMINAL_WIDGET_FACTORY_ID, TerminalWidgetFactoryOptions } from './terminal-widget-impl';\nimport { TerminalKeybindingContexts } from './terminal-keybinding-contexts';\nimport { TerminalService } from './base/terminal-service';\nimport { TerminalWidgetOptions, TerminalWidget } from './base/terminal-widget';\nimport { UriAwareCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport { FileSystem } from '@theia/filesystem/lib/common';\nimport { ShellTerminalServerProxy } from '../common/shell-terminal-protocol';\nimport URI from '@theia/core/lib/common/uri';\nimport { MAIN_MENU_BAR } from '@theia/core';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { ColorContribution } from '@theia/core/lib/browser/color-application-contribution';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\nimport { terminalAnsiColorMap } from './terminal-theme-service';\n\nexport namespace TerminalMenus {\n    export const TERMINAL = [...MAIN_MENU_BAR, '7_terminal'];\n    export const TERMINAL_NEW = [...TERMINAL, '1_terminal'];\n    export const TERMINAL_TASKS = [...TERMINAL, '2_terminal'];\n    export const TERMINAL_TASKS_INFO = [...TERMINAL_TASKS, '3_terminal'];\n    export const TERMINAL_TASKS_CONFIG = [...TERMINAL_TASKS, '4_terminal'];\n    export const TERMINAL_NAVIGATOR_CONTEXT_MENU = ['navigator-context-menu', 'navigation'];\n}\n\nexport namespace TerminalCommands {\n    const TERMINAL_CATEGORY = 'Terminal';\n    export const NEW: Command = {\n        id: 'terminal:new',\n        category: TERMINAL_CATEGORY,\n        label: 'Open New Terminal'\n    };\n    export const NEW_ACTIVE_WORKSPACE: Command = {\n        id: 'terminal:new:active:workspace',\n        category: TERMINAL_CATEGORY,\n        label: 'Open New Terminal (In Active Workspace)'\n    };\n    export const TERMINAL_CLEAR: Command = {\n        id: 'terminal:clear',\n        category: TERMINAL_CATEGORY,\n        label: 'Clear Terminal'\n    };\n    export const TERMINAL_CONTEXT: Command = {\n        id: 'terminal:context',\n        category: TERMINAL_CATEGORY,\n        label: 'Open in Terminal'\n    };\n    export const SPLIT: Command = {\n        id: 'terminal:split',\n        category: TERMINAL_CATEGORY,\n        label: 'Split Terminal'\n    };\n    export const TERMINAL_FIND_TEXT: Command = {\n        id: 'terminal:find',\n        category: TERMINAL_CATEGORY,\n        label: 'Find'\n    };\n    export const TERMINAL_FIND_TEXT_CANCEL: Command = {\n        id: 'terminal:find:cancel',\n        category: TERMINAL_CATEGORY,\n        label: 'Hide find widget'\n    };\n\n    export const SCROLL_LINE_UP: Command = {\n        id: 'terminal:scroll:line:up',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll line up'\n    };\n    export const SCROLL_LINE_DOWN: Command = {\n        id: 'terminal:scroll:line:down',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll line down'\n    };\n    export const SCROLL_TO_TOP: Command = {\n        id: 'terminal:scroll:top',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll to top'\n    };\n    export const SCROLL_PAGE_UP: Command = {\n        id: 'terminal:scroll:page:up',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll page up'\n    };\n    export const SCROLL_PAGE_DOWN: Command = {\n        id: 'terminal:scroll:page:down',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll page down'\n    };\n\n    /**\n     * Command that displays all terminals that are currently opened\n     */\n    export const SHOW_ALL_OPENED_TERMINALS: Command = {\n        id: 'workbench.action.showAllTerminals',\n        category: 'View',\n        label: 'Show All Opened Terminals'\n    };\n}\n\n@injectable()\nexport class TerminalFrontendContribution implements TerminalService, CommandContribution, MenuContribution, KeybindingContribution, TabBarToolbarContribution, ColorContribution {\n\n    constructor(\n        @inject(ApplicationShell) protected readonly shell: ApplicationShell,\n        @inject(ShellTerminalServerProxy) protected readonly shellTerminalServer: ShellTerminalServerProxy,\n        @inject(WidgetManager) protected readonly widgetManager: WidgetManager,\n        @inject(FileSystem) protected readonly fileSystem: FileSystem,\n        @inject(SelectionService) protected readonly selectionService: SelectionService\n    ) { }\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(QuickPickService)\n    protected readonly quickPick: QuickPickService;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    protected readonly onDidCreateTerminalEmitter = new Emitter<TerminalWidget>();\n    readonly onDidCreateTerminal: Event<TerminalWidget> = this.onDidCreateTerminalEmitter.event;\n\n    protected readonly onDidChangeCurrentTerminalEmitter = new Emitter<TerminalWidget | undefined>();\n    readonly onDidChangeCurrentTerminal: Event<TerminalWidget | undefined> = this.onDidChangeCurrentTerminalEmitter.event;\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    @postConstruct()\n    protected init(): void {\n        this.shell.currentChanged.connect(() => this.updateCurrentTerminal());\n        this.widgetManager.onDidCreateWidget(({ widget }) => {\n            if (widget instanceof TerminalWidget) {\n                this.updateCurrentTerminal();\n                this.onDidCreateTerminalEmitter.fire(widget);\n                this.setLastUsedTerminal(widget);\n            }\n        });\n\n        const terminalFocusKey = this.contextKeyService.createKey<boolean>('terminalFocus', false);\n        const updateFocusKey = () => terminalFocusKey.set(this.shell.activeWidget instanceof TerminalWidget);\n        updateFocusKey();\n        this.shell.activeChanged.connect(updateFocusKey);\n    }\n\n    protected _currentTerminal: TerminalWidget | undefined;\n    get currentTerminal(): TerminalWidget | undefined {\n        return this._currentTerminal;\n    }\n    protected setCurrentTerminal(current: TerminalWidget | undefined): void {\n        if (this._currentTerminal !== current) {\n            this._currentTerminal = current;\n            this.onDidChangeCurrentTerminalEmitter.fire(this._currentTerminal);\n        }\n    }\n    protected updateCurrentTerminal(): void {\n        const widget = this.shell.currentWidget;\n        if (widget instanceof TerminalWidget) {\n            this.setCurrentTerminal(widget);\n        } else if (!this._currentTerminal || !this._currentTerminal.isVisible) {\n            this.setCurrentTerminal(undefined);\n        }\n    }\n\n    // IDs of the most recently used terminals\n    protected mostRecentlyUsedTerminalEntries: { id: string, disposables: DisposableCollection }[] = [];\n\n    protected getLastUsedTerminalId(): string | undefined {\n        const mostRecent = this.mostRecentlyUsedTerminalEntries[this.mostRecentlyUsedTerminalEntries.length - 1];\n        if (mostRecent) {\n            return mostRecent.id;\n        }\n    }\n\n    get lastUsedTerminal(): TerminalWidget | undefined {\n        const id = this.getLastUsedTerminalId();\n        if (id) {\n            return this.getById(id);\n        }\n    }\n\n    protected setLastUsedTerminal(lastUsedTerminal: TerminalWidget): void {\n        const lastUsedTerminalId = lastUsedTerminal.id;\n        const entryIndex = this.mostRecentlyUsedTerminalEntries.findIndex(entry => entry.id === lastUsedTerminalId);\n        let toDispose: DisposableCollection | undefined;\n        if (entryIndex >= 0) {\n            toDispose = this.mostRecentlyUsedTerminalEntries[entryIndex].disposables;\n            this.mostRecentlyUsedTerminalEntries.splice(entryIndex, 1);\n        } else {\n            toDispose = new DisposableCollection();\n            toDispose.push(\n                lastUsedTerminal.onDidChangeVisibility((isVisible: boolean) => {\n                    if (isVisible) {\n                        this.setLastUsedTerminal(lastUsedTerminal);\n                    }\n                })\n            );\n            toDispose.push(\n                lastUsedTerminal.onDidDispose(() => {\n                    const index = this.mostRecentlyUsedTerminalEntries.findIndex(entry => entry.id === lastUsedTerminalId);\n                    if (index >= 0) {\n                        this.mostRecentlyUsedTerminalEntries[index].disposables.dispose();\n                        this.mostRecentlyUsedTerminalEntries.splice(index, 1);\n                    }\n                })\n            );\n        }\n\n        const newEntry = { id: lastUsedTerminalId, disposables: toDispose };\n        if (lastUsedTerminal.isVisible) {\n            this.mostRecentlyUsedTerminalEntries.push(newEntry);\n        } else {\n            this.mostRecentlyUsedTerminalEntries = [newEntry, ...this.mostRecentlyUsedTerminalEntries];\n        }\n    }\n\n    get all(): TerminalWidget[] {\n        return this.widgetManager.getWidgets(TERMINAL_WIDGET_FACTORY_ID) as TerminalWidget[];\n    }\n\n    getById(id: string): TerminalWidget | undefined {\n        return this.all.find(terminal => terminal.id === id);\n    }\n\n    getByTerminalId(terminalId: number): TerminalWidget | undefined {\n        return this.all.find(terminal => terminal.terminalId === terminalId);\n    }\n\n    getDefaultShell(): Promise<string> {\n        return this.shellTerminalServer.getDefaultShell();\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(TerminalCommands.NEW, {\n            execute: () => this.openTerminal()\n        });\n        commands.registerCommand(TerminalCommands.NEW_ACTIVE_WORKSPACE, {\n            execute: () => this.openActiveWorkspaceTerminal()\n        });\n        commands.registerCommand(TerminalCommands.SPLIT, {\n            execute: widget => this.splitTerminal(widget),\n            isEnabled: widget => !!this.getTerminalRef(widget),\n            isVisible: widget => !!this.getTerminalRef(widget)\n        });\n\n        commands.registerCommand(TerminalCommands.TERMINAL_CLEAR);\n        commands.registerHandler(TerminalCommands.TERMINAL_CLEAR.id, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            execute: () => (this.shell.activeWidget as TerminalWidget).clearOutput()\n        });\n\n        commands.registerCommand(TerminalCommands.TERMINAL_CONTEXT, new UriAwareCommandHandler<URI>(this.selectionService, {\n            execute: uri => this.openInTerminal(uri)\n        }));\n\n        commands.registerCommand(TerminalCommands.TERMINAL_FIND_TEXT);\n        commands.registerHandler(TerminalCommands.TERMINAL_FIND_TEXT.id, {\n            isEnabled: () => {\n                if (this.shell.activeWidget instanceof TerminalWidget) {\n                    return !this.shell.activeWidget.getSearchBox().isVisible;\n                }\n                return false;\n            },\n            execute: () => {\n                const termWidget = (this.shell.activeWidget as TerminalWidget);\n                const terminalSearchBox = termWidget.getSearchBox();\n                terminalSearchBox.show();\n            }\n        });\n        commands.registerCommand(TerminalCommands.TERMINAL_FIND_TEXT_CANCEL);\n        commands.registerHandler(TerminalCommands.TERMINAL_FIND_TEXT_CANCEL.id, {\n            isEnabled: () => {\n                if (this.shell.activeWidget instanceof TerminalWidget) {\n                    return this.shell.activeWidget.getSearchBox().isVisible;\n                }\n                return false;\n            },\n            execute: () => {\n                const termWidget = (this.shell.activeWidget as TerminalWidget);\n                const terminalSearchBox = termWidget.getSearchBox();\n                terminalSearchBox.hide();\n            }\n        });\n\n        commands.registerCommand(TerminalCommands.SCROLL_LINE_UP, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollLineUp();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_LINE_DOWN, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollLineDown();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_TO_TOP, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollToTop();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_PAGE_UP, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollPageUp();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_PAGE_DOWN, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollPageDown();\n            }\n        });\n    }\n\n    async openInTerminal(uri: URI): Promise<void> {\n        // Determine folder path of URI\n        const stat = await this.fileSystem.getFileStat(uri.toString());\n        if (!stat) {\n            return;\n        }\n\n        // Use folder if a file was selected\n        const cwd = (stat.isDirectory) ? uri.toString() : uri.parent.toString();\n\n        // Open terminal\n        const termWidget = await this.newTerminal({ cwd });\n        termWidget.start();\n        this.activateTerminal(termWidget);\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerSubmenu(TerminalMenus.TERMINAL, 'Terminal');\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NEW, {\n            commandId: TerminalCommands.NEW.id,\n            label: 'New Terminal',\n            order: '0'\n        });\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NEW, {\n            commandId: TerminalCommands.SPLIT.id,\n            order: '1'\n        });\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NAVIGATOR_CONTEXT_MENU, {\n            commandId: TerminalCommands.TERMINAL_CONTEXT.id,\n            order: 'z'\n        });\n    }\n\n    registerToolbarItems(toolbar: TabBarToolbarRegistry): void {\n        toolbar.registerItem({\n            id: TerminalCommands.SPLIT.id,\n            command: TerminalCommands.SPLIT.id,\n            text: '$(columns)',\n            tooltip: TerminalCommands.SPLIT.label\n        });\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        /* Register passthrough keybindings for combinations recognized by\n           xterm.js and converted to control characters.\n\n             See: https://github.com/xtermjs/xterm.js/blob/v3/src/Terminal.ts#L1684 */\n\n        /* Register ctrl + k (the passed Key) as a passthrough command in the\n           context of the terminal.  */\n        const regCtrl = (k: { keyCode: number, code: string }) => {\n            keybindings.registerKeybinding({\n                command: KeybindingRegistry.PASSTHROUGH_PSEUDO_COMMAND,\n                keybinding: KeyCode.createKeyCode({ key: k, ctrl: true }).toString(),\n                context: TerminalKeybindingContexts.terminalActive,\n            });\n        };\n\n        /* Register alt + k (the passed Key) as a passthrough command in the\n           context of the terminal.  */\n        const regAlt = (k: { keyCode: number, code: string }) => {\n            keybindings.registerKeybinding({\n                command: KeybindingRegistry.PASSTHROUGH_PSEUDO_COMMAND,\n                keybinding: KeyCode.createKeyCode({ key: k, alt: true }).toString(),\n                context: TerminalKeybindingContexts.terminalActive\n            });\n        };\n\n        /* ctrl-space (000 - NUL).  */\n        regCtrl(Key.SPACE);\n\n        /* ctrl-A (001/1/0x1) through ctrl-Z (032/26/0x1A).  */\n        for (let i = 0; i < 26; i++) {\n            regCtrl({\n                keyCode: Key.KEY_A.keyCode + i,\n                code: 'Key' + String.fromCharCode('A'.charCodeAt(0) + i)\n            });\n        }\n\n        /* ctrl-[ or ctrl-3 (033/27/0x1B - ESC).  */\n        regCtrl(Key.BRACKET_LEFT);\n        regCtrl(Key.DIGIT3);\n\n        /* ctrl-\\ or ctrl-4 (034/28/0x1C - FS).  */\n        regCtrl(Key.BACKSLASH);\n        regCtrl(Key.DIGIT4);\n\n        /* ctrl-] or ctrl-5 (035/29/0x1D - GS).  */\n        regCtrl(Key.BRACKET_RIGHT);\n        regCtrl(Key.DIGIT5);\n\n        /* ctrl-6 (036/30/0x1E - RS).  */\n        regCtrl(Key.DIGIT6);\n\n        /* ctrl-7 (037/31/0x1F - US).  */\n        regCtrl(Key.DIGIT7);\n\n        /* ctrl-8 (177/127/0x7F - DEL).  */\n        regCtrl(Key.DIGIT8);\n\n        /* alt-A (0x1B 0x62) through alt-Z (0x1B 0x7A).  */\n        for (let i = 0; i < 26; i++) {\n            regAlt({\n                keyCode: Key.KEY_A.keyCode + i,\n                code: 'Key' + String.fromCharCode('A'.charCodeAt(0) + i)\n            });\n        }\n\n        /* alt-` (0x1B 0x60).  */\n        regAlt(Key.BACKQUOTE);\n\n        /* alt-0 (0x1B 0x30) through alt-9 (0x1B 0x39).  */\n        for (let i = 0; i < 10; i++) {\n            regAlt({\n                keyCode: Key.DIGIT0.keyCode + i,\n                code: 'Digit' + String.fromCharCode('0'.charCodeAt(0) + i)\n            });\n        }\n        if (isOSX) {\n            // selectAll on OSX\n            keybindings.registerKeybinding({\n                command: KeybindingRegistry.PASSTHROUGH_PSEUDO_COMMAND,\n                keybinding: 'ctrlcmd+a',\n                context: TerminalKeybindingContexts.terminalActive\n            });\n        }\n\n        keybindings.registerKeybinding({\n            command: TerminalCommands.NEW.id,\n            keybinding: 'ctrl+shift+`'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.NEW_ACTIVE_WORKSPACE.id,\n            keybinding: 'ctrl+`'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.TERMINAL_CLEAR.id,\n            keybinding: 'ctrlcmd+k',\n            context: TerminalKeybindingContexts.terminalActive\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.TERMINAL_FIND_TEXT.id,\n            keybinding: 'ctrlcmd+f',\n            context: TerminalKeybindingContexts.terminalActive\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.TERMINAL_FIND_TEXT_CANCEL.id,\n            keybinding: 'esc',\n            context: TerminalKeybindingContexts.terminalHideSearch\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_LINE_UP.id,\n            keybinding: 'ctrl+shift+up',\n            context: TerminalKeybindingContexts.terminalActive\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_LINE_DOWN.id,\n            keybinding: 'ctrl+shift+down',\n            context: TerminalKeybindingContexts.terminalActive\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_TO_TOP.id,\n            keybinding: 'shift-home',\n            context: TerminalKeybindingContexts.terminalActive\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_PAGE_UP.id,\n            keybinding: 'shift-pageUp',\n            context: TerminalKeybindingContexts.terminalActive\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_PAGE_DOWN.id,\n            keybinding: 'shift-pageDown',\n            context: TerminalKeybindingContexts.terminalActive\n        });\n    }\n\n    async newTerminal(options: TerminalWidgetOptions): Promise<TerminalWidget> {\n        const widget = <TerminalWidget>await this.widgetManager.getOrCreateWidget(TERMINAL_WIDGET_FACTORY_ID, <TerminalWidgetFactoryOptions>{\n            created: new Date().toString(),\n            ...options\n        });\n        return widget;\n    }\n\n    activateTerminal(widget: TerminalWidget, widgetOptions?: ApplicationShell.WidgetOptions): void {\n        this.open(widget, { widgetOptions });\n    }\n\n    // TODO: reuse WidgetOpenHandler.open\n    open(widget: TerminalWidget, options?: WidgetOpenerOptions): void {\n        const op: WidgetOpenerOptions = {\n            mode: 'activate',\n            ...options,\n            widgetOptions: {\n                area: 'bottom',\n                ...(options && options.widgetOptions)\n            }\n        };\n        if (!widget.isAttached) {\n            this.shell.addWidget(widget, op.widgetOptions);\n        }\n        if (op.mode === 'activate') {\n            this.shell.activateWidget(widget.id);\n        } else if (op.mode === 'reveal') {\n            this.shell.revealWidget(widget.id);\n        }\n    }\n\n    protected async selectTerminalCwd(): Promise<string | undefined> {\n        const roots = this.workspaceService.tryGetRoots();\n        return this.quickPick.show(roots.map(\n            ({ uri }) => ({ label: this.labelProvider.getName(new URI(uri)), description: this.labelProvider.getLongName(new URI(uri)), value: uri })\n        ), { placeholder: 'Select current working directory for new terminal' });\n    }\n\n    protected async splitTerminal(widget?: Widget): Promise<void> {\n        const ref = this.getTerminalRef(widget);\n        if (ref) {\n            await this.openTerminal({ ref, mode: 'split-right' });\n        }\n    }\n\n    protected getTerminalRef(widget?: Widget): TerminalWidget | undefined {\n        const ref = widget ? widget : this.shell.currentWidget;\n        return ref instanceof TerminalWidget ? ref : undefined;\n    }\n\n    protected async openTerminal(options?: ApplicationShell.WidgetOptions): Promise<void> {\n        const cwd = await this.selectTerminalCwd();\n        const termWidget = await this.newTerminal({ cwd });\n        termWidget.start();\n        this.open(termWidget, { widgetOptions: options });\n    }\n\n    protected async openActiveWorkspaceTerminal(options?: ApplicationShell.WidgetOptions): Promise<void> {\n        const termWidget = await this.newTerminal({});\n        termWidget.start();\n        this.open(termWidget, { widgetOptions: options });\n    }\n\n    /**\n     * It should be aligned with https://code.visualstudio.com/api/references/theme-color#integrated-terminal-colors\n     */\n    registerColors(colors: ColorRegistry): void {\n        colors.register({\n            id: 'terminal.background',\n            defaults: {\n                dark: 'panel.background',\n                light: 'panel.background',\n                hc: 'panel.background'\n            },\n            description: 'The background color of the terminal, this allows coloring the terminal differently to the panel.'\n        });\n        colors.register({\n            id: 'terminal.foreground',\n            defaults: {\n                light: '#333333',\n                dark: '#CCCCCC',\n                hc: '#FFFFFF'\n            },\n            description: 'The foreground color of the terminal.'\n        });\n        colors.register({\n            id: 'terminalCursor.foreground',\n            description: 'The foreground color of the terminal cursor.'\n        });\n        colors.register({\n            id: 'terminalCursor.background',\n            description: 'The background color of the terminal cursor. Allows customizing the color of a character overlapped by a block cursor.'\n        });\n        colors.register({\n            id: 'terminal.selectionBackground',\n            defaults: {\n                light: '#00000040',\n                dark: '#FFFFFF40',\n                hc: '#FFFFFF80'\n            },\n            description: 'The selection background color of the terminal.'\n        });\n        colors.register({\n            id: 'terminal.border',\n            defaults: {\n                light: 'panel.border',\n                dark: 'panel.border',\n                hc: 'panel.border'\n            },\n            description: 'The color of the border that separates split panes within the terminal. This defaults to panel.border.'\n        });\n        // eslint-disable-next-line guard-for-in\n        for (const id in terminalAnsiColorMap) {\n            const entry = terminalAnsiColorMap[id];\n            const colorName = id.substring(13);\n            colors.register({\n                id,\n                defaults: entry.defaults,\n                description: `'${colorName}'  ANSI color in the terminal.`\n            });\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { KeybindingContext, ApplicationShell } from '@theia/core/lib/browser';\nimport { TerminalWidget } from './base/terminal-widget';\n\nexport namespace TerminalKeybindingContexts {\n    export const terminalActive = 'terminalActive';\n    export const terminalHideSearch = 'hideSearch';\n}\n\n@injectable()\nexport class TerminalActiveContext implements KeybindingContext {\n    readonly id: string = TerminalKeybindingContexts.terminalActive;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    isEnabled(): boolean {\n        return this.shell.activeWidget instanceof TerminalWidget;\n    }\n}\n\n@injectable()\nexport class TerminalSearchVisibleContext implements KeybindingContext {\n    readonly id: string = TerminalKeybindingContexts.terminalHideSearch;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    isEnabled(): boolean {\n        if (!(this.shell.activeWidget instanceof TerminalWidget)) {\n            return false;\n        }\n        const searchWidget = this.shell.activeWidget.getSearchBox();\n        return searchWidget.isVisible;\n    }\n}\n"],"sourceRoot":""}