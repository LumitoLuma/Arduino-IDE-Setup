{"version":3,"sources":["webpack:///./node_modules/@theia/filesystem/src/browser/file-tree/file-tree.ts","webpack:///./node_modules/@theia/filesystem/src/browser/file-upload-service.ts"],"names":[],"mappings":"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","file":"2.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { TreeNode, CompositeTreeNode, SelectableTreeNode, ExpandableTreeNode, TreeImpl } from '@theia/core/lib/browser';\nimport { FileSystem, FileStat } from '../../common';\nimport { UriSelection } from '@theia/core/lib/common/selection';\nimport { FileSelection } from '../file-selection';\n\n@injectable()\nexport class FileTree extends TreeImpl {\n\n    @inject(FileSystem) protected readonly fileSystem: FileSystem;\n\n    async resolveChildren(parent: CompositeTreeNode): Promise<TreeNode[]> {\n        if (FileStatNode.is(parent)) {\n            const fileStat = await this.resolveFileStat(parent);\n            if (fileStat) {\n                return this.toNodes(fileStat, parent);\n            }\n            return [];\n        }\n        return super.resolveChildren(parent);\n    }\n\n    protected resolveFileStat(node: FileStatNode): Promise<FileStat | undefined> {\n        return this.fileSystem.getFileStat(node.fileStat.uri).then(fileStat => {\n            if (fileStat) {\n                node.fileStat = fileStat;\n                return fileStat;\n            }\n            return undefined;\n        });\n    }\n\n    protected async toNodes(fileStat: FileStat, parent: CompositeTreeNode): Promise<TreeNode[]> {\n        if (!fileStat.children) {\n            return [];\n        }\n        const result = await Promise.all(fileStat.children.map(async child =>\n            this.toNode(child, parent)\n        ));\n        return result.sort(DirNode.compare);\n    }\n\n    protected toNode(fileStat: FileStat, parent: CompositeTreeNode): FileNode | DirNode {\n        const uri = new URI(fileStat.uri);\n        const id = this.toNodeId(uri, parent);\n        const node = this.getNode(id);\n        if (fileStat.isDirectory) {\n            if (DirNode.is(node)) {\n                node.fileStat = fileStat;\n                return node;\n            }\n            return <DirNode>{\n                id, uri, fileStat, parent,\n                expanded: false,\n                selected: false,\n                children: []\n            };\n        }\n        if (FileNode.is(node)) {\n            node.fileStat = fileStat;\n            return node;\n        }\n        return <FileNode>{\n            id, uri, fileStat, parent,\n            selected: false\n        };\n    }\n\n    protected toNodeId(uri: URI, parent: CompositeTreeNode): string {\n        return uri.path.toString();\n    }\n}\n\nexport interface FileStatNode extends SelectableTreeNode, UriSelection, FileSelection {\n}\nexport namespace FileStatNode {\n    export function is(node: object | undefined): node is FileStatNode {\n        return !!node && 'fileStat' in node;\n    }\n\n    export function getUri(node: TreeNode | undefined): string | undefined {\n        if (is(node)) {\n            return node.fileStat.uri;\n        }\n        return undefined;\n    }\n}\n\nexport type FileNode = FileStatNode;\nexport namespace FileNode {\n    export function is(node: Object | undefined): node is FileNode {\n        return FileStatNode.is(node) && !node.fileStat.isDirectory;\n    }\n}\n\nexport type DirNode = FileStatNode & ExpandableTreeNode;\nexport namespace DirNode {\n    export function is(node: Object | undefined): node is DirNode {\n        return FileStatNode.is(node) && node.fileStat.isDirectory;\n    }\n\n    export function compare(node: TreeNode, node2: TreeNode): number {\n        return DirNode.dirCompare(node, node2) || uriCompare(node, node2);\n    }\n\n    export function uriCompare(node: TreeNode, node2: TreeNode): number {\n        if (FileStatNode.is(node)) {\n            if (FileStatNode.is(node2)) {\n                return node.uri.displayName.localeCompare(node2.uri.displayName);\n            }\n            return 1;\n        }\n        if (FileStatNode.is(node2)) {\n            return -1;\n        }\n        return 0;\n    }\n\n    export function dirCompare(node: TreeNode, node2: TreeNode): number {\n        const a = DirNode.is(node) ? 1 : 0;\n        const b = DirNode.is(node2) ? 1 : 0;\n        return b - a;\n    }\n\n    export function createRoot(fileStat: FileStat): DirNode {\n        const uri = new URI(fileStat.uri);\n        const id = fileStat.uri;\n        return {\n            id, uri, fileStat,\n            visible: true,\n            parent: undefined,\n            children: [],\n            expanded: true,\n            selected: false\n        };\n    }\n\n    export function getContainingDir(node: TreeNode | undefined): DirNode | undefined {\n        let containing = node;\n        while (!!containing && !is(containing)) {\n            containing = containing.parent;\n        }\n        return containing;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { CancellationTokenSource, CancellationToken, checkCancelled, cancelled } from '@theia/core/lib/common/cancellation';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport { Progress } from '@theia/core/lib/common/message-service-protocol';\nimport { Endpoint } from '@theia/core/lib/browser/endpoint';\n\nimport throttle = require('lodash.throttle');\n\nconst maxChunkSize = 64 * 1024;\n\nexport interface FileUploadParams {\n    source?: DataTransfer\n    progress?: FileUploadProgressParams\n    onDidUpload?: (uri: string) => void;\n}\nexport interface FileUploadProgressParams {\n    text: string\n}\n\nexport interface FileUploadResult {\n    uploaded: string[]\n}\n\n@injectable()\nexport class FileUploadService {\n\n    static TARGET = 'target';\n    static UPLOAD = 'upload';\n\n    @inject(MessageService)\n    protected readonly messageService: MessageService;\n\n    protected uploadForm: FileUploadService.Form;\n\n    @postConstruct()\n    protected init(): void {\n        this.uploadForm = this.createUploadForm();\n    }\n\n    protected createUploadForm(): FileUploadService.Form {\n        const targetInput = document.createElement('input');\n        targetInput.type = 'text';\n        targetInput.name = FileUploadService.TARGET;\n        targetInput.classList.add('theia-input');\n\n        const fileInput = document.createElement('input');\n        fileInput.type = 'file';\n        fileInput.classList.add('theia-input');\n        fileInput.name = FileUploadService.UPLOAD;\n        fileInput.multiple = true;\n\n        const form = document.createElement('form');\n        form.style.display = 'none';\n        form.enctype = 'multipart/form-data';\n        form.append(targetInput);\n        form.append(fileInput);\n\n        document.body.appendChild(form);\n\n        fileInput.addEventListener('change', () => {\n            if (this.deferredUpload && fileInput.value) {\n                const source = new FormData(form);\n                // clean up to allow upload to the same folder twice\n                fileInput.value = '';\n                const targetUri = new URI(<string>source.get(FileUploadService.TARGET));\n                const { resolve, reject } = this.deferredUpload;\n                this.deferredUpload = undefined;\n                const { onDidUpload } = this.uploadForm;\n                this.withProgress(\n                    (progress, token) => this.doUpload(targetUri, { source, progress, token, onDidUpload }),\n                    this.uploadForm.progress).then(resolve, reject);\n            }\n        });\n        return { targetInput, fileInput };\n    }\n\n    protected deferredUpload: Deferred<FileUploadResult> | undefined;\n    async upload(targetUri: string | URI, params: FileUploadParams = {}): Promise<FileUploadResult> {\n        const { source, onDidUpload } = params;\n        if (source) {\n            return this.withProgress(\n                (progress, token) => this.doUpload(new URI(String(targetUri)), { source, progress, token, onDidUpload }),\n                params.progress);\n        }\n        this.deferredUpload = new Deferred<FileUploadResult>();\n        this.uploadForm.targetInput.value = String(targetUri);\n        this.uploadForm.fileInput.click();\n        this.uploadForm.progress = params.progress;\n        this.uploadForm.onDidUpload = params.onDidUpload;\n        return this.deferredUpload.promise;\n    }\n\n    protected async doUpload(targetUri: URI, { source, progress, token, onDidUpload }: FileUploadService.UploadParams): Promise<FileUploadResult> {\n        const result: FileUploadResult = { uploaded: [] };\n        let total = 0;\n        let done = 0;\n        let totalFiles = 0;\n        let doneFiles = 0;\n        const reportProgress = throttle(() => progress.report({\n            message: `${doneFiles} out of ${totalFiles}`,\n            work: { done, total }\n        }), 60);\n        const deferredUpload = new Deferred<FileUploadResult>();\n        const endpoint = new Endpoint({ path: '/file-upload' });\n        const socketOpen = new Deferred<void>();\n        const socket = new WebSocket(endpoint.getWebSocketUrl().toString());\n        socket.onerror = e => {\n            socketOpen.reject(e);\n            deferredUpload.reject(e);\n        };\n        socket.onclose = ({ code, reason }) => deferredUpload.reject(new Error(String(reason || code)));\n        socket.onmessage = ({ data }) => {\n            const response = JSON.parse(data);\n            if (response.uri) {\n                doneFiles++;\n                result.uploaded.push(response.uri);\n                reportProgress();\n                if (onDidUpload) {\n                    onDidUpload(response.uri);\n                }\n                return;\n            }\n            if (response.done) {\n                done = response.done;\n                reportProgress();\n                return;\n            }\n            if (response.ok) {\n                deferredUpload.resolve(result);\n            } else if (response.error) {\n                deferredUpload.reject(new Error(response.error));\n            } else {\n                console.error('unknown upload response: ' + response);\n            }\n            socket.close();\n        };\n        socket.onopen = () => socketOpen.resolve();\n        const rejectAndClose = (e: Error) => {\n            deferredUpload.reject(e);\n            if (socket.readyState === 1) {\n                socket.close();\n            }\n        };\n        token.onCancellationRequested(() => rejectAndClose(cancelled()));\n        try {\n            let queue = Promise.resolve();\n            await this.index(targetUri, source, {\n                token,\n                progress,\n                accept: async ({ uri, file }) => {\n                    total += file.size;\n                    totalFiles++;\n                    reportProgress();\n                    queue = queue.then(async () => {\n                        try {\n                            await socketOpen.promise;\n                            checkCancelled(token);\n                            let readBytes = 0;\n                            socket.send(JSON.stringify({ uri: uri.toString(), size: file.size }));\n                            if (file.size) {\n                                do {\n                                    const fileSlice = await this.readFileSlice(file, readBytes);\n                                    checkCancelled(token);\n                                    readBytes = fileSlice.read;\n                                    socket.send(fileSlice.content);\n                                    while (socket.bufferedAmount > maxChunkSize * 2) {\n                                        await new Promise(resolve => setImmediate(resolve));\n                                        checkCancelled(token);\n                                    }\n                                } while (readBytes < file.size);\n                            }\n                        } catch (e) {\n                            rejectAndClose(e);\n                        }\n                    });\n                }\n            });\n            await queue;\n            await socketOpen.promise;\n            socket.send(JSON.stringify({ ok: true }));\n        } catch (e) {\n            rejectAndClose(e);\n        }\n        return deferredUpload.promise;\n    }\n\n    protected readFileSlice(file: File, read: number): Promise<{\n        content: ArrayBuffer\n        read: number\n    }> {\n        return new Promise((resolve, reject) => {\n            const bytesLeft = file.size - read;\n            if (!bytesLeft) {\n                reject(new Error('nothing to read'));\n                return;\n            }\n            const size = Math.min(maxChunkSize, bytesLeft);\n            const slice = file.slice(read, read + size);\n            const reader = new FileReader();\n            reader.onload = () => {\n                read += size;\n                const content = reader.result as ArrayBuffer;\n                resolve({ content, read });\n            };\n            reader.onerror = reject;\n            reader.readAsArrayBuffer(slice);\n        });\n    }\n\n    protected async withProgress<T>(\n        cb: (progress: Progress, token: CancellationToken) => Promise<T>,\n        { text }: FileUploadProgressParams = { text: 'Uploading Files...' }\n    ): Promise<T> {\n        const cancellationSource = new CancellationTokenSource();\n        const { token } = cancellationSource;\n        const progress = await this.messageService.showProgress({ text, options: { cancelable: true } }, () => cancellationSource.cancel());\n        try {\n            return await cb(progress, token);\n        } finally {\n            progress.cancel();\n        }\n    }\n\n    protected async index(targetUri: URI, source: FileUploadService.Source, context: FileUploadService.Context): Promise<void> {\n        if (source instanceof FormData) {\n            await this.indexFormData(targetUri, source, context);\n        } else {\n            await this.indexDataTransfer(targetUri, source, context);\n        }\n    }\n\n    protected async indexFormData(targetUri: URI, formData: FormData, context: FileUploadService.Context): Promise<void> {\n        for (const file of formData.getAll(FileUploadService.UPLOAD)) {\n            if (file instanceof File) {\n                await this.indexFile(targetUri, file, context);\n            }\n        }\n    }\n\n    protected async indexDataTransfer(targetUri: URI, dataTransfer: DataTransfer, context: FileUploadService.Context): Promise<void> {\n        checkCancelled(context.token);\n        if (dataTransfer.items) {\n            await this.indexDataTransferItemList(targetUri, dataTransfer.items, context);\n        } else {\n            await this.indexFileList(targetUri, dataTransfer.files, context);\n        }\n    }\n\n    protected async indexFileList(targetUri: URI, files: FileList, context: FileUploadService.Context): Promise<void> {\n        for (let i = 0; i < files.length; i++) {\n            const file = files[i];\n            if (file) {\n                await this.indexFile(targetUri, file, context);\n            }\n        }\n    }\n\n    protected async indexFile(targetUri: URI, file: File, context: FileUploadService.Context): Promise<void> {\n        await context.accept({\n            uri: targetUri.resolve(file.name),\n            file\n        });\n    }\n\n    protected async indexDataTransferItemList(targetUri: URI, items: DataTransferItemList, context: FileUploadService.Context): Promise<void> {\n        checkCancelled(context.token);\n        const entries: WebKitEntry[] = [];\n        for (let i = 0; i < items.length; i++) {\n            const entry = items[i].webkitGetAsEntry() as WebKitEntry;\n            entries.push(entry);\n        }\n        await this.indexEntries(targetUri, entries, context);\n\n    }\n\n    protected async indexEntry(targetUri: URI, entry: WebKitEntry | null, context: FileUploadService.Context): Promise<void> {\n        checkCancelled(context.token);\n        if (!entry) {\n            return;\n        }\n        if (entry.isDirectory) {\n            await this.indexDirectoryEntry(targetUri, entry as WebKitDirectoryEntry, context);\n        } else {\n            await this.indexFileEntry(targetUri, entry as WebKitFileEntry, context);\n        }\n    }\n\n    /**\n     *  Read all entries within a folder by block of 100 files or folders until the\n     *  whole folder has been read.\n     */\n    protected async indexDirectoryEntry(targetUri: URI, entry: WebKitDirectoryEntry, context: FileUploadService.Context): Promise<void> {\n        checkCancelled(context.token);\n        const newTargetUri = targetUri.resolve(entry.name);\n        return new Promise<void>(async (resolve, reject) => {\n            const reader = entry.createReader();\n            const getEntries = () => reader.readEntries(async results => {\n                try {\n                    if (!context.token.isCancellationRequested && results && results.length) {\n                        await this.indexEntries(newTargetUri, results, context);\n                        getEntries(); // loop to read all getEntries\n                    } else {\n                        resolve();\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }, reject);\n            getEntries();\n        });\n    }\n\n    protected async indexEntries(targetUri: URI, entries: WebKitEntry[], context: FileUploadService.Context): Promise<void> {\n        checkCancelled(context.token);\n        for (let i = 0; i < entries.length; i++) {\n            await this.indexEntry(targetUri, entries[i], context);\n        }\n    }\n\n    protected async indexFileEntry(targetUri: URI, entry: WebKitFileEntry, context: FileUploadService.Context): Promise<void> {\n        await new Promise<void>((resolve, reject) => {\n            try {\n                entry.file(\n                    file => this.indexFile(targetUri, file, context).then(resolve, reject),\n                    reject,\n                );\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n}\n\nexport namespace FileUploadService {\n    export type Source = FormData | DataTransfer;\n    export interface UploadEntry {\n        file: File\n        uri: URI\n    }\n    export interface Context {\n        progress: Progress\n        token: CancellationToken\n        accept: (entry: UploadEntry) => Promise<void>\n    }\n    export interface Form {\n        targetInput: HTMLInputElement\n        fileInput: HTMLInputElement\n        progress?: FileUploadProgressParams\n        onDidUpload?: (uri: string) => void\n    }\n    export interface UploadParams {\n        source: FileUploadService.Source,\n        progress: Progress,\n        token: CancellationToken,\n        onDidUpload?: (uri: string) => void\n    }\n}\n"],"sourceRoot":""}