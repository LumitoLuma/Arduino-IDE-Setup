{"version":3,"sources":["webpack:///./node_modules/@theia/core/src/browser/window/default-window-service.ts","webpack:///./node_modules/@theia/core/src/electron-browser/electron-clipboard-service.ts","webpack:///./node_modules/@theia/core/src/electron-browser/window/electron-window-module.ts","webpack:///./node_modules/@theia/core/src/electron-browser/window/electron-window-service.ts"],"names":[],"mappings":"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","file":"77.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, named } from 'inversify';\nimport { CorePreferences } from '../core-preferences';\nimport { ContributionProvider } from '../../common/contribution-provider';\nimport { FrontendApplicationContribution, FrontendApplication } from '../frontend-application';\nimport { WindowService } from './window-service';\n\n@injectable()\nexport class DefaultWindowService implements WindowService, FrontendApplicationContribution {\n\n    protected frontendApplication: FrontendApplication;\n\n    @inject(CorePreferences)\n    protected readonly corePreferences: CorePreferences;\n\n    @inject(ContributionProvider)\n    @named(FrontendApplicationContribution)\n    protected readonly contributions: ContributionProvider<FrontendApplicationContribution>;\n\n    onStart(app: FrontendApplication): void {\n        this.frontendApplication = app;\n        window.addEventListener('beforeunload', event => {\n            if (!this.canUnload()) {\n                return this.preventUnload(event);\n            }\n        });\n    }\n\n    openNewWindow(url: string): undefined {\n        window.open(url, undefined, 'noopener');\n        return undefined;\n    }\n\n    canUnload(): boolean {\n        const confirmExit = this.corePreferences['application.confirmExit'];\n        if (confirmExit === 'never') {\n            return true;\n        }\n        for (const contribution of this.contributions.getContributions()) {\n            if (contribution.onWillStop) {\n                if (!!contribution.onWillStop(this.frontendApplication)) {\n                    return false;\n                }\n            }\n        }\n        return confirmExit !== 'always';\n    }\n\n    /**\n     * Ask the user to confirm if they want to unload the window. Prevent it if they do not.\n     * @param event The beforeunload event\n     */\n    protected preventUnload(event: BeforeUnloadEvent): string | void {\n        event.returnValue = '';\n        event.preventDefault();\n        return '';\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 RedHat and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { clipboard } from 'electron';\nimport { injectable } from 'inversify';\nimport { ClipboardService } from '../browser/clipboard-service';\n\n@injectable()\nexport class ElectronClipboardService implements ClipboardService {\n\n    readText(): string {\n        return clipboard.readText();\n    }\n\n    writeText(value: string): void {\n        clipboard.writeText(value);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from 'inversify';\nimport { WindowService } from '../../browser/window/window-service';\nimport { ElectronWindowService } from './electron-window-service';\nimport { FrontendApplicationContribution } from '../../browser/frontend-application';\nimport { ElectronClipboardService } from '../electron-clipboard-service';\nimport { ClipboardService } from '../../browser/clipboard-service';\n\nexport default new ContainerModule(bind => {\n    bind(WindowService).to(ElectronWindowService).inSingletonScope();\n    bind(FrontendApplicationContribution).toService(WindowService);\n    bind(ClipboardService).to(ElectronClipboardService).inSingletonScope();\n});\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { ipcRenderer } from 'electron';\nimport { NewWindowOptions } from '../../browser/window/window-service';\nimport { DefaultWindowService } from '../../browser/window/default-window-service';\n\n@injectable()\nexport class ElectronWindowService extends DefaultWindowService {\n\n    openNewWindow(url: string, { external }: NewWindowOptions = {}): undefined {\n        if (external) {\n            ipcRenderer.send('open-external', url);\n        } else {\n            ipcRenderer.send('create-new-window', url);\n        }\n        return undefined;\n    }\n\n    protected preventUnload(event: BeforeUnloadEvent): string | void {\n        // The user will be shown a confirmation dialog by the will-prevent-unload handler in the Electron main script\n        event.returnValue = false;\n    }\n\n}\n"],"sourceRoot":""}