{"version":3,"sources":["webpack:///./node_modules/arduino-ide-extension/src/browser/arduino-daemon-client-impl.ts","webpack:///./node_modules/arduino-ide-extension/src/browser/boards/boards-list-widget.ts","webpack:///./node_modules/arduino-ide-extension/src/browser/editor-mode.ts","webpack:///./node_modules/arduino-ide-extension/src/browser/library/library-list-widget.ts","webpack:///./node_modules/arduino-ide-extension/src/browser/toolbar/arduino-toolbar.tsx","webpack:///./node_modules/arduino-ide-extension/src/browser/widgets/component-list/component-list-item.tsx","webpack:///./node_modules/arduino-ide-extension/src/browser/widgets/component-list/component-list.tsx","webpack:///./node_modules/arduino-ide-extension/src/browser/widgets/component-list/filterable-list-container.tsx","webpack:///./node_modules/arduino-ide-extension/src/browser/widgets/component-list/list-item-renderer.tsx","webpack:///./node_modules/arduino-ide-extension/src/browser/widgets/component-list/list-widget.tsx","webpack:///./node_modules/arduino-ide-extension/src/browser/widgets/component-list/search-bar.tsx","webpack:///./node_modules/arduino-ide-extension/src/browser/widgets/progress-dialog.tsx","webpack:///./node_modules/arduino-ide-extension/src/common/main-menu-manager.ts"],"names":[],"mappings":"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","file":"48.bundle.js","sourcesContent":["import { injectable, inject } from 'inversify';\r\nimport { ILogger } from '@theia/core/lib/common/logger';\r\nimport { Event, Emitter } from '@theia/core/lib/common/event';\r\nimport { MessageService } from '@theia/core/lib/common/message-service';\r\nimport { ArduinoDaemonClient } from '../common/protocol';\r\n\r\n@injectable()\r\nexport class ArduinoDaemonClientImpl implements ArduinoDaemonClient {\r\n\r\n    @inject(ILogger)\r\n    protected readonly logger: ILogger;\r\n\r\n    @inject(MessageService)\r\n    protected readonly messageService: MessageService;\r\n\r\n    protected readonly onStartedEmitter = new Emitter<void>();\r\n    protected readonly onStoppedEmitter = new Emitter<void>();\r\n    protected _isRunning = false;\r\n\r\n    notifyStopped(): void {\r\n        if (this._isRunning) {\r\n            this._isRunning = false;\r\n            this.onStoppedEmitter.fire();\r\n            this.info('The CLI daemon process has stopped.');\r\n        }\r\n    }\r\n\r\n    notifyStarted(): void {\r\n        if (!this._isRunning) {\r\n            this._isRunning = true;\r\n            this.onStartedEmitter.fire();\r\n            this.info('The CLI daemon process has started.');\r\n        }\r\n    }\r\n\r\n    get onDaemonStarted(): Event<void> {\r\n        return this.onStartedEmitter.event;\r\n    }\r\n\r\n    get onDaemonStopped(): Event<void> {\r\n        return this.onStoppedEmitter.event;\r\n    }\r\n\r\n    get isRunning(): boolean {\r\n        return this._isRunning;\r\n    }\r\n\r\n    protected info(message: string): void {\r\n        this.messageService.info(message, { timeout: 3000 });\r\n        this.logger.info(message);\r\n    }\r\n\r\n}\r\n","import { inject, injectable } from 'inversify';\r\nimport { BoardsPackage, BoardsService } from '../../common/protocol/boards-service';\r\nimport { ListWidget } from '../widgets/component-list/list-widget';\r\nimport { ListItemRenderer } from '../widgets/component-list/list-item-renderer';\r\n\r\n@injectable()\r\nexport class BoardsListWidget extends ListWidget<BoardsPackage> {\r\n\r\n    static WIDGET_ID = 'boards-list-widget';\r\n    static WIDGET_LABEL = 'Boards Manager';\r\n\r\n    constructor(\r\n        @inject(BoardsService) protected service: BoardsService,\r\n        @inject(ListItemRenderer) protected itemRenderer: ListItemRenderer<BoardsPackage>) {\r\n\r\n        super({\r\n            id: BoardsListWidget.WIDGET_ID,\r\n            label: BoardsListWidget.WIDGET_LABEL,\r\n            iconClass: 'fa fa-microchip',\r\n            searchable: service,\r\n            installable: service,\r\n            itemLabel: (item: BoardsPackage) => item.name,\r\n            itemRenderer\r\n        });\r\n    }\r\n\r\n}\r\n","import { injectable, inject } from 'inversify';\r\nimport { ApplicationShell, FrontendApplicationContribution, FrontendApplication, Widget } from '@theia/core/lib/browser';\r\nimport { EditorWidget } from '@theia/editor/lib/browser';\r\nimport { OutputWidget } from '@theia/output/lib/browser/output-widget';\r\nimport { MainMenuManager } from '../common/main-menu-manager';\r\nimport { BoardsListWidget } from './boards/boards-list-widget';\r\nimport { LibraryListWidget } from './library/library-list-widget';\r\n\r\n@injectable()\r\nexport class EditorMode implements FrontendApplicationContribution {\r\n\r\n    @inject(MainMenuManager)\r\n    protected readonly mainMenuManager: MainMenuManager;\r\n\r\n    protected app: FrontendApplication;\r\n\r\n    onStart(app: FrontendApplication): void {\r\n        this.app = app;\r\n        if (this.proMode) {\r\n            // We use this CSS class on the body to modify the visibility of the close button for the editors and views.\r\n            document.body.classList.add(EditorMode.PRO_MODE_KEY);\r\n        }\r\n    }\r\n\r\n    get proMode(): boolean {\r\n        const value = window.localStorage.getItem(EditorMode.PRO_MODE_KEY);\r\n        return value === 'true';\r\n    }\r\n\r\n    async toggleProMode(): Promise<void> {\r\n        const oldState = this.proMode;\r\n        const inAdvancedMode = !oldState;\r\n        window.localStorage.setItem(EditorMode.PRO_MODE_KEY, String(inAdvancedMode));\r\n        if (!inAdvancedMode) {\r\n            const { shell } = this.app;\r\n            // Close all widgets that are neither editor nor `Output` / `Boards Manager` / `Library Manager`.\r\n            for (const area of ['left', 'right', 'bottom', 'main'] as Array<ApplicationShell.Area>) {\r\n                shell.closeTabs(area, title => !this.isInSimpleMode(title.owner));\r\n            }\r\n        }\r\n        // `storeLayout` has a sync API but the implementation is async, we store the layout manually before we reload the page.\r\n        // See: https://github.com/eclipse-theia/theia/issues/6579\r\n        // XXX: hack instead of injecting the `ArduinoShellLayoutRestorer` we have to retrieve it from the application to avoid DI cycle.\r\n        const layoutRestorer = (this.app as any).layoutRestorer as { storeLayoutAsync(app: FrontendApplication): Promise<void> };\r\n        await layoutRestorer.storeLayoutAsync(this.app);\r\n        window.location.reload(true);\r\n    }\r\n\r\n    protected isInSimpleMode(widget: Widget): boolean {\r\n        return widget instanceof EditorWidget\r\n            || widget instanceof OutputWidget\r\n            || widget instanceof BoardsListWidget\r\n            || widget instanceof LibraryListWidget;\r\n    }\r\n\r\n    get compileForDebug(): boolean {\r\n        const value = window.localStorage.getItem(EditorMode.COMPILE_FOR_DEBUG_KEY);\r\n        return value === 'true';\r\n    }\r\n\r\n    async toggleCompileForDebug(): Promise<void> {\r\n        const oldState = this.compileForDebug;\r\n        const newState = !oldState;\r\n        window.localStorage.setItem(EditorMode.COMPILE_FOR_DEBUG_KEY, String(newState));\r\n        this.mainMenuManager.update();\r\n    }\r\n\r\n}\r\n\r\nexport namespace EditorMode {\r\n    export const PRO_MODE_KEY = 'arduino-advanced-mode';\r\n    export const COMPILE_FOR_DEBUG_KEY = 'arduino-compile-for-debug';\r\n}\r\n","import { inject, injectable } from 'inversify';\r\nimport { Library, LibraryService } from '../../common/protocol/library-service';\r\nimport { ListWidget } from '../widgets/component-list/list-widget';\r\nimport { ListItemRenderer } from '../widgets/component-list/list-item-renderer';\r\n\r\n@injectable()\r\nexport class LibraryListWidget extends ListWidget<Library> {\r\n\r\n    static WIDGET_ID = 'library-list-widget';\r\n    static WIDGET_LABEL = 'Library Manager';\r\n\r\n    constructor(\r\n        @inject(LibraryService) protected service: LibraryService,\r\n        @inject(ListItemRenderer) protected itemRenderer: ListItemRenderer<Library>) {\r\n\r\n        super({\r\n            id: LibraryListWidget.WIDGET_ID,\r\n            label: LibraryListWidget.WIDGET_LABEL,\r\n            iconClass: 'library-tab-icon',\r\n            searchable: service,\r\n            installable: service,\r\n            itemLabel: (item: Library) => item.name,\r\n            itemRenderer\r\n        });\r\n    }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport { TabBarToolbar, TabBarToolbarRegistry, TabBarToolbarItem, ReactTabBarToolbarItem } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\r\nimport { CommandRegistry } from '@theia/core/lib/common/command';\r\nimport { ReactWidget } from '@theia/core/lib/browser';\r\nimport { LabelParser, LabelIcon } from '@theia/core/lib/browser/label-parser';\r\n\r\nexport const ARDUINO_TOOLBAR_ITEM_CLASS = 'arduino-tool-item';\r\n\r\nexport namespace ArduinoToolbarComponent {\r\n    export interface Props {\r\n        side: 'left' | 'right',\r\n        items: (TabBarToolbarItem | ReactTabBarToolbarItem)[],\r\n        commands: CommandRegistry,\r\n        labelParser: LabelParser,\r\n        commandIsEnabled: (id: string) => boolean,\r\n        executeCommand: (e: React.MouseEvent<HTMLElement>) => void\r\n    }\r\n    export interface State {\r\n        tooltip: string\r\n    }\r\n}\r\nexport class ArduinoToolbarComponent extends React.Component<ArduinoToolbarComponent.Props, ArduinoToolbarComponent.State> {\r\n\r\n    constructor(props: ArduinoToolbarComponent.Props) {\r\n        super(props);\r\n        this.state = { tooltip: '' };\r\n    }\r\n\r\n    protected renderItem = (item: TabBarToolbarItem) => {\r\n        let innerText = '';\r\n        let className = `arduino-tool-icon ${item.id}-icon`;\r\n        if (item.text) {\r\n            for (const labelPart of this.props.labelParser.parse(item.text)) {\r\n                if (typeof labelPart !== 'string' && LabelIcon.is(labelPart)) {\r\n                    className += ` fa fa-${labelPart.name}`;\r\n                } else {\r\n                    innerText = labelPart;\r\n                }\r\n            }\r\n        }\r\n        const command = this.props.commands.getCommand(item.command);\r\n        const cls = `${ARDUINO_TOOLBAR_ITEM_CLASS} ${TabBarToolbar.Styles.TAB_BAR_TOOLBAR_ITEM} ${command && this.props.commandIsEnabled(command.id) ? 'enabled' : ''}`\r\n        return <div key={item.id} className={cls} >\r\n            <div className={item.id}>\r\n                <div\r\n                    key={item.id + '-icon'}\r\n                    id={item.id}\r\n                    className={className}\r\n                    onClick={this.props.executeCommand}\r\n                    onMouseOver={() => this.setState({ tooltip: item.tooltip || '' })}\r\n                    onMouseOut={() => this.setState({ tooltip: '' })}\r\n                    title={item.tooltip}>\r\n                    {innerText}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        const tooltip = <div key='arduino-toolbar-tooltip' className={'arduino-toolbar-tooltip'}>{this.state.tooltip}</div>;\r\n        const items = [\r\n            <React.Fragment key={this.props.side + '-arduino-toolbar-tooltip'}>\r\n                {[...this.props.items].map(item => TabBarToolbarItem.is(item) ? this.renderItem(item) : item.render())}\r\n            </React.Fragment>\r\n        ]\r\n        if (this.props.side === 'left') {\r\n            items.unshift(tooltip);\r\n        } else {\r\n            items.push(tooltip)\r\n        }\r\n        return items;\r\n    }\r\n}\r\n\r\nexport class ArduinoToolbar extends ReactWidget {\r\n\r\n    protected items = new Map<string, TabBarToolbarItem | ReactTabBarToolbarItem>();\r\n\r\n    constructor(\r\n        protected readonly tabBarToolbarRegistry: TabBarToolbarRegistry,\r\n        protected readonly commands: CommandRegistry,\r\n        protected readonly labelParser: LabelParser,\r\n        public readonly side: 'left' | 'right'\r\n    ) {\r\n        super();\r\n        this.id = side + '-arduino-toolbar';\r\n        this.addClass(TabBarToolbar.Styles.TAB_BAR_TOOLBAR);\r\n        this.init();\r\n        this.tabBarToolbarRegistry.onDidChange(() => this.updateToolbar());\r\n    }\r\n\r\n    protected updateItems(items: Array<TabBarToolbarItem | ReactTabBarToolbarItem>): void {\r\n        this.items.clear();\r\n        const revItems = items.sort(TabBarToolbarItem.PRIORITY_COMPARATOR).reverse();\r\n        for (const item of revItems) {\r\n            this.items.set(item.id, item);\r\n        }\r\n        this.update();\r\n    }\r\n\r\n    protected updateToolbar(): void {\r\n        const items = this ? this.tabBarToolbarRegistry.visibleItems(this) : [];\r\n        this.updateItems(items);\r\n    }\r\n\r\n    protected init(): void {\r\n        this.node.classList.add('theia-arduino-toolbar', this.side);\r\n        this.update();\r\n    }\r\n\r\n    protected readonly doCommandIsEnabled = (id: string) => this.commandIsEnabled(id);\r\n    protected commandIsEnabled(command: string): boolean {\r\n        return this.commands.isEnabled(command, this);\r\n    }\r\n\r\n    protected render(): React.ReactNode {\r\n        return <ArduinoToolbarComponent\r\n            key='arduino-toolbar-component'\r\n            side={this.side}\r\n            labelParser={this.labelParser}\r\n            items={[...this.items.values()]}\r\n            commands={this.commands}\r\n            commandIsEnabled={this.doCommandIsEnabled}\r\n            executeCommand={this.executeCommand}\r\n        />\r\n    }\r\n\r\n    protected executeCommand = (e: React.MouseEvent<HTMLElement>) => {\r\n        const item = this.items.get(e.currentTarget.id);\r\n        if (TabBarToolbarItem.is(item)) {\r\n            this.commands.executeCommand(item.command, this, e.target);\r\n        }\r\n    }\r\n}\r\n\r\nexport namespace ArduinoToolbar {\r\n    export function is(maybeToolbarWidget: any): maybeToolbarWidget is ArduinoToolbar {\r\n        return maybeToolbarWidget instanceof ArduinoToolbar;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Installable } from '../../../common/protocol/installable';\r\nimport { ArduinoComponent } from '../../../common/protocol/arduino-component';\r\nimport { ListItemRenderer } from './list-item-renderer';\r\n\r\nexport class ComponentListItem<T extends ArduinoComponent> extends React.Component<ComponentListItem.Props<T>, ComponentListItem.State> {\r\n\r\n    constructor(props: ComponentListItem.Props<T>) {\r\n        super(props);\r\n        if (props.item.installable) {\r\n            const version = props.item.availableVersions.filter(version => version !== props.item.installedVersion)[0];\r\n            this.state = {\r\n                selectedVersion: version\r\n            };\r\n        }\r\n    }\r\n\r\n    protected async install(item: T): Promise<void> {\r\n        const toInstall = this.state.selectedVersion;\r\n        const version = this.props.item.availableVersions.filter(version => version !== this.state.selectedVersion)[0];\r\n        this.setState({\r\n            selectedVersion: version\r\n        });\r\n        try {\r\n            await this.props.install(item, toInstall);\r\n        } catch {\r\n            this.setState({\r\n                selectedVersion: toInstall\r\n            });\r\n        }\r\n    }\r\n\r\n    protected async uninstall(item: T): Promise<void> {\r\n        await this.props.uninstall(item);\r\n    }\r\n\r\n    protected onVersionChange(version: Installable.Version) {\r\n        this.setState({ selectedVersion: version });\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        const { item, itemRenderer } = this.props;\r\n        return itemRenderer.renderItem(\r\n            Object.assign(this.state, { item }),\r\n            this.install.bind(this),\r\n            this.uninstall.bind(this),\r\n            this.onVersionChange.bind(this)\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport namespace ComponentListItem {\r\n\r\n    export interface Props<T extends ArduinoComponent> {\r\n        readonly item: T;\r\n        readonly install: (item: T, version?: Installable.Version) => Promise<void>;\r\n        readonly uninstall: (item: T) => Promise<void>;\r\n        readonly itemRenderer: ListItemRenderer<T>;\r\n    }\r\n\r\n    export interface State {\r\n        selectedVersion?: Installable.Version;\r\n    }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport { Installable } from '../../../common/protocol/installable';\r\nimport { ArduinoComponent } from '../../../common/protocol/arduino-component';\r\nimport { ComponentListItem } from './component-list-item';\r\nimport { ListItemRenderer } from './list-item-renderer';\r\n\r\nexport class ComponentList<T extends ArduinoComponent> extends React.Component<ComponentList.Props<T>> {\r\n\r\n    protected container?: HTMLElement;\r\n\r\n    render(): React.ReactNode {\r\n        return <div\r\n            className={'items-container'}\r\n            ref={this.setRef}>\r\n            {this.props.items.map(item => this.createItem(item))}\r\n        </div>;\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        if (this.container && this.props.resolveContainer) {\r\n            this.props.resolveContainer(this.container);\r\n        }\r\n    }\r\n\r\n    protected setRef = (element: HTMLElement | null) => {\r\n        this.container = element || undefined;\r\n    }\r\n\r\n    protected createItem(item: T): React.ReactNode {\r\n        return <ComponentListItem<T>\r\n            key={this.props.itemLabel(item)}\r\n            item={item}\r\n            itemRenderer={this.props.itemRenderer}\r\n            install={this.props.install}\r\n            uninstall={this.props.uninstall} />\r\n    }\r\n\r\n}\r\n\r\nexport namespace ComponentList {\r\n\r\n    export interface Props<T extends ArduinoComponent> {\r\n        readonly items: T[];\r\n        readonly itemLabel: (item: T) => string;\r\n        readonly itemRenderer: ListItemRenderer<T>;\r\n        readonly install: (item: T, version?: Installable.Version) => Promise<void>;\r\n        readonly uninstall: (item: T) => Promise<void>;\r\n        readonly resolveContainer: (element: HTMLElement) => void;\r\n    }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport debounce = require('lodash.debounce');\r\nimport { Event } from '@theia/core/lib/common/event';\r\nimport { ConfirmDialog } from '@theia/core/lib/browser/dialogs';\r\nimport { Searchable } from '../../../common/protocol/searchable';\r\nimport { Installable } from '../../../common/protocol/installable';\r\nimport { ArduinoComponent } from '../../../common/protocol/arduino-component';\r\nimport { InstallationProgressDialog, UninstallationProgressDialog } from '../progress-dialog';\r\nimport { SearchBar } from './search-bar';\r\nimport { ListWidget } from './list-widget';\r\nimport { ComponentList } from './component-list';\r\nimport { ListItemRenderer } from './list-item-renderer';\r\n\r\nexport class FilterableListContainer<T extends ArduinoComponent> extends React.Component<FilterableListContainer.Props<T>, FilterableListContainer.State<T>> {\r\n\r\n    constructor(props: Readonly<FilterableListContainer.Props<T>>) {\r\n        super(props);\r\n        this.state = {\r\n            filterText: '',\r\n            items: []\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.search = debounce(this.search, 500);\r\n        this.handleFilterTextChange('');\r\n        this.props.filterTextChangeEvent(this.handleFilterTextChange.bind(this));\r\n    }\r\n\r\n    componentDidUpdate(): void {\r\n        // See: arduino/arduino-pro-ide#101\r\n        // Resets the top of the perfect scroll-bar's thumb.\r\n        this.props.container.updateScrollBar();\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return <div className={'filterable-list-container'}>\r\n            {this.renderSearchFilter()}\r\n            {this.renderSearchBar()}\r\n            {this.renderComponentList()}\r\n        </div>\r\n    }\r\n\r\n    protected renderSearchFilter(): React.ReactNode {\r\n        return undefined;\r\n    }\r\n\r\n    protected renderSearchBar(): React.ReactNode {\r\n        return <SearchBar\r\n            resolveFocus={this.props.resolveFocus}\r\n            filterText={this.state.filterText}\r\n            onFilterTextChanged={this.handleFilterTextChange}\r\n        />\r\n    }\r\n\r\n    protected renderComponentList(): React.ReactNode {\r\n        const { itemLabel, resolveContainer, itemRenderer } = this.props;\r\n        return <ComponentList<T>\r\n            items={this.state.items}\r\n            itemLabel={itemLabel}\r\n            itemRenderer={itemRenderer}\r\n            install={this.install.bind(this)}\r\n            uninstall={this.uninstall.bind(this)}\r\n            resolveContainer={resolveContainer}\r\n        />\r\n    }\r\n\r\n    protected handleFilterTextChange = (filterText: string = this.state.filterText) => {\r\n        this.setState({ filterText });\r\n        this.search(filterText);\r\n    }\r\n\r\n    protected search(query: string): void {\r\n        const { searchable } = this.props;\r\n        searchable.search({ query: query.trim() }).then(items => this.setState({ items: this.sort(items) }));\r\n    }\r\n\r\n    protected sort(items: T[]): T[] {\r\n        const { itemLabel } = this.props;\r\n        return items.sort((left, right) => itemLabel(left).localeCompare(itemLabel(right)));\r\n    }\r\n\r\n    protected async install(item: T, version: Installable.Version): Promise<void> {\r\n        const { installable, searchable, itemLabel } = this.props;\r\n        const dialog = new InstallationProgressDialog(itemLabel(item), version);\r\n        dialog.open();\r\n        try {\r\n            await installable.install({ item, version });\r\n            const items = await searchable.search({ query: this.state.filterText });\r\n            this.setState({ items: this.sort(items) });\r\n        } finally {\r\n            dialog.close();\r\n        }\r\n    }\r\n\r\n    protected async uninstall(item: T): Promise<void> {\r\n        const uninstall = await new ConfirmDialog({\r\n            title: 'Uninstall',\r\n            msg: `Do you want to uninstall ${item.name}?`,\r\n            ok: 'Yes',\r\n            cancel: 'No'\r\n        }).open();\r\n        if (!uninstall) {\r\n            return;\r\n        }\r\n        const { installable, searchable, itemLabel } = this.props;\r\n        const dialog = new UninstallationProgressDialog(itemLabel(item));\r\n        dialog.open();\r\n        try {\r\n            await installable.uninstall({ item });\r\n            const items = await searchable.search({ query: this.state.filterText });\r\n            this.setState({ items: this.sort(items) });\r\n        } finally {\r\n            dialog.close();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport namespace FilterableListContainer {\r\n\r\n    export interface Props<T extends ArduinoComponent> {\r\n        readonly container: ListWidget<T>;\r\n        readonly installable: Installable<T>;\r\n        readonly searchable: Searchable<T>;\r\n        readonly itemLabel: (item: T) => string;\r\n        readonly itemRenderer: ListItemRenderer<T>;\r\n        readonly resolveContainer: (element: HTMLElement) => void;\r\n        readonly resolveFocus: (element: HTMLElement | undefined) => void;\r\n        readonly filterTextChangeEvent: Event<string | undefined>;\r\n    }\r\n\r\n    export interface State<T> {\r\n        filterText: string;\r\n        items: T[];\r\n    }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport { inject, injectable } from 'inversify';\r\nimport { WindowService } from '@theia/core/lib/browser/window/window-service';\r\nimport { Installable } from '../../../common/protocol/installable';\r\nimport { ArduinoComponent } from '../../../common/protocol/arduino-component';\r\nimport { ComponentListItem } from './component-list-item';\r\n\r\n@injectable()\r\nexport class ListItemRenderer<T extends ArduinoComponent> {\r\n\r\n    @inject(WindowService)\r\n    protected windowService: WindowService;\r\n\r\n    protected onMoreInfoClick = (event: React.SyntheticEvent<HTMLAnchorElement, Event>) => {\r\n        const { target } = event.nativeEvent;\r\n        if (target instanceof HTMLAnchorElement) {\r\n            this.windowService.openNewWindow(target.href, { external: true });\r\n            event.nativeEvent.preventDefault();\r\n        }\r\n    }\r\n\r\n    renderItem(\r\n        input: ComponentListItem.State & { item: T },\r\n        install: (item: T) => Promise<void>,\r\n        uninstall: (item: T) => Promise<void>,\r\n        onVersionChange: (version: Installable.Version) => void\r\n    ): React.ReactNode {\r\n\r\n        const { item } = input;\r\n        let nameAndAuthor: JSX.Element;\r\n        if (item.name && item.author) {\r\n            const name = <span className='name'>{item.name}</span>;\r\n            const author = <span className='author'>{item.author}</span>;\r\n            nameAndAuthor = <span>{name} by {author}</span>\r\n        } else if (item.name) {\r\n            nameAndAuthor = <span className='name'>{item.name}</span>;\r\n        } else if ((item as any).id) {\r\n            nameAndAuthor = <span className='name'>{(item as any).id}</span>;\r\n        } else {\r\n            nameAndAuthor = <span className='name'>Unknown</span>;\r\n        }\r\n        const onClickUninstall = () => uninstall(item);\r\n        const installedVersion = !!item.installedVersion && <div className='version-info'>\r\n            <span className='version'>Version {item.installedVersion}</span>\r\n            <span className='installed' onClick={onClickUninstall} />\r\n        </div>;\r\n\r\n        const summary = <div className='summary'>{item.summary}</div>;\r\n        const description = <div className='summary'>{item.description}</div>;\r\n\r\n        const moreInfo = !!item.moreInfoLink && <a href={item.moreInfoLink} onClick={this.onMoreInfoClick}>More info</a>;\r\n        const onClickInstall = () => install(item);\r\n        const installButton = item.installable &&\r\n            <button className='theia-button install' onClick={onClickInstall}>INSTALL</button>;\r\n\r\n        const onSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n            const version = event.target.value;\r\n            if (version) {\r\n                onVersionChange(version);\r\n            }\r\n        }\r\n\r\n        const versions = (() => {\r\n            const { availableVersions } = item;\r\n            if (availableVersions.length === 0) {\r\n                return undefined;\r\n            } else if (availableVersions.length === 1) {\r\n                return <label>{availableVersions[0]}</label>\r\n            } else {\r\n                return <select\r\n                    className='theia-select'\r\n                    value={input.selectedVersion}\r\n                    onChange={onSelectChange}>\r\n                    {\r\n                        item.availableVersions\r\n                            .filter(version => version !== item.installedVersion) // Filter the version that is currently installed.\r\n                            .map(version => <option value={version} key={version}>{version}</option>)\r\n                    }\r\n                </select>;\r\n            }\r\n        })();\r\n\r\n        return <div className='component-list-item noselect'>\r\n            <div className='header'>\r\n                {nameAndAuthor}\r\n                {installedVersion}\r\n            </div>\r\n            <div className='content'>\r\n                {summary}\r\n                {description}\r\n            </div>\r\n            <div className='info'>\r\n                {moreInfo}\r\n            </div>\r\n            <div className='footer'>\r\n                {installButton}\r\n                {versions}\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport { injectable, postConstruct, inject } from 'inversify';\r\nimport { Message } from '@phosphor/messaging';\r\nimport { Deferred } from '@theia/core/lib/common/promise-util';\r\nimport { Emitter } from '@theia/core/lib/common/event';\r\nimport { MaybePromise } from '@theia/core/lib/common/types';\r\nimport { ReactWidget } from '@theia/core/lib/browser/widgets/react-widget';\r\nimport { Installable } from '../../../common/protocol/installable';\r\nimport { Searchable } from '../../../common/protocol/searchable';\r\nimport { ArduinoComponent } from '../../../common/protocol/arduino-component';\r\nimport { FilterableListContainer } from './filterable-list-container';\r\nimport { ListItemRenderer } from './list-item-renderer';\r\nimport { CoreServiceClientImpl } from '../../core-service-client-impl';\r\nimport { ArduinoDaemonClientImpl } from '../../arduino-daemon-client-impl';\r\n\r\n@injectable()\r\nexport abstract class ListWidget<T extends ArduinoComponent> extends ReactWidget {\r\n\r\n    @inject(CoreServiceClientImpl)\r\n    protected readonly coreServiceClient: CoreServiceClientImpl;\r\n\r\n    @inject(ArduinoDaemonClientImpl)\r\n    protected readonly daemonClient: ArduinoDaemonClientImpl;\r\n\r\n    /**\r\n     * Do not touch or use it. It is for setting the focus on the `input` after the widget activation.\r\n     */\r\n    protected focusNode: HTMLElement | undefined;\r\n    protected readonly deferredContainer = new Deferred<HTMLElement>();\r\n    protected readonly filterTextChangeEmitter = new Emitter<string | undefined>();\r\n\r\n    constructor(protected options: ListWidget.Options<T>) {\r\n        super();\r\n        const { id, label, iconClass } = options;\r\n        this.id = id;\r\n        this.title.label = label;\r\n        this.title.caption = label;\r\n        this.title.iconClass = iconClass\r\n        this.title.closable = true;\r\n        this.addClass('arduino-list-widget');\r\n        this.node.tabIndex = 0; // To be able to set the focus on the widget.\r\n        this.scrollOptions = {\r\n            suppressScrollX: true\r\n        }\r\n        this.toDispose.push(this.filterTextChangeEmitter);\r\n    }\r\n\r\n    @postConstruct()\r\n    protected init(): void {\r\n        this.update();\r\n        this.toDispose.pushAll([\r\n            this.coreServiceClient.onIndexUpdated(() => this.refresh(undefined)),\r\n            this.daemonClient.onDaemonStarted(() => this.refresh(undefined)),\r\n            this.daemonClient.onDaemonStopped(() => this.refresh(undefined))\r\n        ]);\r\n    }\r\n\r\n    protected getScrollContainer(): MaybePromise<HTMLElement> {\r\n        return this.deferredContainer.promise;\r\n    }\r\n\r\n    protected onActivateRequest(msg: Message): void {\r\n        super.onActivateRequest(msg);\r\n        (this.focusNode || this.node).focus();\r\n    }\r\n\r\n    protected onUpdateRequest(msg: Message): void {\r\n        super.onUpdateRequest(msg);\r\n        this.render();\r\n    }\r\n\r\n    protected onFocusResolved = (element: HTMLElement | undefined) => {\r\n        this.focusNode = element;\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return <FilterableListContainer<T>\r\n            container={this}\r\n            resolveContainer={this.deferredContainer.resolve}\r\n            resolveFocus={this.onFocusResolved}\r\n            searchable={this.options.searchable}\r\n            installable={this.options.installable}\r\n            itemLabel={this.options.itemLabel}\r\n            itemRenderer={this.options.itemRenderer}\r\n            filterTextChangeEvent={this.filterTextChangeEmitter.event} />;\r\n    }\r\n\r\n    /**\r\n     * If `filterText` is defined, sets the filter text to the argument.\r\n     * If it is `undefined`, updates the view state by re-running the search with the current `filterText` term.\r\n     */\r\n    refresh(filterText: string | undefined): void {\r\n        this.deferredContainer.promise.then(() => this.filterTextChangeEmitter.fire(filterText));\r\n    }\r\n\r\n    updateScrollBar(): void {\r\n        if (this.scrollBar) {\r\n            this.scrollBar.update();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport namespace ListWidget {\r\n    export interface Options<T extends ArduinoComponent> {\r\n        readonly id: string;\r\n        readonly label: string;\r\n        readonly iconClass: string;\r\n        readonly installable: Installable<T>;\r\n        readonly searchable: Searchable<T>;\r\n        readonly itemLabel: (item: T) => string;\r\n        readonly itemRenderer: ListItemRenderer<T>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\n\r\nexport class SearchBar extends React.Component<SearchBar.Props> {\r\n\r\n    constructor(props: Readonly<SearchBar.Props>) {\r\n        super(props);\r\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return <input\r\n                ref={this.setRef}\r\n                className={`theia-input ${SearchBar.Styles.SEARCH_BAR_CLASS}`}\r\n                type='text'\r\n                placeholder='Filter your search...'\r\n                size={1}\r\n                value={this.props.filterText}\r\n                onChange={this.handleFilterTextChange}\r\n            />;\r\n    }\r\n\r\n    private setRef = (element: HTMLElement | null) => {\r\n        if (this.props.resolveFocus) {\r\n            this.props.resolveFocus(element || undefined);\r\n        }\r\n    }\r\n\r\n    private handleFilterTextChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        this.props.onFilterTextChanged(event.target.value);\r\n    }\r\n\r\n}\r\n\r\nexport namespace SearchBar {\r\n\r\n    export interface Props {\r\n        filterText: string;\r\n        onFilterTextChanged(filterText: string): void;\r\n        readonly resolveFocus?: (element: HTMLElement | undefined) => void;\r\n    }\r\n\r\n    export namespace Styles {\r\n        export const SEARCH_BAR_CLASS = 'search-bar';\r\n    }\r\n\r\n}\r\n","import { AbstractDialog } from '@theia/core/lib/browser';\r\n\r\nexport class InstallationProgressDialog extends AbstractDialog<undefined> {\r\n\r\n    readonly value = undefined;\r\n\r\n    constructor(componentName: string, version: string) {\r\n        super({ title: 'Installation in progress' });\r\n        this.contentNode.textContent = `Installing ${componentName} [${version}]. Please wait...`;\r\n    }\r\n\r\n}\r\n\r\nexport class UninstallationProgressDialog extends AbstractDialog<undefined> {\r\n\r\n    readonly value = undefined;\r\n\r\n    constructor(componentName: string) {\r\n        super({ title: 'Uninstallation in progress' });\r\n        this.contentNode.textContent = `Uninstalling ${componentName}. Please wait...`;\r\n    }\r\n\r\n}\r\n","export const MainMenuManager = Symbol('MainMenuManager');\r\nexport interface MainMenuManager {\r\n    /**\r\n     * Call this method if you have changed the content of the main menu (updated a toggle flag, removed/added new groups or menu items)\r\n     * and you want to re-render it from scratch. Works for electron too.\r\n     */\r\n    update(): void;\r\n}\r\n"],"sourceRoot":""}