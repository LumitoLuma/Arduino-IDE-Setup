{"version":3,"sources":["webpack:///./node_modules/@theia/variable-resolver/src/browser/common-variable-contribution.ts","webpack:///./node_modules/@theia/variable-resolver/src/browser/variable-resolver-frontend-contribution.ts","webpack:///./node_modules/@theia/variable-resolver/src/browser/variable-resolver-frontend-module.ts"],"names":[],"mappings":"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","file":"82.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { VariableContribution, VariableRegistry } from './variable';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport { CommandService } from '@theia/core/lib/common/command';\nimport { PreferenceService } from '@theia/core/lib/browser/preferences/preference-service';\nimport { ResourceContextKey } from '@theia/core/lib/browser/resource-context-key';\nimport { VariableInput } from './variable-input';\nimport { QuickInputService } from '@theia/core/lib/browser/quick-open/quick-input-service';\nimport { QuickPickService, QuickPickItem } from '@theia/core/lib/common/quick-pick-service';\nimport { MaybeArray, RecursivePartial } from '@theia/core/lib/common/types';\n\n@injectable()\nexport class CommonVariableContribution implements VariableContribution {\n\n    @inject(EnvVariablesServer)\n    protected readonly env: EnvVariablesServer;\n\n    @inject(CommandService)\n    protected readonly commands: CommandService;\n\n    @inject(PreferenceService)\n    protected readonly preferences: PreferenceService;\n\n    @inject(ResourceContextKey)\n    protected readonly resourceContextKey: ResourceContextKey;\n\n    @inject(QuickInputService)\n    protected readonly quickInputService: QuickInputService;\n\n    @inject(QuickPickService)\n    protected readonly quickPickService: QuickPickService;\n\n    async registerVariables(variables: VariableRegistry): Promise<void> {\n        const execPath = await this.env.getExecPath();\n        variables.registerVariable({\n            name: 'execPath',\n            resolve: () => execPath\n        });\n        variables.registerVariable({\n            name: 'env',\n            resolve: async (_, envVariableName) => {\n                const envVariable = envVariableName && await this.env.getValue(envVariableName);\n                const envValue = envVariable && envVariable.value;\n                return envValue || '';\n            }\n        });\n        variables.registerVariable({\n            name: 'config',\n            resolve: (resourceUri = this.resourceContextKey.get(), preferenceName) => {\n                if (!preferenceName) {\n                    return undefined;\n                }\n                return this.preferences.get(preferenceName, undefined, resourceUri && resourceUri.toString());\n            }\n        });\n        variables.registerVariable({\n            name: 'command',\n            resolve: async (_, command) =>\n                // eslint-disable-next-line no-return-await\n                command && await this.commands.executeCommand(command)\n        });\n        variables.registerVariable({\n            name: 'input',\n            resolve: async (resourceUri = this.resourceContextKey.get(), variable, section) => {\n                if (!variable || !section) {\n                    return undefined;\n                }\n                const configuration = this.preferences.get<RecursivePartial<{ inputs: MaybeArray<VariableInput> }>>(section, undefined, resourceUri && resourceUri.toString());\n                const inputs = !!configuration && 'inputs' in configuration ? configuration.inputs : undefined;\n                const input = Array.isArray(inputs) && inputs.find(item => !!item && item.id === variable);\n                if (!input) {\n                    return undefined;\n                }\n                if (input.type === 'promptString') {\n                    if (typeof input.description !== 'string') {\n                        return undefined;\n                    }\n                    return this.quickInputService.open({\n                        prompt: input.description,\n                        value: input.default\n                    });\n                }\n                if (input.type === 'pickString') {\n                    if (typeof input.description !== 'string' || !Array.isArray(input.options)) {\n                        return undefined;\n                    }\n                    const elements: QuickPickItem<string>[] = [];\n                    for (const option of input.options) {\n                        if (typeof option !== 'string') {\n                            return undefined;\n                        }\n                        if (option === input.default) {\n                            elements.unshift({\n                                description: 'Default',\n                                label: option,\n                                value: option\n                            });\n                        } else {\n                            elements.push({\n                                label: option,\n                                value: option\n                            });\n                        }\n                    }\n                    return this.quickPickService.show(elements, { placeholder: input.description });\n                }\n                if (input.type === 'command') {\n                    if (typeof input.command !== 'string') {\n                        return undefined;\n                    }\n                    return this.commands.executeCommand(input.command, input.args);\n                }\n                return undefined;\n            }\n        });\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, named } from 'inversify';\nimport { FrontendApplicationContribution } from '@theia/core/lib/browser';\nimport { Command, CommandContribution, CommandRegistry, ContributionProvider } from '@theia/core/lib/common';\nimport { VariableContribution, VariableRegistry } from './variable';\nimport { VariableQuickOpenService } from './variable-quick-open-service';\n\nexport const LIST_VARIABLES: Command = {\n    id: 'variable.list',\n    label: 'Variable: List All'\n};\n\n@injectable()\nexport class VariableResolverFrontendContribution implements FrontendApplicationContribution, CommandContribution {\n\n    constructor(\n        @inject(ContributionProvider) @named(VariableContribution)\n        protected readonly contributionProvider: ContributionProvider<VariableContribution>,\n        @inject(VariableRegistry) protected readonly variableRegistry: VariableRegistry,\n        @inject(VariableQuickOpenService) protected readonly variableQuickOpenService: VariableQuickOpenService\n    ) { }\n\n    onStart(): void {\n        this.contributionProvider.getContributions().forEach(contrib =>\n            contrib.registerVariables(this.variableRegistry)\n        );\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(LIST_VARIABLES, {\n            isEnabled: () => true,\n            execute: () => this.variableQuickOpenService.open()\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from 'inversify';\nimport { bindContributionProvider, CommandContribution } from '@theia/core';\nimport { FrontendApplicationContribution } from '@theia/core/lib/browser';\nimport { VariableRegistry, VariableContribution } from './variable';\nimport { VariableQuickOpenService } from './variable-quick-open-service';\nimport { VariableResolverFrontendContribution } from './variable-resolver-frontend-contribution';\nimport { VariableResolverService } from './variable-resolver-service';\nimport { CommonVariableContribution } from './common-variable-contribution';\n\nexport default new ContainerModule(bind => {\n    bind(VariableRegistry).toSelf().inSingletonScope();\n    bind(VariableResolverService).toSelf().inSingletonScope();\n    bindContributionProvider(bind, VariableContribution);\n\n    bind(VariableResolverFrontendContribution).toSelf().inSingletonScope();\n    for (const identifier of [FrontendApplicationContribution, CommandContribution]) {\n        bind(identifier).toService(VariableResolverFrontendContribution);\n    }\n\n    bind(VariableQuickOpenService).toSelf().inSingletonScope();\n\n    bind(CommonVariableContribution).toSelf().inSingletonScope();\n    bind(VariableContribution).toService(CommonVariableContribution);\n});\n"],"sourceRoot":""}