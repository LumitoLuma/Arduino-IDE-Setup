{"version":3,"sources":["webpack:///./node_modules/@theia/scm/src/browser/scm-amend-component.tsx","webpack:///./node_modules/@theia/scm/src/browser/scm-amend-widget.tsx","webpack:///./node_modules/@theia/scm/src/browser/scm-commit-widget.tsx","webpack:///./node_modules/@theia/scm/src/browser/scm-no-repository-widget.tsx","webpack:///./node_modules/@theia/scm/src/browser/scm-preferences.ts","webpack:///./node_modules/@theia/scm/src/browser/scm-tree-model.ts","webpack:///./node_modules/@theia/scm/src/browser/scm-tree-widget.tsx","webpack:///./node_modules/@theia/scm/src/browser/scm-widget.tsx","webpack:///./node_modules/@theia/scm/src/browser/style/scm-amend-component.css?ff5d","webpack:///./node_modules/autosize/dist/autosize.js","webpack:///./node_modules/computed-style/dist/computedStyle.commonjs.js","webpack:///./node_modules/@theia/scm/src/browser/style/scm-amend-component.css","webpack:///./node_modules/line-height/lib/line-height.js","webpack:///./node_modules/react-autosize-textarea/lib/TextareaAutosize.js","webpack:///./node_modules/react-autosize-textarea/lib/index.js"],"names":[],"mappings":"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AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,+EAA+E;;AAE/E;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC,E;;;;;;;;;;;AC/RD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;;;;;;AC1BA,2BAA2B,mBAAO,CAAC,4FAA2C;AAC9E;;;AAGA;AACA,cAAc,QAAS,02BAA02B,oBAAoB,6BAA6B,qEAAqE,kBAAkB,uBAAuB,GAAG,sCAAsC,oBAAoB,6BAA6B,kBAAkB,qBAAqB,GAAG,kCAAkC,oBAAoB,0BAA0B,uBAAuB,kBAAkB,GAAG,uCAAuC,oBAAoB,0BAA0B,uBAAuB,kBAAkB,uBAAuB,GAAG,2CAA2C,kBAAkB,GAAG,+BAA+B,oBAAoB,6BAA6B,0BAA0B,uBAAuB,8BAA8B,kBAAkB,GAAG,sCAAsC,wBAAwB,GAAG,uCAAuC,0BAA0B,uBAAuB,8BAA8B,GAAG,oCAAoC,0BAA0B,uBAAuB,8BAA8B,gDAAgD,yBAAyB,GAAG,sCAAsC,oBAAoB,0BAA0B,GAAG,oCAAoC,yBAAyB,kBAAkB,uBAAuB,sBAAsB,uBAAuB,qBAAqB,wBAAwB,oBAAoB,uBAAuB,GAAG;;AAE12E;;;;;;;;;;;;ACPA;AACA,oBAAoB,mBAAO,CAAC,oFAAgB;;AAE5C;AACA;AACA,WAAW,YAAY;AACvB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AChGa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA,YAAY,mBAAO,CAAC,4CAAO;AAC3B,gBAAgB,mBAAO,CAAC,sDAAY;AACpC,eAAe,mBAAO,CAAC,0DAAU;AACjC,qBAAqB,mBAAO,CAAC,kEAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAmD,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,UAAU,wDAAwD,UAAU,uBAAuB;AAC9J;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,iEAAiE,UAAU,gBAAgB;AAC3F,CAAC;;;;;;;;;;;;;AC7HY;AACb;AACA,yBAAyB,mBAAO,CAAC,0FAAoB;AACrD","file":"29.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 Arm and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport '../../src/browser/style/scm-amend-component.css';\n\nimport * as React from 'react';\nimport { ScmAvatarService } from './scm-avatar-service';\nimport { StorageService } from '@theia/core/lib/browser';\nimport { Disposable, DisposableCollection } from '@theia/core';\n\nimport { ScmRepository } from './scm-repository';\nimport { ScmAmendSupport, ScmCommit } from './scm-provider';\n\nexport interface ScmAmendComponentProps {\n    style: React.CSSProperties | undefined,\n    repository: ScmRepository,\n    scmAmendSupport: ScmAmendSupport,\n    setCommitMessage: (message: string) => void,\n    avatarService: ScmAvatarService,\n    storageService: StorageService,\n}\n\ninterface ScmAmendComponentState {\n    /**\n     * This is used for transitioning.  When setting up a transition, we first set to render\n     * the elements in their starting positions.  This includes creating the elements to be\n     * transitioned in, even though those controls will not be visible when state is 'start'.\n     * On the next frame after 'start', we render elements with their final positions and with\n     * the transition properties.\n     */\n    transition: {\n        state: 'none'\n    } | {\n        state: 'start' | 'transitioning',\n        direction: 'up' | 'down',\n        previousLastCommit: { commit: ScmCommit, avatar: string }\n    };\n\n    amendingCommits: { commit: ScmCommit, avatar: string }[];\n    lastCommit: { commit: ScmCommit, avatar: string } | undefined;\n}\n\nconst TRANSITION_TIME_MS = 300;\nconst REPOSITORY_STORAGE_KEY = 'scmRepository';\n\nexport class ScmAmendComponent extends React.Component<ScmAmendComponentProps, ScmAmendComponentState> {\n\n    /**\n     * a hint on how to animate an update, set by certain user action handlers\n     * and used when updating the view based on a repository change\n     */\n    protected transitionHint: 'none' | 'amend' | 'unamend' = 'none';\n\n    protected lastCommitHeight: number = 0;\n    lastCommitScrollRef = (instance: HTMLDivElement) => {\n        if (instance && this.lastCommitHeight === 0) {\n            this.lastCommitHeight = instance.getBoundingClientRect().height;\n        }\n    };\n\n    constructor(props: ScmAmendComponentProps) {\n        super(props);\n\n        this.state = {\n            transition: { state: 'none' },\n            amendingCommits: [],\n            lastCommit: undefined\n        };\n\n        const setState = this.setState.bind(this);\n        this.setState = newState => {\n            if (!this.toDisposeOnUnmount.disposed) {\n                setState(newState);\n            }\n        };\n    }\n\n    protected readonly toDisposeOnUnmount = new DisposableCollection();\n\n    async componentDidMount(): Promise<void> {\n        this.toDisposeOnUnmount.push(Disposable.create(() => { /* mark as mounted */ }));\n\n        const lastCommit = await this.getLastCommit();\n        this.setState({ amendingCommits: await this.buildAmendingList(lastCommit ? lastCommit.commit : undefined), lastCommit });\n\n        if (this.toDisposeOnUnmount.disposed) {\n            return;\n        }\n        this.toDisposeOnUnmount.push(\n            this.props.repository.provider.onDidChange(() => this.fetchStatusAndSetState())\n        );\n    }\n\n    componentWillUnmount(): void {\n        this.toDisposeOnUnmount.dispose();\n    }\n\n    async fetchStatusAndSetState(): Promise<void> {\n        const storageKey = this.getStorageKey();\n\n        const nextCommit = await this.getLastCommit();\n        if (nextCommit && this.state.lastCommit && nextCommit.commit.id === this.state.lastCommit.commit.id) {\n            // No change here\n        } else if (nextCommit === undefined && this.state.lastCommit === undefined) {\n            // No change here\n        } else if (this.transitionHint === 'none') {\n            // If the 'last' commit changes, but we are not expecting an 'amend'\n            // or 'unamend' to occur, then we clear out the list of amended commits.\n            // This is because an unexpected change has happened to the repository,\n            // perhaps the user committed, merged, or something.  The amended commits\n            // will no longer be valid.\n\n            // Note that there may or may not have been a previous lastCommit (if the\n            // repository was previously empty with no initial commit then lastCommit\n            // will be undefined).  Either way we clear the amending commits.\n            await this.clearAmendingCommits();\n\n            // There is a change to the last commit, but no transition hint so\n            // the view just updates without transition.\n            this.setState({ amendingCommits: [], lastCommit: nextCommit });\n        } else {\n            const amendingCommits = this.state.amendingCommits.concat([]); // copy the array\n\n            const direction: 'up' | 'down' = this.transitionHint === 'amend' ? 'up' : 'down';\n            switch (this.transitionHint) {\n                case 'amend':\n                    if (this.state.lastCommit) {\n                        amendingCommits.push(this.state.lastCommit);\n\n                        const serializedState = JSON.stringify({\n                            amendingHeadCommitSha: amendingCommits[0].commit.id,\n                            latestCommitSha: nextCommit ? nextCommit.commit.id : undefined\n                        });\n                        this.props.storageService.setData<string | undefined>(storageKey, serializedState);\n                    }\n                    break;\n                case 'unamend':\n                    amendingCommits.pop();\n                    if (amendingCommits.length === 0) {\n                        this.props.storageService.setData<string | undefined>(storageKey, undefined);\n                    } else {\n                        const serializedState = JSON.stringify({\n                            amendingHeadCommitSha: amendingCommits[0].commit.id,\n                            latestCommitSha: nextCommit ? nextCommit.commit.id : undefined\n                        });\n                        this.props.storageService.setData<string | undefined>(storageKey, serializedState);\n                    }\n                    break;\n            }\n\n            if (this.state.lastCommit && nextCommit) {\n                const transitionData = { direction, previousLastCommit: this.state.lastCommit };\n                this.setState({ lastCommit: nextCommit, amendingCommits, transition: { ...transitionData, state: 'start' } });\n                this.onNextFrame(() => {\n                    this.setState({ transition: { ...transitionData, state: 'transitioning' } });\n                });\n\n                setTimeout(\n                    () => {\n                        this.setState({ transition: { state: 'none' } });\n                    },\n                    TRANSITION_TIME_MS);\n            } else {\n                // No previous last commit so no transition\n                this.setState({ transition: { state: 'none' }, amendingCommits, lastCommit: nextCommit });\n            }\n        }\n\n        this.transitionHint = 'none';\n    }\n\n    private async clearAmendingCommits(): Promise<void> {\n        const storageKey = this.getStorageKey();\n        await this.props.storageService.setData<string | undefined>(storageKey, undefined);\n    }\n\n    private async buildAmendingList(lastCommit: ScmCommit | undefined): Promise<{ commit: ScmCommit, avatar: string }[]> {\n        const storageKey = this.getStorageKey();\n        const storedState = await this.props.storageService.getData<string | undefined>(storageKey, undefined);\n\n        // Restore list of commits from saved amending head commit up through parents until the\n        // current commit.  (If we don't reach the current commit, the repository has been changed in such\n        // a way then unamending commits can no longer be done).\n        if (storedState) {\n            const { amendingHeadCommitSha, latestCommitSha } = JSON.parse(storedState);\n            if (!this.commitsAreEqual(lastCommit, latestCommitSha)) {\n                // The head commit in the repository has changed.  It is not the same commit that was the\n                // head commit after the last 'amend'.\n                return [];\n            }\n            const commits = await this.props.scmAmendSupport.getInitialAmendingCommits(amendingHeadCommitSha, lastCommit ? lastCommit.id : undefined);\n\n            const amendingCommitPromises = commits.map(async commit => {\n                const avatar = await this.props.avatarService.getAvatar(commit.authorEmail);\n                return { commit, avatar };\n            });\n            return Promise.all(amendingCommitPromises);\n        } else {\n            return [];\n        }\n    }\n\n    private getStorageKey(): string {\n        return REPOSITORY_STORAGE_KEY + ':' + this.props.repository.provider.rootUri;\n    }\n\n    /**\n     * Commits are equal if the ids are equal or if both are undefined.\n     * (If a commit is undefined, it represents the initial empty state of a repository,\n     * before the initial commit).\n     */\n    private commitsAreEqual(lastCommit: ScmCommit | undefined, savedLastCommitId: string | undefined): boolean {\n        return lastCommit\n            ? lastCommit.id === savedLastCommitId\n            : savedLastCommitId === undefined;\n    }\n\n    /**\n     * This function will update the 'model' (lastCommit, amendingCommits) only\n     * when the repository sees the last commit change.\n     * 'render' can be called at any time, so be sure we don't update any 'model'\n     * fields until we actually start the transition.\n     */\n    protected amend = async (): Promise<void> => {\n        if (this.state.transition.state !== 'none' && this.transitionHint !== 'none') {\n            return;\n        }\n\n        this.transitionHint = 'amend';\n        await this.resetAndSetMessage('HEAD~', 'HEAD');\n    };\n\n    protected unamend = async (): Promise<void> => {\n        if (this.state.transition.state !== 'none' && this.transitionHint !== 'none') {\n            return;\n        }\n\n        const commitToRestore = (this.state.amendingCommits.length >= 1)\n            ? this.state.amendingCommits[this.state.amendingCommits.length - 1]\n            : undefined;\n        const oldestAmendCommit = (this.state.amendingCommits.length >= 2)\n            ? this.state.amendingCommits[this.state.amendingCommits.length - 2]\n            : undefined;\n\n        if (commitToRestore) {\n            const commitToUseForMessage = oldestAmendCommit\n                ? oldestAmendCommit.commit.id\n                : undefined;\n            this.transitionHint = 'unamend';\n            await this.resetAndSetMessage(commitToRestore.commit.id, commitToUseForMessage);\n        }\n    };\n\n    private async resetAndSetMessage(commitToRestore: string, commitToUseForMessage: string | undefined): Promise<void> {\n        const message = commitToUseForMessage\n            ? await this.props.scmAmendSupport.getMessage(commitToUseForMessage)\n            : '';\n        await this.props.scmAmendSupport.reset(commitToRestore);\n        this.props.setCommitMessage(message);\n    }\n\n    render(): JSX.Element {\n        const neverShrink = this.state.amendingCommits.length <= 3;\n\n        const style: React.CSSProperties = neverShrink\n            ? {\n                ...this.props.style,\n                flexShrink: 0,\n            }\n            : {\n                ...this.props.style,\n                flexShrink: 1,\n                minHeight: 240   // height with three commits\n            };\n\n        return (\n            <div className={ScmAmendComponent.Styles.COMMIT_CONTAINER + ' no-select'} style={style}>\n                {\n                    this.state.amendingCommits.length > 0 || (this.state.lastCommit && this.state.transition.state !== 'none' && this.state.transition.direction === 'down')\n                        ? this.renderAmendingCommits()\n                        : ''\n                }\n                {\n                    this.state.lastCommit ?\n                        <div>\n                            <div id='lastCommit' className='theia-scm-amend'>\n                                <div className='theia-header scm-theia-header'>\n                                    HEAD Commit\n                                </div>\n                                {this.renderLastCommit()}\n                            </div>\n                        </div>\n                        : ''\n                }\n            </div>\n        );\n    }\n\n    protected async getLastCommit(): Promise<{ commit: ScmCommit, avatar: string } | undefined> {\n        const commit = await this.props.scmAmendSupport.getLastCommit();\n        if (commit) {\n            const avatar = await this.props.avatarService.getAvatar(commit.authorEmail);\n            return { commit, avatar };\n        }\n        return undefined;\n    }\n\n    protected renderAmendingCommits(): React.ReactNode {\n        const neverShrink = this.state.amendingCommits.length <= 3;\n\n        const style: React.CSSProperties = neverShrink\n            ? {\n                flexShrink: 0,\n            }\n            : {\n                flexShrink: 1,\n                // parent minHeight controls height, we just need any value smaller than\n                // what the height would be when the parent is at its minHeight\n                minHeight: 0\n            };\n\n        return <div id='amendedCommits' className='theia-scm-amend-outer-container' style={style}>\n            <div className='theia-header scm-theia-header'>\n                <div className='noWrapInfo'>Commits being Amended</div>\n                {this.renderAmendCommitListButtons()}\n                {this.renderCommitCount(this.state.amendingCommits.length)}\n            </div>\n            <div style={this.styleAmendedCommits()}>\n                {this.state.amendingCommits.map((commitData, index, array) =>\n                    this.renderCommitBeingAmended(commitData, index === array.length - 1)\n                )}\n                {\n                    this.state.lastCommit && this.state.transition.state !== 'none' && this.state.transition.direction === 'down'\n                        ? this.renderCommitBeingAmended(this.state.lastCommit, false)\n                        : ''\n                }\n            </div>\n        </div>;\n    }\n\n    protected renderAmendCommitListButtons(): React.ReactNode {\n        return <div className='theia-scm-inline-actions-container'>\n            <div className='theia-scm-inline-actions'>\n                <div className='theia-scm-inline-action'>\n                    <a className='fa fa-minus' title='Unamend All Commits' onClick={this.unamendAll} />\n                </div>\n                <div className='theia-scm-inline-action' >\n                    <a className='fa fa-times' title='Clear Amending Commits' onClick={this.clearAmending} />\n                </div>\n            </div>\n        </div>;\n    }\n\n    protected renderLastCommit(): React.ReactNode {\n        if (!this.state.lastCommit) {\n            return '';\n        }\n\n        const canAmend: boolean = true;\n        return <div className={ScmAmendComponent.Styles.COMMIT_AND_BUTTON} style={{ flexGrow: 0, flexShrink: 0 }} key={this.state.lastCommit.commit.id}>\n            {this.renderLastCommitNoButton(this.state.lastCommit)}\n            {\n                canAmend\n                    ? <div className={ScmAmendComponent.Styles.FLEX_CENTER}>\n                        <button className='theia-button' title='Amend last commit' onClick={this.amend}>\n                            Amend\n                        </button>\n                    </div>\n                    : ''\n            }\n        </div>;\n    }\n\n    protected renderLastCommitNoButton(lastCommit: { commit: ScmCommit, avatar: string }): React.ReactNode {\n        switch (this.state.transition.state) {\n            case 'none':\n                return <div ref={this.lastCommitScrollRef} className='theia-scm-scrolling-container'>\n                    {this.renderCommitAvatarAndDetail(lastCommit)}\n                </div>;\n\n            case 'start':\n            case 'transitioning':\n                switch (this.state.transition.direction) {\n                    case 'up':\n                        return <div style={this.styleLastCommitMovingUp(this.state.transition.state)}>\n                            {this.renderCommitAvatarAndDetail(this.state.transition.previousLastCommit)}\n                            {this.renderCommitAvatarAndDetail(lastCommit)}\n                        </div>;\n                    case 'down':\n                        return <div style={this.styleLastCommitMovingDown(this.state.transition.state)}>\n                            {this.renderCommitAvatarAndDetail(lastCommit)}\n                            {this.renderCommitAvatarAndDetail(this.state.transition.previousLastCommit)}\n                        </div>;\n                }\n        }\n    }\n\n    /**\n     * See https://stackoverflow.com/questions/26556436/react-after-render-code\n     *\n     * @param callback\n     */\n    protected onNextFrame(callback: FrameRequestCallback): void {\n        setTimeout(\n            () => window.requestAnimationFrame(callback),\n            0);\n    }\n\n    protected renderCommitAvatarAndDetail(commitData: { commit: ScmCommit, avatar: string }): React.ReactNode {\n        const { commit, avatar } = commitData;\n        return <div className={ScmAmendComponent.Styles.COMMIT_AVATAR_AND_TEXT} key={commit.id}>\n            <div className={ScmAmendComponent.Styles.COMMIT_MESSAGE_AVATAR}>\n                <img src={avatar} />\n            </div>\n            <div className={ScmAmendComponent.Styles.COMMIT_DETAILS}>\n                <div className={ScmAmendComponent.Styles.COMMIT_MESSAGE_SUMMARY}>{commit.summary}</div>\n                <div className={ScmAmendComponent.Styles.LAST_COMMIT_MESSAGE_TIME}>{`${commit.authorDateRelative} by ${commit.authorName}`}</div>\n            </div>\n        </div>;\n    }\n\n    protected renderCommitCount(commits: number): React.ReactNode {\n        return <div className='notification-count-container scm-change-count'>\n            <span className='notification-count'>{commits}</span>\n        </div>;\n    }\n\n    protected renderCommitBeingAmended(commitData: { commit: ScmCommit, avatar: string }, isOldestAmendCommit: boolean): JSX.Element {\n        if (isOldestAmendCommit && this.state.transition.state !== 'none' && this.state.transition.direction === 'up') {\n            return <div className={ScmAmendComponent.Styles.COMMIT_AVATAR_AND_TEXT} style={{ flexGrow: 0, flexShrink: 0 }} key={commitData.commit.id}>\n                <div className='fixed-height-commit-container'>\n                    {this.renderCommitAvatarAndDetail(commitData)}\n                </div>\n            </div>;\n        } else {\n            return <div className={ScmAmendComponent.Styles.COMMIT_AVATAR_AND_TEXT} style={{ flexGrow: 0, flexShrink: 0 }} key={commitData.commit.id}>\n                {this.renderCommitAvatarAndDetail(commitData)}\n                {\n                    isOldestAmendCommit\n                        ? <div className={ScmAmendComponent.Styles.FLEX_CENTER}>\n                            <button className='theia-button' title='Unamend commit' onClick={this.unamend}>\n                                Unamend\n                            </button>\n                        </div>\n                        : ''\n                }\n            </div>;\n        }\n    }\n\n    /*\n     * The style for the <div> containing the list of commits being amended.\n     * This div is scrollable.\n     */\n    protected styleAmendedCommits(): React.CSSProperties {\n        const base = {\n            display: 'flex',\n            whitespace: 'nowrap',\n            width: '100%',\n            minHeight: 0,\n            flexShrink: 1,\n            paddingTop: '2px',\n        };\n\n        switch (this.state.transition.state) {\n            case 'none':\n                return {\n                    ...base,\n                    flexDirection: 'column',\n                    overflowY: 'auto',\n                    marginBottom: '0',\n                };\n            case 'start':\n            case 'transitioning':\n                let startingMargin: number = 0;\n                let endingMargin: number = 0;\n                switch (this.state.transition.direction) {\n                    case 'down':\n                        startingMargin = 0;\n                        endingMargin = -32;\n                        break;\n                    case 'up':\n                        startingMargin = -32;\n                        endingMargin = 0;\n                        break;\n                }\n\n                switch (this.state.transition.state) {\n                    case 'start':\n                        return {\n                            ...base,\n                            flexDirection: 'column',\n                            overflowY: 'hidden',\n                            marginBottom: `${startingMargin}px`,\n                        };\n                    case 'transitioning':\n                        return {\n                            ...base,\n                            flexDirection: 'column',\n                            overflowY: 'hidden',\n                            marginBottom: `${endingMargin}px`,\n                            transitionProperty: 'margin-bottom',\n                            transitionDuration: `${TRANSITION_TIME_MS}ms`,\n                            transitionTimingFunction: 'linear'\n                        };\n                }\n        }\n    }\n\n    protected styleLastCommitMovingUp(transitionState: 'start' | 'transitioning'): React.CSSProperties {\n        return this.styleLastCommit(transitionState, 0, -28);\n    }\n\n    protected styleLastCommitMovingDown(transitionState: 'start' | 'transitioning'): React.CSSProperties {\n        return this.styleLastCommit(transitionState, -28, 0);\n    }\n\n    protected styleLastCommit(transitionState: 'start' | 'transitioning', startingMarginTop: number, startingMarginBottom: number): React.CSSProperties {\n        const base = {\n            display: 'flex',\n            width: '100%',\n            overflow: 'hidden',\n            paddingTop: 0,\n            paddingBottom: 0,\n            borderTop: 0,\n            borderBottom: 0,\n            height: this.lastCommitHeight * 2\n        };\n\n        // We end with top and bottom margins switched\n        const endingMarginTop = startingMarginBottom;\n        const endingMarginBottom = startingMarginTop;\n\n        switch (transitionState) {\n            case 'start':\n                return {\n                    ...base,\n                    position: 'relative',\n                    flexDirection: 'column',\n                    marginTop: startingMarginTop,\n                    marginBottom: startingMarginBottom,\n                };\n            case 'transitioning':\n                return {\n                    ...base,\n                    position: 'relative',\n                    flexDirection: 'column',\n                    marginTop: endingMarginTop,\n                    marginBottom: endingMarginBottom,\n                    transitionProperty: 'margin-top margin-bottom',\n                    transitionDuration: `${TRANSITION_TIME_MS}ms`,\n                    transitionTimingFunction: 'linear'\n                };\n        }\n    }\n\n    readonly unamendAll = () => this.doUnamendAll();\n    protected async doUnamendAll(): Promise<void> {\n        while (this.state.amendingCommits.length > 0) {\n            this.unamend();\n            await new Promise(resolve => setTimeout(resolve, TRANSITION_TIME_MS));\n        }\n    }\n\n    readonly clearAmending = () => this.doClearAmending();\n    protected async doClearAmending(): Promise<void> {\n        await this.clearAmendingCommits();\n        this.setState({ amendingCommits: [] });\n    }\n}\n\nexport namespace ScmAmendComponent {\n\n    export namespace Styles {\n        export const COMMIT_CONTAINER = 'theia-scm-commit-container';\n        export const COMMIT_AND_BUTTON = 'theia-scm-commit-and-button';\n        export const COMMIT_AVATAR_AND_TEXT = 'theia-scm-commit-avatar-and-text';\n        export const COMMIT_DETAILS = 'theia-scm-commit-details';\n        export const COMMIT_MESSAGE_AVATAR = 'theia-scm-commit-message-avatar';\n        export const COMMIT_MESSAGE_SUMMARY = 'theia-scm-commit-message-summary';\n        export const LAST_COMMIT_MESSAGE_TIME = 'theia-scm-commit-message-time';\n\n        export const FLEX_CENTER = 'theia-scm-flex-container-center';\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2020 Arm and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { SelectionService } from '@theia/core/lib/common';\nimport * as React from 'react';\nimport {\n    ContextMenuRenderer, ReactWidget, LabelProvider, KeybindingRegistry, StorageService\n} from '@theia/core/lib/browser';\nimport { ScmService } from './scm-service';\nimport { ScmAvatarService } from './scm-avatar-service';\nimport { ScmAmendComponent } from './scm-amend-component';\n\n@injectable()\nexport class ScmAmendWidget extends ReactWidget {\n\n    static ID = 'scm-amend-widget';\n\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(ScmAvatarService) protected readonly avatarService: ScmAvatarService;\n    @inject(StorageService) protected readonly storageService: StorageService;\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(KeybindingRegistry) protected readonly keybindings: KeybindingRegistry;\n\n    protected shouldScrollToRow = true;\n\n    constructor(\n        @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer,\n    ) {\n        super();\n        this.scrollOptions = {\n            suppressScrollX: true,\n            minScrollbarLength: 35\n        };\n        this.addClass('theia-scm-commit-container');\n        this.id = ScmAmendWidget.ID;\n    }\n\n    protected render(): React.ReactNode {\n        const repository = this.scmService.selectedRepository;\n        if (repository && repository.provider.amendSupport) {\n            return React.createElement(\n                ScmAmendComponent,\n                {\n                    key: `amend:${repository.provider.rootUri}`,\n                    style: { flexGrow: 0 },\n                    repository: repository,\n                    scmAmendSupport: repository.provider.amendSupport,\n                    setCommitMessage: this.setInputValue,\n                    avatarService: this.avatarService,\n                    storageService: this.storageService,\n                }\n            );\n        }\n    }\n\n    protected setInputValue = (event: React.FormEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLTextAreaElement> | string) => {\n        const repository = this.scmService.selectedRepository;\n        if (repository) {\n            repository.input.value = typeof event === 'string' ? event : event.currentTarget.value;\n        }\n    };\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { Message } from '@phosphor/messaging';\nimport * as React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport { ScmInput } from './scm-input';\nimport {\n    ContextMenuRenderer, ReactWidget, KeybindingRegistry, StatefulWidget\n} from '@theia/core/lib/browser';\nimport { ScmService } from './scm-service';\n\n@injectable()\nexport class ScmCommitWidget extends ReactWidget implements StatefulWidget {\n\n    static ID = 'scm-commit-widget';\n\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(KeybindingRegistry) protected readonly keybindings: KeybindingRegistry;\n\n    protected shouldScrollToRow = true;\n\n    /**\n     * Don't modify DOM use React! only exposed for `focusInput`\n     * Use `this.scmService.selectedRepository?.input.value` as a single source of truth!\n     */\n    protected readonly inputRef = React.createRef<HTMLTextAreaElement>();\n\n    constructor(\n        @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer,\n    ) {\n        super();\n        this.scrollOptions = {\n            suppressScrollX: true,\n            minScrollbarLength: 35\n        };\n        this.addClass('theia-scm-commit');\n        this.id = ScmCommitWidget.ID;\n    }\n\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.focus();\n    }\n\n    public focus(): void {\n        (this.inputRef.current || this.node).focus();\n    }\n\n    protected render(): React.ReactNode {\n        const repository = this.scmService.selectedRepository;\n        if (repository) {\n            return React.createElement('div', this.createContainerAttributes(), this.renderInput(repository.input));\n        }\n    }\n\n    /**\n     * Create the container attributes for the widget.\n     */\n    protected createContainerAttributes(): React.HTMLAttributes<HTMLElement> {\n        return {\n            style: { flexGrow: 0 }\n        };\n    }\n\n    protected renderInput(input: ScmInput): React.ReactNode {\n        const validationStatus = input.issue ? input.issue.type : 'idle';\n        const validationMessage = input.issue ? input.issue.message : '';\n        const format = (value: string, ...args: string[]): string => {\n            if (args.length !== 0) {\n                return value.replace(/{(\\d+)}/g, (found, n) => {\n                    const i = parseInt(n);\n                    return isNaN(i) || i < 0 || i >= args.length ? found : args[i];\n                });\n            }\n            return value;\n        };\n\n        const keybinding = this.keybindings.acceleratorFor(this.keybindings.getKeybindingsForCommand('scm.acceptInput')[0]).join('+');\n        const message = format(input.placeholder || '', keybinding);\n        return <div className={ScmCommitWidget.Styles.INPUT_MESSAGE_CONTAINER}>\n            <TextareaAutosize\n                className={`${ScmCommitWidget.Styles.INPUT_MESSAGE} theia-input theia-scm-input-message-${validationStatus}`}\n                id={ScmCommitWidget.Styles.INPUT_MESSAGE}\n                placeholder={message}\n                autoFocus={true}\n                value={input.value}\n                onChange={this.setInputValue}\n                ref={this.inputRef}\n                rows={1}\n                maxRows={6} /* from VS Code */>\n            </TextareaAutosize>\n            <div\n                className={\n                    `${ScmCommitWidget.Styles.VALIDATION_MESSAGE} ${ScmCommitWidget.Styles.NO_SELECT}\n                    theia-scm-validation-message-${validationStatus} theia-scm-input-message-${validationStatus}`\n                }\n                style={{\n                    display: !!input.issue ? 'block' : 'none'\n                }}>{validationMessage}</div>\n        </div>;\n    }\n\n    protected setInputValue = (event: React.FormEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLTextAreaElement> | string) => {\n        const repository = this.scmService.selectedRepository;\n        if (repository) {\n            repository.input.value = typeof event === 'string' ? event : event.currentTarget.value;\n        }\n    };\n\n    /**\n     * Store the tree state.\n     */\n    storeState(): ScmCommitWidget.State {\n        const message = this.scmService.selectedRepository?.input.value;\n        return { message };\n    }\n\n    /**\n     * Restore the state.\n     * @param oldState the old state object.\n     */\n    restoreState(oldState: ScmCommitWidget.State): void {\n        const value = oldState.message;\n        if (!value) {\n            return;\n        }\n        let repository = this.scmService.selectedRepository;\n        if (repository) {\n            repository.input.value = value;\n        } else {\n            const listener = this.scmService.onDidChangeSelectedRepository(() => {\n                repository = this.scmService.selectedRepository;\n                if (repository) {\n                    listener.dispose();\n                    if (!repository.input.value) {\n                        repository.input.value = value;\n                    }\n                }\n            });\n            this.toDispose.push(listener);\n        }\n    }\n\n}\n\nexport namespace ScmCommitWidget {\n\n    export namespace Styles {\n        export const INPUT_MESSAGE_CONTAINER = 'theia-scm-input-message-container';\n        export const INPUT_MESSAGE = 'theia-scm-input-message';\n        export const VALIDATION_MESSAGE = 'theia-scm-input-validation-message';\n        export const NO_SELECT = 'no-select';\n    }\n\n    export interface State {\n        message?: string\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Arm and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport * as React from 'react';\nimport { ReactWidget } from '@theia/core/lib/browser';\nimport { AlertMessage } from '@theia/core/lib/browser/widgets/alert-message';\n\n@injectable()\nexport class ScmNoRepositoryWidget extends ReactWidget {\n\n    static ID = 'scm-no-repository-widget';\n\n    constructor() {\n        super();\n        this.addClass('theia-scm-no-repository');\n        this.id = ScmNoRepositoryWidget.ID;\n    }\n\n    protected render(): React.ReactNode {\n        return <AlertMessage\n            type='WARNING'\n            header='No repository found'\n        />;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport {\n    createPreferenceProxy,\n    PreferenceProxy,\n    PreferenceService,\n    PreferenceSchema,\n    PreferenceContribution\n} from '@theia/core/lib/browser/preferences';\n\nexport const scmPreferenceSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        'scm.defaultViewMode': {\n            type: 'string',\n            enum: ['tree', 'list'],\n            enumDescriptions: [\n                'Show the repository changes as a tree.',\n                'Show the repository changes as a list.'\n            ],\n            description: 'Controls the default source control view mode.',\n            default: 'list'\n        }\n    }\n};\n\nexport interface ScmConfiguration {\n    'scm.defaultViewMode': 'tree' | 'list'\n}\n\nexport const ScmPreferences = Symbol('ScmPreferences');\nexport type ScmPreferences = PreferenceProxy<ScmConfiguration>;\n\nexport function createScmPreferences(preferences: PreferenceService): ScmPreferences {\n    return createPreferenceProxy(preferences, scmPreferenceSchema);\n}\n\nexport function bindScmPreferences(bind: interfaces.Bind): void {\n    bind(ScmPreferences).toDynamicValue((ctx: interfaces.Context) => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createScmPreferences(preferences);\n    }).inSingletonScope();\n\n    bind(PreferenceContribution).toConstantValue({ schema: scmPreferenceSchema });\n}\n\n","/********************************************************************************\n * Copyright (C) 2020 Arm and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { TreeModelImpl, TreeNode, TreeProps, CompositeTreeNode, SelectableTreeNode, ExpandableTreeNode } from '@theia/core/lib/browser/tree';\nimport URI from '@theia/core/lib/common/uri';\nimport { ScmResourceGroup, ScmResource, ScmResourceDecorations } from './scm-provider';\nimport { ScmRepository } from './scm-repository';\nimport { ScmProvider } from './scm-provider';\n\nexport const ScmTreeModelProps = Symbol('ScmTreeModelProps');\nexport interface ScmTreeModelProps {\n    defaultExpansion?: 'collapsed' | 'expanded';\n    nestingThreshold?: number;\n}\n\nexport interface ScmFileChangeRootNode extends CompositeTreeNode {\n    rootUri: string;\n    children: ScmFileChangeGroupNode[];\n}\n\nexport interface ScmFileChangeGroupNode extends ExpandableTreeNode {\n    groupId: string;\n    groupLabel: string;\n    children: (ScmFileChangeFolderNode | ScmFileChangeNode)[];\n}\n\nexport namespace ScmFileChangeGroupNode {\n    export function is(node: TreeNode): node is ScmFileChangeGroupNode {\n        return 'groupId' in node && 'children' in node\n            && !ScmFileChangeFolderNode.is(node);\n    }\n}\n\nexport interface ScmFileChangeFolderNode extends ExpandableTreeNode, SelectableTreeNode {\n    groupId: string;\n    path: string;\n    sourceUri: string;\n    children: (ScmFileChangeFolderNode | ScmFileChangeNode)[];\n}\n\nexport namespace ScmFileChangeFolderNode {\n    export function is(node: TreeNode): node is ScmFileChangeFolderNode {\n        return 'groupId' in node && 'sourceUri' in node && 'path' in node && 'children' in node;\n    }\n}\n\nexport interface ScmFileChangeNode extends SelectableTreeNode {\n    sourceUri: string;\n    decorations?: ScmResourceDecorations;\n}\n\nexport namespace ScmFileChangeNode {\n    export function is(node: TreeNode): node is ScmFileChangeNode {\n        return 'sourceUri' in node\n            && !ScmFileChangeFolderNode.is(node);\n    }\n    export function getGroupId(node: ScmFileChangeNode): string {\n        const parentNode = node.parent;\n        if (!(parentNode && (ScmFileChangeFolderNode.is(parentNode) || ScmFileChangeGroupNode.is(parentNode)))) {\n            throw new Error('bad node');\n        }\n        return parentNode.groupId;\n    }\n\n}\n\n@injectable()\nexport class ScmTreeModel extends TreeModelImpl {\n\n    private _languageId: string | undefined;\n\n    protected readonly toDisposeOnRepositoryChange = new DisposableCollection();\n\n    @inject(TreeProps) protected readonly props: ScmTreeModelProps;\n\n    get languageId(): string | undefined {\n        return this._languageId;\n    }\n\n    protected _viewMode: 'tree' | 'list' = 'list';\n    set viewMode(id: 'tree' | 'list') {\n        const oldSelection = this.selectedNodes;\n        this._viewMode = id;\n        if (this._provider) {\n            this.root = this.createTree();\n\n            for (const oldSelectedNode of oldSelection) {\n                const newNode = this.getNode(oldSelectedNode.id);\n                if (SelectableTreeNode.is(newNode)) {\n                    this.revealNode(newNode);  // this call can run asynchronously\n                }\n            }\n        }\n    }\n    get viewMode(): 'tree' | 'list' {\n        return this._viewMode;\n    }\n\n    protected _provider: ScmProvider | undefined;\n    set repository(repository: ScmRepository | undefined) {\n        this.toDisposeOnRepositoryChange.dispose();\n        if (repository) {\n            this._provider = repository.provider;\n            if (this._provider) {\n                this.toDisposeOnRepositoryChange.push(this._provider.onDidChange(() => {\n                    this.root = this.createTree();\n                }));\n            }\n        } else {\n            this._provider = undefined;\n        }\n        this.root = this.createTree();\n    }\n\n    protected createTree(): ScmFileChangeRootNode | undefined {\n        if (!this._provider) {\n            return;\n        }\n        const root = {\n            id: 'file-change-tree-root',\n            parent: undefined,\n            visible: false,\n            rootUri: this._provider.rootUri,\n            children: []\n        } as ScmFileChangeRootNode;\n\n        const { groups } = this._provider;\n        const groupNodes = groups\n            .filter(group => !!group.resources.length || !group.hideWhenEmpty)\n            .map(group => this.toGroupNode(group, root));\n        root.children = groupNodes;\n\n        return root;\n    }\n\n    protected toGroupNode(group: ScmResourceGroup, parent: CompositeTreeNode): ScmFileChangeGroupNode {\n        const groupNode: ScmFileChangeGroupNode = {\n            id: `${group.id}`,\n            groupId: group.id,\n            groupLabel: group.label,\n            parent,\n            children: [],\n            expanded: true,\n        };\n\n        const sortedResources = group.resources.sort((r1, r2) =>\n            r1.sourceUri.toString().localeCompare(r2.sourceUri.toString())\n        );\n\n        switch (this._viewMode) {\n            case 'list':\n                groupNode.children = sortedResources.map(resource => this.toFileChangeNode(resource, groupNode));\n                break;\n            case 'tree':\n                const rootUri = group.provider.rootUri;\n                if (rootUri) {\n                    const resourcePaths = sortedResources.map(resource => {\n                        const relativePath = new URI(rootUri).relative(resource.sourceUri);\n                        const pathParts = relativePath ? relativePath.toString().split('/') : [];\n                        return { resource, pathParts };\n                    });\n                    groupNode.children = this.buildFileChangeTree(resourcePaths, 0, sortedResources.length, 0, groupNode);\n                }\n                break;\n        }\n\n        return groupNode;\n    }\n\n    protected buildFileChangeTree(\n        sortedResources: { resource: ScmResource, pathParts: string[] }[],\n        start: number,\n        end: number,\n        level: number,\n        parent: (ScmFileChangeGroupNode | ScmFileChangeFolderNode)\n    ): (ScmFileChangeFolderNode | ScmFileChangeNode)[] {\n        const result: (ScmFileChangeFolderNode | ScmFileChangeNode)[] = [];\n\n        let folderStart = start;\n        while (folderStart < end) {\n            const firstFileChange = sortedResources[folderStart];\n            if (level === firstFileChange.pathParts.length - 1) {\n                result.push(this.toFileChangeNode(firstFileChange.resource, parent));\n                folderStart++;\n            } else {\n                let index = folderStart + 1;\n                while (index < end) {\n                    if (sortedResources[index].pathParts[level] !== firstFileChange.pathParts[level]) {\n                        break;\n                    }\n                    index++;\n                }\n                const folderEnd = index;\n\n                const nestingThreshold = this.props.nestingThreshold || 1;\n                if (folderEnd - folderStart < nestingThreshold) {\n                    // Inline these (i.e. do not create another level in the tree)\n                    for (let i = folderStart; i < folderEnd; i++) {\n                        result.push(this.toFileChangeNode(sortedResources[i].resource, parent));\n                    }\n                } else {\n                    const firstFileParts = firstFileChange.pathParts;\n                    const lastFileParts = sortedResources[folderEnd - 1].pathParts;\n                    // Multiple files with first folder.\n                    // See if more folder levels match and include those if so.\n                    let thisLevel = level + 1;\n                    while (thisLevel < firstFileParts.length - 1 && thisLevel < lastFileParts.length - 1 && firstFileParts[thisLevel] === lastFileParts[thisLevel]) {\n                        thisLevel++;\n                    }\n                    const nodeRelativePath = firstFileParts.slice(level, thisLevel).join('/');\n                    result.push(this.toFileChangeFolderNode(sortedResources, folderStart, folderEnd, thisLevel, nodeRelativePath, parent));\n                }\n                folderStart = folderEnd;\n            }\n        };\n        return result.sort(this.compareNodes);\n    }\n\n    protected compareNodes = (a: ScmFileChangeFolderNode | ScmFileChangeNode, b: ScmFileChangeFolderNode | ScmFileChangeNode) => this.doCompareNodes(a, b);\n    protected doCompareNodes(a: ScmFileChangeFolderNode | ScmFileChangeNode, b: ScmFileChangeFolderNode | ScmFileChangeNode): number {\n        const isFolderA = ScmFileChangeFolderNode.is(a);\n        const isFolderB = ScmFileChangeFolderNode.is(b);\n        if (isFolderA && !isFolderB) {\n            return -1;\n        }\n        if (isFolderB && !isFolderA) {\n            return 1;\n        }\n        return a.sourceUri.localeCompare(b.sourceUri);\n    }\n\n    protected toFileChangeFolderNode(\n        resources: { resource: ScmResource, pathParts: string[] }[],\n        start: number,\n        end: number,\n        level: number,\n        nodeRelativePath: string,\n        parent: (ScmFileChangeGroupNode | ScmFileChangeFolderNode)\n    ): ScmFileChangeFolderNode {\n        const rootUri = this.getRoot(parent).rootUri;\n        let parentPath: string = rootUri;\n        if (ScmFileChangeFolderNode.is(parent)) {\n            parentPath = parent.sourceUri;\n        }\n        const sourceUri = new URI(parentPath).resolve(nodeRelativePath);\n\n        const defaultExpansion = this.props.defaultExpansion ? (this.props.defaultExpansion === 'expanded') : true;\n        const id = `${parent.groupId}:${String(sourceUri)}`;\n        const oldNode = this.getNode(id);\n        const folderNode: ScmFileChangeFolderNode = {\n                id,\n                groupId: parent.groupId,\n                path: nodeRelativePath,\n                sourceUri: String(sourceUri),\n                children: [],\n                parent,\n                expanded: ExpandableTreeNode.is(oldNode) ? oldNode.expanded : defaultExpansion,\n                selected: SelectableTreeNode.is(oldNode) && oldNode.selected,\n        };\n        folderNode.children = this.buildFileChangeTree(resources, start, end, level, folderNode);\n        return folderNode;\n    }\n\n    protected getRoot(node: ScmFileChangeGroupNode | ScmFileChangeFolderNode): ScmFileChangeRootNode {\n        let parent = node.parent!;\n        while (ScmFileChangeGroupNode.is(parent) && ScmFileChangeFolderNode.is(parent)) {\n            parent = parent.parent!;\n        }\n        return parent as ScmFileChangeRootNode;\n    }\n\n    protected toFileChangeNode(resource: ScmResource, parent: CompositeTreeNode): ScmFileChangeNode {\n        const id = `${resource.group.id}:${String(resource.sourceUri)}`;\n        const oldNode = this.getNode(id);\n        const node = {\n            id,\n            sourceUri: String(resource.sourceUri),\n            decorations: resource.decorations,\n            parent,\n            selected: SelectableTreeNode.is(oldNode) && oldNode.selected,\n        };\n        if (node.selected) {\n            this.selectionService.addSelection(node);\n        }\n        return node;\n    }\n\n    protected async revealNode(node: TreeNode): Promise<void> {\n        if (ScmFileChangeFolderNode.is(node) || ScmFileChangeNode.is(node)) {\n            const parentNode = node.parent;\n            if (ExpandableTreeNode.is(parentNode)) {\n            await this.revealNode(parentNode);\n                if (!parentNode.expanded) {\n                    await this.expandNode(parentNode);\n                }\n            }\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    storeState(): any {\n        return {\n            ...super.storeState(),\n            mode: this.viewMode,\n        };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    restoreState(oldState: any): void {\n        super.restoreState(oldState);\n        this.viewMode = oldState.mode === 'tree' ? 'tree' : 'list';\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2020 Arm and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable no-null/no-null, @typescript-eslint/no-explicit-any */\n\nimport * as React from 'react';\nimport { injectable, inject } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { isOSX } from '@theia/core/lib/common/os';\nimport { DisposableCollection, Disposable } from '@theia/core/lib/common/disposable';\nimport { Message } from '@phosphor/messaging';\nimport { TreeWidget, TreeNode, SelectableTreeNode, TreeProps, NodeProps, TREE_NODE_SEGMENT_CLASS, TREE_NODE_SEGMENT_GROW_CLASS } from '@theia/core/lib/browser/tree';\nimport { ScmTreeModel } from './scm-tree-model';\nimport { MenuModelRegistry, ActionMenuNode, CompositeMenuNode, MenuPath } from '@theia/core/lib/common/menu';\nimport { ScmResourceGroup, ScmResource, ScmResourceDecorations } from './scm-provider';\nimport { ScmService } from './scm-service';\nimport { CommandRegistry } from '@theia/core/lib/common/command';\nimport { ScmRepository } from './scm-repository';\nimport { ContextMenuRenderer, LabelProvider, CorePreferences, DiffUris } from '@theia/core/lib/browser';\nimport { ScmContextKeyService } from './scm-context-key-service';\nimport { EditorWidget } from '@theia/editor/lib/browser';\nimport { EditorManager, DiffNavigatorProvider } from '@theia/editor/lib/browser';\nimport { FileStat } from '@theia/filesystem/lib/common';\nimport { IconThemeService } from '@theia/core/lib/browser/icon-theme-service';\nimport { ScmFileChangeGroupNode, ScmFileChangeFolderNode, ScmFileChangeNode } from './scm-tree-model';\n\n@injectable()\nexport class ScmTreeWidget extends TreeWidget {\n\n    static ID = 'scm-resource-widget';\n\n    static RESOURCE_GROUP_CONTEXT_MENU = ['RESOURCE_GROUP_CONTEXT_MENU'];\n    static RESOURCE_GROUP_INLINE_MENU = ['RESOURCE_GROUP_INLINE_MENU'];\n\n    static RESOURCE_FOLDER_CONTEXT_MENU = ['RESOURCE_FOLDER_CONTEXT_MENU'];\n    static RESOURCE_FOLDER_INLINE_MENU = ['RESOURCE_FOLDER_INLINE_MENU'];\n\n    static RESOURCE_INLINE_MENU = ['RESOURCE_INLINE_MENU'];\n    static RESOURCE_CONTEXT_MENU = ['RESOURCE_CONTEXT_MENU'];\n\n    @inject(MenuModelRegistry) protected readonly menus: MenuModelRegistry;\n    @inject(CommandRegistry) protected readonly commands: CommandRegistry;\n    @inject(CorePreferences) protected readonly corePreferences: CorePreferences;\n    @inject(ScmContextKeyService) protected readonly contextKeys: ScmContextKeyService;\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n    @inject(DiffNavigatorProvider) protected readonly diffNavigatorProvider: DiffNavigatorProvider;\n    @inject(IconThemeService) protected readonly iconThemeService: IconThemeService;\n\n    constructor(\n        @inject(TreeProps) readonly props: TreeProps,\n        @inject(ScmTreeModel) readonly model: ScmTreeModel,\n        @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer,\n        @inject(ScmService) protected readonly scmService: ScmService,\n    ) {\n        super(props, model, contextMenuRenderer);\n        this.id = ScmTreeWidget.ID;\n        this.addClass('groups-outer-container');\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        this.refreshOnRepositoryChange();\n        this.toDisposeOnDetach.push(this.scmService.onDidChangeSelectedRepository(() => {\n            this.refreshOnRepositoryChange();\n            this.forceUpdate();\n        }));\n    }\n\n    set viewMode(id: 'tree' | 'list') {\n        this.model.viewMode = id;\n    }\n    get viewMode(): 'tree' | 'list' {\n        return this.model.viewMode;\n    }\n\n    protected refreshOnRepositoryChange(): void {\n        const repository = this.scmService.selectedRepository;\n        this.model.repository = repository;\n        if (repository) {\n            this.contextKeys.scmProvider.set(repository.provider.id);\n        } else {\n            this.contextKeys.scmProvider.reset();\n        }\n    }\n\n    /**\n     * Render the node given the tree node and node properties.\n     * @param node the tree node.\n     * @param props the node properties.\n     */\n    protected renderNode(node: TreeNode, props: NodeProps): React.ReactNode {\n        const repository = this.scmService.selectedRepository;\n        if (!repository) {\n            return undefined;\n        }\n\n        if (!TreeNode.isVisible(node)) {\n            return undefined;\n        }\n\n        const attributes = this.createNodeAttributes(node, props);\n\n        if (ScmFileChangeGroupNode.is(node)) {\n            const content = <ScmResourceGroupElement\n                key={`${node.groupId}`}\n                repository={repository}\n                groupId={node.groupId}\n                groupLabel={node.groupLabel}\n                renderExpansionToggle={() => this.renderExpansionToggle(node, props)}\n                contextMenuRenderer={this.contextMenuRenderer}\n                commands={this.commands}\n                menus={this.menus}\n                contextKeys={this.contextKeys}\n                labelProvider={this.labelProvider}\n                corePreferences={this.corePreferences} />;\n\n            return React.createElement('div', attributes, content);\n\n        }\n        if (ScmFileChangeFolderNode.is(node)) {\n            const content = <ScmResourceFolderElement\n                key={String(node.sourceUri)}\n                repository={repository}\n                groupId={node.groupId}\n                path={node.path}\n                node={node}\n                sourceUri={node.sourceUri}\n                renderExpansionToggle={() => this.renderExpansionToggle(node, props)}\n                contextMenuRenderer={this.contextMenuRenderer}\n                model={this.model}\n                commands={this.commands}\n                menus={this.menus}\n                contextKeys={this.contextKeys}\n                labelProvider={this.labelProvider}\n                corePreferences={this.corePreferences} />;\n\n            return React.createElement('div', attributes, content);\n        }\n        if (ScmFileChangeNode.is(node)) {\n            const groupId = ScmFileChangeNode.getGroupId(node);\n            const name = this.labelProvider.getName(new URI(node.sourceUri));\n            const parentPath =\n                (node.parent && ScmFileChangeFolderNode.is(node.parent))\n                    ? new URI(node.parent.sourceUri) : new URI(repository.provider.rootUri);\n\n            const content = <ScmResourceComponent\n                key={node.sourceUri}\n                repository={repository}\n                contextMenuRenderer={this.contextMenuRenderer}\n                model={this.model}\n                commands={this.commands}\n                menus={this.menus}\n                contextKeys={this.contextKeys}\n                labelProvider={this.labelProvider}\n                corePreferences={this.corePreferences}\n                {...{\n                    ...this.props,\n                    name,\n                    parentPath,\n                    groupId,\n                    sourceUri: node.sourceUri,\n                    decorations: node.decorations,\n                    renderExpansionToggle: () => this.renderExpansionToggle(node, props),\n                }}\n            />;\n            return React.createElement('div', attributes, content);\n        }\n        return super.renderNode(node, props);\n    }\n\n    protected createContainerAttributes(): React.HTMLAttributes<HTMLElement> {\n        const repository = this.scmService.selectedRepository;\n        if (repository) {\n            return {\n                ...super.createContainerAttributes(),\n                tabIndex: 0\n            };\n        }\n        return super.createContainerAttributes();\n    }\n\n    /**\n     * The ARROW_LEFT key controls both the movement around the file tree and also\n     * the movement through the change chunks within a file.\n     *\n     * If the selected tree node is a folder then the ARROW_LEFT key behaves exactly\n     * as it does in explorer.  It collapses the tree node if the folder is expanded and\n     * it moves the selection up to the parent folder if the folder is collapsed (no-op if no parent folder, as\n     * group headers are not selectable).  This behavior is the default behavior implemented\n     * in the TreeWidget super class.\n     *\n     * If the selected tree node is a file then the ARROW_LEFT key moves up through the\n     * change chunks within each file.  If the selected chunk is the first chunk in the file\n     * then the file selection is moved to the previous file (no-op if no previous file).\n     *\n     * Note that when cursoring through change chunks, the ARROW_LEFT key cannot be used to\n     * move up through the parent folders of the file tree.  If users want to do this, using\n     * keys only, then they must press ARROW_UP repeatedly until the selected node is the folder\n     * node and then press ARROW_LEFT.\n     */\n    protected async handleLeft(event: KeyboardEvent): Promise<void> {\n        const repository = this.scmService.selectedRepository;\n        if (!repository) {\n            return;\n        }\n        if (this.model.selectedNodes.length === 1) {\n            const selectedNode = this.model.selectedNodes[0];\n            if (ScmFileChangeNode.is(selectedNode)) {\n                const selectedResource = this.getResourceFromNode(selectedNode);\n                if (!selectedResource) {\n                    return super.handleLeft(event);\n                }\n                const widget = await this.openResource(selectedResource);\n\n                if (widget) {\n                    const diffNavigator = this.diffNavigatorProvider(widget.editor);\n                    if (diffNavigator.canNavigate() && diffNavigator.hasPrevious()) {\n                        diffNavigator.previous();\n                    } else {\n                        const previousNode = this.moveToPreviousFileNode();\n                        if (previousNode) {\n                            const previousResource = this.getResourceFromNode(previousNode);\n                            if (previousResource) {\n                                this.openResource(previousResource);\n                            }\n                        }\n                    }\n                    return;\n                }\n            }\n        }\n        return super.handleLeft(event);\n    }\n\n    /**\n     * The ARROW_RIGHT key controls both the movement around the file tree and also\n     * the movement through the change chunks within a file.\n     *\n     * If the selected tree node is a folder then the ARROW_RIGHT key behaves exactly\n     * as it does in explorer.  It expands the tree node if the folder is collapsed and\n     * it moves the selection to the first child node if the folder is expanded.\n     * This behavior is the default behavior implemented\n     * in the TreeWidget super class.\n     *\n     * If the selected tree node is a file then the ARROW_RIGHT key moves down through the\n     * change chunks within each file.  If the selected chunk is the last chunk in the file\n     * then the file selection is moved to the next file (no-op if no next file).\n     */\n    protected async handleRight(event: KeyboardEvent): Promise<void> {\n        const repository = this.scmService.selectedRepository;\n        if (!repository) {\n            return;\n        }\n        if (this.model.selectedNodes.length === 1) {\n            const selectedNode = this.model.selectedNodes[0];\n            if (ScmFileChangeNode.is(selectedNode)) {\n                const selectedResource = this.getResourceFromNode(selectedNode);\n                if (!selectedResource) {\n                    return super.handleRight(event);\n                }\n                const widget = await this.openResource(selectedResource);\n\n                if (widget) {\n                    const diffNavigator = this.diffNavigatorProvider(widget.editor);\n                    if (diffNavigator.canNavigate() && diffNavigator.hasNext()) {\n                        diffNavigator.next();\n                    } else {\n                        const nextNode = this.moveToNextFileNode();\n                        if (nextNode) {\n                            const nextResource = this.getResourceFromNode(nextNode);\n                            if (nextResource) {\n                                this.openResource(nextResource);\n                            }\n                        }\n                    }\n                }\n                return;\n            }\n        }\n        return super.handleRight(event);\n    }\n\n    protected handleEnter(event: KeyboardEvent): void {\n        if (this.model.selectedNodes.length === 1) {\n            const selectedNode = this.model.selectedNodes[0];\n            if (ScmFileChangeNode.is(selectedNode)) {\n                const selectedResource = this.getResourceFromNode(selectedNode);\n                if (selectedResource) {\n                    this.openResource(selectedResource);\n                }\n                return;\n            }\n        }\n        super.handleEnter(event);\n    }\n\n    protected getResourceFromNode(node: ScmFileChangeNode): ScmResource | undefined {\n        const repository = this.scmService.selectedRepository;\n        if (!repository) {\n            return;\n        }\n        const groupId = ScmFileChangeNode.getGroupId(node);\n        const group = repository.provider.groups.find(g => g.id === groupId)!;\n        return group.resources.find(r => String(r.sourceUri) === node.sourceUri)!;\n    }\n\n    protected moveToPreviousFileNode(): ScmFileChangeNode | undefined {\n        let previousNode = this.model.getPrevSelectableNode();\n        while (previousNode) {\n            if (ScmFileChangeNode.is(previousNode)) {\n                this.model.selectNode(previousNode);\n                return previousNode;\n            }\n            this.model.selectNode(previousNode);\n            previousNode = this.model.getPrevSelectableNode();\n        };\n    }\n\n    protected moveToNextFileNode(): ScmFileChangeNode | undefined {\n        let nextNode = this.model.getNextSelectableNode();\n        while (nextNode) {\n            if (ScmFileChangeNode.is(nextNode)) {\n                this.model.selectNode(nextNode);\n                return nextNode;\n            }\n            this.model.selectNode(nextNode);\n            nextNode = this.model.getNextSelectableNode();\n        };\n    }\n\n    protected async openResource(resource: ScmResource): Promise<EditorWidget | undefined> {\n        try {\n            await resource.open();\n        } catch (e) {\n            console.error('Failed to open a SCM resource', e);\n            return undefined;\n        }\n\n        let standaloneEditor: EditorWidget | undefined;\n        const resourcePath = resource.sourceUri.path.toString();\n        for (const widget of this.editorManager.all) {\n            const resourceUri = widget.getResourceUri();\n            const editorResourcePath = resourceUri && resourceUri.path.toString();\n            if (resourcePath === editorResourcePath) {\n                if (widget.editor.uri.scheme === DiffUris.DIFF_SCHEME) {\n                    // prefer diff editor\n                    return widget;\n                } else {\n                    standaloneEditor = widget;\n                }\n            }\n            if (widget.editor.uri.scheme === DiffUris.DIFF_SCHEME\n                && String(widget.getResourceUri()) === resource.sourceUri.toString()) {\n                return widget;\n            }\n        }\n        // fallback to standalone editor\n        return standaloneEditor;\n    }\n\n    protected getPaddingLeft(node: TreeNode, props: NodeProps): number {\n        if (this.viewMode === 'list') {\n            if (props.depth === 1) {\n                return this.props.expansionTogglePadding;\n            }\n        }\n        return super.getPaddingLeft(node, props);\n    }\n\n    protected needsExpansionTogglePadding(node: TreeNode): boolean {\n        const theme = this.iconThemeService.getDefinition(this.iconThemeService.current);\n        if (theme && (theme.hidesExplorerArrows || (theme.hasFileIcons && !theme.hasFolderIcons))) {\n            return false;\n        }\n        return super.needsExpansionTogglePadding(node);\n    }\n\n}\n\nexport namespace ScmTreeWidget {\n    export namespace Styles {\n        export const NO_SELECT = 'no-select';\n    }\n\n    // This is an 'abstract' base interface for all the element component props.\n    export interface Props {\n        repository: ScmRepository;\n        commands: CommandRegistry;\n        menus: MenuModelRegistry;\n        contextKeys: ScmContextKeyService;\n        labelProvider: LabelProvider;\n        contextMenuRenderer: ContextMenuRenderer;\n        corePreferences?: CorePreferences;\n    }\n}\n\nexport abstract class ScmElement<P extends ScmElement.Props = ScmElement.Props> extends React.Component<P, ScmElement.State> {\n\n    constructor(props: P) {\n        super(props);\n        this.state = {\n            hover: false\n        };\n\n        const setState = this.setState.bind(this);\n        this.setState = newState => {\n            if (!this.toDisposeOnUnmount.disposed) {\n                setState(newState);\n            }\n        };\n    }\n\n    protected readonly toDisposeOnUnmount = new DisposableCollection();\n    componentDidMount(): void {\n        this.toDisposeOnUnmount.push(Disposable.create(() => { /* mark as mounted */ }));\n    }\n    componentWillUnmount(): void {\n        this.toDisposeOnUnmount.dispose();\n    }\n\n    protected detectHover = (element: HTMLElement | null) => {\n        if (element) {\n            window.requestAnimationFrame(() => {\n                const hover = element.matches(':hover');\n                this.setState({ hover });\n            });\n        }\n    };\n    protected showHover = () => this.setState({ hover: true });\n    protected hideHover = () => this.setState({ hover: false });\n\n    protected renderContextMenu = (event: React.MouseEvent<HTMLElement>) => {\n        event.preventDefault();\n        const { groupId, contextKeys, contextMenuRenderer } = this.props;\n        const currentScmResourceGroup = contextKeys.scmResourceGroup.get();\n        contextKeys.scmResourceGroup.set(groupId);\n        try {\n            contextMenuRenderer.render({\n                menuPath: this.contextMenuPath,\n                anchor: event.nativeEvent,\n                args: this.contextMenuArgs\n            });\n        } finally {\n            contextKeys.scmResourceGroup.set(currentScmResourceGroup);\n        }\n    };\n\n    protected getSelectionArgs(selectedNodes: Readonly<SelectableTreeNode[]>): ScmResource[] {\n        const resources: ScmResource[] = [];\n        for (const node of selectedNodes) {\n            if (ScmFileChangeNode.is(node)) {\n                const groupId = ScmFileChangeNode.getGroupId(node);\n                const group = this.findGroup(this.props.repository, groupId);\n                if (group) {\n                    const selectedResource = group.resources.find(r => String(r.sourceUri) === node.sourceUri);\n                    if (selectedResource) {\n                        resources.push(selectedResource);\n                    }\n                }\n            }\n            if (ScmFileChangeFolderNode.is(node)) {\n                const group = this.findGroup(this.props.repository, node.groupId);\n                if (group) {\n                    this.collectResources(resources, node, group);\n                }\n            }\n        }\n        // Remove duplicates which may occur if user selected folder and nested folder\n        return resources.filter((item1, index) => resources.findIndex(item2 => item1.sourceUri === item2.sourceUri) === index);\n    }\n\n    protected collectResources(resources: ScmResource[], node: TreeNode, group: ScmResourceGroup): void {\n        if (ScmFileChangeFolderNode.is(node)) {\n            for (const child of node.children) {\n                this.collectResources(resources, child, group);\n            }\n        } else if (ScmFileChangeNode.is(node)) {\n            const resource = group.resources.find(r => String(r.sourceUri) === node.sourceUri)!;\n            resources.push(resource);\n        }\n    }\n\n    /*\n     * Normally the group would always be expected to be found.  However if the tree is restored\n     * in restoreState then the tree may be rendered before the groups have been created\n     * in the provider.  The provider's groups property will be empty in such a situation.\n     * We want to render the tree (as that is the point of restoreState, we can render\n     * the tree in the saved state before the provider has provided status).  We therefore must\n     * be prepared to render the tree without having the ScmResourceGroup or ScmResource\n     * objects.\n     */\n    protected findGroup(repository: ScmRepository, groupId: string): ScmResourceGroup | undefined {\n        return repository.provider.groups.find(g => g.id === groupId);\n    }\n\n    protected abstract get contextMenuPath(): MenuPath;\n    protected abstract get contextMenuArgs(): any[];\n\n}\nexport namespace ScmElement {\n    export interface Props extends ScmTreeWidget.Props {\n        groupId: string\n        renderExpansionToggle: () => React.ReactNode\n    }\n    export interface State {\n        hover: boolean\n    }\n}\n\nexport class ScmResourceComponent extends ScmElement<ScmResourceComponent.Props> {\n\n    render(): JSX.Element | undefined {\n        const { hover } = this.state;\n        const { name, groupId, parentPath, sourceUri, decorations, labelProvider, commands, menus, contextKeys } = this.props;\n        const resourceUri = new URI(sourceUri);\n\n        const icon = labelProvider.getIcon(resourceUri);\n        const color = decorations && decorations.color || '';\n        const letter = decorations && decorations.letter || '';\n        const tooltip = decorations && decorations.tooltip || '';\n        const relativePath = parentPath.relative(resourceUri.parent);\n        const path = relativePath ? relativePath.toString() : labelProvider.getLongName(resourceUri.parent);\n        return <div key={sourceUri}\n            className={`scmItem ${TREE_NODE_SEGMENT_CLASS} ${TREE_NODE_SEGMENT_GROW_CLASS}`}\n            onContextMenu={this.renderContextMenu}\n            onMouseEnter={this.showHover}\n            onMouseLeave={this.hideHover}\n            ref={this.detectHover}\n            onClick={this.handleClick}\n            onDoubleClick={this.handleDoubleClick} >\n            <span className={icon + ' file-icon'} />\n            {this.props.renderExpansionToggle()}\n            <div className={`noWrapInfo ${TREE_NODE_SEGMENT_GROW_CLASS}`} >\n                <span className='name'>{name}</span>\n                <span className='path'>{path}</span>\n            </div>\n            <ScmInlineActions {...{\n                hover,\n                menu: menus.getMenu(ScmTreeWidget.RESOURCE_INLINE_MENU),\n                args: this.contextMenuArgs,\n                commands,\n                contextKeys,\n                groupId\n            }}>\n                <div title={tooltip} className='status' style={{ color }}>\n                    {letter}\n                </div>\n            </ScmInlineActions>\n        </div >;\n    }\n\n    protected open = () => {\n        const group = this.findGroup(this.props.repository, this.props.groupId);\n        if (group) {\n            const selectedResource = group.resources.find(r => String(r.sourceUri) === this.props.sourceUri)!;\n            selectedResource.open();\n        }\n    };\n\n    protected readonly contextMenuPath = ScmTreeWidget.RESOURCE_CONTEXT_MENU;\n    protected get contextMenuArgs(): any[] {\n        if (!this.props.model.selectedNodes.some(node => ScmFileChangeNode.is(node) && node.sourceUri === this.props.sourceUri)) {\n            // Clicked node is not in selection, so ignore selection and action on just clicked node\n            return this.singleNodeArgs;\n        } else {\n            return this.getSelectionArgs(this.props.model.selectedNodes);\n        }\n    }\n    protected get singleNodeArgs(): any[] {\n        const group = this.findGroup(this.props.repository, this.props.groupId);\n        if (group) {\n            const selectedResource = group.resources.find(r => String(r.sourceUri) === this.props.sourceUri)!;\n            return [selectedResource];\n        } else {\n            // Repository status not yet available. Empty args disables the action.\n            return [];\n        }\n    }\n\n    protected hasCtrlCmdOrShiftMask(event: TreeWidget.ModifierAwareEvent): boolean {\n        const { metaKey, ctrlKey, shiftKey } = event;\n        return (isOSX && metaKey) || ctrlKey || shiftKey;\n    }\n\n    /**\n     * Handle the single clicking of nodes present in the widget.\n     */\n    protected handleClick = (event: React.MouseEvent) => {\n        if (!this.hasCtrlCmdOrShiftMask(event)) {\n            // Determine the behavior based on the preference value.\n            const isSingle = this.props.corePreferences && this.props.corePreferences['workbench.list.openMode'] === 'singleClick';\n            if (isSingle) {\n                this.open();\n            }\n        }\n    };\n\n    /**\n     * Handle the double clicking of nodes present in the widget.\n     */\n    protected handleDoubleClick = () => {\n        // Determine the behavior based on the preference value.\n        const isDouble = this.props.corePreferences && this.props.corePreferences['workbench.list.openMode'] === 'doubleClick';\n        // Nodes should only be opened through double clicking if the correct preference is set.\n        if (isDouble) {\n            this.open();\n        }\n    };\n}\nexport namespace ScmResourceComponent {\n    export interface Props extends ScmElement.Props {\n        name: string;\n        parentPath: URI;\n        sourceUri: string;\n        decorations?: ScmResourceDecorations;\n        model: ScmTreeModel;\n    }\n}\n\nexport class ScmResourceGroupElement extends ScmElement<ScmResourceGroupComponent.Props> {\n\n    render(): JSX.Element {\n        const { hover } = this.state;\n        const { groupId, groupLabel, menus, commands, contextKeys } = this.props;\n        return <div className={`theia-header scm-theia-header ${TREE_NODE_SEGMENT_GROW_CLASS}`}\n            onContextMenu={this.renderContextMenu}\n            onMouseEnter={this.showHover}\n            onMouseLeave={this.hideHover}\n            ref={this.detectHover}>\n            {this.props.renderExpansionToggle()}\n            <div className={`noWrapInfo ${TREE_NODE_SEGMENT_GROW_CLASS}`}>{groupLabel}</div>\n            <ScmInlineActions {...{\n                hover,\n                args: this.contextMenuArgs,\n                menu: menus.getMenu(ScmTreeWidget.RESOURCE_GROUP_INLINE_MENU),\n                commands,\n                contextKeys,\n                groupId\n            }}>\n                {this.renderChangeCount()}\n            </ScmInlineActions>\n        </div>;\n    }\n\n    protected renderChangeCount(): React.ReactNode {\n        const group = this.findGroup(this.props.repository, this.props.groupId);\n        return <div className='notification-count-container scm-change-count'>\n            <span className='notification-count'>{group ? group.resources.length : 0}</span>\n        </div>;\n    }\n\n    protected readonly contextMenuPath = ScmTreeWidget.RESOURCE_GROUP_CONTEXT_MENU;\n    protected get contextMenuArgs(): any[] {\n        const group = this.findGroup(this.props.repository, this.props.groupId);\n        if (group) {\n            return [group];\n        } else {\n            // Repository status not yet available. Empty args disables the action.\n            return [];\n        }\n    }\n}\nexport namespace ScmResourceGroupComponent {\n    export interface Props extends ScmElement.Props {\n        groupLabel: string;\n    }\n}\n\nexport class ScmResourceFolderElement extends ScmElement<ScmResourceFolderElement.Props> {\n\n    render(): JSX.Element {\n        const { hover } = this.state;\n        const { groupId, sourceUri, path, labelProvider, commands, menus, contextKeys } = this.props;\n        const sourceFileStat: FileStat = { uri: sourceUri, isDirectory: true, lastModification: 0 };\n        const icon = labelProvider.getIcon(sourceFileStat);\n\n        return <div key={sourceUri}\n            className={`scmItem  ${TREE_NODE_SEGMENT_CLASS} ${TREE_NODE_SEGMENT_GROW_CLASS} ${ScmTreeWidget.Styles.NO_SELECT}`}\n            onContextMenu={this.renderContextMenu}\n            onMouseEnter={this.showHover}\n            onMouseLeave={this.hideHover}\n            ref={this.detectHover}\n        >\n            {this.props.renderExpansionToggle()}\n            <span className={icon + ' file-icon'} />\n            <div className={`noWrapInfo ${TREE_NODE_SEGMENT_GROW_CLASS}`} >\n                <span className='name'>{path}</span>\n            </div>\n            <ScmInlineActions {...{\n                hover,\n                menu: menus.getMenu(ScmTreeWidget.RESOURCE_FOLDER_INLINE_MENU),\n                args: this.contextMenuArgs,\n                commands,\n                contextKeys,\n                groupId\n            }}>\n            </ScmInlineActions>\n        </div >;\n\n    }\n\n    protected readonly contextMenuPath = ScmTreeWidget.RESOURCE_FOLDER_CONTEXT_MENU;\n    protected get contextMenuArgs(): any[] {\n        if (!this.props.model.selectedNodes.some(node => ScmFileChangeFolderNode.is(node) && node.sourceUri === this.props.sourceUri)) {\n            // Clicked node is not in selection, so ignore selection and action on just clicked node\n            return this.singleNodeArgs;\n        } else {\n            return this.getSelectionArgs(this.props.model.selectedNodes);\n        }\n    }\n    protected get singleNodeArgs(): any[] {\n        const resources: ScmResource[] = [];\n        const group = this.findGroup(this.props.repository, this.props.groupId);\n        if (group) {\n            this.collectResources(resources, this.props.node, group);\n        }\n        return resources;\n    }\n\n}\n\nexport namespace ScmResourceFolderElement {\n    export interface Props extends ScmElement.Props {\n        node: ScmFileChangeFolderNode;\n        sourceUri: string;\n        path: string;\n        model: ScmTreeModel;\n    }\n}\n\nexport class ScmInlineActions extends React.Component<ScmInlineActions.Props> {\n    render(): React.ReactNode {\n        const { hover, menu, args, commands, groupId, contextKeys, children } = this.props;\n        return <div className='theia-scm-inline-actions-container'>\n            <div className='theia-scm-inline-actions'>\n                {hover && menu.children\n                    .map((node, index) => node instanceof ActionMenuNode && <ScmInlineAction key={index} {...{ node, args, commands, groupId, contextKeys }} />)}\n            </div>\n            {children}\n        </div>;\n    }\n}\nexport namespace ScmInlineActions {\n    export interface Props {\n        hover: boolean;\n        menu: CompositeMenuNode;\n        commands: CommandRegistry;\n        groupId: string;\n        contextKeys: ScmContextKeyService;\n        args: any[];\n        children?: React.ReactNode;\n    }\n}\n\nexport class ScmInlineAction extends React.Component<ScmInlineAction.Props> {\n    render(): React.ReactNode {\n        const { node, args, commands, groupId, contextKeys } = this.props;\n        const currentScmResourceGroup = contextKeys.scmResourceGroup.get();\n        contextKeys.scmResourceGroup.set(groupId);\n        try {\n            if (!commands.isVisible(node.action.commandId, ...args) || !contextKeys.match(node.action.when)) {\n                return false;\n            }\n            return <div className='theia-scm-inline-action'>\n                <a className={node.icon} title={node.label} onClick={this.execute} />\n            </div>;\n        } finally {\n            contextKeys.scmResourceGroup.set(currentScmResourceGroup);\n        }\n    }\n\n    protected execute = (event: React.MouseEvent) => {\n        event.stopPropagation();\n\n        const { commands, node, args } = this.props;\n        commands.executeCommand(node.action.commandId, ...args);\n    };\n}\nexport namespace ScmInlineAction {\n    export interface Props {\n        node: ActionMenuNode;\n        commands: CommandRegistry;\n        groupId: string;\n        contextKeys: ScmContextKeyService;\n        args: any[];\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable no-null/no-null, @typescript-eslint/no-explicit-any */\n\nimport { Message } from '@phosphor/messaging';\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport {\n    BaseWidget, Widget, StatefulWidget, Panel, PanelLayout, MessageLoop, PreferenceChangeEvent\n} from '@theia/core/lib/browser';\nimport { ScmCommitWidget } from './scm-commit-widget';\nimport { ScmAmendWidget } from './scm-amend-widget';\nimport { ScmNoRepositoryWidget } from './scm-no-repository-widget';\nimport { ScmService } from './scm-service';\nimport { ScmTreeWidget } from './scm-tree-widget';\nimport { ScmPreferences, ScmConfiguration } from './scm-preferences';\n\n@injectable()\nexport class ScmWidget extends BaseWidget implements StatefulWidget {\n\n    protected panel: Panel;\n\n    static ID = 'scm-view';\n\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(ScmCommitWidget) protected readonly commitWidget: ScmCommitWidget;\n    @inject(ScmTreeWidget) protected readonly resourceWidget: ScmTreeWidget;\n    @inject(ScmAmendWidget) protected readonly amendWidget: ScmAmendWidget;\n    @inject(ScmNoRepositoryWidget) protected readonly noRepositoryWidget: ScmNoRepositoryWidget;\n    @inject(ScmPreferences) protected readonly scmPreferences: ScmPreferences;\n\n    set viewMode(mode: 'tree' | 'list') {\n        this.resourceWidget.viewMode = mode;\n    }\n    get viewMode(): 'tree' | 'list' {\n        return this.resourceWidget.viewMode;\n    }\n\n    constructor() {\n        super();\n        this.node.tabIndex = 0;\n        this.id = ScmWidget.ID;\n        this.addClass('theia-scm');\n        this.addClass('theia-scm-main-container');\n    }\n\n    @postConstruct()\n    protected init(): void {\n        const layout = new PanelLayout();\n        this.layout = layout;\n        this.panel = new Panel({\n            layout: new PanelLayout({\n            })\n        });\n        this.panel.node.tabIndex = -1;\n        this.panel.node.setAttribute('class', 'theia-scm-panel');\n        layout.addWidget(this.panel);\n\n        this.containerLayout.addWidget(this.commitWidget);\n        this.containerLayout.addWidget(this.resourceWidget);\n        this.containerLayout.addWidget(this.amendWidget);\n        this.containerLayout.addWidget(this.noRepositoryWidget);\n\n        this.refresh();\n        this.toDispose.push(this.scmService.onDidChangeSelectedRepository(() => this.refresh()));\n        this.updateViewMode(this.scmPreferences.get('scm.defaultViewMode'));\n        this.toDispose.push(this.scmPreferences.onPreferenceChanged((e: PreferenceChangeEvent<ScmConfiguration>) => {\n            if (e.preferenceName === 'scm.defaultViewMode') {\n                this.updateViewMode(e.newValue!);\n            }\n        }));\n\n    }\n\n    get containerLayout(): PanelLayout {\n        return this.panel.layout as PanelLayout;\n    }\n\n    /**\n     * Updates the view mode based on the preference value.\n     * @param preference the view mode preference.\n     */\n    protected updateViewMode(preference: 'tree' | 'list'): void {\n        this.viewMode = preference;\n    }\n\n    protected readonly toDisposeOnRefresh = new DisposableCollection();\n    protected refresh(): void {\n        this.toDisposeOnRefresh.dispose();\n        this.toDispose.push(this.toDisposeOnRefresh);\n        const repository = this.scmService.selectedRepository;\n        this.title.label = repository ? repository.provider.label : 'no repository found';\n        this.title.caption = this.title.label;\n        this.update();\n        if (repository) {\n            this.toDisposeOnRefresh.push(repository.onDidChange(() => this.update()));\n            // render synchronously to avoid cursor jumping\n            // see https://stackoverflow.com/questions/28922275/in-reactjs-why-does-setstate-behave-differently-when-called-synchronously/28922465#28922465\n            this.toDisposeOnRefresh.push(repository.input.onDidChange(() => this.updateImmediately()));\n            this.toDisposeOnRefresh.push(repository.input.onDidFocus(() => this.focusInput()));\n\n            this.commitWidget.show();\n            this.resourceWidget.show();\n            this.amendWidget.show();\n            this.noRepositoryWidget.hide();\n        } else {\n            this.commitWidget.hide();\n            this.resourceWidget.hide();\n            this.amendWidget.hide();\n            this.noRepositoryWidget.show();\n        }\n    }\n\n    protected updateImmediately(): void {\n        this.onUpdateRequest(Widget.Msg.UpdateRequest);\n    }\n\n    protected onUpdateRequest(msg: Message): void {\n        MessageLoop.sendMessage(this.commitWidget, msg);\n        MessageLoop.sendMessage(this.resourceWidget, msg);\n        MessageLoop.sendMessage(this.amendWidget, msg);\n        MessageLoop.sendMessage(this.noRepositoryWidget, msg);\n        super.onUpdateRequest(msg);\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        this.node.appendChild(this.commitWidget.node);\n        this.node.appendChild(this.resourceWidget.node);\n        this.node.appendChild(this.amendWidget.node);\n        this.node.appendChild(this.noRepositoryWidget.node);\n\n        super.onAfterAttach(msg);\n        this.update();\n    }\n\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.refresh();\n        this.commitWidget.focus();\n    }\n\n    protected focusInput(): void {\n        this.commitWidget.focus();\n    }\n\n    storeState(): any {\n        const state: object = {\n            commitState: this.commitWidget.storeState(),\n            changesTreeState: this.resourceWidget.storeState(),\n        };\n        return state;\n    }\n\n    restoreState(oldState: any): void {\n        const { commitState, changesTreeState } = oldState;\n        this.commitWidget.restoreState(commitState);\n        this.resourceWidget.restoreState(changesTreeState);\n    }\n\n}\n","\nvar content = require(\"!!../../../../../css-loader/index.js!./scm-amend-component.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./scm-amend-component.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./scm-amend-component.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/*!\n\tautosize 4.0.2\n\tlicense: MIT\n\thttp://www.jacklmoore.com/autosize\n*/\n(function (global, factory) {\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine(['module', 'exports'], factory);\n\t} else if (typeof exports !== \"undefined\") {\n\t\tfactory(module, exports);\n\t} else {\n\t\tvar mod = {\n\t\t\texports: {}\n\t\t};\n\t\tfactory(mod, mod.exports);\n\t\tglobal.autosize = mod.exports;\n\t}\n})(this, function (module, exports) {\n\t'use strict';\n\n\tvar map = typeof Map === \"function\" ? new Map() : function () {\n\t\tvar keys = [];\n\t\tvar values = [];\n\n\t\treturn {\n\t\t\thas: function has(key) {\n\t\t\t\treturn keys.indexOf(key) > -1;\n\t\t\t},\n\t\t\tget: function get(key) {\n\t\t\t\treturn values[keys.indexOf(key)];\n\t\t\t},\n\t\t\tset: function set(key, value) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t\tvalues.push(value);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelete: function _delete(key) {\n\t\t\t\tvar index = keys.indexOf(key);\n\t\t\t\tif (index > -1) {\n\t\t\t\t\tkeys.splice(index, 1);\n\t\t\t\t\tvalues.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}();\n\n\tvar createEvent = function createEvent(name) {\n\t\treturn new Event(name, { bubbles: true });\n\t};\n\ttry {\n\t\tnew Event('test');\n\t} catch (e) {\n\t\t// IE does not support `new Event()`\n\t\tcreateEvent = function createEvent(name) {\n\t\t\tvar evt = document.createEvent('Event');\n\t\t\tevt.initEvent(name, true, false);\n\t\t\treturn evt;\n\t\t};\n\t}\n\n\tfunction assign(ta) {\n\t\tif (!ta || !ta.nodeName || ta.nodeName !== 'TEXTAREA' || map.has(ta)) return;\n\n\t\tvar heightOffset = null;\n\t\tvar clientWidth = null;\n\t\tvar cachedHeight = null;\n\n\t\tfunction init() {\n\t\t\tvar style = window.getComputedStyle(ta, null);\n\n\t\t\tif (style.resize === 'vertical') {\n\t\t\t\tta.style.resize = 'none';\n\t\t\t} else if (style.resize === 'both') {\n\t\t\t\tta.style.resize = 'horizontal';\n\t\t\t}\n\n\t\t\tif (style.boxSizing === 'content-box') {\n\t\t\t\theightOffset = -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom));\n\t\t\t} else {\n\t\t\t\theightOffset = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n\t\t\t}\n\t\t\t// Fix when a textarea is not on document body and heightOffset is Not a Number\n\t\t\tif (isNaN(heightOffset)) {\n\t\t\t\theightOffset = 0;\n\t\t\t}\n\n\t\t\tupdate();\n\t\t}\n\n\t\tfunction changeOverflow(value) {\n\t\t\t{\n\t\t\t\t// Chrome/Safari-specific fix:\n\t\t\t\t// When the textarea y-overflow is hidden, Chrome/Safari do not reflow the text to account for the space\n\t\t\t\t// made available by removing the scrollbar. The following forces the necessary text reflow.\n\t\t\t\tvar width = ta.style.width;\n\t\t\t\tta.style.width = '0px';\n\t\t\t\t// Force reflow:\n\t\t\t\t/* jshint ignore:start */\n\t\t\t\tta.offsetWidth;\n\t\t\t\t/* jshint ignore:end */\n\t\t\t\tta.style.width = width;\n\t\t\t}\n\n\t\t\tta.style.overflowY = value;\n\t\t}\n\n\t\tfunction getParentOverflows(el) {\n\t\t\tvar arr = [];\n\n\t\t\twhile (el && el.parentNode && el.parentNode instanceof Element) {\n\t\t\t\tif (el.parentNode.scrollTop) {\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\tnode: el.parentNode,\n\t\t\t\t\t\tscrollTop: el.parentNode.scrollTop\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tel = el.parentNode;\n\t\t\t}\n\n\t\t\treturn arr;\n\t\t}\n\n\t\tfunction resize() {\n\t\t\tif (ta.scrollHeight === 0) {\n\t\t\t\t// If the scrollHeight is 0, then the element probably has display:none or is detached from the DOM.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar overflows = getParentOverflows(ta);\n\t\t\tvar docTop = document.documentElement && document.documentElement.scrollTop; // Needed for Mobile IE (ticket #240)\n\n\t\t\tta.style.height = '';\n\t\t\tta.style.height = ta.scrollHeight + heightOffset + 'px';\n\n\t\t\t// used to check if an update is actually necessary on window.resize\n\t\t\tclientWidth = ta.clientWidth;\n\n\t\t\t// prevents scroll-position jumping\n\t\t\toverflows.forEach(function (el) {\n\t\t\t\tel.node.scrollTop = el.scrollTop;\n\t\t\t});\n\n\t\t\tif (docTop) {\n\t\t\t\tdocument.documentElement.scrollTop = docTop;\n\t\t\t}\n\t\t}\n\n\t\tfunction update() {\n\t\t\tresize();\n\n\t\t\tvar styleHeight = Math.round(parseFloat(ta.style.height));\n\t\t\tvar computed = window.getComputedStyle(ta, null);\n\n\t\t\t// Using offsetHeight as a replacement for computed.height in IE, because IE does not account use of border-box\n\t\t\tvar actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(computed.height)) : ta.offsetHeight;\n\n\t\t\t// The actual height not matching the style height (set via the resize method) indicates that \n\t\t\t// the max-height has been exceeded, in which case the overflow should be allowed.\n\t\t\tif (actualHeight < styleHeight) {\n\t\t\t\tif (computed.overflowY === 'hidden') {\n\t\t\t\t\tchangeOverflow('scroll');\n\t\t\t\t\tresize();\n\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Normally keep overflow set to hidden, to avoid flash of scrollbar as the textarea expands.\n\t\t\t\tif (computed.overflowY !== 'hidden') {\n\t\t\t\t\tchangeOverflow('hidden');\n\t\t\t\t\tresize();\n\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cachedHeight !== actualHeight) {\n\t\t\t\tcachedHeight = actualHeight;\n\t\t\t\tvar evt = createEvent('autosize:resized');\n\t\t\t\ttry {\n\t\t\t\t\tta.dispatchEvent(evt);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Firefox will throw an error on dispatchEvent for a detached element\n\t\t\t\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=889376\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar pageResize = function pageResize() {\n\t\t\tif (ta.clientWidth !== clientWidth) {\n\t\t\t\tupdate();\n\t\t\t}\n\t\t};\n\n\t\tvar destroy = function (style) {\n\t\t\twindow.removeEventListener('resize', pageResize, false);\n\t\t\tta.removeEventListener('input', update, false);\n\t\t\tta.removeEventListener('keyup', update, false);\n\t\t\tta.removeEventListener('autosize:destroy', destroy, false);\n\t\t\tta.removeEventListener('autosize:update', update, false);\n\n\t\t\tObject.keys(style).forEach(function (key) {\n\t\t\t\tta.style[key] = style[key];\n\t\t\t});\n\n\t\t\tmap.delete(ta);\n\t\t}.bind(ta, {\n\t\t\theight: ta.style.height,\n\t\t\tresize: ta.style.resize,\n\t\t\toverflowY: ta.style.overflowY,\n\t\t\toverflowX: ta.style.overflowX,\n\t\t\twordWrap: ta.style.wordWrap\n\t\t});\n\n\t\tta.addEventListener('autosize:destroy', destroy, false);\n\n\t\t// IE9 does not fire onpropertychange or oninput for deletions,\n\t\t// so binding to onkeyup to catch most of those events.\n\t\t// There is no way that I know of to detect something like 'cut' in IE9.\n\t\tif ('onpropertychange' in ta && 'oninput' in ta) {\n\t\t\tta.addEventListener('keyup', update, false);\n\t\t}\n\n\t\twindow.addEventListener('resize', pageResize, false);\n\t\tta.addEventListener('input', update, false);\n\t\tta.addEventListener('autosize:update', update, false);\n\t\tta.style.overflowX = 'hidden';\n\t\tta.style.wordWrap = 'break-word';\n\n\t\tmap.set(ta, {\n\t\t\tdestroy: destroy,\n\t\t\tupdate: update\n\t\t});\n\n\t\tinit();\n\t}\n\n\tfunction destroy(ta) {\n\t\tvar methods = map.get(ta);\n\t\tif (methods) {\n\t\t\tmethods.destroy();\n\t\t}\n\t}\n\n\tfunction update(ta) {\n\t\tvar methods = map.get(ta);\n\t\tif (methods) {\n\t\t\tmethods.update();\n\t\t}\n\t}\n\n\tvar autosize = null;\n\n\t// Do nothing in Node.js environment and IE8 (or lower)\n\tif (typeof window === 'undefined' || typeof window.getComputedStyle !== 'function') {\n\t\tautosize = function autosize(el) {\n\t\t\treturn el;\n\t\t};\n\t\tautosize.destroy = function (el) {\n\t\t\treturn el;\n\t\t};\n\t\tautosize.update = function (el) {\n\t\t\treturn el;\n\t\t};\n\t} else {\n\t\tautosize = function autosize(el, options) {\n\t\t\tif (el) {\n\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], function (x) {\n\t\t\t\t\treturn assign(x, options);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn el;\n\t\t};\n\t\tautosize.destroy = function (el) {\n\t\t\tif (el) {\n\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], destroy);\n\t\t\t}\n\t\t\treturn el;\n\t\t};\n\t\tautosize.update = function (el) {\n\t\t\tif (el) {\n\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], update);\n\t\t\t}\n\t\t\treturn el;\n\t\t};\n\t}\n\n\texports.default = autosize;\n\tmodule.exports = exports['default'];\n});","// This code has been refactored for 140 bytes\n// You can see the original here: https://github.com/twolfson/computedStyle/blob/04cd1da2e30fa45844f95f5cb1ac898e9b9ef050/lib/computedStyle.js\nvar computedStyle = function (el, prop, getComputedStyle) {\n  getComputedStyle = window.getComputedStyle;\n\n  // In one fell swoop\n  return (\n    // If we have getComputedStyle\n    getComputedStyle ?\n      // Query it\n      // TODO: From CSS-Query notes, we might need (node, null) for FF\n      getComputedStyle(el) :\n\n    // Otherwise, we are in IE and use currentStyle\n      el.currentStyle\n  )[\n    // Switch to camelCase for CSSOM\n    // DEV: Grabbed from jQuery\n    // https://github.com/jquery/jquery/blob/1.9-stable/src/css.js#L191-L194\n    // https://github.com/jquery/jquery/blob/1.9-stable/src/core.js#L593-L597\n    prop.replace(/-(\\w)/gi, function (word, letter) {\n      return letter.toUpperCase();\n    })\n  ];\n};\n\nmodule.exports = computedStyle;\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2018 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-scm-commit-container {\\n    display: flex;\\n    flex-direction: column;\\n    border-top: 1px solid var(--theia-sideBarSectionHeader-border);\\n    width: 100%;\\n    padding-top: 6px;\\n}\\n\\n.theia-scm-amend-outer-container {\\n    display: flex;\\n    flex-direction: column;\\n    width: 100%;\\n    overflow: auto;\\n}\\n\\n.theia-scm-commit-and-button {\\n    display: flex;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    width: 100%;\\n}\\n\\n.theia-scm-commit-avatar-and-text {\\n    display: flex;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    width: 100%;\\n    padding-top: 2px;\\n}\\n\\n.theia-scm-commit-avatar-and-text img {\\n    width: 27px;\\n}\\n\\n.theia-scm-commit-details {\\n    display: flex;\\n    flex-direction: column;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    width: 100%;\\n}\\n\\n.theia-scm-commit-message-avatar {\\n    margin-right: 5px;\\n}\\n\\n.theia-scm-commit-message-summary {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n}\\n\\n.theia-scm-commit-message-time {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    color: var(--theia-descriptionForeground);\\n    font-size: smaller;\\n}\\n\\n.theia-scm-flex-container-center {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.theia-scm-scrolling-container {\\n    position: relative;\\n    width: 100%;\\n    overflow: hidden;\\n\\n    margin-top: 0;\\n    margin-bottom: 0;\\n    padding-top: 0;\\n    padding-bottom: 0;\\n    border-top: 0;\\n    border-bottom: 0;\\n}\\n\", \"\"]);\n\n// exports\n","// Load in dependencies\nvar computedStyle = require('computed-style');\n\n/**\n * Calculate the `line-height` of a given node\n * @param {HTMLElement} node Element to calculate line height of. Must be in the DOM.\n * @returns {Number} `line-height` of the element in pixels\n */\nfunction lineHeight(node) {\n  // Grab the line-height via style\n  var lnHeightStr = computedStyle(node, 'line-height');\n  var lnHeight = parseFloat(lnHeightStr, 10);\n\n  // If the lineHeight did not contain a unit (i.e. it was numeric), convert it to ems (e.g. '2.3' === '2.3em')\n  if (lnHeightStr === lnHeight + '') {\n    // Save the old lineHeight style and update the em unit to the element\n    var _lnHeightStyle = node.style.lineHeight;\n    node.style.lineHeight = lnHeightStr + 'em';\n\n    // Calculate the em based height\n    lnHeightStr = computedStyle(node, 'line-height');\n    lnHeight = parseFloat(lnHeightStr, 10);\n\n    // Revert the lineHeight style\n    if (_lnHeightStyle) {\n      node.style.lineHeight = _lnHeightStyle;\n    } else {\n      delete node.style.lineHeight;\n    }\n  }\n\n  // If the lineHeight is in `pt`, convert it to pixels (4px for 3pt)\n  // DEV: `em` units are converted to `pt` in IE6\n  // Conversion ratio from https://developer.mozilla.org/en-US/docs/Web/CSS/length\n  if (lnHeightStr.indexOf('pt') !== -1) {\n    lnHeight *= 4;\n    lnHeight /= 3;\n  // Otherwise, if the lineHeight is in `mm`, convert it to pixels (96px for 25.4mm)\n  } else if (lnHeightStr.indexOf('mm') !== -1) {\n    lnHeight *= 96;\n    lnHeight /= 25.4;\n  // Otherwise, if the lineHeight is in `cm`, convert it to pixels (96px for 2.54cm)\n  } else if (lnHeightStr.indexOf('cm') !== -1) {\n    lnHeight *= 96;\n    lnHeight /= 2.54;\n  // Otherwise, if the lineHeight is in `in`, convert it to pixels (96px for 1in)\n  } else if (lnHeightStr.indexOf('in') !== -1) {\n    lnHeight *= 96;\n  // Otherwise, if the lineHeight is in `pc`, convert it to pixels (12pt for 1pc)\n  } else if (lnHeightStr.indexOf('pc') !== -1) {\n    lnHeight *= 16;\n  }\n\n  // Continue our computation\n  lnHeight = Math.round(lnHeight);\n\n  // If the line-height is \"normal\", calculate by font-size\n  if (lnHeightStr === 'normal') {\n    // Create a temporary node\n    var nodeName = node.nodeName;\n    var _node = document.createElement(nodeName);\n    _node.innerHTML = '&nbsp;';\n\n    // If we have a text area, reset it to only 1 row\n    // https://github.com/twolfson/line-height/issues/4\n    if (nodeName.toUpperCase() === 'TEXTAREA') {\n      _node.setAttribute('rows', '1');\n    }\n\n    // Set the font-size of the element\n    var fontSizeStr = computedStyle(node, 'font-size');\n    _node.style.fontSize = fontSizeStr;\n\n    // Remove default padding/border which can affect offset height\n    // https://github.com/twolfson/line-height/issues/4\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetHeight\n    _node.style.padding = '0px';\n    _node.style.border = '0px';\n\n    // Append it to the body\n    var body = document.body;\n    body.appendChild(_node);\n\n    // Assume the line height of the element is the height\n    var height = _node.offsetHeight;\n    lnHeight = height;\n\n    // Remove our child from the DOM\n    body.removeChild(_node);\n  }\n\n  // Return the calculated height\n  return lnHeight;\n}\n\n// Export lineHeight\nmodule.exports = lineHeight;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nexports.__esModule = true;\nvar React = require(\"react\");\nvar PropTypes = require(\"prop-types\");\nvar autosize = require(\"autosize\");\nvar _getLineHeight = require(\"line-height\");\nvar getLineHeight = _getLineHeight;\nvar RESIZED = \"autosize:resized\";\n/**\n * A light replacement for built-in textarea component\n * which automaticaly adjusts its height to match the content\n */\nvar TextareaAutosizeClass = /** @class */ (function (_super) {\n    __extends(TextareaAutosizeClass, _super);\n    function TextareaAutosizeClass() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            lineHeight: null\n        };\n        _this.textarea = null;\n        _this.onResize = function (e) {\n            if (_this.props.onResize) {\n                _this.props.onResize(e);\n            }\n        };\n        _this.updateLineHeight = function () {\n            if (_this.textarea) {\n                _this.setState({\n                    lineHeight: getLineHeight(_this.textarea)\n                });\n            }\n        };\n        _this.onChange = function (e) {\n            var onChange = _this.props.onChange;\n            _this.currentValue = e.currentTarget.value;\n            onChange && onChange(e);\n        };\n        return _this;\n    }\n    TextareaAutosizeClass.prototype.componentDidMount = function () {\n        var _this = this;\n        var _a = this.props, maxRows = _a.maxRows, async = _a.async;\n        if (typeof maxRows === \"number\") {\n            this.updateLineHeight();\n        }\n        if (typeof maxRows === \"number\" || async) {\n            /*\n              the defer is needed to:\n                - force \"autosize\" to activate the scrollbar when this.props.maxRows is passed\n                - support StyledComponents (see #71)\n            */\n            setTimeout(function () { return _this.textarea && autosize(_this.textarea); });\n        }\n        else {\n            this.textarea && autosize(this.textarea);\n        }\n        if (this.textarea) {\n            this.textarea.addEventListener(RESIZED, this.onResize);\n        }\n    };\n    TextareaAutosizeClass.prototype.componentWillUnmount = function () {\n        if (this.textarea) {\n            this.textarea.removeEventListener(RESIZED, this.onResize);\n            autosize.destroy(this.textarea);\n        }\n    };\n    TextareaAutosizeClass.prototype.render = function () {\n        var _this = this;\n        var _a = this, _b = _a.props, onResize = _b.onResize, maxRows = _b.maxRows, onChange = _b.onChange, style = _b.style, innerRef = _b.innerRef, children = _b.children, props = __rest(_b, [\"onResize\", \"maxRows\", \"onChange\", \"style\", \"innerRef\", \"children\"]), lineHeight = _a.state.lineHeight;\n        var maxHeight = maxRows && lineHeight ? lineHeight * maxRows : null;\n        return (React.createElement(\"textarea\", __assign({}, props, { onChange: this.onChange, style: maxHeight ? __assign({}, style, { maxHeight: maxHeight }) : style, ref: function (element) {\n                _this.textarea = element;\n                if (typeof _this.props.innerRef === 'function') {\n                    _this.props.innerRef(element);\n                }\n                else if (_this.props.innerRef) {\n                    _this.props.innerRef.current = element;\n                }\n            } }), children));\n    };\n    TextareaAutosizeClass.prototype.componentDidUpdate = function () {\n        this.textarea && autosize.update(this.textarea);\n    };\n    TextareaAutosizeClass.defaultProps = {\n        rows: 1,\n        async: false\n    };\n    TextareaAutosizeClass.propTypes = {\n        rows: PropTypes.number,\n        maxRows: PropTypes.number,\n        onResize: PropTypes.func,\n        innerRef: PropTypes.any,\n        async: PropTypes.bool\n    };\n    return TextareaAutosizeClass;\n}(React.Component));\nexports.TextareaAutosize = React.forwardRef(function (props, ref) {\n    return React.createElement(TextareaAutosizeClass, __assign({}, props, { innerRef: ref }));\n});\n","\"use strict\";\nexports.__esModule = true;\nvar TextareaAutosize_1 = require(\"./TextareaAutosize\");\nexports[\"default\"] = TextareaAutosize_1.TextareaAutosize;\n"],"sourceRoot":""}