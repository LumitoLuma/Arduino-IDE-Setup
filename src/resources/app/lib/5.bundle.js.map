{"version":3,"sources":["webpack:///./node_modules/@theia/core/src/common/selection-command-handler.ts","webpack:///./node_modules/@theia/filesystem/src/browser/file-resource.ts","webpack:///./node_modules/@theia/filesystem/src/browser/file-selection.ts","webpack:///./node_modules/@theia/filesystem/src/browser/filesystem-frontend-contribution.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMlF;IAEI,iCACuB,gBAAkC,EAClC,WAAwC,EACxC,OAA2C;QAF3C,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gBAAW,GAAX,WAAW,CAA6B;QACxC,YAAO,GAAP,OAAO,CAAoC;IAC9D,CAAC;IAEL,yCAAO,GAAP;;QAAQ,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAClB,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,OAAjB,IAAI,WAAiB,IAAI,EAAC,CAAC;QAC7C,OAAO,SAAS,CAAC,CAAC,CAAE,UAAI,CAAC,OAAO,EAAC,OAAO,qBAAS,SAAS,GAAK,IAAI,GAAE,CAAC,CAAC,SAAS,CAAC;IACrF,CAAC;IAED,2CAAS,GAAT;;QAAU,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QACpB,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,OAAjB,IAAI,WAAiB,IAAI,EAAC,CAAC;QAC7C,OAAO,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,IAAK,UAAI,CAAC,OAAO,EAAC,SAAS,qBAAS,SAAgB,GAAK,IAAI,EAAC,CAAC,CAAC;IAClH,CAAC;IAED,2CAAS,GAAT;;QAAU,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QACpB,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,OAAjB,IAAI,WAAiB,IAAI,EAAC,CAAC;QAC7C,OAAO,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,IAAK,UAAI,CAAC,OAAO,EAAC,SAAS,qBAAS,SAAgB,GAAK,IAAI,EAAC,CAAC,CAAC;IAClH,CAAC;IAES,yCAAO,GAAjB;QACI,OAAO,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;IAChD,CAAC;IAES,8CAAY,GAAtB;QAAuB,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QACjC,IAAM,cAAc,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,cAAc,EAAE;YAChB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;SAC7D;QACD,IAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;QACjF,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;YAChB,OAAO,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;SAClD;QACD,OAAO,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;IACpD,CAAC;IAES,oDAAkB,GAA5B,UAA6B,GAAuB;;QAChD,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,SAAS,EAAE;YACX,OAAO,SAAS,CAAC;SACpB;QACD,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;;gBACpB,KAAsB,wBAAG,kEAAE;oBAAtB,IAAM,OAAO;oBACd,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;oBACtC,IAAI,SAAS,EAAE;wBACX,OAAO,SAAS,CAAC;qBACpB;iBACJ;;;;;;;;;SACJ;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAES,mDAAiB,GAA3B,UAA4B,GAAuB;;QAC/C,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,SAAS,EAAE;YACX,OAAO,CAAC,SAAS,CAAC,CAAC;SACtB;QACD,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;;gBACpB,KAAsB,wBAAG,kEAAE;oBAAtB,IAAM,OAAO;oBACd,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;oBACtC,IAAI,SAAS,EAAE;wBACX,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;qBAC1B;iBACJ;;;;;;;;;SACJ;QACD,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;IAC9C,CAAC;IACL,8BAAC;AAAD,CAAC;AAvEY,0DAAuB;;;;;;;;;;;;;;ACpBpC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,oGAA+C;AAE/C,iIAAkI;AAClI,uIAAyE;AACzE,wHAA8D;AAE9D,gIAA6E;AAC7E,iJAA0E;AAK1E,IAAiB,mBAAmB,CAInC;AAJD,WAAiB,mBAAmB;IAChC,SAAgB,EAAE,CAAC,OAAoC;QACnD,OAAO,CAAC,CAAC,OAAO,IAAI,MAAM,IAAI,OAAO,IAAI,qBAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IAC1E,CAAC;IAFe,sBAAE,KAEjB;AACL,CAAC,EAJgB,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAInC;AAED;IAaI,sBACa,GAAQ,EACE,UAAsB,EACtB,iBAAoC;QAF9C,QAAG,GAAH,GAAG,CAAK;QACE,eAAU,GAAV,UAAU,CAAY;QACtB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAdxC,cAAS,GAAG,IAAI,iCAAoB,EAAE,CAAC;QACvC,+BAA0B,GAAG,IAAI,eAAO,EAAQ,CAAC;QAC3D,wBAAmB,GAAgB,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC;QAc9E,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;IACzD,CAAC;IAbD,sBAAI,iCAAO;aAAX;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;;;OAAA;IAaK,2BAAI,GAAV;;;;;;4BACiB,qBAAM,IAAI,CAAC,WAAW,EAAE;;wBAA/B,IAAI,GAAG,SAAwB;wBACrC,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;4BAC1B,MAAM,IAAI,KAAK,CAAC,gCAAgC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;yBACtE;wBAED,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,eAAK;4BAC3D,IAAI,oCAAe,CAAC,UAAU,CAAC,KAAK,EAAE,KAAI,CAAC,GAAG,CAAC,EAAE;gCAC7C,KAAI,CAAC,IAAI,EAAE,CAAC;6BACf;wBACL,CAAC,CAAC,CAAC,CAAC;wBACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,eAAK;4BACxD,IAAI,KAAK,CAAC,GAAG,CAAC,eAAe,CAAC,KAAI,CAAC,GAAG,CAAC,EAAE;gCACrC,KAAI,CAAC,IAAI,EAAE,CAAC;6BACf;wBACL,CAAC,CAAC,CAAC,CAAC;wBACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,eAAK;4BACtD,IAAI,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC,KAAI,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC,KAAI,CAAC,GAAG,CAAC,EAAE;gCACxF,KAAI,CAAC,IAAI,EAAE,CAAC;6BACf;wBACL,CAAC,CAAC,CAAC,CAAC;;;;wBAEA,eAAI,CAAC,SAAS,EAAC,IAAI;wBAAC,qBAAM,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC;;wBAA3E,cAAoB,SAAuD,EAAC,CAAC;;;;wBAE7E,OAAO,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC;;;;;;KAExB;IAED,8BAAO,GAAP;QACI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAEK,mCAAY,GAAlB,UAAmB,OAA+B;;;;;;;wBAEhB,qBAAM,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC;;wBAAjF,KAAoB,SAA6D,EAA/E,IAAI,YAAE,OAAO;wBACrB,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAE,CAAC;wBACzB,sBAAO,OAAO,EAAC;;;wBAEf,IAAI,4BAAe,CAAC,YAAY,CAAC,EAAE,CAAC,GAAC,CAAC,EAAE;4BACpC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;4BAC1B,MAAM,wBAAa,CAAC,QAAQ,uBACrB,GAAC,CAAC,MAAM,EAAE,KACb,IAAI,EAAE;oCACF,GAAG,EAAE,IAAI,CAAC,GAAG;iCAChB,IACH,CAAC;yBACN;wBACD,MAAM,GAAC,CAAC;;;;;KAEf;IAEK,mCAAY,GAAlB,UAAmB,OAAe,EAAE,OAA6B;;;;;;;wBAErD,eAAe,GAAG,OAAO,CAAC;wBAC9B,IAAI,OAAO,IAAI,OAAO,CAAC,iBAAiB,EAAE;4BACtC,eAAe,yBACR,OAAO,KACV,QAAQ,EAAE,OAAO,CAAC,iBAAiB,GACtC,CAAC;4BACF,OAAO,eAAe,CAAC,iBAAiB,CAAC;yBAC5C;wBACY,qBAAM,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,eAAe,CAAC;;wBAA1D,IAAI,GAAG,SAAmD;wBAChE,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAE,CAAC;;;;wBAEzB,IAAI,4BAAe,CAAC,eAAe,CAAC,EAAE,CAAC,GAAC,CAAC,EAAE;4BACvC,MAAM,wBAAa,CAAC,SAAS,uBAAM,GAAC,CAAC,MAAM,EAAE,KAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAG,CAAC;yBAC7E;wBACD,MAAM,GAAC,CAAC;;;;;KAEf;IACe,qCAAc,GAA9B,UAA+B,OAAe,EAAE,OAA0D;;;;;;wBAChG,OAAO,GAAG,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC;wBAC/C,wBAAmB,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,IAAI;gCAA/C,wBAA+C;wBAAI,qBAAM,IAAI,CAAC,WAAW,EAAE;;8BAAxB,SAAwB;;;wBAAlF,IAAI,KAA8E;6BACpF,IAAI,EAAJ,wBAAI;;;;wBAEO,qBAAM,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC;4BAA/D,sBAAO,SAAwD,EAAC;;;wBAEhE,IAAI,CAAC,4BAAe,CAAC,YAAY,CAAC,EAAE,CAAC,GAAC,CAAC,EAAE;4BACrC,MAAM,GAAC,CAAC;yBACX;;4BAGT,sBAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,aAAI,OAAO,aAAK,OAAO,EAAG,EAAC;;;;KAC9E;IAEK,yCAAkB,GAAxB,UAAyB,OAAyC,EAAE,OAA6B;;;;;;wBACvF,OAAO,GAAG,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC;wBACtD,WAAW,GAAG,mBAAmB,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC;wBACpE,IAAI,CAAC,WAAW,EAAE;4BACd,MAAM,wBAAa,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;yBAC/F;;;;wBAEgB,qBAAM,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC;;wBAAzE,IAAI,GAAG,SAAkE;wBAC/E,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAE,CAAC;;;;wBAEzB,IAAI,4BAAe,CAAC,YAAY,CAAC,EAAE,CAAC,GAAC,CAAC,EAAE;4BACpC,MAAM,wBAAa,CAAC,QAAQ,uBAAM,GAAC,CAAC,MAAM,EAAE,KAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAG,CAAC;yBAC5E;wBACD,IAAI,4BAAe,CAAC,eAAe,CAAC,EAAE,CAAC,GAAC,CAAC,EAAE;4BACvC,MAAM,wBAAa,CAAC,SAAS,uBAAM,GAAC,CAAC,MAAM,EAAE,KAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAG,CAAC;yBAC7E;wBACD,MAAM,GAAC,CAAC;;;;;KAEf;IAEK,oCAAa,GAAnB;;;gBACI,sBAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC;;;KACxD;IAEe,2BAAI,GAApB;;;;4BACQ,qBAAM,IAAI,CAAC,QAAQ,EAAE;;wBAAzB,IAAI,SAAqB,EAAE;4BACvB,sBAAO;yBACV;wBACD,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;;;;KACnD;IACe,+BAAQ,GAAxB;;;;;4BACiB,qBAAM,IAAI,CAAC,WAAW,EAAE;;wBAA/B,IAAI,GAAG,SAAwB;wBAC/B,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;wBAClD,IAAI,CAAC,OAAO,EAAE;4BACV,sBAAO,CAAC,IAAI,EAAC;yBAChB;wBACD,sBAAO,CAAC,CAAC,IAAI,IAAI,OAAO,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,EAAC;;;;KACtE;IAEe,kCAAW,GAA3B;;;;4BACS,qBAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;;wBAAjD,IAAI,CAAC,UAA4C,GAAE;4BAC/C,sBAAO,SAAS,EAAC;yBACpB;wBACD,IAAI;4BACA,sBAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC;yBACtD;wBAAC,WAAM;4BACJ,sBAAO,SAAS,EAAC;yBACpB;;;;;KACJ;IAEL,mBAAC;AAAD,CAAC;AA7JY,oCAAY;AAgKzB;IAAA;IAiBA,CAAC;IATS,sCAAO,GAAb,UAAc,GAAQ;;;;;;wBAClB,IAAI,GAAG,CAAC,MAAM,KAAK,MAAM,EAAE;4BACvB,MAAM,IAAI,KAAK,CAAC,iCAAiC,GAAG,GAAG,CAAC,CAAC;yBAC5D;wBACK,QAAQ,GAAG,IAAI,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;wBAChF,qBAAM,QAAQ,CAAC,IAAI,EAAE;;wBAArB,SAAqB,CAAC;wBACtB,sBAAO,QAAQ,EAAC;;;;KACnB;IAZD;QADC,kBAAM,CAAC,uBAAU,CAAC;;4DACuB;IAG1C;QADC,kBAAM,CAAC,sCAAiB,CAAC;kCACY,sCAAiB;mEAAC;IAN/C,oBAAoB;QADhC,sBAAU,EAAE;OACA,oBAAoB,CAiBhC;IAAD,2BAAC;CAAA;AAjBY,oDAAoB;;;;;;;;;;;;;;AClMjC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;AAGlF,oLAA2F;AAC3F,gIAAgD;AAKhD,IAAiB,aAAa,CAmB7B;AAnBD,WAAiB,aAAa;IAC1B,SAAgB,EAAE,CAAC,GAAuB;QACtC,OAAO,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,UAAU,IAAI,GAAG,CAAC,IAAI,qBAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IAC1F,CAAC;IAFe,gBAAE,KAEjB;IACD;QAAoC,kCAAsC;QAEtE,wBACuB,gBAAkC,EAClC,OAAuD;YAF9E,YAII,kBACI,gBAAgB,EAChB,aAAG,IAAI,oBAAa,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAvC,CAAuC,EAC9C,OAAO,CACV,SACJ;YARsB,sBAAgB,GAAhB,gBAAgB,CAAkB;YAClC,aAAO,GAAP,OAAO,CAAgD;;QAO9E,CAAC;QAEL,qBAAC;IAAD,CAAC,CAbmC,mDAAuB,GAa1D;IAbY,4BAAc,iBAa1B;AAEL,CAAC,EAnBgB,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAmB7B;;;;;;;;;;;;;;AC1CD;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,oGAA+C;AAE/C,0JAAyE;AACzE,mHAAqF;AAErF,sHAIiC;AACjC,iJAAyG;AACzG,+IAAmE;AACnE,oLAAyF;AACzF,6JAAiE;AACjE,qIAAiD;AACjD,oJAA0D;AAE1D,IAAiB,kBAAkB,CAQlC;AARD,WAAiB,kBAAkB;IAElB,yBAAM,GAAY;QAC3B,EAAE,EAAE,aAAa;QACjB,QAAQ,EAAE,MAAM;QAChB,KAAK,EAAE,iBAAiB;KAC3B,CAAC;AAEN,CAAC,EARgB,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAQlC;AAQD;IAAA;QAkEc,qBAAgB,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;QAqB5B,kBAAa,GAAG,IAAI,GAAG,EAAyC,CAAC;QAiGjE,kBAAa,GAAG,sBAAsB,CAAC;IAwD9D,CAAC;IAzNG,mDAAU,GAAV;QAAA,iBAKC;QAJG,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,eAAK,IAAI,YAAI,CAAC,GAAG,CAAC,cAAM,YAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAzB,CAAyB,CAAC,EAAzC,CAAyC,CAAC,CAAC;QAC1F,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,eAAK,IAAI,YAAK,CAAC,SAAS,CAAC,KAAI,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,MAAM,IAAK,YAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,EAAjC,CAAiC,CAAC,CAAC,EAAjF,CAAiF,CAAC,CAAC;QAC9H,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,eAAK,IAAI,YAAK,CAAC,SAAS,CAAC,KAAI,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,MAAM,IAAK,YAAI,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,EAAnC,CAAmC,CAAC,CAAC,EAAnF,CAAmF,CAAC,CAAC;QACnI,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,eAAK,IAAI,YAAK,CAAC,SAAS,CAAC,KAAI,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,MAAM,IAAK,YAAI,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,EAAlC,CAAkC,CAAC,CAAC,EAAlF,CAAkF,CAAC,CAAC;IAClI,CAAC;IAED,gDAAO,GAAP,UAAS,GAAwB;QAAjC,iBAOC;QANG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,WAAC;YAClC,IAAI,CAAC,CAAC,cAAc,KAAK,oBAAoB,EAAE;gBAC3C,KAAI,CAAC,kBAAkB,EAAE,CAAC;aAC7B;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yDAAgB,GAAhB,UAAiB,QAAyB;QAA1C,iBAOC;QANG,QAAQ,CAAC,eAAe,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,8BAAa,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,EAAE;YACxG,KAAK,EAAE,KAAK;YACZ,SAAS,EAAE,mBAAS,IAAI,YAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAzB,CAAyB;YACjD,SAAS,EAAE,mBAAS,IAAI,YAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAzB,CAAyB;YACjD,OAAO,EAAE,mBAAS,IAAI,YAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAtB,CAAsB;SAC/C,CAAC,CAAC,CAAC;IACR,CAAC;IAES,kDAAS,GAAnB,UAAoB,EAA2B;YAAzB,QAAQ;QAC1B,OAAO,CAAC,yBAAW,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,QAAQ,CAAC,WAAW,CAAC;IAC9D,CAAC;IAEe,+CAAM,GAAtB,UAAuB,SAAwB;;;;;;;wBAEjC,MAAM,GAAG,2CAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;wBAC9E,qBAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC;;wBAAvD,SAAuD,CAAC;6BACpD,6BAAkB,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,MAAM,GAA1C,wBAA0C;wBAC1C,qBAAM,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC;;wBAAxC,SAAwC,CAAC;;;;;wBAG7C,IAAI,CAAC,oBAAW,CAAC,GAAC,CAAC,EAAE;4BACjB,OAAO,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC;yBACpB;;;;;;KAER;IAGS,4CAAG,GAAb,UAAc,SAAmC;QAAjD,iBAQC;QAPG,OAAO,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;;;;;;wBAElD,qBAAM,SAAS,EAAE;;wBAAjB,SAAiB,CAAC;;;;wBAElB,OAAO,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC;;;;;aAExB,CAAC,CAAC;IACP,CAAC;IAES,gDAAO,GAAjB,UAAkB,WAA2E;QAA7F,iBAQC;QAPG,OAAO,IAAI,CAAC,GAAG,CAAC;;;;;;wBACN,QAAQ,GAAoB,EAAE,CAAC;;4BACrC,KAAoC,yCAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,6CAAE;gCAApE,wBAAqB,EAApB,WAAW,UAAE,MAAM;gCAC3B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC;6BACnD;;;;;;;;;wBACD,qBAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;;wBAA3B,SAA2B,CAAC;;;;aAC/B,CAAC,CAAC;IACP,CAAC;IAIS,wDAAe,GAAzB,UAA0B,WAAgB;QACtC,IAAM,WAAW,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC3C,IAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACrD,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAC1C;QACD,OAAO,QAAQ,CAAC;IACpB,CAAC;IAES,0DAAiB,GAA3B,UAA4B,MAAyB,EAAE,QAAmD;QACtG,IAAI,CAAC,QAAQ,EAAE;YACX,OAAO,SAAS,CAAC;SACpB;QACD,IAAI,QAAQ,CAAC,KAAK,EAAE;YAChB,IAAM,QAAQ,GAAG,kBAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACtC,IAAI,QAAQ,IAAI,QAAQ,CAAC,aAAa,EAAE;gBACpC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAC1C;SACJ;QACD,IAAI,QAAQ,CAAC,IAAI,IAAI,wBAAc,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE;YAC5C,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACtC;IACL,CAAC;IAEe,iDAAQ,GAAxB,UAAyB,WAAgB,EAAE,MAAyB,EAAE,KAAoB;;;;;;wBAChF,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;wBACxE,IAAI,CAAC,cAAc,EAAE;4BACjB,sBAAO;yBACV;wBACK,QAAQ,GAAkC,EAAE,CAAC;wBAC7C,QAAQ,GAAG,kBAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;wBACtC,IAAI,wBAAc,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE;4BAC3B,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;yBACvC;6BACG,SAAQ,IAAI,QAAQ,CAAC,KAAK,GAA1B,wBAA0B;wBAC1B,IAAI,QAAQ,CAAC,cAAc,EAAE;4BACzB,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;yBAC9C;6BACG,QAAQ,CAAC,MAAM,EAAf,wBAAe;wBACf,qBAAM,QAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;wBAArC,SAAqC,CAAC;;;wBAG9C,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,cAAc,CAAC,QAAQ,EAAE,EAAE,QAAQ,CAAC,CAAC;;;;;KAC/D;IAEe,mDAAU,GAA1B,UAA2B,WAAgB,EAAE,MAAyB,EAAE,KAAoB;;;;gBAClF,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;gBACxE,IAAI,CAAC,cAAc,EAAE;oBACjB,sBAAO;iBACV;gBACK,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;gBACtD,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;;;;KAC5C;IAEe,kDAAS,GAAzB,UAA0B,WAAgB,EAAE,MAAyB,EAAE,KAAoB;;;;;;wBACjF,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;wBACxE,IAAI,CAAC,cAAc,EAAE;4BACjB,sBAAO;yBACV;wBAEK,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;wBAEhD,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;wBAC9D,IAAI,CAAC,WAAW,EAAE;4BACd,sBAAO;yBACV;wBACO,SAAS,GAAc,WAAW,UAAzB,EAAE,OAAO,GAAK,WAAW,QAAhB,CAAiB;wBAC3C,IAAI,CAAC,kCAAwB,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE;4BACvC,sBAAO;yBACV;wBAEiB,qBAAM,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAoB,SAAS,EAAE,sBACpF,OAAO,KACV,GAAG,EAAE,cAAc,CAAC,QAAQ,EAAE,GACjC,CAAC;;wBAHI,SAAS,GAAG,SAGhB;wBACF,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;wBACtC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC;wBAE/C,OAAO,GAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE;gCAC7D,IAAI;gCAAE,GAAG,EAAE,MAAM;6BACpB,CAAC,CAAC,CAAC;wBACJ,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,KAAK,MAAM,EAAE;4BACpC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;yBACzD;6BAAM,IAAI,MAAM,CAAC,SAAS,EAAE;4BACzB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;yBACvD;wBACD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;wBACjE,qBAAM,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;;wBAA1B,SAA0B,CAAC;;;;;KAC9B;IACS,wDAAe,GAAzB,UAA0B,WAAgB,EAAE,MAAyB,EAAE,KAAoB;QACvF,IAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACnD,IAAM,SAAS,GAAG,IAAI,IAAI,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACxD,OAAO,SAAS,IAAI,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IAC1D,CAAC;IAGe,sDAAa,GAA7B,UAA8B,KAAsB;;;;gBAC1C,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,UAAC,EAAQ;wBAAN,IAAI;oBAAO,WAAI,KAAK,mCAAc,CAAC,OAAO;gBAA/B,CAA+B,CAAC,CAAC;gBAClF,IAAI,aAAa,CAAC,MAAM,EAAE;oBACtB,sBAAO,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,EAAC;iBAC9C;;;;KACJ;IACe,wDAAe,GAA/B,UAAgC,KAAsB;;;;;;;wBAE5C,OAAO,GAAmB,EAAE,CAAC;wBAE7B,KAAK,GAAG,IAAI,GAAG,EAAU,CAAC;wBAC1B,OAAO,GAAG,IAAI,GAAG,EAA+B,CAAC;;4BACvD,KAA4B,yCAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,6CAAE;gCAA5D,wBAAa,EAAZ,GAAG,UAAE,MAAM;gCACnB,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,SAAE,OAAO,WAAE,CAAC,CAAC;6BAC7D;;;;;;;;;;4BACD,KAAmC,qBAAO,CAAC,OAAO,EAAE,6CAAE;gCAA3C,wBAAoB,EAAnB,SAAS,UAAE,OAAO;gCAC1B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;;wCACvB,KAAqB,2CAAO,uFAAE;4CAAnB,MAAM;4CACb,MAAM,CAAC,KAAK,EAAE,CAAC;4CACf,OAAO,CAAC,IAAI,CAAC,uBAAa,CAAC,MAAM,CAAC,CAAC,CAAC;yCACvC;;;;;;;;;iCACJ;6BACJ;;;;;;;;;wBAED,qBAAM,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;;wBAA1B,SAA0B,CAAC;;;;;KAC9B;IACS,qDAAY,GAAtB,UAAuB,GAAQ,EAAE,MAAyB,EAAE,KAAsB,EAAE,EAGnF;YAHqF,KAAK,aAAE,OAAO;QAIhG,IAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;QACjC,IAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACnD,IAAI,oCAAe,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE;YACvC,IAAM,SAAS,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;YACjC,IAAI,kBAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBAC1B,IAAI,CAAC,OAAO,EAAE;oBACV,MAAM,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC;iBAC5C;gBACD,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;aACxB;YACD,IAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YAC7C,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;SACnC;aAAM,IAAI,oCAAe,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE;YAC5C,IAAI,OAAO,EAAE;gBACT,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;aAC/F;SACJ;IACL,CAAC;IAES,2DAAkB,GAA5B;QACI,IAAM,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;QAChE,IAAM,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,qBAAW,IAAI,QAAC,EAAE,EAAE,EAAE,gBAAgB,CAAC,WAAW,CAAC,EAAE,WAAW,eAAE,CAAC,EAApD,CAAoD,CAAC,CAAC;QAChI,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;IACvD,CAAC;IA5OD;QADC,kBAAM,CAAC,0BAAgB,CAAC;kCACC,0BAAgB;iEAAC;IAG3C;QADC,kBAAM,CAAC,uBAAa,CAAC;kCACY,uBAAa;yEAAC;IAGhD;QADC,kBAAM,CAAC,sCAAiB,CAAC;kCACY,sCAAiB;6EAAC;IAGxD;QADC,kBAAM,CAAC,0BAAW,CAAC;kCACY,0BAAW;uEAAC;IAG5C;QADC,kBAAM,CAAC,8CAAqB,CAAC;;uEACwB;IAGtD;QADC,kBAAM,CAAC,yBAAgB,CAAC;kCACY,yBAAgB;4EAAC;IAGtD;QADC,kBAAM,CAAC,uCAAiB,CAAC;kCACQ,uCAAiB;yEAAC;IArB3C,8BAA8B;QAD1C,sBAAU,EAAE;OACA,8BAA8B,CAgP1C;IAAD,qCAAC;CAAA;AAhPY,wEAA8B","file":"5.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { CommandHandler } from './command';\nimport { SelectionService } from '../common/selection-service';\n\nexport class SelectionCommandHandler<S> implements CommandHandler {\n\n    constructor(\n        protected readonly selectionService: SelectionService,\n        protected readonly toSelection: (arg: any) => S | undefined,\n        protected readonly options: SelectionCommandHandler.Options<S>\n    ) { }\n\n    execute(...args: any[]): Object | undefined {\n        const selection = this.getSelection(...args);\n        return selection ? (this.options.execute as any)(selection, ...args) : undefined;\n    }\n\n    isVisible(...args: any[]): boolean {\n        const selection = this.getSelection(...args);\n        return !!selection && (!this.options.isVisible || (this.options.isVisible as any)(selection as any, ...args));\n    }\n\n    isEnabled(...args: any[]): boolean {\n        const selection = this.getSelection(...args);\n        return !!selection && (!this.options.isEnabled || (this.options.isEnabled as any)(selection as any, ...args));\n    }\n\n    protected isMulti(): boolean {\n        return this.options && !!this.options.multi;\n    }\n\n    protected getSelection(...args: any[]): S | S[] | undefined {\n        const givenSelection = args.length && this.toSelection(args[0]);\n        if (givenSelection) {\n            return this.isMulti() ? [givenSelection] : givenSelection;\n        }\n        const globalSelection = this.getSingleSelection(this.selectionService.selection);\n        if (this.isMulti()) {\n            return this.getMultiSelection(globalSelection);\n        }\n        return this.getSingleSelection(globalSelection);\n    }\n\n    protected getSingleSelection(arg: Object | undefined): S | undefined {\n        let selection = this.toSelection(arg);\n        if (selection) {\n            return selection;\n        }\n        if (Array.isArray(arg)) {\n            for (const element of arg) {\n                selection = this.toSelection(element);\n                if (selection) {\n                    return selection;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    protected getMultiSelection(arg: Object | undefined): S[] | undefined {\n        let selection = this.toSelection(arg);\n        if (selection) {\n            return [selection];\n        }\n        const result = [];\n        if (Array.isArray(arg)) {\n            for (const element of arg) {\n                selection = this.toSelection(element);\n                if (selection) {\n                    result.push(selection);\n                }\n            }\n        }\n        return result.length ? result : undefined;\n    }\n}\nexport namespace SelectionCommandHandler {\n    export type Options<S> = SelectionOptions<false, S> | SelectionOptions<true, S[]>;\n    export interface SelectionOptions<Multi extends boolean, T> {\n        multi: Multi;\n        execute(selection: T, ...args: any[]): any;\n        isEnabled?(selection: T, ...args: any[]): boolean;\n        isVisible?(selection: T, ...args: any[]): boolean;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { TextDocumentContentChangeEvent } from 'vscode-languageserver-protocol';\nimport { Resource, ResourceVersion, ResourceResolver, ResourceError, ResourceSaveOptions } from '@theia/core/lib/common/resource';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileSystem, FileStat, FileSystemError } from '../common/filesystem';\nimport { FileSystemWatcher, FileChangeEvent } from './filesystem-watcher';\n\nexport interface FileResourceVersion extends ResourceVersion {\n    readonly stat: FileStat\n}\nexport namespace FileResourceVersion {\n    export function is(version: ResourceVersion | undefined): version is FileResourceVersion {\n        return !!version && 'stat' in version && FileStat.is(version['stat']);\n    }\n}\n\nexport class FileResource implements Resource {\n\n    protected readonly toDispose = new DisposableCollection();\n    protected readonly onDidChangeContentsEmitter = new Emitter<void>();\n    readonly onDidChangeContents: Event<void> = this.onDidChangeContentsEmitter.event;\n\n    protected _version: FileResourceVersion | undefined;\n    get version(): FileResourceVersion | undefined {\n        return this._version;\n    }\n\n    protected uriString: string;\n\n    constructor(\n        readonly uri: URI,\n        protected readonly fileSystem: FileSystem,\n        protected readonly fileSystemWatcher: FileSystemWatcher\n    ) {\n        this.uriString = this.uri.toString();\n        this.toDispose.push(this.onDidChangeContentsEmitter);\n    }\n\n    async init(): Promise<void> {\n        const stat = await this.getFileStat();\n        if (stat && stat.isDirectory) {\n            throw new Error('The given uri is a directory: ' + this.uriString);\n        }\n\n        this.toDispose.push(this.fileSystemWatcher.onFilesChanged(event => {\n            if (FileChangeEvent.isAffected(event, this.uri)) {\n                this.sync();\n            }\n        }));\n        this.toDispose.push(this.fileSystemWatcher.onDidDelete(event => {\n            if (event.uri.isEqualOrParent(this.uri)) {\n                this.sync();\n            }\n        }));\n        this.toDispose.push(this.fileSystemWatcher.onDidMove(event => {\n            if (event.sourceUri.isEqualOrParent(this.uri) || event.targetUri.isEqualOrParent(this.uri)) {\n                this.sync();\n            }\n        }));\n        try {\n            this.toDispose.push(await this.fileSystemWatcher.watchFileChanges(this.uri));\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    async readContents(options?: { encoding?: string }): Promise<string> {\n        try {\n            const { stat, content } = await this.fileSystem.resolveContent(this.uriString, options);\n            this._version = { stat };\n            return content;\n        } catch (e) {\n            if (FileSystemError.FileNotFound.is(e)) {\n                this._version = undefined;\n                throw ResourceError.NotFound({\n                    ...e.toJson(),\n                    data: {\n                        uri: this.uri\n                    }\n                });\n            }\n            throw e;\n        }\n    }\n\n    async saveContents(content: string, options?: ResourceSaveOptions): Promise<void> {\n        try {\n            let resolvedOptions = options;\n            if (options && options.overwriteEncoding) {\n                resolvedOptions = {\n                    ...options,\n                    encoding: options.overwriteEncoding\n                };\n                delete resolvedOptions.overwriteEncoding;\n            }\n            const stat = await this.doSaveContents(content, resolvedOptions);\n            this._version = { stat };\n        } catch (e) {\n            if (FileSystemError.FileIsOutOfSync.is(e)) {\n                throw ResourceError.OutOfSync({ ...e.toJson(), data: { uri: this.uri } });\n            }\n            throw e;\n        }\n    }\n    protected async doSaveContents(content: string, options?: { encoding?: string, version?: ResourceVersion }): Promise<FileStat> {\n        const version = options && options.version || this._version;\n        const stat = FileResourceVersion.is(version) && version.stat || await this.getFileStat();\n        if (stat) {\n            try {\n                return await this.fileSystem.setContent(stat, content, options);\n            } catch (e) {\n                if (!FileSystemError.FileNotFound.is(e)) {\n                    throw e;\n                }\n            }\n        }\n        return this.fileSystem.createFile(this.uriString, { content, ...options });\n    }\n\n    async saveContentChanges(changes: TextDocumentContentChangeEvent[], options?: ResourceSaveOptions): Promise<void> {\n        const version = options && options.version || this._version;\n        const currentStat = FileResourceVersion.is(version) && version.stat;\n        if (!currentStat) {\n            throw ResourceError.NotFound({ message: 'has not been read yet', data: { uri: this.uri } });\n        }\n        try {\n            const stat = await this.fileSystem.updateContent(currentStat, changes, options);\n            this._version = { stat };\n        } catch (e) {\n            if (FileSystemError.FileNotFound.is(e)) {\n                throw ResourceError.NotFound({ ...e.toJson(), data: { uri: this.uri } });\n            }\n            if (FileSystemError.FileIsOutOfSync.is(e)) {\n                throw ResourceError.OutOfSync({ ...e.toJson(), data: { uri: this.uri } });\n            }\n            throw e;\n        }\n    }\n\n    async guessEncoding(): Promise<string | undefined> {\n        return this.fileSystem.guessEncoding(this.uriString);\n    }\n\n    protected async sync(): Promise<void> {\n        if (await this.isInSync()) {\n            return;\n        }\n        this.onDidChangeContentsEmitter.fire(undefined);\n    }\n    protected async isInSync(): Promise<boolean> {\n        const stat = await this.getFileStat();\n        const current = this.version && this.version.stat;\n        if (!current) {\n            return !stat;\n        }\n        return !!stat && current.lastModification >= stat.lastModification;\n    }\n\n    protected async getFileStat(): Promise<FileStat | undefined> {\n        if (!await this.fileSystem.exists(this.uriString)) {\n            return undefined;\n        }\n        try {\n            return this.fileSystem.getFileStat(this.uriString);\n        } catch {\n            return undefined;\n        }\n    }\n\n}\n\n@injectable()\nexport class FileResourceResolver implements ResourceResolver {\n\n    @inject(FileSystem)\n    protected readonly fileSystem: FileSystem;\n\n    @inject(FileSystemWatcher)\n    protected readonly fileSystemWatcher: FileSystemWatcher;\n\n    async resolve(uri: URI): Promise<FileResource> {\n        if (uri.scheme !== 'file') {\n            throw new Error('The given uri is not file uri: ' + uri);\n        }\n        const resource = new FileResource(uri, this.fileSystem, this.fileSystemWatcher);\n        await resource.init();\n        return resource;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { SelectionCommandHandler } from '@theia/core/lib/common/selection-command-handler';\nimport { FileStat } from '../common/filesystem';\n\nexport interface FileSelection {\n    fileStat: FileStat\n}\nexport namespace FileSelection {\n    export function is(arg: Object | undefined): arg is FileSelection {\n        return typeof arg === 'object' && ('fileStat' in arg) && FileStat.is(arg['fileStat']);\n    }\n    export class CommandHandler extends SelectionCommandHandler<FileSelection> {\n\n        constructor(\n            protected readonly selectionService: SelectionService,\n            protected readonly options: SelectionCommandHandler.Options<FileSelection>\n        ) {\n            super(\n                selectionService,\n                arg => FileSelection.is(arg) ? arg : undefined,\n                options\n            );\n        }\n\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { environment } from '@theia/application-package/lib/environment';\nimport { MaybePromise, SelectionService, isCancelled } from '@theia/core/lib/common';\nimport { Command, CommandContribution, CommandRegistry } from '@theia/core/lib/common/command';\nimport {\n    FrontendApplicationContribution, ApplicationShell,\n    NavigatableWidget, NavigatableWidgetOptions,\n    Saveable, WidgetManager, StatefulWidget, FrontendApplication, ExpandableTreeNode, waitForClosed\n} from '@theia/core/lib/browser';\nimport { FileSystemWatcher, FileChangeEvent, FileMoveEvent, FileChangeType } from './filesystem-watcher';\nimport { MimeService } from '@theia/core/lib/browser/mime-service';\nimport { TreeWidgetSelection } from '@theia/core/lib/browser/tree/tree-widget-selection';\nimport { FileSystemPreferences } from './filesystem-preferences';\nimport { FileSelection } from './file-selection';\nimport { FileUploadService } from './file-upload-service';\n\nexport namespace FileSystemCommands {\n\n    export const UPLOAD: Command = {\n        id: 'file.upload',\n        category: 'File',\n        label: 'Upload Files...'\n    };\n\n}\n\nexport interface NavigatableWidgetMoveSnapshot {\n    dirty?: object,\n    view?: object\n}\n\n@injectable()\nexport class FileSystemFrontendContribution implements FrontendApplicationContribution, CommandContribution {\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    @inject(WidgetManager)\n    protected readonly widgetManager: WidgetManager;\n\n    @inject(FileSystemWatcher)\n    protected readonly fileSystemWatcher: FileSystemWatcher;\n\n    @inject(MimeService)\n    protected readonly mimeService: MimeService;\n\n    @inject(FileSystemPreferences)\n    protected readonly preferences: FileSystemPreferences;\n\n    @inject(SelectionService)\n    protected readonly selectionService: SelectionService;\n\n    @inject(FileUploadService)\n    protected readonly uploadService: FileUploadService;\n\n    initialize(): void {\n        this.fileSystemWatcher.onFilesChanged(event => this.run(() => this.updateWidgets(event)));\n        this.fileSystemWatcher.onWillMove(event => event.waitUntil(this.runEach((uri, widget) => this.pushMove(uri, widget, event))));\n        this.fileSystemWatcher.onDidFailMove(event => event.waitUntil(this.runEach((uri, widget) => this.revertMove(uri, widget, event))));\n        this.fileSystemWatcher.onDidMove(event => event.waitUntil(this.runEach((uri, widget) => this.applyMove(uri, widget, event))));\n    }\n\n    onStart?(app: FrontendApplication): MaybePromise<void> {\n        this.updateAssociations();\n        this.preferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'files.associations') {\n                this.updateAssociations();\n            }\n        });\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(FileSystemCommands.UPLOAD, new FileSelection.CommandHandler(this.selectionService, {\n            multi: false,\n            isEnabled: selection => this.canUpload(selection),\n            isVisible: selection => this.canUpload(selection),\n            execute: selection => this.upload(selection)\n        }));\n    }\n\n    protected canUpload({ fileStat }: FileSelection): boolean {\n        return !environment.electron.is() && fileStat.isDirectory;\n    }\n\n    protected async upload(selection: FileSelection): Promise<void> {\n        try {\n            const source = TreeWidgetSelection.getSource(this.selectionService.selection);\n            await this.uploadService.upload(selection.fileStat.uri);\n            if (ExpandableTreeNode.is(selection) && source) {\n                await source.model.expandNode(selection);\n            }\n        } catch (e) {\n            if (!isCancelled(e)) {\n                console.error(e);\n            }\n        }\n    }\n\n    protected pendingOperation = Promise.resolve();\n    protected run(operation: () => MaybePromise<void>): Promise<void> {\n        return this.pendingOperation = this.pendingOperation.then(async () => {\n            try {\n                await operation();\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    protected runEach(participant: (resourceUri: URI, widget: NavigatableWidget) => Promise<void>): Promise<void> {\n        return this.run(async () => {\n            const promises: Promise<void>[] = [];\n            for (const [resourceUri, widget] of NavigatableWidget.get(this.shell.widgets)) {\n                promises.push(participant(resourceUri, widget));\n            }\n            await Promise.all(promises);\n        });\n    }\n\n    protected readonly moveSnapshots = new Map<string, NavigatableWidgetMoveSnapshot>();\n\n    protected popMoveSnapshot(resourceUri: URI): NavigatableWidgetMoveSnapshot | undefined {\n        const snapshotKey = resourceUri.toString();\n        const snapshot = this.moveSnapshots.get(snapshotKey);\n        if (snapshot) {\n            this.moveSnapshots.delete(snapshotKey);\n        }\n        return snapshot;\n    }\n\n    protected applyMoveSnapshot(widget: NavigatableWidget, snapshot: NavigatableWidgetMoveSnapshot | undefined): void {\n        if (!snapshot) {\n            return undefined;\n        }\n        if (snapshot.dirty) {\n            const saveable = Saveable.get(widget);\n            if (saveable && saveable.applySnapshot) {\n                saveable.applySnapshot(snapshot.dirty);\n            }\n        }\n        if (snapshot.view && StatefulWidget.is(widget)) {\n            widget.restoreState(snapshot.view);\n        }\n    }\n\n    protected async pushMove(resourceUri: URI, widget: NavigatableWidget, event: FileMoveEvent): Promise<void> {\n        const newResourceUri = this.createMoveToUri(resourceUri, widget, event);\n        if (!newResourceUri) {\n            return;\n        }\n        const snapshot: NavigatableWidgetMoveSnapshot = {};\n        const saveable = Saveable.get(widget);\n        if (StatefulWidget.is(widget)) {\n            snapshot.view = widget.storeState();\n        }\n        if (saveable && saveable.dirty) {\n            if (saveable.createSnapshot) {\n                snapshot.dirty = saveable.createSnapshot();\n            }\n            if (saveable.revert) {\n                await saveable.revert({ soft: true });\n            }\n        }\n        this.moveSnapshots.set(newResourceUri.toString(), snapshot);\n    }\n\n    protected async revertMove(resourceUri: URI, widget: NavigatableWidget, event: FileMoveEvent): Promise<void> {\n        const newResourceUri = this.createMoveToUri(resourceUri, widget, event);\n        if (!newResourceUri) {\n            return;\n        }\n        const snapshot = this.popMoveSnapshot(newResourceUri);\n        this.applyMoveSnapshot(widget, snapshot);\n    }\n\n    protected async applyMove(resourceUri: URI, widget: NavigatableWidget, event: FileMoveEvent): Promise<void> {\n        const newResourceUri = this.createMoveToUri(resourceUri, widget, event);\n        if (!newResourceUri) {\n            return;\n        }\n\n        const snapshot = this.popMoveSnapshot(newResourceUri);\n\n        const description = this.widgetManager.getDescription(widget);\n        if (!description) {\n            return;\n        }\n        const { factoryId, options } = description;\n        if (!NavigatableWidgetOptions.is(options)) {\n            return;\n        }\n\n        const newWidget = await this.widgetManager.getOrCreateWidget<NavigatableWidget>(factoryId, <NavigatableWidgetOptions>{\n            ...options,\n            uri: newResourceUri.toString()\n        });\n        this.applyMoveSnapshot(newWidget, snapshot);\n        const area = this.shell.getAreaFor(widget) || 'main';\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const pending: Promise<any>[] = [this.shell.addWidget(newWidget, {\n            area, ref: widget\n        })];\n        if (this.shell.activeWidget === widget) {\n            pending.push(this.shell.activateWidget(newWidget.id));\n        } else if (widget.isVisible) {\n            pending.push(this.shell.revealWidget(newWidget.id));\n        }\n        pending.push(this.shell.closeWidget(widget.id, { save: false }));\n        await Promise.all(pending);\n    }\n    protected createMoveToUri(resourceUri: URI, widget: NavigatableWidget, event: FileMoveEvent): URI | undefined {\n        const path = event.sourceUri.relative(resourceUri);\n        const targetUri = path && event.targetUri.resolve(path);\n        return targetUri && widget.createMoveToUri(targetUri);\n    }\n\n    protected readonly deletedSuffix = ' (deleted from disk)';\n    protected async updateWidgets(event: FileChangeEvent): Promise<void> {\n        const relevantEvent = event.filter(({ type }) => type !== FileChangeType.UPDATED);\n        if (relevantEvent.length) {\n            return this.doUpdateWidgets(relevantEvent);\n        }\n    }\n    protected async doUpdateWidgets(event: FileChangeEvent): Promise<void> {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const pending: Promise<any>[] = [];\n\n        const dirty = new Set<string>();\n        const toClose = new Map<string, NavigatableWidget[]>();\n        for (const [uri, widget] of NavigatableWidget.get(this.shell.widgets)) {\n            this.updateWidget(uri, widget, event, { dirty, toClose });\n        }\n        for (const [uriString, widgets] of toClose.entries()) {\n            if (!dirty.has(uriString)) {\n                for (const widget of widgets) {\n                    widget.close();\n                    pending.push(waitForClosed(widget));\n                }\n            }\n        }\n\n        await Promise.all(pending);\n    }\n    protected updateWidget(uri: URI, widget: NavigatableWidget, event: FileChangeEvent, { dirty, toClose }: {\n        dirty: Set<string>;\n        toClose: Map<string, NavigatableWidget[]>\n    }): void {\n        const label = widget.title.label;\n        const deleted = label.endsWith(this.deletedSuffix);\n        if (FileChangeEvent.isDeleted(event, uri)) {\n            const uriString = uri.toString();\n            if (Saveable.isDirty(widget)) {\n                if (!deleted) {\n                    widget.title.label += this.deletedSuffix;\n                }\n                dirty.add(uriString);\n            }\n            const widgets = toClose.get(uriString) || [];\n            widgets.push(widget);\n            toClose.set(uriString, widgets);\n        } else if (FileChangeEvent.isAdded(event, uri)) {\n            if (deleted) {\n                widget.title.label = widget.title.label.substr(0, label.length - this.deletedSuffix.length);\n            }\n        }\n    }\n\n    protected updateAssociations(): void {\n        const fileAssociations = this.preferences['files.associations'];\n        const mimeAssociations = Object.keys(fileAssociations).map(filepattern => ({ id: fileAssociations[filepattern], filepattern }));\n        this.mimeService.setAssociations(mimeAssociations);\n    }\n}\n"],"sourceRoot":""}