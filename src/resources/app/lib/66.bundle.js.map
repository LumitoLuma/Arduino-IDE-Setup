{"version":3,"sources":["webpack:///./node_modules/@theia/task/src/browser/process/process-task-contribution.ts","webpack:///./node_modules/@theia/task/src/browser/process/process-task-frontend-module.ts","webpack:///./node_modules/@theia/task/src/browser/process/process-task-resolver.ts","webpack:///./node_modules/@theia/task/src/browser/task-frontend-contribution.ts","webpack:///./node_modules/@theia/task/src/browser/task-frontend-module.ts","webpack:///./node_modules/@theia/task/src/browser/task-preferences.ts","webpack:///./node_modules/@theia/task/src/browser/tasks-monaco-contribution.ts","webpack:///./node_modules/@theia/task/src/common/task-common-module.ts","webpack:///./node_modules/@theia/task/src/browser/style/index.css?19c9","webpack:///./node_modules/@theia/task/src/browser/style/index.css"],"names":[],"mappings":"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","file":"66.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { ProcessTaskResolver } from './process-task-resolver';\nimport { TaskContribution, TaskResolverRegistry } from '../task-contribution';\n\n@injectable()\nexport class ProcessTaskContribution implements TaskContribution {\n\n    @inject(ProcessTaskResolver)\n    protected readonly processTaskResolver: ProcessTaskResolver;\n\n    registerResolvers(resolvers: TaskResolverRegistry): void {\n        resolvers.register('process', this.processTaskResolver);\n        resolvers.register('shell', this.processTaskResolver);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport { ProcessTaskContribution } from './process-task-contribution';\nimport { ProcessTaskResolver } from './process-task-resolver';\nimport { TaskContribution } from '../task-contribution';\n\nexport function bindProcessTaskModule(bind: interfaces.Bind): void {\n\n    bind(ProcessTaskResolver).toSelf().inSingletonScope();\n    bind(ProcessTaskContribution).toSelf().inSingletonScope();\n    bind(TaskContribution).toService(ProcessTaskContribution);\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { VariableResolverService } from '@theia/variable-resolver/lib/browser';\nimport { TaskResolver } from '../task-contribution';\nimport { TaskConfiguration } from '../../common/task-protocol';\nimport { ProcessTaskConfiguration } from '../../common/process/task-protocol';\nimport { TaskDefinitionRegistry } from '../task-definition-registry';\nimport URI from '@theia/core/lib/common/uri';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\n\n@injectable()\nexport class ProcessTaskResolver implements TaskResolver {\n\n    @inject(VariableResolverService)\n    protected readonly variableResolverService: VariableResolverService;\n\n    @inject(TaskDefinitionRegistry)\n    protected readonly taskDefinitionRegistry: TaskDefinitionRegistry;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    /**\n     * Perform some adjustments to the task launch configuration, before sending\n     * it to the backend to be executed. We can make sure that parameters that\n     * are optional to the user but required by the server will be defined, with\n     * sane default values. Also, resolve all known variables, e.g. `${workspaceFolder}`.\n     */\n    async resolveTask(taskConfig: TaskConfiguration): Promise<TaskConfiguration> {\n        if (taskConfig.type !== 'process' && taskConfig.type !== 'shell') {\n            throw new Error('Unsupported task configuration type.');\n        }\n        const context = typeof taskConfig._scope === 'string' ? new URI(taskConfig._scope) : undefined;\n        const variableResolverOptions = {\n            context, configurationSection: 'tasks'\n        };\n        const processTaskConfig = taskConfig as ProcessTaskConfiguration;\n        let cwd = processTaskConfig.options && processTaskConfig.options.cwd;\n        if (!cwd) {\n            const rootURI = this.workspaceService.getWorkspaceRootUri(context);\n            if (rootURI) {\n                cwd = rootURI.toString();\n            }\n        }\n\n        const result: ProcessTaskConfiguration = {\n            ...processTaskConfig,\n            command: await this.variableResolverService.resolve(processTaskConfig.command, variableResolverOptions),\n            args: processTaskConfig.args ? await this.variableResolverService.resolveArray(processTaskConfig.args, variableResolverOptions) : undefined,\n            windows: processTaskConfig.windows ? {\n                command: await this.variableResolverService.resolve(processTaskConfig.windows.command, variableResolverOptions),\n                args: processTaskConfig.windows.args ? await this.variableResolverService.resolveArray(processTaskConfig.windows.args, variableResolverOptions) : undefined,\n                options: processTaskConfig.windows.options\n            } : undefined,\n            osx: processTaskConfig.osx ? {\n                command: await this.variableResolverService.resolve(processTaskConfig.osx.command, variableResolverOptions),\n                args: processTaskConfig.osx.args ? await this.variableResolverService.resolveArray(processTaskConfig.osx.args, variableResolverOptions) : undefined,\n                options: processTaskConfig.osx.options\n            } : undefined,\n            linux: processTaskConfig.linux ? {\n                command: await this.variableResolverService.resolve(processTaskConfig.linux.command, variableResolverOptions),\n                args: processTaskConfig.linux.args ? await this.variableResolverService.resolveArray(processTaskConfig.linux.args, variableResolverOptions) : undefined,\n                options: processTaskConfig.linux.options\n            } : undefined,\n            options: {\n                cwd: await this.variableResolverService.resolve(cwd, variableResolverOptions),\n                env: processTaskConfig.options && processTaskConfig.options.env,\n                shell: processTaskConfig.options && processTaskConfig.options.shell\n            }\n        };\n        return result;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, named, postConstruct } from 'inversify';\nimport { ILogger, ContributionProvider } from '@theia/core/lib/common';\nimport { QuickOpenTask, TaskTerminateQuickOpen, TaskRunningQuickOpen, TaskRestartRunningQuickOpen } from './quick-open-task';\nimport { CommandContribution, Command, CommandRegistry, MenuContribution, MenuModelRegistry } from '@theia/core/lib/common';\nimport {\n    FrontendApplication, FrontendApplicationContribution, QuickOpenContribution,\n    QuickOpenHandlerRegistry, KeybindingRegistry, KeybindingContribution, StorageService, StatusBar, StatusBarAlignment\n} from '@theia/core/lib/browser';\nimport { WidgetManager } from '@theia/core/lib/browser/widget-manager';\nimport { TaskContribution, TaskResolverRegistry, TaskProviderRegistry } from './task-contribution';\nimport { TaskService } from './task-service';\nimport { TerminalMenus } from '@theia/terminal/lib/browser/terminal-frontend-contribution';\nimport { TaskSchemaUpdater } from './task-schema-updater';\nimport { TaskConfiguration, TaskWatcher } from '../common';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\n\nexport namespace TaskCommands {\n    const TASK_CATEGORY = 'Task';\n    export const TASK_RUN: Command = {\n        id: 'task:run',\n        category: TASK_CATEGORY,\n        label: 'Run Task...'\n    };\n\n    export const TASK_RUN_BUILD: Command = {\n        id: 'task:run:build',\n        category: TASK_CATEGORY,\n        label: 'Run Build Task...'\n    };\n\n    export const TASK_RUN_TEST: Command = {\n        id: 'task:run:test',\n        category: TASK_CATEGORY,\n        label: 'Run Test Task...'\n    };\n\n    export const WORKBENCH_RUN_TASK: Command = {\n        id: 'workbench.action.tasks.runTask',\n        category: TASK_CATEGORY\n    };\n\n    export const TASK_RUN_LAST: Command = {\n        id: 'task:run:last',\n        category: TASK_CATEGORY,\n        label: 'Run Last Task'\n    };\n\n    export const TASK_ATTACH: Command = {\n        id: 'task:attach',\n        category: TASK_CATEGORY,\n        label: 'Attach Task...'\n    };\n\n    export const TASK_RUN_TEXT: Command = {\n        id: 'task:run:text',\n        category: TASK_CATEGORY,\n        label: 'Run Selected Text'\n    };\n\n    export const TASK_CONFIGURE: Command = {\n        id: 'task:configure',\n        category: TASK_CATEGORY,\n        label: 'Configure Tasks...'\n    };\n\n    export const TASK_OPEN_USER: Command = {\n        id: 'task:open_user',\n        category: TASK_CATEGORY,\n        label: 'Open User Tasks'\n    };\n\n    export const TASK_CLEAR_HISTORY: Command = {\n        id: 'task:clear-history',\n        category: TASK_CATEGORY,\n        label: 'Clear History'\n    };\n\n    export const TASK_SHOW_RUNNING: Command = {\n        id: 'task:show-running',\n        category: TASK_CATEGORY,\n        label: 'Show Running Tasks'\n    };\n\n    export const TASK_TERMINATE: Command = {\n        id: 'task:terminate',\n        category: TASK_CATEGORY,\n        label: 'Terminate Task'\n    };\n\n    export const TASK_RESTART_RUNNING: Command = {\n        id: 'task:restart-running',\n        category: TASK_CATEGORY,\n        label: 'Restart Running Task...'\n    };\n}\n\nconst TASKS_STORAGE_KEY = 'tasks';\n\n@injectable()\nexport class TaskFrontendContribution implements CommandContribution, MenuContribution, KeybindingContribution, FrontendApplicationContribution, QuickOpenContribution {\n    @inject(QuickOpenTask)\n    protected readonly quickOpenTask: QuickOpenTask;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(FrontendApplication)\n    protected readonly app: FrontendApplication;\n\n    @inject(ILogger) @named('task')\n    protected readonly logger: ILogger;\n\n    @inject(WidgetManager)\n    protected readonly widgetManager: WidgetManager;\n\n    @inject(ContributionProvider) @named(TaskContribution)\n    protected readonly contributionProvider: ContributionProvider<TaskContribution>;\n\n    @inject(TaskProviderRegistry)\n    protected readonly taskProviderRegistry: TaskProviderRegistry;\n\n    @inject(TaskResolverRegistry)\n    protected readonly taskResolverRegistry: TaskResolverRegistry;\n\n    @inject(TaskService)\n    protected readonly taskService: TaskService;\n\n    @inject(TaskSchemaUpdater)\n    protected readonly schemaUpdater: TaskSchemaUpdater;\n\n    @inject(StorageService)\n    protected readonly storageService: StorageService;\n\n    @inject(TaskRunningQuickOpen)\n    protected readonly taskRunningQuickOpen: TaskRunningQuickOpen;\n\n    @inject(TaskTerminateQuickOpen)\n    protected readonly taskTerminateQuickOpen: TaskTerminateQuickOpen;\n\n    @inject(TaskRestartRunningQuickOpen)\n    protected readonly taskRestartRunningQuickOpen: TaskRestartRunningQuickOpen;\n\n    @inject(TaskWatcher)\n    protected readonly taskWatcher: TaskWatcher;\n\n    @inject(StatusBar)\n    protected readonly statusBar: StatusBar;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        this.taskWatcher.onTaskCreated(() => this.updateRunningTasksItem());\n        this.taskWatcher.onTaskExit(() => this.updateRunningTasksItem());\n    }\n\n    onStart(): void {\n        this.contributionProvider.getContributions().forEach(contrib => {\n            if (contrib.registerResolvers) {\n                contrib.registerResolvers(this.taskResolverRegistry);\n            }\n            if (contrib.registerProviders) {\n                contrib.registerProviders(this.taskProviderRegistry);\n            }\n        });\n        this.schemaUpdater.update();\n\n        this.storageService.getData<{ recent: TaskConfiguration[] }>(TASKS_STORAGE_KEY, { recent: [] })\n            .then(tasks => this.taskService.recentTasks = tasks.recent);\n    }\n\n    onStop(): void {\n        const recent = this.taskService.recentTasks;\n        this.storageService.setData<{ recent: TaskConfiguration[] }>(TASKS_STORAGE_KEY, { recent });\n    }\n\n    /**\n     * Contribute a status-bar item to trigger\n     * the `Show Running Tasks` command.\n     */\n    protected async updateRunningTasksItem(): Promise<void> {\n        const id = 'show-running-tasks';\n        const items = await this.taskService.getRunningTasks();\n        if (!!items.length) {\n            this.statusBar.setElement(id, {\n                text: `$(tools) ${items.length}`,\n                tooltip: 'Show Running Tasks',\n                alignment: StatusBarAlignment.LEFT,\n                priority: 2,\n                command: TaskCommands.TASK_SHOW_RUNNING.id,\n            });\n        } else {\n            this.statusBar.removeElement(id);\n        }\n    }\n\n    registerCommands(registry: CommandRegistry): void {\n        registry.registerCommand(\n            TaskCommands.WORKBENCH_RUN_TASK,\n            {\n                isEnabled: () => true,\n                execute: async (label: string) => {\n                    const didExecute = await this.taskService.runTaskByLabel(this.taskService.startUserAction(), label);\n                    if (!didExecute) {\n                        this.quickOpenTask.open();\n                    }\n                }\n            }\n        );\n\n        registry.registerCommand(\n            TaskCommands.TASK_RUN,\n            {\n                isEnabled: () => true,\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                execute: (...args: any[]) => {\n                    const [source, label, scope] = args;\n                    if (source && label) {\n                        return this.taskService.run(this.taskService.startUserAction(), source, label, scope);\n                    }\n                    return this.quickOpenTask.open();\n                }\n            }\n        );\n        registry.registerCommand(\n            TaskCommands.TASK_RUN_BUILD,\n            {\n                isEnabled: () => this.workspaceService.opened,\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                execute: (...args: any[]) =>\n                    this.quickOpenTask.runBuildOrTestTask('build')\n            }\n        );\n        registry.registerCommand(\n            TaskCommands.TASK_RUN_TEST,\n            {\n                isEnabled: () => this.workspaceService.opened,\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                execute: (...args: any[]) =>\n                    this.quickOpenTask.runBuildOrTestTask('test')\n            }\n        );\n        registry.registerCommand(\n            TaskCommands.TASK_ATTACH,\n            {\n                isEnabled: () => true,\n                execute: () => this.quickOpenTask.attach()\n            }\n        );\n        registry.registerCommand(\n            TaskCommands.TASK_RUN_LAST,\n            {\n                execute: async () => {\n                    if (!await this.taskService.runLastTask(this.taskService.startUserAction())) {\n                        await this.quickOpenTask.open();\n                    }\n                }\n            }\n        );\n        registry.registerCommand(\n            TaskCommands.TASK_RUN_TEXT,\n            {\n                isVisible: () => !!this.editorManager.currentEditor,\n                isEnabled: () => !!this.editorManager.currentEditor,\n                execute: () => this.taskService.runSelectedText()\n            }\n        );\n\n        registry.registerCommand(\n            TaskCommands.TASK_CONFIGURE,\n            {\n                execute: () => this.quickOpenTask.configure()\n            }\n        );\n\n        registry.registerCommand(\n            TaskCommands.TASK_OPEN_USER,\n            {\n                execute: () => {\n                    this.taskService.openUserTasks();\n                }\n            }\n        );\n\n        registry.registerCommand(\n            TaskCommands.TASK_CLEAR_HISTORY,\n            {\n                execute: () => this.taskService.clearRecentTasks()\n            }\n        );\n\n        registry.registerCommand(\n            TaskCommands.TASK_SHOW_RUNNING,\n            {\n                execute: () => this.taskRunningQuickOpen.open()\n            }\n        );\n\n        registry.registerCommand(\n            TaskCommands.TASK_TERMINATE,\n            {\n                execute: () => this.taskTerminateQuickOpen.open()\n            }\n        );\n\n        registry.registerCommand(\n            TaskCommands.TASK_RESTART_RUNNING,\n            {\n                execute: () => this.taskRestartRunningQuickOpen.open()\n            }\n        );\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS, {\n            commandId: TaskCommands.TASK_RUN.id,\n            order: '0'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS, {\n            commandId: TaskCommands.TASK_RUN_BUILD.id,\n            order: '1'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS, {\n            commandId: TaskCommands.TASK_RUN_TEST.id,\n            order: '2'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS, {\n            commandId: TaskCommands.TASK_RUN_LAST.id,\n            order: '3'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS, {\n            commandId: TaskCommands.TASK_ATTACH.id,\n            order: '4'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS, {\n            commandId: TaskCommands.TASK_RUN_TEXT.id,\n            order: '5'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS_INFO, {\n            commandId: TaskCommands.TASK_SHOW_RUNNING.id,\n            label: 'Show Running Tasks...',\n            order: '0'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS_INFO, {\n            commandId: TaskCommands.TASK_RESTART_RUNNING.id,\n            label: TaskCommands.TASK_RESTART_RUNNING.label,\n            order: '1'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS_INFO, {\n            commandId: TaskCommands.TASK_TERMINATE.id,\n            label: 'Terminate Task...',\n            order: '2'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_TASKS_CONFIG, {\n            commandId: TaskCommands.TASK_CONFIGURE.id,\n            order: '0'\n        });\n    }\n\n    registerQuickOpenHandlers(handlers: QuickOpenHandlerRegistry): void {\n        handlers.registerHandler(this.quickOpenTask);\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: TaskCommands.TASK_RUN_LAST.id,\n            keybinding: 'ctrlcmd+shift+k',\n            when: '!textInputFocus || editorReadonly'\n        });\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from 'inversify';\nimport { FrontendApplicationContribution, QuickOpenContribution, KeybindingContribution } from '@theia/core/lib/browser';\nimport { CommandContribution, MenuContribution, bindContributionProvider } from '@theia/core/lib/common';\nimport { WebSocketConnectionProvider } from '@theia/core/lib/browser/messaging';\nimport { QuickOpenTask, TaskTerminateQuickOpen, TaskRestartRunningQuickOpen, TaskRunningQuickOpen, TaskActionProvider, ConfigureTaskAction } from './quick-open-task';\nimport { TaskContribution, TaskProviderRegistry, TaskResolverRegistry } from './task-contribution';\nimport { TaskService } from './task-service';\nimport { TaskConfigurations } from './task-configurations';\nimport { ProvidedTaskConfigurations } from './provided-task-configurations';\nimport { TaskFrontendContribution } from './task-frontend-contribution';\nimport { createCommonBindings } from '../common/task-common-module';\nimport { TaskServer, taskPath } from '../common/task-protocol';\nimport { TaskWatcher } from '../common/task-watcher';\nimport { bindProcessTaskModule } from './process/process-task-frontend-module';\nimport { TaskSchemaUpdater } from './task-schema-updater';\nimport { TaskDefinitionRegistry } from './task-definition-registry';\nimport { ProblemMatcherRegistry } from './task-problem-matcher-registry';\nimport { ProblemPatternRegistry } from './task-problem-pattern-registry';\nimport { TaskConfigurationManager } from './task-configuration-manager';\nimport { bindTaskPreferences } from './task-preferences';\nimport '../../src/browser/style/index.css';\nimport './tasks-monaco-contribution';\nimport { TaskNameResolver } from './task-name-resolver';\nimport { TaskSourceResolver } from './task-source-resolver';\nimport { TaskTemplateSelector } from './task-templates';\nimport { TaskTerminalWidgetManager } from './task-terminal-widget-manager';\nimport { JsonSchemaContribution } from '@theia/core/lib/browser/json-schema-store';\n\nexport default new ContainerModule(bind => {\n    bind(TaskFrontendContribution).toSelf().inSingletonScope();\n    bind(TaskService).toSelf().inSingletonScope();\n    bind(TaskActionProvider).toSelf().inSingletonScope();\n    bind(ConfigureTaskAction).toSelf().inSingletonScope();\n\n    for (const identifier of [FrontendApplicationContribution, CommandContribution, KeybindingContribution, MenuContribution, QuickOpenContribution]) {\n        bind(identifier).toService(TaskFrontendContribution);\n    }\n\n    bind(QuickOpenTask).toSelf().inSingletonScope();\n    bind(TaskRunningQuickOpen).toSelf().inSingletonScope();\n    bind(TaskTerminateQuickOpen).toSelf().inSingletonScope();\n    bind(TaskRestartRunningQuickOpen).toSelf().inSingletonScope();\n    bind(TaskConfigurations).toSelf().inSingletonScope();\n    bind(ProvidedTaskConfigurations).toSelf().inSingletonScope();\n    bind(TaskConfigurationManager).toSelf().inSingletonScope();\n\n    bind(TaskServer).toDynamicValue(ctx => {\n        const connection = ctx.container.get(WebSocketConnectionProvider);\n        const taskWatcher = ctx.container.get(TaskWatcher);\n        return connection.createProxy<TaskServer>(taskPath, taskWatcher.getTaskClient());\n    }).inSingletonScope();\n\n    bind(TaskDefinitionRegistry).toSelf().inSingletonScope();\n    bind(ProblemMatcherRegistry).toSelf().inSingletonScope();\n    bind(ProblemPatternRegistry).toSelf().inSingletonScope();\n\n    createCommonBindings(bind);\n\n    bind(TaskProviderRegistry).toSelf().inSingletonScope();\n    bind(TaskResolverRegistry).toSelf().inSingletonScope();\n    bindContributionProvider(bind, TaskContribution);\n    bind(TaskSchemaUpdater).toSelf().inSingletonScope();\n    bind(JsonSchemaContribution).toService(TaskSchemaUpdater);\n    bind(TaskNameResolver).toSelf().inSingletonScope();\n    bind(TaskSourceResolver).toSelf().inSingletonScope();\n    bind(TaskTemplateSelector).toSelf().inSingletonScope();\n    bind(TaskTerminalWidgetManager).toSelf().inSingletonScope();\n\n    bindProcessTaskModule(bind);\n    bindTaskPreferences(bind);\n});\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport { PreferenceContribution, PreferenceSchema } from '@theia/core/lib/browser/preferences/preference-contribution';\nimport { taskSchemaId } from './task-schema-updater';\nimport { PreferenceConfiguration } from '@theia/core/lib/browser/preferences/preference-configurations';\n\nexport const taskPreferencesSchema: PreferenceSchema = {\n    type: 'object',\n    scope: 'resource',\n    properties: {\n        tasks: {\n            $ref: taskSchemaId,\n            description: 'Task definition file',\n            defaultValue: {\n                tasks: []\n            }\n        }\n    }\n};\n\nexport function bindTaskPreferences(bind: interfaces.Bind): void {\n    bind(PreferenceContribution).toConstantValue({ schema: taskPreferencesSchema });\n    bind(PreferenceConfiguration).toConstantValue({ name: 'tasks' });\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nmonaco.languages.register({\n    id: 'jsonc',\n    'aliases': [\n        'JSON with Comments'\n    ],\n    'filenames': [\n        'tasks.json'\n    ]\n});\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport { ILogger } from '@theia/core';\nimport { TaskWatcher } from './task-watcher';\n\n/**\n * Create the bindings common to node and browser.\n *\n * @param bind The bind function from inversify.\n */\nexport function createCommonBindings(bind: interfaces.Bind): void {\n\n    bind(ILogger).toDynamicValue(ctx => {\n        const logger = ctx.container.get<ILogger>(ILogger);\n        return logger.child('task');\n    }).inSingletonScope().whenTargetNamed('task');\n\n    bind(TaskWatcher).toSelf().inSingletonScope();\n}\n","\nvar content = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./index.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2019 Red Hat, Inc. and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n .quick-open-task-configure {\\n    margin-top: 3px !important;\\n}\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}