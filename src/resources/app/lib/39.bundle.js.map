{"version":3,"sources":["webpack:///./node_modules/@theia/search-in-workspace/src/browser/in-memory-text-resource.ts","webpack:///./node_modules/@theia/search-in-workspace/src/browser/search-in-workspace-context-key-service.ts","webpack:///./node_modules/@theia/search-in-workspace/src/browser/search-in-workspace-preferences.ts","webpack:///./node_modules/@theia/search-in-workspace/src/browser/search-in-workspace-result-tree-widget.tsx","webpack:///./node_modules/@theia/search-in-workspace/src/browser/search-in-workspace-service.ts","webpack:///./node_modules/@theia/search-in-workspace/src/browser/search-in-workspace-widget.tsx","webpack:///./node_modules/@theia/search-in-workspace/src/common/search-in-workspace-interface.ts"],"names":[],"mappings":"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","file":"39.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { ResourceResolver, Resource } from '@theia/core';\nimport URI from '@theia/core/lib/common/uri';\n\nexport const MEMORY_TEXT = 'mem-txt';\n\nexport class InMemoryTextResource implements Resource {\n\n    constructor(readonly uri: URI) { }\n\n    async readContents(options?: { encoding?: string | undefined; } | undefined): Promise<string> {\n        return this.uri.query;\n    }\n\n    dispose(): void { }\n}\n\n@injectable()\nexport class InMemoryTextResourceResolver implements ResourceResolver {\n    resolve(uri: URI): Resource | Promise<Resource> {\n        if (uri.scheme !== MEMORY_TEXT) {\n            throw new Error(`Expected a URI with ${MEMORY_TEXT} scheme. Was: ${uri}.`);\n        }\n        return new InMemoryTextResource(uri);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { ContextKeyService, ContextKey } from '@theia/core/lib/browser/context-key-service';\n\n@injectable()\nexport class SearchInWorkspaceContextKeyService {\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    protected _searchViewletVisible: ContextKey<boolean>;\n    get searchViewletVisible(): ContextKey<boolean> {\n        return this._searchViewletVisible;\n    }\n\n    protected _searchViewletFocus: ContextKey<boolean>;\n    get searchViewletFocus(): ContextKey<boolean> {\n        return this._searchViewletFocus;\n    }\n\n    protected searchInputBoxFocus: ContextKey<boolean>;\n    setSearchInputBoxFocus(searchInputBoxFocus: boolean): void {\n        this.searchInputBoxFocus.set(searchInputBoxFocus);\n        this.updateInputBoxFocus();\n    }\n\n    protected replaceInputBoxFocus: ContextKey<boolean>;\n    setReplaceInputBoxFocus(replaceInputBoxFocus: boolean): void {\n        this.replaceInputBoxFocus.set(replaceInputBoxFocus);\n        this.updateInputBoxFocus();\n    }\n\n    protected patternIncludesInputBoxFocus: ContextKey<boolean>;\n    setPatternIncludesInputBoxFocus(patternIncludesInputBoxFocus: boolean): void {\n        this.patternIncludesInputBoxFocus.set(patternIncludesInputBoxFocus);\n        this.updateInputBoxFocus();\n    }\n\n    protected patternExcludesInputBoxFocus: ContextKey<boolean>;\n    setPatternExcludesInputBoxFocus(patternExcludesInputBoxFocus: boolean): void {\n        this.patternExcludesInputBoxFocus.set(patternExcludesInputBoxFocus);\n        this.updateInputBoxFocus();\n    }\n\n    protected inputBoxFocus: ContextKey<boolean>;\n    protected updateInputBoxFocus(): void {\n        this.inputBoxFocus.set(\n            this.searchInputBoxFocus.get() ||\n            this.replaceInputBoxFocus.get() ||\n            this.patternIncludesInputBoxFocus.get() ||\n            this.patternExcludesInputBoxFocus.get()\n        );\n    }\n\n    protected _replaceActive: ContextKey<boolean>;\n    get replaceActive(): ContextKey<boolean> {\n        return this._replaceActive;\n    }\n\n    protected _hasSearchResult: ContextKey<boolean>;\n    get hasSearchResult(): ContextKey<boolean> {\n        return this._hasSearchResult;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this._searchViewletVisible = this.contextKeyService.createKey<boolean>('searchViewletVisible', false);\n        this._searchViewletFocus = this.contextKeyService.createKey<boolean>('searchViewletFocus', false);\n        this.inputBoxFocus = this.contextKeyService.createKey<boolean>('inputBoxFocus', false);\n        this.searchInputBoxFocus = this.contextKeyService.createKey<boolean>('searchInputBoxFocus', false);\n        this.replaceInputBoxFocus = this.contextKeyService.createKey<boolean>('replaceInputBoxFocus', false);\n        this.patternIncludesInputBoxFocus = this.contextKeyService.createKey<boolean>('patternIncludesInputBoxFocus', false);\n        this.patternExcludesInputBoxFocus = this.contextKeyService.createKey<boolean>('patternExcludesInputBoxFocus', false);\n        this._replaceActive = this.contextKeyService.createKey<boolean>('replaceActive', false);\n        this._hasSearchResult = this.contextKeyService.createKey<boolean>('hasSearchResult', false);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { PreferenceSchema, PreferenceProxy, PreferenceService, createPreferenceProxy, PreferenceContribution } from '@theia/core/lib/browser/preferences';\nimport { interfaces } from 'inversify';\n\nexport const searchInWorkspacePreferencesSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        'search.lineNumbers': {\n            description: 'Controls whether to show line numbers for search results.',\n            default: false,\n            type: 'boolean',\n        },\n        'search.collapseResults': {\n            description: 'Controls whether the search results will be collapsed or expanded.',\n            default: 'auto',\n            type: 'string',\n            enum: ['auto', 'alwaysCollapse', 'alwaysExpand'],\n        }\n    }\n};\n\nexport class SearchInWorkspaceConfiguration {\n    'search.lineNumbers': boolean;\n    'search.collapseResults': string;\n}\n\nexport const SearchInWorkspacePreferences = Symbol('SearchInWorkspacePreferences');\nexport type SearchInWorkspacePreferences = PreferenceProxy<SearchInWorkspaceConfiguration>;\n\nexport function createSearchInWorkspacePreferences(preferences: PreferenceService): SearchInWorkspacePreferences {\n    return createPreferenceProxy(preferences, searchInWorkspacePreferencesSchema);\n}\n\nexport function bindSearchInWorkspacePreferences(bind: interfaces.Bind): void {\n    bind(SearchInWorkspacePreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createSearchInWorkspacePreferences(preferences);\n    }).inSingletonScope();\n    bind(PreferenceContribution).toConstantValue({ schema: searchInWorkspacePreferencesSchema });\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport {\n    TreeWidget,\n    CompositeTreeNode,\n    ConfirmDialog,\n    ContextMenuRenderer,\n    ExpandableTreeNode,\n    SelectableTreeNode,\n    TreeModel,\n    TreeNode,\n    NodeProps,\n    TreeProps,\n    TreeExpansionService,\n    ApplicationShell,\n    DiffUris\n} from '@theia/core/lib/browser';\nimport { CancellationTokenSource, Emitter, Event } from '@theia/core';\nimport { EditorManager, EditorDecoration, TrackedRangeStickiness, OverviewRulerLane, EditorWidget, ReplaceOperation, EditorOpenerOptions } from '@theia/editor/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { FileResourceResolver } from '@theia/filesystem/lib/browser';\nimport { SearchInWorkspaceResult, SearchInWorkspaceOptions, SearchMatch } from '../common/search-in-workspace-interface';\nimport { SearchInWorkspaceService } from './search-in-workspace-service';\nimport { MEMORY_TEXT } from './in-memory-text-resource';\nimport URI from '@theia/core/lib/common/uri';\nimport * as React from 'react';\nimport { SearchInWorkspacePreferences } from './search-in-workspace-preferences';\nimport { ProgressService } from '@theia/core';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\n\nconst ROOT_ID = 'ResultTree';\n\nexport interface SearchInWorkspaceRoot extends CompositeTreeNode {\n    children: SearchInWorkspaceRootFolderNode[];\n}\nexport namespace SearchInWorkspaceRoot {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function is(node: any): node is SearchInWorkspaceRoot {\n        return CompositeTreeNode.is(node) && node.id === ROOT_ID;\n    }\n}\nexport interface SearchInWorkspaceRootFolderNode extends ExpandableTreeNode, SelectableTreeNode { // root folder node\n    name?: undefined\n    icon?: undefined\n    children: SearchInWorkspaceFileNode[];\n    parent: SearchInWorkspaceRoot;\n    path: string;\n    folderUri: string;\n}\nexport namespace SearchInWorkspaceRootFolderNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function is(node: any): node is SearchInWorkspaceRootFolderNode {\n        return ExpandableTreeNode.is(node) && SelectableTreeNode.is(node) && 'path' in node && 'folderUri' in node && !('fileUri' in node);\n    }\n}\n\nexport interface SearchInWorkspaceFileNode extends ExpandableTreeNode, SelectableTreeNode { // file node\n    name?: undefined\n    icon?: undefined\n    children: SearchInWorkspaceResultLineNode[];\n    parent: SearchInWorkspaceRootFolderNode;\n    path: string;\n    fileUri: string;\n}\nexport namespace SearchInWorkspaceFileNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function is(node: any): node is SearchInWorkspaceFileNode {\n        return ExpandableTreeNode.is(node) && SelectableTreeNode.is(node) && 'path' in node && 'fileUri' in node && !('folderUri' in node);\n    }\n}\n\nexport interface SearchInWorkspaceResultLineNode extends SelectableTreeNode, SearchInWorkspaceResult, SearchMatch { // line node\n    parent: SearchInWorkspaceFileNode\n}\nexport namespace SearchInWorkspaceResultLineNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function is(node: any): node is SearchInWorkspaceResultLineNode {\n        return SelectableTreeNode.is(node) && 'line' in node && 'character' in node && 'lineText' in node;\n    }\n}\n\n@injectable()\nexport class SearchInWorkspaceResultTreeWidget extends TreeWidget {\n\n    protected resultTree: Map<string, SearchInWorkspaceRootFolderNode>;\n\n    protected _showReplaceButtons = false;\n    protected _replaceTerm = '';\n    protected searchTerm = '';\n\n    protected appliedDecorations = new Map<string, string[]>();\n\n    cancelIndicator?: CancellationTokenSource;\n\n    protected changeEmitter = new Emitter<Map<string, SearchInWorkspaceRootFolderNode>>();\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected focusInputEmitter = new Emitter<any>();\n\n    @inject(SearchInWorkspaceService) protected readonly searchService: SearchInWorkspaceService;\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n    @inject(FileResourceResolver) protected readonly fileResourceResolver: FileResourceResolver;\n    @inject(ApplicationShell) protected readonly shell: ApplicationShell;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(TreeExpansionService) protected readonly expansionService: TreeExpansionService;\n    @inject(SearchInWorkspacePreferences) protected readonly searchInWorkspacePreferences: SearchInWorkspacePreferences;\n    @inject(ProgressService) protected readonly progressService: ProgressService;\n    @inject(ColorRegistry) protected readonly colorRegistry: ColorRegistry;\n\n    constructor(\n        @inject(TreeProps) readonly props: TreeProps,\n        @inject(TreeModel) readonly model: TreeModel,\n        @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer\n    ) {\n        super(props, model, contextMenuRenderer);\n\n        model.root = {\n            id: ROOT_ID,\n            parent: undefined,\n            visible: false,\n            children: []\n        } as SearchInWorkspaceRoot;\n\n        this.toDispose.push(model.onSelectionChanged(nodes => {\n            const node = nodes[0];\n            if (SearchInWorkspaceResultLineNode.is(node)) {\n                this.doOpen(node, true);\n            }\n        }));\n\n        this.resultTree = new Map<string, SearchInWorkspaceRootFolderNode>();\n        this.toDispose.push(model.onNodeRefreshed(() => this.changeEmitter.fire(this.resultTree)));\n    }\n\n    @postConstruct()\n    protected init(): void {\n        super.init();\n        this.addClass('resultContainer');\n\n        this.toDispose.push(this.changeEmitter);\n        this.toDispose.push(this.focusInputEmitter);\n\n        this.toDispose.push(this.editorManager.onActiveEditorChanged(() => {\n            this.updateCurrentEditorDecorations();\n        }));\n\n        this.toDispose.push(this.searchInWorkspacePreferences.onPreferenceChanged(() => {\n            this.update();\n        }));\n    }\n\n    get fileNumber(): number {\n        let num = 0;\n        for (const rootFolderNode of this.resultTree.values()) {\n            num += rootFolderNode.children.length;\n        }\n        return num;\n    }\n\n    set showReplaceButtons(srb: boolean) {\n        this._showReplaceButtons = srb;\n        this.update();\n    }\n\n    set replaceTerm(rt: string) {\n        this._replaceTerm = rt;\n        this.update();\n    }\n\n    get onChange(): Event<Map<string, SearchInWorkspaceRootFolderNode>> {\n        return this.changeEmitter.event;\n    }\n\n    get onFocusInput(): Event<void> {\n        return this.focusInputEmitter.event;\n    }\n\n    collapseAll(): void {\n        this.resultTree.forEach(rootFolderNode => {\n            rootFolderNode.children.forEach(fileNode => this.expansionService.collapseNode(fileNode));\n            if (rootFolderNode.visible) {\n                this.expansionService.collapseNode(rootFolderNode);\n            }\n        });\n    }\n\n    async search(searchTerm: string, searchOptions: SearchInWorkspaceOptions): Promise<void> {\n        this.searchTerm = searchTerm;\n        const collapseValue: string = this.searchInWorkspacePreferences['search.collapseResults'];\n        this.resultTree.clear();\n        if (this.cancelIndicator) {\n            this.cancelIndicator.cancel();\n        }\n        if (searchTerm === '') {\n            this.refreshModelChildren();\n            return;\n        }\n        this.cancelIndicator = new CancellationTokenSource();\n        const cancelIndicator = this.cancelIndicator;\n        const token = this.cancelIndicator.token;\n        const progress = await this.progressService.showProgress({ text: `search: ${searchTerm}`, options: { location: 'search' } });\n        token.onCancellationRequested(() => {\n            progress.cancel();\n            if (searchId) {\n                this.searchService.cancel(searchId);\n            }\n            this.cancelIndicator = undefined;\n            this.changeEmitter.fire(this.resultTree);\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let pendingRefreshTimeout: any;\n        const searchId = await this.searchService.search(searchTerm, {\n            onResult: (aSearchId: number, result: SearchInWorkspaceResult) => {\n                if (token.isCancellationRequested || aSearchId !== searchId) {\n                    return;\n                }\n                const { path } = this.filenameAndPath(result.root, result.fileUri);\n                const tree = this.resultTree;\n                let rootFolderNode = tree.get(result.root);\n                if (!rootFolderNode) {\n                    rootFolderNode = this.createRootFolderNode(result.root);\n                    tree.set(result.root, rootFolderNode);\n                }\n                let fileNode = rootFolderNode.children.find(f => f.fileUri === result.fileUri);\n                if (!fileNode) {\n                    fileNode = this.createFileNode(result.root, path, result.fileUri, rootFolderNode);\n                    rootFolderNode.children.push(fileNode);\n                }\n                for (const match of result.matches) {\n                    const line = this.createResultLineNode(result, match, fileNode);\n                    if (fileNode.children.findIndex(lineNode => lineNode.id === line.id) < 0) {\n                        fileNode.children.push(line);\n                    }\n                }\n                this.collapseFileNode(fileNode, collapseValue);\n                if (pendingRefreshTimeout) {\n                    clearTimeout(pendingRefreshTimeout);\n                }\n                pendingRefreshTimeout = setTimeout(() => this.refreshModelChildren(), 100);\n            },\n            onDone: () => {\n                cancelIndicator.cancel();\n                // Sort the result map by folder URI.\n                this.resultTree = new Map([...this.resultTree]\n                    .sort((a: [string, SearchInWorkspaceRootFolderNode], b: [string, SearchInWorkspaceRootFolderNode]) => this.compare(a[1].folderUri, b[1].folderUri)));\n                // Update the list of children nodes, sorting them by their file URI.\n                Array.from(this.resultTree.values())\n                    .forEach((folder: SearchInWorkspaceRootFolderNode) => {\n                        folder.children = folder.children.sort((a: SearchInWorkspaceFileNode, b: SearchInWorkspaceFileNode) => this.compare(a.fileUri, b.fileUri));\n                    });\n                this.refreshModelChildren();\n            }\n        }, searchOptions).catch(() => undefined);\n    }\n\n    focusFirstResult(): void {\n        if (SearchInWorkspaceRoot.is(this.model.root) && this.model.root.children.length > 0) {\n            const node = this.model.root.children[0];\n            if (SelectableTreeNode.is(node)) {\n                this.node.focus();\n                this.model.selectNode(node);\n            }\n        }\n    }\n\n    /**\n     * Collapse the search-in-workspace file node\n     * based on the preference value.\n     */\n    protected collapseFileNode(node: SearchInWorkspaceFileNode, preferenceValue: string): void {\n        if (preferenceValue === 'auto' && node.children.length >= 10) {\n            node.expanded = false;\n        } else if (preferenceValue === 'alwaysCollapse') {\n            node.expanded = false;\n        } else if (preferenceValue === 'alwaysExpand') {\n            node.expanded = true;\n        }\n    }\n\n    protected handleUp(event: KeyboardEvent): void {\n        if (!this.model.getPrevSelectableNode(this.model.selectedNodes[0])) {\n            this.focusInputEmitter.fire(true);\n        } else {\n            super.handleUp(event);\n        }\n    }\n\n    protected async refreshModelChildren(): Promise<void> {\n        if (SearchInWorkspaceRoot.is(this.model.root)) {\n            this.model.root.children = Array.from(this.resultTree.values());\n            this.model.refresh();\n            this.updateCurrentEditorDecorations();\n        }\n    }\n\n    protected updateCurrentEditorDecorations(): void {\n        this.shell.allTabBars.map(tb => {\n            const currentTitle = tb.currentTitle;\n            if (currentTitle && currentTitle.owner instanceof EditorWidget) {\n                const widget = currentTitle.owner;\n                const fileNodes = this.getFileNodesByUri(widget.editor.uri);\n                if (fileNodes.length > 0) {\n                    fileNodes.forEach(node => {\n                        this.decorateEditor(node, widget);\n                    });\n                } else {\n                    this.decorateEditor(undefined, widget);\n                }\n            }\n        });\n\n        const currentWidget = this.editorManager.currentEditor;\n        if (currentWidget) {\n            const fileNodes = this.getFileNodesByUri(currentWidget.editor.uri);\n            fileNodes.forEach(node => {\n                this.decorateEditor(node, currentWidget);\n            });\n        }\n    }\n\n    protected createRootFolderNode(rootUri: string): SearchInWorkspaceRootFolderNode {\n        const uri = new URI(rootUri);\n        return {\n            selected: false,\n            path: uri.path.toString(),\n            folderUri: rootUri,\n            children: [],\n            expanded: true,\n            id: rootUri,\n            parent: this.model.root as SearchInWorkspaceRoot,\n            visible: this.workspaceService.isMultiRootWorkspaceOpened\n        };\n    }\n\n    protected createFileNode(rootUri: string, path: string, fileUri: string, parent: SearchInWorkspaceRootFolderNode): SearchInWorkspaceFileNode {\n        return {\n            selected: false,\n            path,\n            children: [],\n            expanded: true,\n            id: `${rootUri}::${fileUri}`,\n            parent,\n            fileUri\n        };\n    }\n\n    protected createResultLineNode(result: SearchInWorkspaceResult, match: SearchMatch, fileNode: SearchInWorkspaceFileNode): SearchInWorkspaceResultLineNode {\n        return {\n            ...result,\n            ...match,\n            selected: false,\n            id: result.fileUri + '-' + match.line + '-' + match.character + '-' + match.length,\n            name: typeof match.lineText === 'string' ? match.lineText : match.lineText.text,\n            parent: fileNode\n        };\n    }\n\n    protected getFileNodesByUri(uri: URI): SearchInWorkspaceFileNode[] {\n        const nodes: SearchInWorkspaceFileNode[] = [];\n        const fileUri = uri.withScheme('file').toString();\n        for (const rootFolderNode of this.resultTree.values()) {\n            const rootUri = new URI(rootFolderNode.path).withScheme('file');\n            if (rootUri.isEqualOrParent(uri)) {\n                for (const fileNode of rootFolderNode.children) {\n                    if (fileNode.fileUri === fileUri) {\n                        nodes.push(fileNode);\n                    }\n                }\n            }\n        }\n        return nodes;\n    }\n\n    protected filenameAndPath(rootUriStr: string, uriStr: string): { name: string, path: string } {\n        const uri: URI = new URI(uriStr);\n        const relativePath = new URI(rootUriStr).relative(uri.parent);\n        return {\n            name: uri.displayName,\n            path: relativePath ? relativePath.toString() : ''\n        };\n    }\n\n    protected renderCaption(node: TreeNode, props: NodeProps): React.ReactNode {\n        if (SearchInWorkspaceRootFolderNode.is(node)) {\n            return this.renderRootFolderNode(node);\n        } else if (SearchInWorkspaceFileNode.is(node)) {\n            return this.renderFileNode(node);\n        } else if (SearchInWorkspaceResultLineNode.is(node)) {\n            return this.renderResultLineNode(node);\n        }\n        return '';\n    }\n\n    protected renderTailDecorations(node: TreeNode, props: NodeProps): React.ReactNode {\n        return <div className='result-node-buttons'>\n            {this._showReplaceButtons && this.renderReplaceButton(node)}\n            {this.renderRemoveButton(node)}\n        </div>;\n    }\n\n    protected doReplace(node: TreeNode, e: React.MouseEvent<HTMLElement>): void {\n        this.replace(node);\n        e.stopPropagation();\n    }\n\n    protected renderReplaceButton(node: TreeNode): React.ReactNode {\n        const isResultLineNode = SearchInWorkspaceResultLineNode.is(node);\n        return <span className={isResultLineNode ? 'replace-result' : 'replace-all-result'}\n            onClick={e => this.doReplace(node, e)}\n            title={isResultLineNode ? 'Replace' : 'Replace All'}></span>;\n    }\n\n    protected getFileCount(node: TreeNode): number {\n        if (SearchInWorkspaceRoot.is(node)) {\n            return node.children.reduce((acc, current) => acc + this.getFileCount(current), 0);\n        } else if (SearchInWorkspaceRootFolderNode.is(node)) {\n            return node.children.length;\n        } else if (SearchInWorkspaceFileNode.is(node)) {\n            return 1;\n        }\n        return 0;\n    }\n\n    protected getResultCount(node: TreeNode): number {\n        if (SearchInWorkspaceRoot.is(node)) {\n            return node.children.reduce((acc, current) => acc + this.getResultCount(current), 0);\n        } else if (SearchInWorkspaceRootFolderNode.is(node)) {\n            return node.children.reduce((acc, current) => acc + this.getResultCount(current), 0);\n        } else if (SearchInWorkspaceFileNode.is(node)) {\n            return node.children.length;\n        } else if (SearchInWorkspaceResultLineNode.is(node)) {\n            return 1;\n        }\n        return 0;\n    }\n\n    /**\n     * Replace results under the node passed into the function. If node is undefined, replace all results.\n     * @param node Node in the tree widget where the \"replace all\" operation is performed\n     */\n    async replace(node: TreeNode | undefined): Promise<void> {\n        const replaceForNode = node || this.model.root!;\n        const needConfirm = !SearchInWorkspaceFileNode.is(node) && !SearchInWorkspaceResultLineNode.is(node);\n        if (!needConfirm || await this.confirmReplaceAll(this.getResultCount(replaceForNode), this.getFileCount(replaceForNode))) {\n            (node ? [node] : Array.from(this.resultTree.values())).forEach(n => {\n                this.replaceResult(n, !!node);\n                this.removeNode(n);\n            });\n        }\n    }\n\n    protected confirmReplaceAll(resultNumber: number, fileNumber: number): Promise<boolean | undefined> {\n        const go = fileNumber > 1;\n        return new ConfirmDialog({\n            title: 'Replace all',\n            msg: `Do you really want to replace ${resultNumber} match${resultNumber > 1 ? 'es' : ''} ${go ? 'across' : 'in'} `\n                + `${fileNumber} file${go ? 's' : ''} with \"${this._replaceTerm}\"?`\n        }).open();\n    }\n\n    protected updateRightResults(node: SearchInWorkspaceResultLineNode): void {\n        const fileNode = node.parent;\n        const rightPositionedNodes = fileNode.children.filter(rl => rl.line === node.line && rl.character > node.character);\n        const diff = this._replaceTerm.length - this.searchTerm.length;\n        rightPositionedNodes.map(r => r.character += diff);\n    }\n\n    /**\n     * Replace text either in all search matches under a node or in all search matches, and save the changes.\n     * @param node - node in the tree widget in which the \"replace all\" is performed.\n     * @param {boolean} replaceOne - whether the function is to replace all matches under a node. If it is false, replace all.\n     */\n    protected async replaceResult(node: TreeNode, replaceOne: boolean): Promise<void> {\n        const toReplace: SearchInWorkspaceResultLineNode[] = [];\n        if (SearchInWorkspaceRootFolderNode.is(node)) {\n            node.children.forEach(fileNode => this.replaceResult(fileNode, replaceOne));\n        } else if (SearchInWorkspaceFileNode.is(node)) {\n            toReplace.push(...node.children);\n        } else if (SearchInWorkspaceResultLineNode.is(node)) {\n            toReplace.push(node);\n            this.updateRightResults(node);\n        }\n\n        if (toReplace.length > 0) {\n            // Store the state of all tracked editors before another editor widget might be created for text replacing.\n            const trackedEditors: EditorWidget[] = this.editorManager.all;\n            // Open the file only if the function is called to replace all matches under a specific node.\n            const widget: EditorWidget = replaceOne ? await this.doOpen(toReplace[0]) : await this.doGetWidget(toReplace[0]);\n            const source: string = widget.editor.document.getText();\n            const replaceOperations = toReplace.map(resultLineNode => ({\n                text: this._replaceTerm,\n                range: {\n                    start: {\n                        line: resultLineNode.line - 1,\n                        character: resultLineNode.character - 1\n                    },\n                    end: {\n                        line: resultLineNode.line - 1,\n                        character: resultLineNode.character - 1 + resultLineNode.length\n                    }\n                }\n            } as ReplaceOperation));\n            // Replace the text.\n            await widget.editor.replaceText({\n                source,\n                replaceOperations\n            });\n            // Save the text replacement changes in the editor.\n            await widget.saveable.save();\n            // Dispose the widget if it is not opened but created for `replaceAll`.\n            if (!replaceOne) {\n                if (trackedEditors.indexOf(widget) === -1) {\n                    widget.dispose();\n                }\n            }\n        }\n    }\n\n    protected readonly remove = (node: TreeNode, e: React.MouseEvent<HTMLElement>) => this.doRemove(node, e);\n    protected doRemove(node: TreeNode, e: React.MouseEvent<HTMLElement>): void {\n        this.removeNode(node);\n        e.stopPropagation();\n    }\n\n    protected renderRemoveButton(node: TreeNode): React.ReactNode {\n        return <span className='remove-node' onClick={e => this.remove(node, e)} title='Dismiss'></span>;\n    }\n\n    protected removeNode(node: TreeNode): void {\n        if (SearchInWorkspaceRootFolderNode.is(node)) {\n            this.removeRootFolderNode(node);\n        } else if (SearchInWorkspaceFileNode.is(node)) {\n            this.removeFileNode(node);\n        } else if (SearchInWorkspaceResultLineNode.is(node)) {\n            this.removeResultLineNode(node);\n        }\n        this.refreshModelChildren();\n    }\n\n    private removeRootFolderNode(node: SearchInWorkspaceRootFolderNode): void {\n        for (const rootUri of this.resultTree.keys()) {\n            if (rootUri === node.folderUri) {\n                this.resultTree.delete(rootUri);\n                break;\n            }\n        }\n    }\n\n    private removeFileNode(node: SearchInWorkspaceFileNode): void {\n        const rootFolderNode = node.parent;\n        const index = rootFolderNode.children.findIndex(fileNode => fileNode.id === node.id);\n        if (index > -1) {\n            rootFolderNode.children.splice(index, 1);\n        }\n        if (this.getFileCount(rootFolderNode) === 0) {\n            this.removeRootFolderNode(rootFolderNode);\n        }\n    }\n\n    private removeResultLineNode(node: SearchInWorkspaceResultLineNode): void {\n        const fileNode = node.parent;\n        const index = fileNode.children.findIndex(n => n.fileUri === node.fileUri && n.line === node.line && n.character === node.character);\n        if (index > -1) {\n            fileNode.children.splice(index, 1);\n            if (this.getResultCount(fileNode) === 0) {\n                this.removeFileNode(fileNode);\n            }\n        }\n    }\n\n    protected renderRootFolderNode(node: SearchInWorkspaceRootFolderNode): React.ReactNode {\n        return <div className='result'>\n            <div className='result-head'>\n                <div className={`result-head-info noWrapInfo noselect ${node.selected ? 'selected' : ''}`}>\n                    <span className={`file-icon ${this.toNodeIcon(node) || ''}`}></span>\n                    <div className='noWrapInfo'>\n                        <span className={'file-name'}>\n                            {this.toNodeName(node)}\n                        </span>\n                        <span className={'file-path'}>\n                            {node.path}\n                        </span>\n                    </div>\n                </div>\n                <span className='notification-count-container highlighted-count-container'>\n                    <span className='notification-count'>\n                        {this.getFileCount(node)}\n                    </span>\n                </span>\n            </div>\n        </div>;\n    }\n\n    protected renderFileNode(node: SearchInWorkspaceFileNode): React.ReactNode {\n        return <div className='result'>\n            <div className='result-head'>\n                <div className={`result-head-info noWrapInfo noselect ${node.selected ? 'selected' : ''}`}\n                    title={new URI(node.fileUri).path.toString()}>\n                    <span className={`file-icon ${this.toNodeIcon(node)}`}></span>\n                    <div className='noWrapInfo'>\n                        <span className={'file-name'}>\n                            {this.toNodeName(node)}\n                        </span>\n                        <span className={'file-path'}>\n                            {node.path}\n                        </span>\n                    </div>\n                </div>\n                <span className='notification-count-container'>\n                    <span className='notification-count'>\n                        {this.getResultCount(node)}\n                    </span>\n                </span>\n            </div>\n        </div>;\n    }\n\n    protected renderResultLineNode(node: SearchInWorkspaceResultLineNode): React.ReactNode {\n        let before;\n        let after;\n        let title;\n        if (typeof node.lineText === 'string') {\n            const prefix = node.character > 26 ? '... ' : '';\n            before = prefix + node.lineText.substr(0, node.character - 1).substr(-25);\n            after = node.lineText.substr(node.character - 1 + node.length, 75);\n            title = node.lineText.trim();\n        } else {\n            before = node.lineText.text.substr(0, node.lineText.character);\n            after = node.lineText.text.substr(node.lineText.character + node.length);\n            title = node.lineText.text.trim();\n        }\n        return <div className={`resultLine noWrapInfo ${node.selected ? 'selected' : ''}`} title={title}>\n            {this.searchInWorkspacePreferences['search.lineNumbers'] && <span className='theia-siw-lineNumber'>{node.line}</span>}\n            <span>\n                {before}\n            </span>\n            {this.renderMatchLinePart(node)}\n            <span>\n                {after}\n            </span>\n        </div>;\n    }\n\n    protected renderMatchLinePart(node: SearchInWorkspaceResultLineNode): React.ReactNode {\n        const replaceTerm = this._replaceTerm !== '' && this._showReplaceButtons ? <span className='replace-term'>{this._replaceTerm}</span> : '';\n        const className = `match${this._showReplaceButtons ? ' strike-through' : ''}`;\n        const match = typeof node.lineText === 'string' ?\n            node.lineText.substr(node.character - 1, node.length)\n            : node.lineText.text.substr(node.lineText.character - 1, node.length);\n        return <React.Fragment>\n            <span className={className}>{match}</span>\n            {replaceTerm}\n        </React.Fragment>;\n    }\n\n    /**\n     * Get the editor widget by the node.\n     * @param {SearchInWorkspaceResultLineNode} node - the node representing a match in the search results.\n     * @returns The editor widget to which the text replace will be done.\n     */\n    protected async doGetWidget(node: SearchInWorkspaceResultLineNode): Promise<EditorWidget> {\n        const fileUri = new URI(node.fileUri);\n        const editorWidget = await this.editorManager.getOrCreateByUri(fileUri);\n        return editorWidget;\n    }\n\n    protected async doOpen(node: SearchInWorkspaceResultLineNode, preview: boolean = false): Promise<EditorWidget> {\n        let fileUri: URI;\n        const resultNode = node.parent;\n        if (resultNode && this._showReplaceButtons && preview) {\n            const leftUri = new URI(node.fileUri);\n            const rightUri = await this.createReplacePreview(resultNode);\n            fileUri = DiffUris.encode(leftUri, rightUri);\n        } else {\n            fileUri = new URI(node.fileUri);\n        }\n\n        const opts: EditorOpenerOptions | undefined = !DiffUris.isDiffUri(fileUri) ? {\n            selection: {\n                start: {\n                    line: node.line - 1,\n                    character: node.character - 1\n                },\n                end: {\n                    line: node.line - 1,\n                    character: node.character - 1 + node.length\n                }\n            },\n            mode: 'reveal'\n        } : undefined;\n\n        const editorWidget = await this.editorManager.open(fileUri, opts);\n\n        if (!DiffUris.isDiffUri(fileUri)) {\n            this.decorateEditor(resultNode, editorWidget);\n        }\n\n        return editorWidget;\n    }\n\n    protected async createReplacePreview(node: SearchInWorkspaceFileNode): Promise<URI> {\n        const fileUri = new URI(node.fileUri).withScheme('file');\n        const resource = await this.fileResourceResolver.resolve(fileUri);\n        const content = await resource.readContents();\n\n        const lines = content.split('\\n');\n        node.children.map(l => {\n            const leftPositionedNodes = node.children.filter(rl => rl.line === l.line && rl.character < l.character);\n            const diff = (this._replaceTerm.length - this.searchTerm.length) * leftPositionedNodes.length;\n            const start = lines[l.line - 1].substr(0, l.character - 1 + diff);\n            const end = lines[l.line - 1].substr(l.character - 1 + diff + l.length);\n            lines[l.line - 1] = start + this._replaceTerm + end;\n        });\n\n        return fileUri.withScheme(MEMORY_TEXT).withQuery(lines.join('\\n'));\n    }\n\n    protected decorateEditor(node: SearchInWorkspaceFileNode | undefined, editorWidget: EditorWidget): void {\n        if (!DiffUris.isDiffUri(editorWidget.editor.uri)) {\n            const key = `${editorWidget.editor.uri.toString()}#search-in-workspace-matches`;\n            const oldDecorations = this.appliedDecorations.get(key) || [];\n            const newDecorations = this.createEditorDecorations(node);\n            const appliedDecorations = editorWidget.editor.deltaDecorations({\n                newDecorations,\n                oldDecorations,\n            });\n            this.appliedDecorations.set(key, appliedDecorations);\n        }\n    }\n\n    protected createEditorDecorations(resultNode: SearchInWorkspaceFileNode | undefined): EditorDecoration[] {\n        const decorations: EditorDecoration[] = [];\n        if (resultNode) {\n            resultNode.children.map(res => {\n                decorations.push({\n                    range: {\n                        start: {\n                            line: res.line - 1,\n                            character: res.character - 1\n                        },\n                        end: {\n                            line: res.line - 1,\n                            character: res.character - 1 + res.length\n                        }\n                    },\n                    options: {\n                        overviewRuler: {\n                            color: {\n                                id: 'editor.findMatchHighlightBackground'\n                            },\n                            position: OverviewRulerLane.Center\n                        },\n                        className: res.selected ? 'current-search-in-workspace-editor-match' : 'search-in-workspace-editor-match',\n                        stickiness: TrackedRangeStickiness.GrowsOnlyWhenTypingBefore\n                    }\n                });\n            });\n        }\n        return decorations;\n    }\n\n    /**\n     * Compare two normalized strings.\n     *\n     * @param a {string} the first string.\n     * @param b {string} the second string.\n     */\n    private compare(a: string, b: string): number {\n        const itemA: string = a.toLowerCase().trim();\n        const itemB: string = b.toLowerCase().trim();\n        return itemA.localeCompare(itemB);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017-2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport {\n    SearchInWorkspaceServer,\n    SearchInWorkspaceClient,\n    SearchInWorkspaceResult,\n    SearchInWorkspaceOptions\n} from '../common/search-in-workspace-interface';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { ILogger } from '@theia/core';\n\n/**\n * Class that will receive the search results from the server.  This is separate\n * from the SearchInWorkspaceService class only to avoid a cycle in the\n * dependency injection.\n */\n\n@injectable()\nexport class SearchInWorkspaceClientImpl implements SearchInWorkspaceClient {\n    private service: SearchInWorkspaceClient;\n\n    onResult(searchId: number, result: SearchInWorkspaceResult): void {\n        this.service.onResult(searchId, result);\n    }\n    onDone(searchId: number, error?: string): void {\n        this.service.onDone(searchId, error);\n    }\n\n    setService(service: SearchInWorkspaceClient): void {\n        this.service = service;\n    }\n}\n\nexport type SearchInWorkspaceCallbacks = SearchInWorkspaceClient;\n\n/**\n * Service to search text in the workspace files.\n */\n@injectable()\nexport class SearchInWorkspaceService implements SearchInWorkspaceClient {\n\n    // All the searches that we have started, that are not done yet (onDone\n    // with that searchId has not been called).\n    private pendingSearches = new Map<number, SearchInWorkspaceCallbacks>();\n\n    // Due to the asynchronicity of the node backend, it's possible that we\n    // start a search, receive an event for that search, and then receive\n    // the search id for that search.We therefore need to keep those\n    // events until we get the search id and return it to the caller.\n    // Otherwise the caller would discard the event because it doesn't know\n    // the search id yet.\n    private pendingOnDones: Map<number, string | undefined> = new Map();\n\n    private lastKnownSearchId: number = -1;\n\n    @inject(SearchInWorkspaceServer) protected readonly searchServer: SearchInWorkspaceServer;\n    @inject(SearchInWorkspaceClientImpl) protected readonly client: SearchInWorkspaceClientImpl;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(ILogger) protected readonly logger: ILogger;\n\n    @postConstruct()\n    protected init(): void {\n        this.client.setService(this);\n    }\n\n    isEnabled(): boolean {\n        return this.workspaceService.opened;\n    }\n\n    onResult(searchId: number, result: SearchInWorkspaceResult): void {\n        const callbacks = this.pendingSearches.get(searchId);\n\n        if (callbacks) {\n            callbacks.onResult(searchId, result);\n        }\n    }\n\n    onDone(searchId: number, error?: string): void {\n        const callbacks = this.pendingSearches.get(searchId);\n\n        if (callbacks) {\n            this.pendingSearches.delete(searchId);\n            callbacks.onDone(searchId, error);\n        } else {\n            if (searchId > this.lastKnownSearchId) {\n                this.logger.debug(`Got an onDone for a searchId we don't know about (${searchId}), stashing it for later with error = `, error);\n                this.pendingOnDones.set(searchId, error);\n            } else {\n                // It's possible to receive an onDone for a search we have cancelled.  Just ignore it.\n                this.logger.debug(`Got an onDone for a searchId we don't know about (${searchId}), but it's probably an old one, error = `, error);\n            }\n        }\n    }\n\n    // Start a search of the string \"what\" in the workspace.\n    async search(what: string, callbacks: SearchInWorkspaceCallbacks, opts?: SearchInWorkspaceOptions): Promise<number> {\n        if (!this.workspaceService.open) {\n            throw new Error('Search failed: no workspace root.');\n        }\n\n        const roots = await this.workspaceService.roots;\n        return this.doSearch(what, roots.map(r => r.uri), callbacks, opts);\n    }\n\n    protected async doSearch(what: string, rootsUris: string[], callbacks: SearchInWorkspaceCallbacks, opts?: SearchInWorkspaceOptions): Promise<number> {\n        const searchId = await this.searchServer.search(what, rootsUris, opts);\n        this.pendingSearches.set(searchId, callbacks);\n        this.lastKnownSearchId = searchId;\n\n        this.logger.debug('Service launched search ' + searchId);\n\n        // Check if we received an onDone before search() returned.\n        if (this.pendingOnDones.has(searchId)) {\n            this.logger.debug('Ohh, we have a stashed onDone for that searchId');\n            const error = this.pendingOnDones.get(searchId);\n            this.pendingOnDones.delete(searchId);\n\n            // Call the client's searchId, but first give it a\n            // chance to record the returned searchId.\n            setTimeout(() => {\n                this.onDone(searchId, error);\n            }, 0);\n        }\n\n        return searchId;\n    }\n\n    async searchWithCallback(what: string, rootsUris: string[], callbacks: SearchInWorkspaceClient, opts?: SearchInWorkspaceOptions | undefined): Promise<number> {\n        return this.doSearch(what, rootsUris, callbacks, opts);\n    }\n\n    // Cancel an ongoing search.\n    cancel(searchId: number): void {\n        this.pendingSearches.delete(searchId);\n        this.searchServer.cancel(searchId);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Widget, Message, BaseWidget, Key, StatefulWidget, MessageLoop } from '@theia/core/lib/browser';\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { SearchInWorkspaceResultTreeWidget } from './search-in-workspace-result-tree-widget';\nimport { SearchInWorkspaceOptions } from '../common/search-in-workspace-interface';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Event, Emitter, Disposable } from '@theia/core/lib/common';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { SearchInWorkspaceContextKeyService } from './search-in-workspace-context-key-service';\nimport { CancellationTokenSource } from '@theia/core';\nimport { ProgressBarFactory } from '@theia/core/lib/browser/progress-bar-factory';\n\nexport interface SearchFieldState {\n    className: string;\n    enabled: boolean;\n    title: string;\n}\n\n@injectable()\nexport class SearchInWorkspaceWidget extends BaseWidget implements StatefulWidget {\n\n    static ID = 'search-in-workspace';\n    static LABEL = 'Search';\n\n    protected matchCaseState: SearchFieldState;\n    protected wholeWordState: SearchFieldState;\n    protected regExpState: SearchFieldState;\n    protected includeIgnoredState: SearchFieldState;\n\n    protected showSearchDetails = false;\n    protected _hasResults = false;\n    protected get hasResults(): boolean {\n        return this._hasResults;\n    }\n    protected set hasResults(hasResults: boolean) {\n        this.contextKeyService.hasSearchResult.set(hasResults);\n        this._hasResults = hasResults;\n    }\n    protected resultNumber = 0;\n\n    protected searchFieldContainerIsFocused = false;\n\n    protected searchInWorkspaceOptions: SearchInWorkspaceOptions;\n\n    protected searchTerm = '';\n    protected replaceTerm = '';\n\n    protected _showReplaceField = false;\n    protected get showReplaceField(): boolean {\n        return this._showReplaceField;\n    }\n    protected set showReplaceField(showReplaceField: boolean) {\n        this.contextKeyService.replaceActive.set(showReplaceField);\n        this._showReplaceField = showReplaceField;\n    }\n\n    protected contentNode: HTMLElement;\n    protected searchFormContainer: HTMLElement;\n    protected resultContainer: HTMLElement;\n\n    protected readonly onDidUpdateEmitter = new Emitter<void>();\n    readonly onDidUpdate: Event<void> = this.onDidUpdateEmitter.event;\n\n    @inject(SearchInWorkspaceResultTreeWidget) protected readonly resultTreeWidget: SearchInWorkspaceResultTreeWidget;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n\n    @inject(SearchInWorkspaceContextKeyService)\n    protected readonly contextKeyService: SearchInWorkspaceContextKeyService;\n\n    @inject(ProgressBarFactory)\n    protected readonly progressBarFactory: ProgressBarFactory;\n\n    @postConstruct()\n    protected init(): void {\n        this.id = SearchInWorkspaceWidget.ID;\n        this.title.label = SearchInWorkspaceWidget.LABEL;\n        this.title.caption = SearchInWorkspaceWidget.LABEL;\n        this.title.iconClass = 'search-in-workspace-tab-icon';\n        this.title.closable = true;\n        this.contentNode = document.createElement('div');\n        this.contentNode.classList.add('t-siw-search-container');\n        this.searchFormContainer = document.createElement('div');\n        this.searchFormContainer.classList.add('searchHeader');\n        this.contentNode.appendChild(this.searchFormContainer);\n        this.node.appendChild(this.contentNode);\n\n        this.matchCaseState = {\n            className: 'match-case',\n            enabled: false,\n            title: 'Match Case'\n        };\n        this.wholeWordState = {\n            className: 'whole-word',\n            enabled: false,\n            title: 'Match Whole Word'\n        };\n        this.regExpState = {\n            className: 'use-regexp',\n            enabled: false,\n            title: 'Use Regular Expression'\n        };\n        this.includeIgnoredState = {\n            className: 'include-ignored fa fa-eye',\n            enabled: false,\n            title: 'Include Ignored Files'\n        };\n        this.searchInWorkspaceOptions = {\n            matchCase: false,\n            matchWholeWord: false,\n            useRegExp: false,\n            includeIgnored: false,\n            include: [],\n            exclude: [],\n            maxResults: 2000\n        };\n        this.toDispose.push(this.resultTreeWidget.onChange(r => {\n            this.hasResults = r.size > 0;\n            this.resultNumber = 0;\n            const results = Array.from(r.values());\n            results.forEach(rootFolder =>\n                rootFolder.children.forEach(file => this.resultNumber += file.children.length)\n            );\n            this.update();\n        }));\n\n        this.toDispose.push(this.resultTreeWidget.onFocusInput(b => {\n            this.focusInputField();\n        }));\n\n        this.toDispose.push(this.resultTreeWidget);\n\n        this.toDispose.push(this.progressBarFactory({ container: this.node, insertMode: 'prepend', locationId: 'search' }));\n    }\n\n    storeState(): object {\n        return {\n            matchCaseState: this.matchCaseState,\n            wholeWordState: this.wholeWordState,\n            regExpState: this.regExpState,\n            includeIgnoredState: this.includeIgnoredState,\n            showSearchDetails: this.showSearchDetails,\n            searchInWorkspaceOptions: this.searchInWorkspaceOptions,\n            searchTerm: this.searchTerm,\n            replaceTerm: this.replaceTerm,\n            showReplaceField: this.showReplaceField\n        };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    restoreState(oldState: any): void {\n        this.matchCaseState = oldState.matchCaseState;\n        this.wholeWordState = oldState.wholeWordState;\n        this.regExpState = oldState.regExpState;\n        this.includeIgnoredState = oldState.includeIgnoredState;\n        this.showSearchDetails = oldState.showSearchDetails;\n        this.searchInWorkspaceOptions = oldState.searchInWorkspaceOptions;\n        this.searchTerm = oldState.searchTerm;\n        this.replaceTerm = oldState.replaceTerm;\n        this.showReplaceField = oldState.showReplaceField;\n        this.resultTreeWidget.replaceTerm = this.replaceTerm;\n        this.resultTreeWidget.showReplaceButtons = this.showReplaceField;\n        this.refresh();\n    }\n\n    findInFolder(uris: string[]): void {\n        this.showSearchDetails = true;\n        const values = Array.from(new Set(uris.map(uri => `${uri}/**`)));\n        const value = values.join(', ');\n        this.searchInWorkspaceOptions.include = values;\n        const include = document.getElementById('include-glob-field');\n        if (include) {\n            (include as HTMLInputElement).value = value;\n        }\n        this.update();\n    }\n\n    /**\n     * Update the search term and input field.\n     * @param term the search term.\n     */\n    updateSearchTerm(term: string): void {\n        this.searchTerm = term;\n        const search = document.getElementById('search-input-field');\n        if (search) {\n            (search as HTMLInputElement).value = term;\n        }\n        this.refresh();\n    }\n\n    hasResultList(): boolean {\n        return this.hasResults;\n    }\n\n    hasSearchTerm(): boolean {\n        return this.searchTerm !== '';\n    }\n\n    refresh(): void {\n        this.resultTreeWidget.search(this.searchTerm, this.searchInWorkspaceOptions);\n        this.update();\n    }\n\n    getCancelIndicator(): CancellationTokenSource | undefined {\n        return this.resultTreeWidget.cancelIndicator;\n    }\n\n    collapseAll(): void {\n        this.resultTreeWidget.collapseAll();\n        this.update();\n    }\n\n    clear(): void {\n        this.searchTerm = '';\n        this.replaceTerm = '';\n        this.searchInWorkspaceOptions.include = [];\n        this.searchInWorkspaceOptions.exclude = [];\n        this.includeIgnoredState.enabled = false;\n        this.matchCaseState.enabled = false;\n        this.wholeWordState.enabled = false;\n        this.regExpState.enabled = false;\n        const search = document.getElementById('search-input-field');\n        const replace = document.getElementById('replace-input-field');\n        const include = document.getElementById('include-glob-field');\n        const exclude = document.getElementById('exclude-glob-field');\n        if (search && replace && include && exclude) {\n            (search as HTMLInputElement).value = '';\n            (replace as HTMLInputElement).value = '';\n            (include as HTMLInputElement).value = '';\n            (exclude as HTMLInputElement).value = '';\n        }\n        this.resultTreeWidget.search(this.searchTerm, this.searchInWorkspaceOptions);\n        this.update();\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        ReactDOM.render(<React.Fragment>{this.renderSearchHeader()}{this.renderSearchInfo()}</React.Fragment>, this.searchFormContainer);\n        Widget.attach(this.resultTreeWidget, this.contentNode);\n        this.toDisposeOnDetach.push(Disposable.create(() => {\n            Widget.detach(this.resultTreeWidget);\n        }));\n    }\n\n    protected onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        const searchInfo = this.renderSearchInfo();\n        if (searchInfo) {\n            ReactDOM.render(<React.Fragment>{this.renderSearchHeader()}{searchInfo}</React.Fragment>, this.searchFormContainer);\n            this.onDidUpdateEmitter.fire(undefined);\n        }\n    }\n\n    protected onResize(msg: Widget.ResizeMessage): void {\n        super.onResize(msg);\n        MessageLoop.sendMessage(this.resultTreeWidget, Widget.ResizeMessage.UnknownSize);\n    }\n\n    protected onAfterShow(msg: Message): void {\n        super.onAfterShow(msg);\n        this.focusInputField();\n        this.contextKeyService.searchViewletVisible.set(true);\n    }\n\n    protected onAfterHide(msg: Message): void {\n        super.onAfterHide(msg);\n        this.contextKeyService.searchViewletVisible.set(false);\n    }\n\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.focusInputField();\n    }\n\n    protected focusInputField(): void {\n        const f = document.getElementById('search-input-field');\n        if (f) {\n            (f as HTMLInputElement).focus();\n            (f as HTMLInputElement).select();\n        }\n    }\n\n    protected renderSearchHeader(): React.ReactNode {\n        const searchAndReplaceContainer = this.renderSearchAndReplace();\n        const searchDetails = this.renderSearchDetails();\n        return <div>{searchAndReplaceContainer}{searchDetails}</div>;\n    }\n\n    protected renderSearchAndReplace(): React.ReactNode {\n        const toggleContainer = this.renderReplaceFieldToggle();\n        const searchField = this.renderSearchField();\n        const replaceField = this.renderReplaceField();\n        return <div className='search-and-replace-container'>\n            {toggleContainer}\n            <div className='search-and-replace-fields'>\n                {searchField}\n                {replaceField}\n            </div>\n        </div>;\n    }\n\n    protected renderReplaceFieldToggle(): React.ReactNode {\n        const toggle = <span className={`fa fa-caret-${this.showReplaceField ? 'down' : 'right'}`}></span>;\n        return <div\n            title='Toggle Replace'\n            className='replace-toggle'\n            tabIndex={0}\n            onClick={e => {\n                const elArr = document.getElementsByClassName('replace-toggle');\n                if (elArr && elArr.length > 0) {\n                    (elArr[0] as HTMLElement).focus();\n                }\n                this.showReplaceField = !this.showReplaceField;\n                this.resultTreeWidget.showReplaceButtons = this.showReplaceField;\n                this.update();\n            }}>\n            {toggle}\n        </div>;\n    }\n\n    protected renderNotification(): React.ReactNode {\n        if (this.workspaceService.tryGetRoots().length <= 0) {\n            return <div className='search-notification show'>\n                <div>Cannot search without an active workspace present.</div>\n            </div>;\n        }\n        return <div\n            className={`search-notification ${this.searchInWorkspaceOptions.maxResults && this.resultNumber >= this.searchInWorkspaceOptions.maxResults ? 'show' : ''}`}>\n            <div>\n                This is only a subset of all results. Use a more specific search term to narrow down the result list.\n            </div>\n        </div>;\n    }\n\n    protected readonly focusSearchFieldContainer = () => this.doFocusSearchFieldContainer();\n    protected doFocusSearchFieldContainer(): void {\n        this.searchFieldContainerIsFocused = true;\n        this.update();\n    }\n    protected readonly unfocusSearchFieldContainer = () => this.doUnfocusSearchFieldContainer();\n    protected doUnfocusSearchFieldContainer(): void {\n        this.searchFieldContainerIsFocused = false;\n        this.update();\n    }\n\n    protected readonly search = (e: React.KeyboardEvent) => this.doSearch(e);\n    protected doSearch(e: React.KeyboardEvent): void {\n        if (e.target) {\n            const searchValue = (e.target as HTMLInputElement).value;\n            if (Key.ARROW_DOWN.keyCode === e.keyCode) {\n                this.resultTreeWidget.focusFirstResult();\n            } else if (this.searchTerm === searchValue && Key.ENTER.keyCode !== e.keyCode) {\n                return;\n            } else {\n                this.searchTerm = searchValue;\n                this.resultTreeWidget.search(this.searchTerm, (this.searchInWorkspaceOptions || {}));\n            }\n        }\n    }\n\n    protected renderSearchField(): React.ReactNode {\n        const input = <input\n            id='search-input-field'\n            className='theia-input'\n            title='Search'\n            type='text'\n            size={1}\n            placeholder='Search'\n            defaultValue={this.searchTerm}\n            autoComplete='off'\n            onKeyUp={this.search}\n            onFocus={this.handleFocusSearchInputBox}\n            onBlur={this.handleBlurSearchInputBox}\n        ></input>;\n        const notification = this.renderNotification();\n        const optionContainer = this.renderOptionContainer();\n        const tooMany = this.searchInWorkspaceOptions.maxResults && this.resultNumber >= this.searchInWorkspaceOptions.maxResults ? 'tooManyResults' : '';\n        const className = `search-field-container ${tooMany} ${this.searchFieldContainerIsFocused ? 'focused' : ''}`;\n        return <div className={className}>\n            <div className='search-field' tabIndex={-1} onFocus={this.focusSearchFieldContainer} onBlur={this.unfocusSearchFieldContainer}>\n                {input}\n                {optionContainer}\n            </div>\n            {notification}\n        </div>;\n    }\n\n    protected handleFocusSearchInputBox = () => this.contextKeyService.setSearchInputBoxFocus(true);\n    protected handleBlurSearchInputBox = () => this.contextKeyService.setSearchInputBoxFocus(false);\n\n    protected readonly updateReplaceTerm = (e: React.KeyboardEvent) => this.doUpdateReplaceTerm(e);\n    protected doUpdateReplaceTerm(e: React.KeyboardEvent): void {\n        if (e.target) {\n            this.replaceTerm = (e.target as HTMLInputElement).value;\n            this.resultTreeWidget.replaceTerm = this.replaceTerm;\n            this.resultTreeWidget.search(this.searchTerm, (this.searchInWorkspaceOptions || {}));\n            this.update();\n        }\n    }\n\n    protected renderReplaceField(): React.ReactNode {\n        const replaceAllButtonContainer = this.renderReplaceAllButtonContainer();\n        return <div className={`replace-field${this.showReplaceField ? '' : ' hidden'}`}>\n            <input\n                id='replace-input-field'\n                className='theia-input'\n                title='Replace'\n                type='text'\n                size={1}\n                placeholder='Replace'\n                defaultValue={this.replaceTerm}\n                onKeyUp={this.updateReplaceTerm}\n                onFocus={this.handleFocusReplaceInputBox}\n                onBlur={this.handleBlurReplaceInputBox}>\n            </input>\n            {replaceAllButtonContainer}\n        </div>;\n    }\n\n    protected handleFocusReplaceInputBox = () => this.contextKeyService.setReplaceInputBoxFocus(true);\n    protected handleBlurReplaceInputBox = () => this.contextKeyService.setReplaceInputBoxFocus(false);\n\n    protected renderReplaceAllButtonContainer(): React.ReactNode {\n        // The `Replace All` button is enabled if there is a search term present with results.\n        const enabled: boolean = this.searchTerm !== '' && this.resultNumber > 0;\n        return <div className='replace-all-button-container'>\n            <span\n                title='Replace All'\n                className={`replace-all-button${enabled ? ' ' : ' disabled'}`}\n                onClick={() => {\n                    if (enabled) {\n                        this.resultTreeWidget.replace(undefined);\n                    }\n                }}>\n            </span>\n        </div>;\n    }\n\n    protected renderOptionContainer(): React.ReactNode {\n        const matchCaseOption = this.renderOptionElement(this.matchCaseState);\n        const wholeWordOption = this.renderOptionElement(this.wholeWordState);\n        const regexOption = this.renderOptionElement(this.regExpState);\n        const includeIgnoredOption = this.renderOptionElement(this.includeIgnoredState);\n        return <div className='option-buttons'>{matchCaseOption}{wholeWordOption}{regexOption}{includeIgnoredOption}</div>;\n    }\n\n    protected renderOptionElement(opt: SearchFieldState): React.ReactNode {\n        return <span\n            className={`${opt.className} option ${opt.enabled ? 'enabled' : ''}`}\n            title={opt.title}\n            onClick={() => this.handleOptionClick(opt)}></span>;\n    }\n\n    protected handleOptionClick(option: SearchFieldState): void {\n        option.enabled = !option.enabled;\n        this.updateSearchOptions();\n        this.searchFieldContainerIsFocused = true;\n        this.resultTreeWidget.search(this.searchTerm, this.searchInWorkspaceOptions);\n        this.update();\n    }\n\n    protected updateSearchOptions(): void {\n        this.searchInWorkspaceOptions.matchCase = this.matchCaseState.enabled;\n        this.searchInWorkspaceOptions.matchWholeWord = this.wholeWordState.enabled;\n        this.searchInWorkspaceOptions.useRegExp = this.regExpState.enabled;\n        this.searchInWorkspaceOptions.includeIgnored = this.includeIgnoredState.enabled;\n    }\n\n    protected renderSearchDetails(): React.ReactNode {\n        const expandButton = this.renderExpandGlobFieldsButton();\n        const globFieldContainer = this.renderGlobFieldContainer();\n        return <div className='search-details'>{expandButton}{globFieldContainer}</div>;\n    }\n\n    protected renderGlobFieldContainer(): React.ReactNode {\n        const includeField = this.renderGlobField('include');\n        const excludeField = this.renderGlobField('exclude');\n        return <div className={`glob-field-container${!this.showSearchDetails ? ' hidden' : ''}`}>{includeField}{excludeField}</div>;\n    }\n\n    protected renderExpandGlobFieldsButton(): React.ReactNode {\n        return <div className='button-container'>\n            <span\n                title='Toggle Search Details'\n                className='fa fa-ellipsis-h btn'\n                onClick={() => {\n                    this.showSearchDetails = !this.showSearchDetails;\n                    this.update();\n                }}></span>\n        </div>;\n    }\n\n    protected renderGlobField(kind: 'include' | 'exclude'): React.ReactNode {\n        const currentValue = this.searchInWorkspaceOptions[kind];\n        const value = currentValue && currentValue.join(', ') || '';\n        return <div className='glob-field'>\n            <div className='label'>{'files to ' + kind}</div>\n            <input\n                className='theia-input'\n                type='text'\n                size={1}\n                defaultValue={value}\n                id={kind + '-glob-field'}\n                onKeyUp={e => {\n                    if (e.target) {\n                        if (Key.ENTER.keyCode === e.keyCode) {\n                            this.resultTreeWidget.search(this.searchTerm, this.searchInWorkspaceOptions);\n                        } else {\n                            this.searchInWorkspaceOptions[kind] = this.splitOnComma((e.target as HTMLInputElement).value);\n                        }\n                    }\n                }}\n                onFocus={kind === 'include' ? this.handleFocusIncludesInputBox : this.handleFocusExcludesInputBox}\n                onBlur={kind === 'include' ? this.handleBlurIncludesInputBox : this.handleBlurExcludesInputBox}></input>\n        </div>;\n    }\n\n    protected handleFocusIncludesInputBox = () => this.contextKeyService.setPatternExcludesInputBoxFocus(true);\n    protected handleBlurIncludesInputBox = () => this.contextKeyService.setPatternExcludesInputBoxFocus(false);\n\n    protected handleFocusExcludesInputBox = () => this.contextKeyService.setPatternExcludesInputBoxFocus(true);\n    protected handleBlurExcludesInputBox = () => this.contextKeyService.setPatternExcludesInputBoxFocus(false);\n\n    protected splitOnComma(patterns: string): string[] {\n        return patterns.length > 0 ? patterns.split(',').map(s => s.trim()) : [];\n    }\n\n    protected renderSearchInfo(): React.ReactNode {\n        let message = '';\n        if (this.searchTerm) {\n            if (this.searchInWorkspaceOptions.include && this.searchInWorkspaceOptions.include.length > 0 && this.resultNumber === 0) {\n                message = `No results found in '${this.searchInWorkspaceOptions.include}'`;\n            } else if (this.resultNumber === 0) {\n                message = 'No results found.';\n            } else {\n                if (this.resultNumber === 1 && this.resultTreeWidget.fileNumber === 1) {\n                    message = `${this.resultNumber} result in ${this.resultTreeWidget.fileNumber} file`;\n                } else if (this.resultTreeWidget.fileNumber === 1) {\n                    message = `${this.resultNumber} results in ${this.resultTreeWidget.fileNumber} file`;\n                } else if (this.resultTreeWidget.fileNumber > 0) {\n                    message = `${this.resultNumber} results in ${this.resultTreeWidget.fileNumber} files`;\n                } else {\n                    // if fileNumber === 0, return undefined so that `onUpdateRequest()` would not re-render component\n                    return undefined;\n                }\n            }\n        }\n        return <div className='search-info'>{message}</div>;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017-2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { JsonRpcServer } from '@theia/core';\n\nexport interface SearchInWorkspaceOptions {\n    /**\n     * Maximum number of results to return.  Defaults to unlimited.\n     */\n    maxResults?: number;\n    /**\n     * accepts suffixes of K, M or G which correspond to kilobytes,\n     * megabytes and gigabytes, respectively. If no suffix is provided the input is\n     * treated as bytes.\n     *\n     * defaults to '20M'\n     */\n    maxFileSize?: string;\n    /**\n     * Search case sensitively if true.\n     */\n    matchCase?: boolean;\n    /**\n     * Search whole words only if true.\n     */\n    matchWholeWord?: boolean;\n    /**\n     * Use regular expressions for search if true.\n     */\n    useRegExp?: boolean;\n    /**\n     * Include all .gitignored and hidden files.\n     */\n    includeIgnored?: boolean;\n    /**\n     * Glob pattern for matching files and directories to include the search.\n     */\n    include?: string[];\n    /**\n     * Glob pattern for matching files and directories to exclude the search.\n     */\n    exclude?: string[];\n}\n\nexport interface SearchInWorkspaceResult {\n    /**\n     * The string uri to the root folder that the search was performed.\n     */\n    root: string;\n\n    /**\n     * The string uri to the file containing the result.\n     */\n    fileUri: string;\n\n    /**\n     * matches found in the file\n     */\n    matches: SearchMatch[];\n}\n\nexport interface SearchMatch {\n    /**\n     * The (1-based) line number of the result.\n     */\n    line: number;\n\n    /**\n     * The (1-based) character number in the result line.  For UTF-8 files,\n     * one multi-byte character counts as one character.\n     */\n    character: number;\n\n    /**\n     * The length of the match, in characters.  For UTF-8 files, one\n     * multi-byte character counts as one character.\n     */\n    length: number;\n\n    /**\n     * The text of the line containing the result.\n     */\n    lineText: string | LinePreview;\n\n}\n\nexport interface LinePreview {\n    text: string;\n    character: number;\n}\n\nexport namespace SearchInWorkspaceResult {\n    /**\n     * Sort search in workspace results according to file, line, character position\n     * and then length.\n     */\n    export function compare(a: SearchInWorkspaceResult, b: SearchInWorkspaceResult): number {\n        if (a.fileUri !== b.fileUri) {\n            return a.fileUri < b.fileUri ? -1 : 1;\n        }\n        return 0;\n    }\n}\n\nexport const SearchInWorkspaceClient = Symbol('SearchInWorkspaceClient');\nexport interface SearchInWorkspaceClient {\n    /**\n     * Called by the server for every search match.\n     */\n    onResult(searchId: number, result: SearchInWorkspaceResult): void;\n\n    /**\n     * Called when no more search matches will come.\n     */\n    onDone(searchId: number, error?: string): void;\n}\n\nexport const SIW_WS_PATH = '/services/search-in-workspace';\nexport const SearchInWorkspaceServer = Symbol('SearchInWorkspaceServer');\nexport interface SearchInWorkspaceServer extends JsonRpcServer<SearchInWorkspaceClient> {\n    /**\n     * Start a search for WHAT in directories ROOTURIS. Return a unique search id.\n     */\n    search(what: string, rootUris: string[], opts?: SearchInWorkspaceOptions): Promise<number>;\n\n    /**\n     * Cancel an ongoing search.\n     */\n    cancel(searchId: number): Promise<void>;\n\n    dispose(): void;\n}\n"],"sourceRoot":""}