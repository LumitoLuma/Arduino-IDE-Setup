{"version":3,"sources":["webpack:///./node_modules/@theia/navigator/src/browser/navigator-contribution.ts","webpack:///./node_modules/@theia/navigator/src/browser/navigator-diff.ts","webpack:///./node_modules/@theia/navigator/src/browser/navigator-keybinding-context.ts"],"names":[],"mappings":"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","file":"23.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport {\n    CommonCommands,\n    CompositeTreeNode,\n    FrontendApplication,\n    FrontendApplicationContribution,\n    KeybindingRegistry,\n    Navigatable,\n    OpenerService,\n    PreferenceScope,\n    PreferenceService,\n    SelectableTreeNode,\n    SHELL_TABBAR_CONTEXT_MENU,\n    Widget\n} from '@theia/core/lib/browser';\nimport { FileDownloadCommands } from '@theia/filesystem/lib/browser/download/file-download-command-contribution';\nimport {\n    Command,\n    CommandRegistry,\n    DisposableCollection,\n    isOSX,\n    MenuModelRegistry,\n    MenuPath,\n    Mutable,\n    isWindows\n} from '@theia/core/lib/common';\nimport {\n    DidCreateNewResourceEvent,\n    WorkspaceCommandContribution,\n    WorkspaceCommands,\n    WorkspacePreferences,\n    WorkspaceService\n} from '@theia/workspace/lib/browser';\nimport { EXPLORER_VIEW_CONTAINER_ID, FILE_NAVIGATOR_ID, FileNavigatorWidget } from './navigator-widget';\nimport { FileNavigatorPreferences } from './navigator-preferences';\nimport { NavigatorKeybindingContexts } from './navigator-keybinding-context';\nimport { FileNavigatorFilter } from './navigator-filter';\nimport { WorkspaceNode } from './navigator-tree';\nimport { NavigatorContextKeyService } from './navigator-context-key-service';\nimport {\n    TabBarToolbarContribution,\n    TabBarToolbarItem,\n    TabBarToolbarRegistry\n} from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { FileSystemCommands } from '@theia/filesystem/lib/browser/filesystem-frontend-contribution';\nimport { NavigatorDiff, NavigatorDiffCommands } from './navigator-diff';\nimport { UriSelection } from '@theia/core/lib/common/selection';\nimport { DirNode } from '@theia/filesystem/lib/browser';\nimport { FileNavigatorModel } from './navigator-model';\nimport { ClipboardService } from '@theia/core/lib/browser/clipboard-service';\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { UriAwareCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport URI from '@theia/core/lib/common/uri';\n\nexport namespace FileNavigatorCommands {\n    export const REVEAL_IN_NAVIGATOR: Command = {\n        id: 'navigator.reveal',\n        label: 'Reveal in Explorer'\n    };\n    export const TOGGLE_HIDDEN_FILES: Command = {\n        id: 'navigator.toggle.hidden.files',\n        label: 'Toggle Hidden Files'\n    };\n    export const TOGGLE_AUTO_REVEAL: Command = {\n        id: 'navigator.toggle.autoReveal',\n        category: 'File',\n        label: 'Auto Reveal'\n    };\n    export const REFRESH_NAVIGATOR: Command = {\n        id: 'navigator.refresh',\n        category: 'File',\n        label: 'Refresh in Explorer',\n        iconClass: 'refresh'\n    };\n    export const COLLAPSE_ALL: Command = {\n        id: 'navigator.collapse.all',\n        category: 'File',\n        label: 'Collapse Folders in Explorer',\n        iconClass: 'theia-collapse-all-icon'\n    };\n    export const ADD_ROOT_FOLDER: Command = {\n        id: 'navigator.addRootFolder'\n    };\n    export const FOCUS: Command = {\n        id: 'workbench.files.action.focusFilesExplorer',\n        category: 'File',\n        label: 'Focus on Files Explorer'\n    };\n    export const COPY_RELATIVE_FILE_PATH: Command = {\n        id: 'navigator.copyRelativeFilePath'\n    };\n}\n\n/**\n * Navigator `More Actions...` toolbar item groups.\n * Used in order to group items present in the toolbar.\n */\nexport namespace NavigatorMoreToolbarGroups {\n    export const NEW_OPEN = '1_navigator_new_open';\n    export const TOOLS = '2_navigator_tools';\n    export const WORKSPACE = '3_navigator_workspace';\n}\n\nexport const NAVIGATOR_CONTEXT_MENU: MenuPath = ['navigator-context-menu'];\n\n/**\n * Navigator context menu default groups should be aligned\n * with VS Code default groups: https://code.visualstudio.com/api/references/contribution-points#contributes.menus\n */\nexport namespace NavigatorContextMenu {\n    export const NAVIGATION = [...NAVIGATOR_CONTEXT_MENU, 'navigation'];\n    /** @deprecated use NAVIGATION */\n    export const OPEN = NAVIGATION;\n    /** @deprecated use NAVIGATION */\n    export const NEW = NAVIGATION;\n\n    export const WORKSPACE = [...NAVIGATOR_CONTEXT_MENU, '2_workspace'];\n\n    export const COMPARE = [...NAVIGATOR_CONTEXT_MENU, '3_compare'];\n    /** @deprecated use COMPARE */\n    export const DIFF = COMPARE;\n\n    export const SEARCH = [...NAVIGATOR_CONTEXT_MENU, '4_search'];\n    export const CLIPBOARD = [...NAVIGATOR_CONTEXT_MENU, '5_cutcopypaste'];\n\n    export const MODIFICATION = [...NAVIGATOR_CONTEXT_MENU, '7_modification'];\n    /** @deprecated use MODIFICATION */\n    export const MOVE = MODIFICATION;\n    /** @deprecated use MODIFICATION */\n    export const ACTIONS = MODIFICATION;\n\n    export const OPEN_WITH = [...NAVIGATION, 'open_with'];\n}\n\n@injectable()\nexport class FileNavigatorContribution extends AbstractViewContribution<FileNavigatorWidget> implements FrontendApplicationContribution, TabBarToolbarContribution {\n\n    @inject(ClipboardService)\n    protected readonly clipboardService: ClipboardService;\n\n    @inject(CommandRegistry)\n    protected readonly commandRegistry: CommandRegistry;\n\n    @inject(TabBarToolbarRegistry)\n    protected readonly tabbarToolbarRegistry: TabBarToolbarRegistry;\n\n    @inject(NavigatorContextKeyService)\n    protected readonly contextKeyService: NavigatorContextKeyService;\n\n    @inject(MenuModelRegistry)\n    protected readonly menuRegistry: MenuModelRegistry;\n\n    @inject(NavigatorDiff)\n    protected readonly navigatorDiff: NavigatorDiff;\n\n    @inject(PreferenceService)\n    protected readonly preferenceService: PreferenceService;\n\n    @inject(SelectionService)\n    protected readonly selectionService: SelectionService;\n\n    @inject(WorkspaceCommandContribution)\n    protected readonly workspaceCommandContribution: WorkspaceCommandContribution;\n\n    constructor(\n        @inject(FileNavigatorPreferences) protected readonly fileNavigatorPreferences: FileNavigatorPreferences,\n        @inject(OpenerService) protected readonly openerService: OpenerService,\n        @inject(FileNavigatorFilter) protected readonly fileNavigatorFilter: FileNavigatorFilter,\n        @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService,\n        @inject(WorkspacePreferences) protected readonly workspacePreferences: WorkspacePreferences\n    ) {\n        super({\n            viewContainerId: EXPLORER_VIEW_CONTAINER_ID,\n            widgetId: FILE_NAVIGATOR_ID,\n            widgetName: 'Explorer',\n            defaultWidgetOptions: {\n                area: 'left',\n                rank: 100\n            },\n            toggleCommandId: 'fileNavigator:toggle',\n            toggleKeybinding: 'ctrlcmd+shift+e'\n        });\n    }\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        await this.fileNavigatorPreferences.ready;\n        this.shell.currentChanged.connect(() => this.onCurrentWidgetChangedHandler());\n\n        const updateFocusContextKeys = () => {\n            const hasFocus = this.shell.activeWidget instanceof FileNavigatorWidget;\n            this.contextKeyService.explorerViewletFocus.set(hasFocus);\n            this.contextKeyService.filesExplorerFocus.set(hasFocus);\n        };\n        updateFocusContextKeys();\n        this.shell.activeChanged.connect(updateFocusContextKeys);\n        this.workspaceCommandContribution.onDidCreateNewFile(async event => this.onDidCreateNewResource(event));\n        this.workspaceCommandContribution.onDidCreateNewFolder(async event => this.onDidCreateNewResource(event));\n    }\n\n    private async onDidCreateNewResource(event: DidCreateNewResourceEvent): Promise<void> {\n        const navigator = this.tryGetWidget();\n        if (!navigator || !navigator.isVisible) {\n            return;\n        }\n        const model: FileNavigatorModel = navigator.model;\n        const parent = await model.revealFile(event.parent);\n        if (DirNode.is(parent)) {\n            await model.refresh(parent);\n        }\n        const node = await model.revealFile(event.uri);\n        if (SelectableTreeNode.is(node)) {\n            model.selectNode(node);\n            if (DirNode.is(node)) {\n                this.openView({ activate: true });\n            }\n        }\n    }\n\n    async onStart(app: FrontendApplication): Promise<void> {\n        this.workspacePreferences.ready.then(() => {\n            this.updateAddRemoveFolderActions(this.menuRegistry);\n            this.workspacePreferences.onPreferenceChanged(change => {\n                if (change.preferenceName === 'workspace.supportMultiRootWorkspace') {\n                    this.updateAddRemoveFolderActions(this.menuRegistry);\n                }\n            });\n        });\n    }\n\n    async initializeLayout(app: FrontendApplication): Promise<void> {\n        await this.openView();\n    }\n\n    registerCommands(registry: CommandRegistry): void {\n        super.registerCommands(registry);\n        registry.registerCommand(FileNavigatorCommands.FOCUS, {\n            execute: () => this.openView({ activate: true })\n        });\n        registry.registerCommand(FileNavigatorCommands.REVEAL_IN_NAVIGATOR, {\n            execute: () => this.openView({ activate: true }).then(() => this.selectWidgetFileNode(this.shell.currentWidget)),\n            isEnabled: () => Navigatable.is(this.shell.currentWidget),\n            isVisible: () => Navigatable.is(this.shell.currentWidget)\n        });\n        registry.registerCommand(FileNavigatorCommands.TOGGLE_HIDDEN_FILES, {\n            execute: () => {\n                this.fileNavigatorFilter.toggleHiddenFiles();\n            },\n            isEnabled: () => true,\n            isVisible: () => true\n        });\n        registry.registerCommand(FileNavigatorCommands.TOGGLE_AUTO_REVEAL, {\n            isEnabled: widget => this.withWidget(widget, () => this.workspaceService.opened),\n            isVisible: widget => this.withWidget(widget, () => this.workspaceService.opened),\n            execute: () => {\n                const autoReveal = !this.fileNavigatorPreferences['explorer.autoReveal'];\n                this.preferenceService.set('explorer.autoReveal', autoReveal, PreferenceScope.User);\n                if (autoReveal) {\n                    this.selectWidgetFileNode(this.shell.currentWidget);\n                }\n            },\n            isToggled: () => this.fileNavigatorPreferences['explorer.autoReveal']\n        });\n        registry.registerCommand(FileNavigatorCommands.COLLAPSE_ALL, {\n            execute: widget => this.withWidget(widget, () => this.collapseFileNavigatorTree()),\n            isEnabled: widget => this.withWidget(widget, () => this.workspaceService.opened),\n            isVisible: widget => this.withWidget(widget, () => this.workspaceService.opened)\n        });\n        registry.registerCommand(FileNavigatorCommands.REFRESH_NAVIGATOR, {\n            execute: widget => this.withWidget(widget, () => this.refreshWorkspace()),\n            isEnabled: widget => this.withWidget(widget, () => this.workspaceService.opened),\n            isVisible: widget => this.withWidget(widget, () => this.workspaceService.opened)\n        });\n        registry.registerCommand(FileNavigatorCommands.ADD_ROOT_FOLDER, {\n            execute: (...args) => registry.executeCommand(WorkspaceCommands.ADD_FOLDER.id, ...args),\n            isEnabled: (...args) => registry.isEnabled(WorkspaceCommands.ADD_FOLDER.id, ...args),\n            isVisible: (...args) => {\n                if (!registry.isVisible(WorkspaceCommands.ADD_FOLDER.id, ...args)) {\n                    return false;\n                }\n                const navigator = this.tryGetWidget();\n                const model = navigator && navigator.model;\n                const uris = UriSelection.getUris(model && model.selectedNodes);\n                return this.workspaceService.areWorkspaceRoots(uris);\n            }\n        });\n\n        registry.registerCommand(NavigatorDiffCommands.COMPARE_FIRST, {\n            execute: () => {\n                this.navigatorDiff.addFirstComparisonFile();\n            },\n            isEnabled: () => true,\n            isVisible: () => true\n        });\n        registry.registerCommand(NavigatorDiffCommands.COMPARE_SECOND, {\n            execute: () => {\n                this.navigatorDiff.compareFiles();\n            },\n            isEnabled: () => this.navigatorDiff.isFirstFileSelected,\n            isVisible: () => this.navigatorDiff.isFirstFileSelected\n        });\n        registry.registerCommand(FileNavigatorCommands.COPY_RELATIVE_FILE_PATH, new UriAwareCommandHandler<URI[]>(this.selectionService, {\n            isEnabled: uris => !!uris.length,\n            isVisible: uris => !!uris.length,\n            execute: async uris => {\n                const lineDelimiter = isWindows ? '\\r\\n' : '\\n';\n                const text = uris.map((uri: URI) => {\n                    const workspaceRoot = this.workspaceService.getWorkspaceRootUri(uri);\n                    if (workspaceRoot) {\n                        return workspaceRoot.relative(uri);\n                    }\n                }).join(lineDelimiter);\n                await this.clipboardService.writeText(text);\n            }\n        }, { multi: true }));\n    }\n\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), cb: (navigator: FileNavigatorWidget) => T): T | false {\n        if (widget instanceof FileNavigatorWidget && widget.id === FILE_NAVIGATOR_ID) {\n            return cb(widget);\n        }\n        return false;\n    }\n\n    registerMenus(registry: MenuModelRegistry): void {\n        super.registerMenus(registry);\n        registry.registerMenuAction(SHELL_TABBAR_CONTEXT_MENU, {\n            commandId: FileNavigatorCommands.REVEAL_IN_NAVIGATOR.id,\n            label: FileNavigatorCommands.REVEAL_IN_NAVIGATOR.label,\n            order: '5'\n        });\n\n        registry.registerMenuAction(NavigatorContextMenu.NAVIGATION, {\n            commandId: CommonCommands.OPEN.id\n        });\n        registry.registerSubmenu(NavigatorContextMenu.OPEN_WITH, 'Open With');\n        this.openerService.getOpeners().then(openers => {\n            for (const opener of openers) {\n                const openWithCommand = WorkspaceCommands.FILE_OPEN_WITH(opener);\n                registry.registerMenuAction(NavigatorContextMenu.OPEN_WITH, {\n                    commandId: openWithCommand.id,\n                    label: opener.label,\n                    icon: opener.iconClass\n                });\n            }\n        });\n\n        // registry.registerMenuAction([CONTEXT_MENU_PATH, CUT_MENU_GROUP], {\n        //     commandId: Commands.FILE_CUT\n        // });\n\n        registry.registerMenuAction(NavigatorContextMenu.CLIPBOARD, {\n            commandId: CommonCommands.COPY.id,\n            order: 'a'\n        });\n        registry.registerMenuAction(NavigatorContextMenu.CLIPBOARD, {\n            commandId: CommonCommands.PASTE.id,\n            order: 'b'\n        });\n        registry.registerMenuAction(NavigatorContextMenu.CLIPBOARD, {\n            commandId: CommonCommands.COPY_PATH.id,\n            order: 'c'\n        });\n        registry.registerMenuAction(NavigatorContextMenu.CLIPBOARD, {\n            commandId: FileNavigatorCommands.COPY_RELATIVE_FILE_PATH.id,\n            label: 'Copy Relative Path',\n            order: 'd'\n        });\n        registry.registerMenuAction(NavigatorContextMenu.CLIPBOARD, {\n            commandId: FileDownloadCommands.COPY_DOWNLOAD_LINK.id,\n            order: 'z'\n        });\n\n        registry.registerMenuAction(NavigatorContextMenu.MODIFICATION, {\n            commandId: WorkspaceCommands.FILE_RENAME.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.MODIFICATION, {\n            commandId: WorkspaceCommands.FILE_DELETE.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.MODIFICATION, {\n            commandId: WorkspaceCommands.FILE_DUPLICATE.id\n        });\n\n        const downloadUploadMenu = [...NAVIGATOR_CONTEXT_MENU, '6_downloadupload'];\n        registry.registerMenuAction(downloadUploadMenu, {\n            commandId: FileSystemCommands.UPLOAD.id,\n            order: 'a'\n        });\n        registry.registerMenuAction(downloadUploadMenu, {\n            commandId: FileDownloadCommands.DOWNLOAD.id,\n            order: 'b'\n        });\n\n        registry.registerMenuAction(NavigatorContextMenu.NAVIGATION, {\n            commandId: WorkspaceCommands.NEW_FILE.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.NAVIGATION, {\n            commandId: WorkspaceCommands.NEW_FOLDER.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.COMPARE, {\n            commandId: WorkspaceCommands.FILE_COMPARE.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.MODIFICATION, {\n            commandId: FileNavigatorCommands.COLLAPSE_ALL.id,\n            label: 'Collapse All',\n            order: 'z2'\n        });\n\n        registry.registerMenuAction(NavigatorContextMenu.COMPARE, {\n            commandId: NavigatorDiffCommands.COMPARE_FIRST.id,\n            order: 'z'\n        });\n        registry.registerMenuAction(NavigatorContextMenu.COMPARE, {\n            commandId: NavigatorDiffCommands.COMPARE_SECOND.id,\n            order: 'z'\n        });\n    }\n\n    registerKeybindings(registry: KeybindingRegistry): void {\n        super.registerKeybindings(registry);\n        registry.registerKeybinding({\n            command: FileNavigatorCommands.REVEAL_IN_NAVIGATOR.id,\n            keybinding: 'alt+r'\n        });\n\n        registry.registerKeybinding({\n            command: WorkspaceCommands.FILE_DELETE.id,\n            keybinding: 'del',\n            context: NavigatorKeybindingContexts.navigatorActive\n        });\n        if (isOSX) {\n            registry.registerKeybinding({\n                command: WorkspaceCommands.FILE_DELETE.id,\n                keybinding: 'cmd+backspace',\n                context: NavigatorKeybindingContexts.navigatorActive\n            });\n        }\n\n        registry.registerKeybinding({\n            command: WorkspaceCommands.FILE_RENAME.id,\n            keybinding: 'f2',\n            context: NavigatorKeybindingContexts.navigatorActive\n        });\n\n        registry.registerKeybinding({\n            command: FileNavigatorCommands.TOGGLE_HIDDEN_FILES.id,\n            keybinding: 'ctrlcmd+i',\n            context: NavigatorKeybindingContexts.navigatorActive\n        });\n\n        registry.registerKeybinding({\n            command: FileNavigatorCommands.COPY_RELATIVE_FILE_PATH.id,\n            keybinding: isWindows ? 'ctrl+k ctrl+shift+c' : 'ctrlcmd+shift+alt+c',\n            when: '!editorFocus'\n        });\n    }\n\n    async registerToolbarItems(toolbarRegistry: TabBarToolbarRegistry): Promise<void> {\n        toolbarRegistry.registerItem({\n            id: FileNavigatorCommands.REFRESH_NAVIGATOR.id,\n            command: FileNavigatorCommands.REFRESH_NAVIGATOR.id,\n            tooltip: 'Refresh Explorer',\n            priority: 0,\n        });\n        toolbarRegistry.registerItem({\n            id: FileNavigatorCommands.COLLAPSE_ALL.id,\n            command: FileNavigatorCommands.COLLAPSE_ALL.id,\n            tooltip: 'Collapse All',\n            priority: 1,\n        });\n        this.registerMoreToolbarItem({\n            id: WorkspaceCommands.NEW_FILE.id,\n            command: WorkspaceCommands.NEW_FILE.id,\n            tooltip: WorkspaceCommands.NEW_FILE.label,\n            group: NavigatorMoreToolbarGroups.NEW_OPEN,\n        });\n        this.registerMoreToolbarItem({\n            id: WorkspaceCommands.NEW_FOLDER.id,\n            command: WorkspaceCommands.NEW_FOLDER.id,\n            tooltip: WorkspaceCommands.NEW_FOLDER.label,\n            group: NavigatorMoreToolbarGroups.NEW_OPEN,\n        });\n        this.registerMoreToolbarItem({\n            id: FileNavigatorCommands.TOGGLE_AUTO_REVEAL.id,\n            command: FileNavigatorCommands.TOGGLE_AUTO_REVEAL.id,\n            tooltip: FileNavigatorCommands.TOGGLE_AUTO_REVEAL.label,\n            group: NavigatorMoreToolbarGroups.TOOLS,\n        });\n        this.registerMoreToolbarItem({\n            id: WorkspaceCommands.ADD_FOLDER.id,\n            command: WorkspaceCommands.ADD_FOLDER.id,\n            tooltip: WorkspaceCommands.ADD_FOLDER.label,\n            group: NavigatorMoreToolbarGroups.WORKSPACE,\n        });\n    }\n\n    /**\n     * Register commands to the `More Actions...` navigator toolbar item.\n     */\n    public registerMoreToolbarItem = (item: Mutable<TabBarToolbarItem>) => {\n        const commandId = item.command;\n        const id = 'navigator.tabbar.toolbar.' + commandId;\n        const command = this.commandRegistry.getCommand(commandId);\n        this.commandRegistry.registerCommand({ id, iconClass: command && command.iconClass }, {\n            execute: (w, ...args) => w instanceof FileNavigatorWidget\n                && this.commandRegistry.executeCommand(commandId, ...args),\n            isEnabled: (w, ...args) => w instanceof FileNavigatorWidget\n                && this.commandRegistry.isEnabled(commandId, ...args),\n            isVisible: (w, ...args) => w instanceof FileNavigatorWidget\n                && this.commandRegistry.isVisible(commandId, ...args),\n            isToggled: (w, ...args) => w instanceof FileNavigatorWidget\n                && this.commandRegistry.isToggled(commandId, ...args),\n        });\n        item.command = id;\n        this.tabbarToolbarRegistry.registerItem(item);\n    };\n\n    /**\n     * Reveals and selects node in the file navigator to which given widget is related.\n     * Does nothing if given widget undefined or doesn't have related resource.\n     *\n     * @param widget widget file resource of which should be revealed and selected\n     */\n    async selectWidgetFileNode(widget: Widget | undefined): Promise<void> {\n        if (Navigatable.is(widget)) {\n            const resourceUri = widget.getResourceUri();\n            if (resourceUri) {\n                const { model } = await this.widget;\n                const node = await model.revealFile(resourceUri);\n                if (SelectableTreeNode.is(node)) {\n                    model.selectNode(node);\n                }\n            }\n        }\n    }\n\n    protected onCurrentWidgetChangedHandler(): void {\n        if (this.fileNavigatorPreferences['explorer.autoReveal']) {\n            this.selectWidgetFileNode(this.shell.currentWidget);\n        }\n    }\n\n    /**\n     * Collapse file navigator nodes and set focus on first visible node\n     * - single root workspace: collapse all nodes except root\n     * - multiple root workspace: collapse all nodes, even roots\n     */\n    async collapseFileNavigatorTree(): Promise<void> {\n        const { model } = await this.widget;\n\n        // collapse all child nodes which are not the root (single root workspace)\n        // collapse all root nodes (multiple root workspace)\n        let root = model.root as CompositeTreeNode;\n        if (WorkspaceNode.is(root) && root.children.length === 1) {\n            root = root.children[0];\n        }\n        root.children.forEach(child => CompositeTreeNode.is(child) && model.collapseAll(child));\n\n        // select first visible node\n        const firstChild = WorkspaceNode.is(root) ? root.children[0] : root;\n        if (SelectableTreeNode.is(firstChild)) {\n            model.selectNode(firstChild);\n        }\n    }\n\n    /**\n     * force refresh workspace in navigator\n     */\n    async refreshWorkspace(): Promise<void> {\n        const { model } = await this.widget;\n        await model.refresh();\n    }\n\n    private readonly toDisposeAddRemoveFolderActions = new DisposableCollection();\n    private updateAddRemoveFolderActions(registry: MenuModelRegistry): void {\n        this.toDisposeAddRemoveFolderActions.dispose();\n        if (this.workspacePreferences['workspace.supportMultiRootWorkspace']) {\n            this.toDisposeAddRemoveFolderActions.push(registry.registerMenuAction(NavigatorContextMenu.WORKSPACE, {\n                commandId: FileNavigatorCommands.ADD_ROOT_FOLDER.id,\n                label: WorkspaceCommands.ADD_FOLDER.label!\n            }));\n            this.toDisposeAddRemoveFolderActions.push(registry.registerMenuAction(NavigatorContextMenu.WORKSPACE, {\n                commandId: WorkspaceCommands.REMOVE_FOLDER.id\n            }));\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 David Saunders and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileSystem } from '@theia/filesystem/lib/common/filesystem';\nimport { SelectionService, UriSelection } from '@theia/core/lib/common';\nimport { OpenerService, open } from '@theia/core/lib/browser/opener-service';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport { Command } from '@theia/core/lib/common/command';\nimport { DiffUris } from '@theia/core/lib/browser/diff-uris';\n\nexport namespace NavigatorDiffCommands {\n    const COMPARE_CATEGORY = 'Compare';\n    export const COMPARE_FIRST: Command = {\n        id: 'compare:first',\n        category: COMPARE_CATEGORY,\n        label: 'Select for Compare'\n    };\n    export const COMPARE_SECOND: Command = {\n        id: 'compare:second',\n        category: COMPARE_CATEGORY,\n        label: 'Compare with Selected'\n    };\n}\n\n@injectable()\nexport class NavigatorDiff {\n    @inject(FileSystem)\n    protected readonly fileSystem: FileSystem;\n\n    @inject(OpenerService)\n    protected openerService: OpenerService;\n\n    @inject(MessageService)\n    protected readonly notifications: MessageService;\n\n    @inject(SelectionService)\n    protected readonly selectionService: SelectionService;\n\n    constructor(\n    ) {\n    }\n\n    protected _firstCompareFile: URI | undefined = undefined;\n    protected get firstCompareFile(): URI | undefined {\n        return this._firstCompareFile;\n    }\n    protected set firstCompareFile(uri: URI | undefined) {\n        this._firstCompareFile = uri;\n        this._isFirstFileSelected = true;\n    }\n\n    protected _isFirstFileSelected: boolean;\n    get isFirstFileSelected(): boolean {\n        return this._isFirstFileSelected;\n    }\n\n    protected async isDirectory(uri: URI): Promise<boolean> {\n        try {\n            const stat = await this.fileSystem.getFileStat(uri.path.toString());\n            if (!stat || stat.isDirectory) {\n                return true;\n            }\n        } catch (e) {\n        }\n\n        return false;\n    }\n\n    protected async getURISelection(): Promise<URI | undefined> {\n        const uri = UriSelection.getUri(this.selectionService.selection);\n        if (!uri) {\n            return undefined;\n        }\n\n        if (await this.isDirectory(uri)) {\n            return undefined;\n        }\n\n        return uri;\n    }\n\n    /**\n     * Adds the initial file for comparison\n     * @see SelectionService\n     * @see compareFiles\n     * @returns Promise<boolean> indicating whether the uri is valid\n     */\n    async addFirstComparisonFile(): Promise<boolean> {\n        const uriSelected = await this.getURISelection();\n\n        if (uriSelected === undefined) {\n            return false;\n        }\n\n        this.firstCompareFile = uriSelected;\n\n        return true;\n    }\n\n    /**\n     * Compare selected files.  First file is selected through addFirstComparisonFile\n     * @see SelectionService\n     * @see addFirstComparisonFile\n     * @returns Promise<boolean> indicating whether the comparison was completed successfully\n     */\n    async compareFiles(): Promise<boolean> {\n        const uriSelected = await this.getURISelection();\n\n        if (this.firstCompareFile === undefined || uriSelected === undefined) {\n            return false;\n        }\n        const diffUri = DiffUris.encode(this.firstCompareFile, uriSelected);\n\n        open(this.openerService, diffUri).catch(e => {\n            this.notifications.error(e.message);\n        });\n        return true;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { KeybindingContext, ApplicationShell } from '@theia/core/lib/browser';\nimport { FileNavigatorWidget } from './navigator-widget';\n\nexport namespace NavigatorKeybindingContexts {\n    export const navigatorActive = 'navigatorActive';\n}\n\n@injectable()\nexport class NavigatorActiveContext implements KeybindingContext {\n\n    readonly id: string = NavigatorKeybindingContexts.navigatorActive;\n\n    @inject(ApplicationShell)\n    protected readonly applicationShell: ApplicationShell;\n\n    isEnabled(): boolean {\n        return this.applicationShell.activeWidget instanceof FileNavigatorWidget;\n    }\n}\n"],"sourceRoot":""}