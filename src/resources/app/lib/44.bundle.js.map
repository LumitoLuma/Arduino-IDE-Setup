{"version":3,"sources":["webpack:///./node_modules/@theia/scm/src/browser/scm-contribution.ts","webpack:///./node_modules/@theia/scm/src/browser/scm-quick-open-service.ts"],"names":[],"mappings":"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","file":"44.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { Emitter } from '@theia/core/lib/common/event';\nimport { find } from '@phosphor/algorithm';\nimport {\n    AbstractViewContribution,\n    FrontendApplicationContribution, LabelProvider,\n    QuickOpenService,\n    StatusBar,\n    StatusBarAlignment,\n    StatusBarEntry,\n    KeybindingRegistry,\n    ViewContainerTitleOptions,\n    ViewContainer} from '@theia/core/lib/browser';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry, TabBarToolbarItem } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { CommandRegistry, Command, Disposable, DisposableCollection, CommandService } from '@theia/core/lib/common';\nimport { ContextKeyService, ContextKey } from '@theia/core/lib/browser/context-key-service';\nimport { ScmService } from './scm-service';\nimport { ScmWidget } from '../browser/scm-widget';\nimport URI from '@theia/core/lib/common/uri';\nimport { ScmQuickOpenService } from './scm-quick-open-service';\nimport { ScmRepository } from './scm-repository';\nimport { ColorContribution } from '@theia/core/lib/browser/color-application-contribution';\nimport { ColorRegistry, Color } from '@theia/core/lib/browser/color-registry';\n\nexport const SCM_WIDGET_FACTORY_ID = ScmWidget.ID;\nexport const SCM_VIEW_CONTAINER_ID = 'scm-view-container';\nexport const SCM_VIEW_CONTAINER_TITLE_OPTIONS: ViewContainerTitleOptions = {\n    label: 'Source Control',\n    iconClass: 'scm-tab-icon',\n    closeable: true\n};\n\nexport namespace SCM_COMMANDS {\n    export const CHANGE_REPOSITORY = {\n        id: 'scm.change.repository',\n        category: 'SCM',\n        label: 'Change Repository...'\n    };\n    export const ACCEPT_INPUT = {\n        id: 'scm.acceptInput'\n    };\n    export const TREE_VIEW_MODE = {\n        id: 'scm.viewmode.tree',\n        tooltip: 'Toggle to Tree View',\n        iconClass: 'codicon codicon-list-tree',\n        label: 'Toggle to Tree View',\n    };\n    export const LIST_VIEW_MODE = {\n        id: 'scm.viewmode.list',\n        tooltip: 'Toggle to List View',\n        iconClass: 'codicon codicon-list-flat',\n        label: 'Toggle to List View',\n    };\n}\n\nexport namespace ScmColors {\n    export const editorGutterModifiedBackground = 'editorGutter.modifiedBackground';\n    export const editorGutterAddedBackground = 'editorGutter.addedBackground';\n    export const editorGutterDeletedBackground = 'editorGutter.deletedBackground';\n}\n\n@injectable()\nexport class ScmContribution extends AbstractViewContribution<ScmWidget> implements FrontendApplicationContribution, TabBarToolbarContribution, ColorContribution {\n\n    @inject(StatusBar) protected readonly statusBar: StatusBar;\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(QuickOpenService) protected readonly quickOpenService: QuickOpenService;\n    @inject(ScmQuickOpenService) protected readonly scmQuickOpenService: ScmQuickOpenService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(CommandService) protected readonly commands: CommandService;\n    @inject(CommandRegistry) protected readonly commandRegistry: CommandRegistry;\n    @inject(ContextKeyService) protected readonly contextKeys: ContextKeyService;\n\n    protected scmFocus: ContextKey<boolean>;\n\n    constructor() {\n        super({\n            viewContainerId: SCM_VIEW_CONTAINER_ID,\n            widgetId: SCM_WIDGET_FACTORY_ID,\n            widgetName: 'Source Control',\n            defaultWidgetOptions: {\n                area: 'left',\n                rank: 300\n            },\n            toggleCommandId: 'scmView:toggle',\n            toggleKeybinding: 'ctrlcmd+shift+g'\n        });\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.scmFocus = this.contextKeys.createKey('scmFocus', false);\n    }\n\n    async initializeLayout(): Promise<void> {\n        await this.openView();\n    }\n\n    onStart(): void {\n        this.updateStatusBar();\n        this.scmService.onDidAddRepository(() => this.updateStatusBar());\n        this.scmService.onDidRemoveRepository(() => this.updateStatusBar());\n        this.scmService.onDidChangeSelectedRepository(() => this.updateStatusBar());\n        this.scmService.onDidChangeStatusBarCommands(() => this.updateStatusBar());\n        this.labelProvider.onDidChange(() => this.updateStatusBar());\n\n        this.updateContextKeys();\n        this.shell.currentChanged.connect(() => this.updateContextKeys());\n    }\n\n    protected updateContextKeys(): void {\n        this.scmFocus.set(this.shell.currentWidget instanceof ScmWidget);\n    }\n\n    registerCommands(commandRegistry: CommandRegistry): void {\n        super.registerCommands(commandRegistry);\n        commandRegistry.registerCommand(SCM_COMMANDS.CHANGE_REPOSITORY, {\n            execute: () => this.scmQuickOpenService.changeRepository(),\n            isEnabled: () => this.scmService.repositories.length > 1\n        });\n        commandRegistry.registerCommand(SCM_COMMANDS.ACCEPT_INPUT, {\n            execute: () => this.acceptInput(),\n            isEnabled: () => !!this.scmFocus.get() && !!this.acceptInputCommand()\n        });\n    }\n\n    registerToolbarItems(registry: TabBarToolbarRegistry): void {\n        const viewModeEmitter = new Emitter<void>();\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        const extractScmWidget = (widget: any) => {\n            if (widget instanceof ViewContainer) {\n                const layout = widget.containerLayout;\n                const scmWidgetPart = find(layout.iter(), part => part.wrapped instanceof ScmWidget);\n                if (scmWidgetPart && scmWidgetPart.wrapped instanceof ScmWidget) {\n                    return scmWidgetPart.wrapped;\n                }\n            }\n        };\n        const registerToggleViewItem = (command: Command, mode: 'tree' | 'list') => {\n            const id = command.id;\n            const item: TabBarToolbarItem = {\n                id,\n                command: id,\n                tooltip: command.label,\n                onDidChange: viewModeEmitter.event\n            };\n            this.commandRegistry.registerCommand({ id, iconClass: command && command.iconClass }, {\n                execute: widget => {\n                    const scmWidget = extractScmWidget(widget);\n                    if (scmWidget) {\n                        scmWidget.viewMode = mode;\n                        viewModeEmitter.fire();\n                    }\n                },\n                isVisible: widget => {\n                    const scmWidget = extractScmWidget(widget);\n                    if (scmWidget) {\n                        return !!this.scmService.selectedRepository\n                            && scmWidget.viewMode !== mode;\n                    }\n                    return false;\n                },\n            });\n            registry.registerItem(item);\n        };\n        registerToggleViewItem(SCM_COMMANDS.TREE_VIEW_MODE, 'tree');\n        registerToggleViewItem(SCM_COMMANDS.LIST_VIEW_MODE, 'list');\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        super.registerKeybindings(keybindings);\n        keybindings.registerKeybinding({\n            command: SCM_COMMANDS.ACCEPT_INPUT.id,\n            keybinding: 'ctrlcmd+enter',\n            when: 'scmFocus'\n        });\n    }\n\n    protected async acceptInput(): Promise<void> {\n        const command = this.acceptInputCommand();\n        if (command) {\n            await this.commands.executeCommand(command.command, command.repository);\n        }\n    }\n    protected acceptInputCommand(): {\n        command: string\n        repository: ScmRepository\n    } | undefined {\n        const repository = this.scmService.selectedRepository;\n        if (!repository) {\n            return undefined;\n        }\n        const command = repository.provider.acceptInputCommand;\n        if (!command || !command.command) {\n            return undefined;\n        }\n        return {\n            command: command.command,\n            repository\n        };\n    }\n\n    protected readonly statusBarDisposable = new DisposableCollection();\n    protected updateStatusBar(): void {\n        this.statusBarDisposable.dispose();\n        const repository = this.scmService.selectedRepository;\n        if (!repository) {\n            return;\n        }\n        const name = this.labelProvider.getName(new URI(repository.provider.rootUri));\n        if (this.scmService.repositories.length > 1) {\n            this.setStatusBarEntry(SCM_COMMANDS.CHANGE_REPOSITORY.id, {\n                text: `$(database) ${name}`,\n                tooltip: name.toString(),\n                command: SCM_COMMANDS.CHANGE_REPOSITORY.id,\n                alignment: StatusBarAlignment.LEFT,\n                priority: 100\n            });\n        }\n        const label = repository.provider.rootUri ? `${name} (${repository.provider.label})` : repository.provider.label;\n        this.scmService.statusBarCommands.forEach((value, index) => this.setStatusBarEntry(`scm.status.${index}`, {\n            text: value.title,\n            tooltip: label + (value.tooltip ? ` - ${value.tooltip}` : ''),\n            command: value.command,\n            arguments: value.arguments,\n            alignment: StatusBarAlignment.LEFT,\n            priority: 100\n        }));\n    }\n    protected setStatusBarEntry(id: string, entry: StatusBarEntry): void {\n        this.statusBar.setElement(id, entry);\n        this.statusBarDisposable.push(Disposable.create(() => this.statusBar.removeElement(id)));\n    }\n\n    /**\n     * It should be aligned with https://github.com/microsoft/vscode/blob/0dfa355b3ad185a6289ba28a99c141ab9e72d2be/src/vs/workbench/contrib/scm/browser/dirtydiffDecorator.ts#L808\n     */\n    registerColors(colors: ColorRegistry): void {\n        colors.register(\n            {\n                id: ScmColors.editorGutterModifiedBackground, defaults: {\n                    dark: Color.rgba(12, 125, 157),\n                    light: Color.rgba(102, 175, 224),\n                    hc: Color.rgba(0, 155, 249)\n                }, description: 'Editor gutter background color for lines that are modified.'\n            },\n            {\n                id: ScmColors.editorGutterAddedBackground, defaults: {\n                    dark: Color.rgba(88, 124, 12),\n                    light: Color.rgba(129, 184, 139),\n                    hc: Color.rgba(51, 171, 78)\n                }, description: 'Editor gutter background color for lines that are added.'\n            },\n            {\n                id: ScmColors.editorGutterDeletedBackground, defaults: {\n                    dark: Color.rgba(148, 21, 27),\n                    light: Color.rgba(202, 75, 81),\n                    hc: Color.rgba(252, 93, 109)\n                }, description: 'Editor gutter background color for lines that are deleted.'\n            },\n            {\n                id: 'minimapGutter.modifiedBackground', defaults: {\n                    dark: Color.rgba(12, 125, 157),\n                    light: Color.rgba(102, 175, 224),\n                    hc: Color.rgba(0, 155, 249)\n                }, description: 'Minimap gutter background color for lines that are modified.'\n            },\n            {\n                id: 'minimapGutter.addedBackground',\n                defaults: {\n                    dark: Color.rgba(88, 124, 12),\n                    light: Color.rgba(129, 184, 139),\n                    hc: Color.rgba(51, 171, 78)\n                }, description: 'Minimap gutter background color for lines that are added.'\n            },\n            {\n                id: 'minimapGutter.deletedBackground', defaults: {\n                    dark: Color.rgba(148, 21, 27),\n                    light: Color.rgba(202, 75, 81),\n                    hc: Color.rgba(252, 93, 109)\n                }, description: 'Minimap gutter background color for lines that are deleted.'\n            },\n            {\n                id: 'editorOverviewRuler.modifiedForeground', defaults: {\n                    dark: Color.transparent(ScmColors.editorGutterModifiedBackground, 0.6),\n                    light: Color.transparent(ScmColors.editorGutterModifiedBackground, 0.6),\n                    hc: Color.transparent(ScmColors.editorGutterModifiedBackground, 0.6)\n                }, description: 'Overview ruler marker color for modified content.'\n            },\n            {\n                id: 'editorOverviewRuler.addedForeground', defaults: {\n                    dark: Color.transparent(ScmColors.editorGutterAddedBackground, 0.6),\n                    light: Color.transparent(ScmColors.editorGutterAddedBackground, 0.6),\n                    hc: Color.transparent(ScmColors.editorGutterAddedBackground, 0.6)\n                }, description: 'Overview ruler marker color for added content.'\n            },\n            {\n                id: 'editorOverviewRuler.deletedForeground', defaults: {\n                    dark: Color.transparent(ScmColors.editorGutterDeletedBackground, 0.6),\n                    light: Color.transparent(ScmColors.editorGutterDeletedBackground, 0.6),\n                    hc: Color.transparent(ScmColors.editorGutterDeletedBackground, 0.6)\n                }, description: 'Overview ruler marker color for deleted content.'\n            }\n        );\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { QuickOpenItem, QuickOpenMode, QuickOpenModel } from '@theia/core/lib/browser/quick-open/quick-open-model';\nimport { QuickOpenService, QuickOpenOptions } from '@theia/core/lib/browser/quick-open/quick-open-service';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileSystem } from '@theia/filesystem/lib/common';\nimport { ScmService } from './scm-service';\nimport { ScmRepository } from './scm-repository';\n\n@injectable()\nexport class ScmQuickOpenService {\n\n    @inject(QuickOpenService) protected readonly quickOpenService: QuickOpenService;\n    @inject(MessageService) protected readonly messageService: MessageService;\n    @inject(FileSystem) protected readonly fileSystem: FileSystem;\n    @inject(ScmService) protected readonly scmService: ScmService;\n\n    async changeRepository(): Promise<void> {\n        const repositories = this.scmService.repositories;\n        if (repositories.length > 1) {\n            const items = await Promise.all(repositories.map(async repository => {\n                const uri = new URI(repository.provider.rootUri);\n                const execute = () => {\n                    this.scmService.selectedRepository = repository;\n                };\n                const toLabel = () => uri.path.base;\n                const fsPath = await this.fileSystem.getFsPath(uri.toString());\n                const toDescription = () => fsPath;\n                return new ScmQuickOpenItem<ScmRepository>(repository, execute, toLabel, toDescription);\n            }));\n            this.open(items, 'Select repository to work with:');\n        }\n    }\n\n    private open(items: QuickOpenItem | QuickOpenItem[], placeholder: string): void {\n        this.quickOpenService.open(this.getModel(Array.isArray(items) ? items : [items]), this.getOptions(placeholder));\n    }\n\n    private getModel(items: QuickOpenItem | QuickOpenItem[]): QuickOpenModel {\n        return {\n            onType(lookFor: string, acceptor: (items: QuickOpenItem[]) => void): void {\n                acceptor(Array.isArray(items) ? items : [items]);\n            }\n        };\n    }\n\n    private getOptions(placeholder: string, fuzzyMatchLabel: boolean = true, onClose: (canceled: boolean) => void = () => { }): QuickOpenOptions {\n        return QuickOpenOptions.resolve({\n            placeholder,\n            fuzzyMatchLabel,\n            fuzzySort: false,\n            onClose\n        });\n    }\n}\n\nclass ScmQuickOpenItem<T> extends QuickOpenItem {\n\n    constructor(\n        public readonly ref: T,\n        protected readonly execute: (item: ScmQuickOpenItem<T>) => void,\n        private readonly toLabel: (item: ScmQuickOpenItem<T>) => string = () => `${ref}`,\n        private readonly toDescription: (item: ScmQuickOpenItem<T>) => string | undefined = () => undefined) {\n\n        super();\n    }\n\n    run(mode: QuickOpenMode): boolean {\n        if (mode !== QuickOpenMode.OPEN) {\n            return false;\n        }\n        this.execute(this);\n        return true;\n    }\n\n    getLabel(): string {\n        return this.toLabel(this);\n    }\n\n    getDescription(): string | undefined {\n        return this.toDescription(this);\n    }\n\n}\n"],"sourceRoot":""}