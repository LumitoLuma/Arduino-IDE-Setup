{"version":3,"sources":["webpack:///./node_modules/@theia/scm-extra/src/browser/history/index.ts","webpack:///./node_modules/@theia/scm-extra/src/browser/history/scm-history-contribution.ts","webpack:///./node_modules/@theia/scm-extra/src/browser/history/scm-history-widget.tsx","webpack:///./node_modules/@theia/scm-extra/src/browser/scm-extra-contribution.ts","webpack:///./node_modules/@theia/scm-extra/src/browser/scm-file-change-label-provider.ts","webpack:///./node_modules/@theia/scm-extra/src/browser/scm-file-change-node.ts","webpack:///./node_modules/@theia/scm-extra/src/browser/scm-navigable-list-widget.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;kFAckF;;;AAGlF,wJAAyD;AAEhD,kGAFA,sCAAiB,OAEA;AAK1B,IAAiB,kBAAkB,CAIlC;AAJD,WAAiB,kBAAkB;IAC/B,SAAgB,EAAE,CAAC,WAAoC;QACnD,OAAO,CAAC,CAAC,WAAW,IAAI,gBAAgB,IAAI,WAAW,CAAC;IAC5D,CAAC;IAFe,qBAAE,KAEjB;AACL,CAAC,EAJgB,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAIlC;;;;;;;;;;;;;;AC5BD;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,sGAA4F;AAC5F,sHAAsF;AACtF,oGAA+C;AAC/C,uLAA2F;AAC3F,kKAAuG;AAGvG,0IAAgE;AAChE,6JAAoE;AAEvD,sBAAc,GAAG,aAAa,CAAC;AAC/B,yBAAiB,GAAG,SAAS,CAAC;AAC9B,qCAA6B,GAAG,OAAO,CAAC;AACxC,6BAAqB,GAAG,GAAG,CAAC;AAEzC,IAAiB,kBAAkB,CAQlC;AARD,WAAiB,kBAAkB;IAClB,oCAAiB,GAAY;QACtC,EAAE,EAAE,+BAA+B;KACtC,CAAC;IACW,sCAAmB,GAAY;QACxC,EAAE,EAAE,iCAAiC;QACrC,KAAK,EAAE,yBAAiB;KAC3B,CAAC;AACN,CAAC,EARgB,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAQlC;AAOD;IAA4C,0CAA0C;IAOlF;eACI,kBAAM;YACF,QAAQ,EAAE,sBAAc;YACxB,UAAU,EAAE,yBAAiB;YAC7B,oBAAoB,EAAE;gBAClB,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,GAAG;aACZ;YACD,eAAe,EAAE,kBAAkB,CAAC,mBAAmB,CAAC,EAAE;YAC1D,gBAAgB,EAAE,qCAA6B;SAClD,CAAC;IACN,CAAC;IAEK,yCAAQ,GAAd,UAAe,IAA2C;;;;;4BACvC,qBAAM,iBAAM,QAAQ,YAAC,IAAI,CAAC;;wBAAnC,MAAM,GAAG,SAA0B;wBACzC,IAAI,CAAC,aAAa,CAAC,IAAK,CAAC,GAAG,CAAC,CAAC;wBAC9B,sBAAO,MAAM,EAAC;;;;KACjB;IAED,8CAAa,GAAb,UAAc,KAAwB;QAClC,KAAK,CAAC,kBAAkB,CAAC,6CAAoB,CAAC,MAAM,EAAE;YAClD,SAAS,EAAE,kBAAkB,CAAC,iBAAiB,CAAC,EAAE;YAClD,KAAK,EAAE,yBAAiB;SAC3B,CAAC,CAAC;QACH,KAAK,CAAC,kBAAkB,CAAC,gDAAuB,EAAE;YAC9C,SAAS,EAAE,kBAAkB,CAAC,iBAAiB,CAAC,EAAE;YAClD,KAAK,EAAE,yBAAiB;SAC3B,CAAC,CAAC;QACH,iBAAM,aAAa,YAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAED,iDAAgB,GAAhB,UAAiB,QAAyB;QAA1C,iBAOC;QANG,QAAQ,CAAC,eAAe,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,IAAI,CAAC,yBAAyB,CAAC;YAC1F,SAAS,EAAE,UAAC,GAAQ,IAAK,QAAC,CAAC,KAAI,CAAC,UAAU,CAAC,cAAc,CAAC,GAAG,CAAC,EAArC,CAAqC;YAC9D,SAAS,EAAE,UAAC,GAAQ,IAAK,QAAC,CAAC,KAAI,CAAC,UAAU,CAAC,cAAc,CAAC,GAAG,CAAC,EAArC,CAAqC;YAC9D,OAAO,EAAE,UAAM,GAAG;gBAAI,0BAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC;qBAAA;SAC/E,CAAC,CAAC,CAAC;QACJ,iBAAM,gBAAgB,YAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAEe,8CAAa,GAA7B,UAA8B,GAAuB;;;;;;wBAC3C,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;wBACnC,IAAI,CAAC,MAAM,EAAE;4BACT,gDAAgD;4BAChD,sBAAO;yBACV;wBACD,qBAAM,MAAM,CAAC,UAAU,CAAC,EAAE,GAAG,OAAE,CAAC;;wBAAhC,SAAgC,CAAC;;;;;KACpC;IAES,0DAAyB,GAAnC,UAAoC,OAA+B;QAC/D,OAAO,IAAI,4CAAsB,CAAC,IAAI,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;IACtE,CAAC;IAvDD;QADC,kBAAM,CAAC,uBAAgB,CAAC;kCACY,uBAAgB;oEAAC;IAEtD;QADC,kBAAM,CAAC,wBAAU,CAAC;kCACY,wBAAU;8DAAC;IALjC,sBAAsB;QADlC,sBAAU,EAAE;;OACA,sBAAsB,CA4DlC;IAAD,6BAAC;CAAA,CA5D2C,kCAAwB,GA4DnE;AA5DY,wDAAsB;;;;;;;;;;;;;;AC9CnC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,oGAA8D;AAC9D,sGAAwE;AACxE,sHAA+H;AAC/H,6IAA8E;AAE9E,4HAA8J;AAC9J,kHAA6C;AAC7C,0IAAgE;AAChE,sGAAuC;AACvC,0KAAsG;AAEtG,+HAA0D;AAC1D,+JAA6E;AAC7E,sKAAgE;AAChE,uJAA4D;AAC5D,sKAAsE;AACtE,8EAA+B;AAC/B,kKAA6E;AAEhE,yBAAiB,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC;AAc/D,IAAiB,aAAa,CAK7B;AALD,WAAiB,aAAa;IAC1B,8DAA8D;IAC9D,SAAgB,EAAE,CAAC,IAAS;QACxB,OAAO,CAAC,CAAC,IAAI,IAAI,eAAe,IAAI,IAAI,IAAI,UAAU,IAAI,IAAI,IAAI,UAAU,IAAI,IAAI,CAAC;IACzF,CAAC;IAFe,gBAAE,KAEjB;AACL,CAAC,EALgB,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAK7B;AAcD;IAAsC,oCAA0C;IAsB5E,0BAC2C,UAAsB,EACnB,aAA4B,EACzB,KAAuB,EAC7B,UAAsB,EAChB,aAA+B,EAClC,aAA4B;QAN1E,YAQI,iBAAO,SAWV;QAlB0C,gBAAU,GAAV,UAAU,CAAY;QACnB,mBAAa,GAAb,aAAa,CAAe;QACzB,WAAK,GAAL,KAAK,CAAkB;QAC7B,gBAAU,GAAV,UAAU,CAAY;QAChB,mBAAa,GAAb,aAAa,CAAkB;QAClC,mBAAa,GAAb,aAAa,CAAe;QAVvD,iCAA2B,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAwDzD,wBAAkB,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAsPhD,kBAAY,GAAG,UAAC,IAAkB,IAAK,YAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAzB,CAAyB,CAAC;QAKjE,kBAAY,GAAG,UAAC,MAAkB,IAAK,YAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAA3B,CAA2B,CAAC;QAqBnE,kBAAY,GAAG,UAAC,MAAqB,IAAK,YAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAA3B,CAA2B,CAAC;QAgEtE,0BAAoB,GAAG,UAAC,UAA6B,IAAK,YAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,EAAvC,CAAuC,CAAC;QA3XjH,KAAI,CAAC,EAAE,GAAG,yCAAc,CAAC;QACzB,KAAI,CAAC,eAAe,GAAG,4BAA4B,CAAC;QACpD,KAAI,CAAC,KAAK,CAAC,KAAK,GAAG,4CAAiB,CAAC;QACrC,KAAI,CAAC,KAAK,CAAC,OAAO,GAAG,4CAAiB,CAAC;QACvC,KAAI,CAAC,KAAK,CAAC,SAAS,GAAG,yBAAyB,CAAC;QACjD,KAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC3B,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC3B,KAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;QACnC,KAAI,CAAC,UAAU,EAAE,CAAC;QAClB,KAAI,CAAC,eAAe,GAAG,IAAI,sCAAuB,EAAE,CAAC;;IACzD,CAAC;IAGS,+BAAI,GAAd;QADA,iBASC;QAPG,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,6BAA6B,CAAC,cAAM,YAAI,CAAC,yBAAyB,EAAE,EAAhC,CAAgC,CAAC,CAAC,CAAC;QAC3G,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,eAAK;YACpD,IAAI,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAI,IAAI,+CAAiB,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,aAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAzE,CAAyE,CAAC,EAAE;gBACvG,KAAI,CAAC,MAAM,EAAE,CAAC;aACjB;QACL,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAES,oDAAyB,GAAnC;QAAA,iBAkBC;QAjBG,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAE,CAAC;QAE3C,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC;QACtD,IAAI,UAAU,IAAI,qBAAkB,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;YAC1D,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC;YACzD,IAAI,IAAI,CAAC,cAAc,EAAE;gBACrB,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,cAAM,YAAI,CAAC,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC,CAAC;aACtH;SACJ;aAAM;YACH,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;SACnC;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE9B,qFAAqF;QACrF,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAElB,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAGS,kCAAO,GAAjB;QAAA,iBAsBC;QArBG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;QAClC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC7C,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC;QACtD,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,4CAAiB,CAAC;QACrC,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;SACxD;QACD,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,IAAI,KAAK,MAAM,EAAE;YACjB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;SACzC;aAAM,IAAI,IAAI,KAAK,OAAO,EAAE;YACzB,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;SAC1C;QACD,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,cAAM,YAAI,CAAC,MAAM,EAAE,EAAb,CAAa,CAAC,CAAC,CAAC;YAC1E,+CAA+C;YAC/C,+IAA+I;YAC/I,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,cAAM,YAAI,CAAC,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC,CAAC;SACnG;IACL,CAAC;IAES,wCAAa,GAAvB,UAAwB,GAAY;QAApC,iBAUC;QATG,iBAAM,aAAa,YAAC,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9C,8DAA8D;QAC9D,IAAI,CAAC,gBAAgB,CAAM,IAAI,CAAC,IAAI,EAAE,aAAa,EAAE,UAAC,CAA4C;YAC9F,IAAI,KAAI,CAAC,QAAQ,IAAI,KAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE;gBACxD,aAAS,GAAK,CAAC,CAAC,MAAM,UAAb,CAAc;gBAC/B,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,SAAS,aAAE,CAAC,CAAC;aAC5D;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iCAAM,GAAN;QACI,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;SACxC;QACD,iBAAM,MAAM,WAAE,CAAC;IACnB,CAAC;IAEK,qCAAU,GAAhB,UAAiB,OAA8B;;;;;;wBAC3C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;6BACrB,QAAO,IAAI,OAAO,CAAC,GAAG,GAAtB,wBAAsB;wBACL,qBAAM,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC;;wBAAzD,QAAQ,GAAG,SAA8C;wBAC/D,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;;4BAE9D,qBAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;;wBAA9B,SAA8B,CAAC;wBAC/B,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;4BAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;yBACrC;;;;;KACJ;IAES,qCAAU,GAApB,UAAqB,OAA8B;QAC/C,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;IACtC,CAAC;IAEe,qCAAU,GAA1B,UAA2B,OAA8B;;;;;;;;wBAE/C,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC;wBAEtD,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;wBAC9B,IAAI,CAAC,eAAe,GAAG,IAAI,sCAAuB,EAAE,CAAC;wBAC/C,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;6BAErC,UAAU,EAAV,yBAAU;6BACN,IAAI,CAAC,cAAc,EAAnB,yBAAmB;;;;wBAET,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;wBAElE,qBAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,OAAO,CAAC;;wBAA7D,YAAU,SAAmD;wBACjE,IAAI,KAAK,CAAC,uBAAuB,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;4BACvD,sBAAO;yBACV;wBAED,IAAI,OAAO,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,IAAI,SAAO,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,IAAI,cAAc,CAAC,CAAC,EAAE;4BAC/G,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;yBAC/B;wBACD,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;4BAC3B,SAAO,GAAG,SAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;yBAC9B;wBACK,OAAO,GAAoB,EAAE,CAAC;4CACzB,MAAM;;;;;wCACP,eAAe,GAAwB,EAAE,CAAC;wCAChD,qBAAM,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,UAAM,UAAU;;oDACrD,eAAe,CAAC,IAAI,CAAC;wDACjB,UAAU;wDAAE,QAAQ,EAAE,MAAM,CAAC,EAAE;qDAClC,CAAC,CAAC;;;iDACN,CAAC,CAAC;;wCAJH,SAIG,CAAC;wCAEc,qBAAM,OAAK,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC;;wCAAlE,SAAS,GAAG,SAAsD;wCACxE,OAAO,CAAC,IAAI,CAAC;4CACT,aAAa,EAAE,MAAM;4CACrB,YAAY,EAAE,SAAS;4CACvB,eAAe;4CACf,QAAQ,EAAE,KAAK;4CACf,QAAQ,EAAE,KAAK;yCAClB,CAAC,CAAC;;;;;;;;;wBAfc,8BAAO;;;;wBAAjB,MAAM;sDAAN,MAAM;;;;;;;;;;;;;;;;;;;wBAiBjB,cAAc,CAAC,IAAI,OAAnB,cAAc,WAAS,OAAO,GAAE;wBAChC,IAAI,CAAC,MAAM,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;;;;wBAE1D,IAAI,OAAO,IAAI,OAAO,CAAC,GAAG,IAAI,UAAU,EAAE;4BACtC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;yBAC/B;wBACD,IAAI,CAAC,MAAM,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,YAAY,EAAE,oBAAC,KAAK,CAAC,QAAQ;;gCAAG,OAAK,CAAC,OAAO;oCAAmB,EAAE,CAAC;;;;wBAGvG,IAAI,CAAC,MAAM,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,YAAY,EAAE,oBAAC,KAAK,CAAC,QAAQ;;gCAA+B,UAAU,CAAC,QAAQ,CAAC,KAAK;mDAAkC,EAAE,CAAC;;;;wBAG9J,IAAI,CAAC,MAAM,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,YAAY,EAAE,oBAAC,KAAK,CAAC,QAAQ,6DAAoE,EAAE,CAAC;;;;;;KAE3I;IAEe,qDAA0B,GAA1C,UAA2C,MAAqB;;;;;;wBACtD,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAI,IAAI,WAAI,KAAK,MAAM,EAAf,CAAe,CAAC,CAAC;6BACxD,MAAM,CAAC,QAAQ,EAAf,wBAAe;wBACf,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;;4BAEvC,qBAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,EAAE,CAAC;;wBAAzC,SAAyC,CAAC;;;wBAE9C,MAAM,CAAC,QAAQ,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC;wBACnC,IAAI,CAAC,MAAM,EAAE,CAAC;;;;;KACjB;IAEe,6CAAkB,GAAlC,UAAmC,MAAqB,EAAE,kBAA0B;;;;gBAChF,IAAI,MAAM,CAAC,eAAe,EAAE;oBACxB,UAAI,CAAC,QAAQ,EAAC,MAAM,qBAAC,kBAAkB,GAAG,CAAC,EAAE,CAAC,GAAK,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,cAAI;wBAC9E,aAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,aAAa,CAAC,EAAE,EAAE,CAAC;oBAA3D,CAA2D,CAC9D,GAAE;iBACN;;;;KACJ;IAES,gDAAqB,GAA/B,UAAgC,MAAqB,EAAE,kBAA0B;QAC7E,IAAI,MAAM,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,kBAAkB,GAAG,CAAC,EAAE,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;SAC/E;IACL,CAAC;IAED,qCAAU,GAAV;QACU,SAA8B,IAAI,EAAhC,OAAO,eAAE,cAAc,oBAAS,CAAC;QACzC,OAAO;YACH,OAAO;YACP,cAAc;SACjB,CAAC;IACN,CAAC;IAED,8DAA8D;IAC9D,uCAAY,GAAZ,UAAa,QAAa;QACtB,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;QACnC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,gBAAgB,CAAC,CAAC;QACjD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IAES,sCAAW,GAArB;QACI,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,OAAO,EAAE;YAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;SACvC;QACD,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAES,iCAAM,GAAhB;QACI,IAAI,OAAwB,CAAC;QAC7B,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;YACvB,KAAK,OAAO;gBACR,OAAO,GAAG,oBAAE,KAAK,CAAC,QAAQ;oBACrB,IAAI,CAAC,mBAAmB,EAAE;oBAC1B,IAAI,CAAC,gBAAgB,EAAE,CACX,CAAC;gBAClB,MAAM;YAEV,KAAK,OAAO;gBACR,IAAM,MAAM,GAAoB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;gBACzD,IAAI,IAAI,GAAoB,EAAE,CAAC;gBAC/B,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;oBAClB,IAAM,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBAC5E,IAAM,OAAO,GAAG,cAAc,CAAC,CAAC,CAAC,KAAG,kBAAkB,CAAC,cAAc,CAAG,CAAC,CAAC,CAAC,EAAE,CAAC;oBAE9E,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,aAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;oBACvE,IAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,KAAG,IAAI,aAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,WAAa,CAAC,CAAC,CAAC,EAAE,CAAC;oBAE7E,IAAM,cAAc,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACxE,IAAI,GAAG,UAAQ,cAAgB,CAAC;iBACnC;gBACD,OAAO,GAAG,oBAAC,4BAAY,IACnB,IAAI,EAAC,SAAS,EACd,MAAM,EAAE,kCAAgC,IAAI,MAAG,IAC9C,MAAM,CACI,CAAC;gBAChB,MAAM;YAEV,KAAK,SAAS;gBACV,OAAO,GAAG,6BAAK,SAAS,EAAC,kBAAkB;oBACvC,8BAAM,SAAS,EAAC,oCAAoC,GAAQ,CAC1D,CAAC;gBACP,MAAM;SACb;QACD,OAAO,6BAAK,SAAS,EAAC,oBAAoB,IACrC,OAAO,CACN,CAAC;IACX,CAAC;IAES,8CAAmB,GAA7B;QACI,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;YAClB,IAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAClE,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YACvC,OAAO,6BAAK,SAAS,EAAC,aAAa;gBAE3B,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;gBAG9F,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;gBAExE,6BAAK,SAAS,EAAC,cAAc,cAEvB,CACJ,CAAC;SACV;IACL,CAAC;IAES,2CAAgB,GAA1B;QAAA,iBAeC;QAdG,IAAM,IAAI,GAAG,6BAAK,SAAS,EAAC,eAAe,EAAC,EAAE,EAAE,IAAI,CAAC,eAAe;YAChE,oBAAC,cAAc,IACX,GAAG,EAAE,kBAAQ,IAAI,YAAI,CAAC,QAAQ,GAAG,CAAC,QAAQ,IAAI,SAAS,CAAC,EAAvC,CAAuC,EACxD,IAAI,EAAE,IAAI,CAAC,QAAQ,EACnB,WAAW,EAAE,IAAI,CAAC,cAAc,EAChC,eAAe,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,EACvE,YAAY,EAAE,IAAI,CAAC,YAAY,EAC/B,YAAY,EAAE,IAAI,CAAC,YAAY,EAC/B,YAAY,EAAE,IAAI,CAAC,YAAY,EAC/B,oBAAoB,EAAE,IAAI,CAAC,oBAAoB,GACjC,CAChB,CAAC;QACP,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,OAAO,IAAI,CAAC;IAChB,CAAC;IAGS,yCAAc,GAAxB,UAAyB,IAAkB;QACvC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IACzC,CAAC;IAGD,8DAA8D;IACpD,yCAAc,GAAxB,UAAyB,MAAkB;QAA3C,iBAiBC;QAhBG,IAAI,QAAoB,CAAC;QACzB,IAAM,OAAO,GAAG,IAAI,OAAO,CAAC,iBAAO,IAAI,eAAQ,GAAG,OAAO,EAAlB,CAAkB,CAAC,CAAC;QAC3D,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QACpD,IAAI,aAAa,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE;YAC3B,IAAM,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC;gBACZ,KAAK,EAAE,EAAE,UAAU,cAAE;gBACrB,QAAQ,EAAE,gDAAqB;gBAC/B,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG;aACxB,CAAC,CAAC,IAAI,CAAC;gBACJ,KAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;gBACnC,KAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,QAAQ,EAAE,CAAC;YACf,CAAC,CAAC,CAAC;SACN;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IAGS,yCAAc,GAAxB,UAAyB,MAAqB;QAA9C,iBAiDC;QAhDG,IAAI,mBAAmB,GAAG,aAAa,CAAC;QACxC,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;YAC3B,mBAAmB,GAAG,YAAY,CAAC;SACtC;QACD,OAAO,6BACH,SAAS,EAAE,mBAAgB,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,wBAAc,CAAC,CAAC,CAAC,EAAE,CAAE,EACxE,OAAO,EACH,WAAC;gBACG,IAAI,MAAM,CAAC,QAAQ,IAAI,CAAC,KAAI,CAAC,cAAc,EAAE;oBACzC,KAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC;iBAC3C;qBAAM;oBACH,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;iBAC3B;gBACD,CAAC,CAAC,cAAc,EAAE,CAAC;YACvB,CAAC,EAEL,aAAa,EACT,WAAC;gBACG,IAAI,KAAI,CAAC,cAAc,IAAI,MAAM,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC1D,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;iBACvD;gBACD,CAAC,CAAC,cAAc,EAAE,CAAC;YACvB,CAAC;YAGL,6BAAK,SAAS,EAAC,aAAa;gBAAC,6BAAK,SAAS,EAAC,iBAAiB;oBACzD,6BAAK,SAAS,EAAC,UAAU,EAAC,GAAG,EAAE,MAAM,CAAC,YAAY,GAAQ,CACxD;gBACN,6BAAK,SAAS,EAAE,wBAAqB,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAE;oBAC/E,6BAAK,SAAS,EAAC,+BAA+B,IACzC,MAAM,CAAC,aAAa,CAAC,OAAO,CAC3B;oBACN,6BAAK,SAAS,EAAC,gCAAgC,IAC1C,MAAM,CAAC,aAAa,CAAC,kBAAkB,GAAG,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,UAAU,CACjF,CACJ;gBACN,6BAAK,SAAS,EAAC,wBAAwB,EAAC,OAAO,EAAE,cAAM,YAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAA7B,CAA6B,GAAQ;gBAExF,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,6BAAK,SAAS,EAAC,0BAA0B;oBAC5D,6BAAK,SAAS,EAAC,QAAQ;wBACnB,6BAAK,SAAS,EAAC,QAAQ,IAAE,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAO;wBAClF,6BAAK,SAAS,EAAE,aAAa,GAAG,mBAAmB,GAAQ,CACzD,CACJ;oBACF,CAAC,CAAC,EAAE,CAEN,CACH,CAAC;IACZ,CAAC;IAEe,2CAAgB,GAAhC,UAAiC,UAAyB;;;;gBAChD,OAAO,yBACN,UAAU,CAAC,aAAa,CAAC,mBAAmB,KAC/C,IAAI,EAAE,QAAQ,GACjB,CAAC;gBACF,cAAI,CACA,IAAI,CAAC,aAAa,EAClB,UAAU,CAAC,aAAa,CAAC,eAAe,EACxC,OAAO,CACV,CAAC;;;;KACL;IAGS,iDAAsB,GAAhC,UAAiC,UAA6B;QAC1D,IAAM,iBAAiB,GAAoB,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC/F,OAAO,iBAAiB,CAAC;IAC7B,CAAC;IAES,wCAAa,GAAvB,UAAwB,MAAyB,EAAE,SAAiB;QAApE,iBAQC;QAPG,OAAO,oBAAC,4CAAgB,aAAC,GAAG,EAAE,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAM;YAChE,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,MAAM;YACN,YAAY,EAAE,cAAM,YAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,EAAhC,CAAgC;YACpD,UAAU,EAAE,cAAM,YAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAvB,CAAuB;SAC5C,EAAI,CAAC;IACV,CAAC;IAES,uCAAY,GAAtB;QACI,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACpC,IAAI,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,OAAO,EAAE;YAC3C,IAAI,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE;gBAC5B,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,aAAa,CAAC,EAAE,KAAK,QAAQ,CAAC,aAAa,CAAC,EAAE,EAAhD,CAAgD,CAAC,CAAC;gBACjG,IAAI,QAAQ,CAAC,QAAQ,EAAE;oBACnB,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;iBAC7C;qBAAM;oBACH,IAAI,GAAG,GAAG,CAAC,EAAE;wBACT,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;qBACjD;iBACJ;aACJ;iBAAM,IAAI,wCAAiB,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE;gBACvC,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,aAAa,CAAC,EAAE,KAAK,QAAQ,CAAC,QAAQ,EAAxC,CAAwC,CAAC,CAAC;gBACzF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7C;SACJ;QACD,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAES,wCAAa,GAAvB;QACI,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACpC,IAAI,QAAQ,EAAE;YACV,IAAI,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;gBAC1E,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;aAC7C;iBAAM;gBACH,IAAI,CAAC,cAAc,EAAE,CAAC;aACzB;SACJ;QACD,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAES,0CAAe,GAAzB;QACI,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACpC,IAAI,QAAQ,EAAE;YACV,IAAI,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE;gBAC5B,IAAI,IAAI,CAAC,cAAc,EAAE;oBACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;iBACzD;qBAAM;oBACH,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;iBACnC;aACJ;iBAAM,IAAI,wCAAiB,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE;gBACvC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;aACtC;SACJ;QACD,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAES,mCAAQ,GAAlB,UAAmB,MAAqB;QACpC,IAAM,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;QACxC,cAAI,CAAC,IAAI,CAAC,aAAa,EAAE,SAAS,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;IAC5D,CAAC;IAjbD;QADC,yBAAa,EAAE;;;;gDASf;IApDQ,gBAAgB;QAD5B,sBAAU,EAAE;QAwBJ,6BAAM,CAAC,wBAAU,CAAC;QAClB,6BAAM,CAAC,uBAAa,CAAC;QACrB,6BAAM,CAAC,0BAAgB,CAAC;QACxB,6BAAM,CAAC,mBAAU,CAAC;QAClB,6BAAM,CAAC,qCAAgB,CAAC;QACxB,6BAAM,CAAC,uBAAa,CAAC;yCAL6B,wBAAU,UAET,0BAAgB,UAER,qCAAgB;YACnB,uBAAa;OA5BjE,gBAAgB,CA8d5B;IAAD,uBAAC;CAAA,CA9dqC,kDAAsB,GA8d3D;AA9dY,4CAAgB;AA4e7B;IAAoC,kCAAqC;IAAzE;QAAA,qEAuFC;QApFsB,wBAAkB,GAAG,UAAC,IAAuB,IAAK,YAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAA/B,CAA+B,CAAC;QAgD3F,kBAAY,GAAG,IAAI,qCAAiB,EAAE,CAAC;QAEvC,wBAAkB,GAAoB,UAAC,MAAoB;YACzD,SAAK,GAAkB,MAAM,MAAxB,EAAE,GAAG,GAAa,MAAM,IAAnB,EAAE,MAAM,GAAK,MAAM,OAAX,CAAY;YACtC,OAAO,CACH,oBAAC,gCAAY,IACT,KAAK,EAAE,KAAI,CAAC,YAAY,EACxB,WAAW,EAAE,CAAC,EACd,GAAG,EAAE,GAAG,EACR,QAAQ,EAAE,KAAK,EACf,MAAM,EAAE,MAAM,IAEb,cAAM,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAtB,CAAsB,CAClB,CAClB,CAAC;QACN,CAAC,CAAC;QAEQ,eAAS,GAAoB,UAAC,EAAqB;gBAAnB,KAAK,aAAE,GAAG,WAAE,KAAK;YACvD,IAAI,KAAI,CAAC,kBAAkB,CAAC,EAAE,KAAK,SAAE,CAAC,EAAE;gBACpC,IAAM,GAAG,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACnC,IAAI,aAAa,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;oBACvB,IAAM,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;oBAC1C,OAAO,6BAAK,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,uBAAoB,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAE,IAC3F,IAAI,CACH,CAAC;iBACV;qBAAM,IAAI,wCAAiB,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;oBAClC,OAAO,6BAAK,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAC,uBAAuB,IAChE,KAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,GAAG,CAAC,CACnC,CAAC;iBACV;aACJ;iBAAM;gBACH,OAAO,6BAAK,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,uBAAoB,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAE;oBAC5F,8BAAM,SAAS,EAAC,8BAA8B,GAAQ,CACpD,CAAC;aACV;QACL,CAAC,CAAC;;IACN,CAAC;IAnFa,6CAAoB,GAA9B,UAA+B,IAAuB;QAClD,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxC,OAAO,CAAC,CAAC,GAAG,CAAC;IACjB,CAAC;IAED,+BAAM,GAAN;QAAA,iBAoCC;QAnCG,OAAO,oBAAC,kCAAc,IAClB,WAAW,EAAE,IAAI,CAAC,kBAAkB,EACpC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EACrC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EACpC,SAAS,EAAE,EAAE,IAGT,UAAC,EAAiC;gBAA/B,cAAc,sBAAE,aAAa;YAAO,QACnC,oBAAC,6BAAS,QAEF,UAAC,EAAiB;oBAAf,KAAK,aAAE,MAAM;gBAAO,2BAAC,wBAAI,IACxB,SAAS,EAAC,YAAY,EACtB,GAAG,EAAE,cAAI;wBACL,KAAI,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC;wBAChC,aAAa,CAAC,IAAI,CAAC,CAAC;oBACxB,CAAC,EACD,KAAK,EAAE,KAAK,EACZ,MAAM,EAAE,MAAM,EACd,cAAc,EAAE,cAAc,EAC9B,WAAW,EAAE,KAAI,CAAC,kBAAkB,EACpC,SAAS,EAAE,KAAI,CAAC,YAAY,CAAC,SAAS,EACtC,QAAQ,EAAE,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EACtF,QAAQ,EAAE,CAAC,CAAC,EACZ,QAAQ,EAAE,KAAI,CAAC,KAAK,CAAC,YAAY,EACjC,aAAa,EAAE,KAAI,CAAC,KAAK,CAAC,eAAe,EACzC,KAAK,EAAE;wBACH,SAAS,EAAE,SAAS;wBACpB,SAAS,EAAE,SAAS;qBACvB,GACH;YAnBqB,CAmBrB,CAEE,CACf;QAzBsC,CAyBtC,CAEQ,CAAC;IACtB,CAAC;IAED,4CAAmB,GAAnB;QACI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;IACjC,CAAC;IAsCL,qBAAC;AAAD,CAAC,CAvFmC,KAAK,CAAC,SAAS,GAuFlD;AAvFY,wCAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChjB3B;;;;;;;;;;;;;;kFAckF;AAClF,0HAAgE;AAEnD,+BAAuB,YAAO,6BAAmB,GAAE,OAAO,GAAE;;;;;;;;;;;;;;ACjBzE;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;AAElF,oGAA+C;AAC/C,qJAAuH;AACvH,sJAA2D;AAC3D,kHAA6C;AAC7C,0IAAgE;AAGhE;IAAA;IAiDA,CAAC;IAzCG,8CAAS,GAAT,UAAU,OAAe;QACrB,OAAO,wCAAiB,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,4CAAO,GAAP,UAAQ,IAAuB;QAC3B,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,aAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,4CAAO,GAAP,UAAQ,IAAuB;QAC3B,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,aAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,mDAAc,GAAd,UAAe,IAAuB;QAClC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,aAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;IAClE,CAAC;IAED,4CAAO,GAAP,UAAQ,IAAuB,EAAE,KAA0B;QACvD,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,aAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,+CAAU,GAAV,UAAW,IAAuB;QAC9B,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;IACxC,CAAC;IAED,iDAAY,GAAZ,UAAa,GAAiB;QAC1B,IAAM,SAAS,GAAG,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,aAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC/D,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACvD,IAAI,IAAI,EAAE;YACN,IAAM,aAAa,GAAG,IAAI,aAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACrD,IAAM,YAAY,GAAG,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YACvD,IAAI,YAAY,EAAE;gBACd,OAAO,YAAY,CAAC,QAAQ,EAAE,CAAC;aAClC;SACJ;QACD,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACrD,CAAC;IAED,qDAAgB,GAAhB,UAAiB,IAAuB;QACpC,OAAO,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;IAC9C,CAAC;IA5CD;QADC,kBAAM,CAAC,8BAAa,CAAC;kCACY,8BAAa;qEAAC;IAGhD;QADC,kBAAM,CAAC,wBAAU,CAAC;kCACY,wBAAU;kEAAC;IANjC,0BAA0B;QADtC,sBAAU,EAAE;OACA,0BAA0B,CAiDtC;IAAD,iCAAC;CAAA;AAjDY,gEAA0B;;;;;;;;;;;;;;ACvBvC;;;;;;;;;;;;;;kFAckF;;;AAUlF,IAAiB,iBAAiB,CAIjC;AAJD,WAAiB,iBAAiB;IAC9B,SAAgB,EAAE,CAAC,IAAwB;QACvC,OAAO,CAAC,CAAC,IAAI,IAAI,YAAY,IAAI,IAAI,IAAI,UAAU,IAAI,IAAI,CAAC;IAChE,CAAC;IAFe,oBAAE,KAEjB;AACL,CAAC,EAJgB,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAIjC;;;;;;;;;;;;;;AC5BD;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,sHAAsE;AACtE,0IAAgE;AAChE,kHAA6C;AAC7C,qJAAuE;AAEvE,iHAAgD;AAChD,oGAA+C;AAC/C,+JAA2E;AAC3E,8EAA+B;AAC/B,oLAA8E;AAI9E;IAAuF,0CAAW;IAU9F;QAAA,YACI,iBAAO,SAEV;QADG,KAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;;IAC3B,CAAC;IAES,kDAAiB,GAA3B,UAA4B,GAAY;QACpC,iBAAM,iBAAiB,YAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAED,sBAAc,mDAAe;aAI7B;YACI,OAAO,IAAI,CAAC,gBAAgB,CAAC;QACjC,CAAC;aAND,UAA8B,EAAU;YACpC,IAAI,CAAC,gBAAgB,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC5C,CAAC;;;OAAA;IAMS,gDAAe,GAAzB,UAA0B,GAAY;QAAtC,iBAcC;QAbG,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACrC,OAAO;SACV;QACD,iBAAM,eAAe,YAAC,GAAG,CAAC,CAAC;QAC3B,CAAC;;;gBACS,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,wBAAc,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrE,IAAI,QAAQ,EAAE;oBACJ,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;oBAChE,IAAI,SAAS,EAAE;wBACX,qBAAU,CAAC,sBAAsB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;qBAC1D;iBACJ;;;aACJ,CAAC,EAAE,CAAC;IACT,CAAC;IAES,yCAAQ,GAAlB,UAAmB,GAAyB;QACxC,iBAAM,QAAQ,YAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAES,mDAAkB,GAA5B,UAA6B,GAAW;QACpC,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,aAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAChE,IAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,IAAI,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,KAAK,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC/J,OAAO,UAAU,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,aAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAC5H,CAAC;IAES,gDAAe,GAAzB,UAA0B,EAAmH;YAAjH,IAAI,YAAE,KAAK,aAAE,UAAU,kBAAE,KAAK;QACtD,IAAI,CAAC,KAAK,EAAE;YACR,OAAO;SACV;QACD,IAAM,SAAS,GAAG,UAAC,YAAY,GAAK,CAAC,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAClE,OAAO,6BAAK,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK;YACrD,6BAAK,SAAS,EAAC,cAAc,IAAE,IAAI,CAAO;YAC1C,6BAAK,SAAS,EAAC,cAAc,IAAE,KAAK,CAAO,CACzC,CAAC;IACX,CAAC;IAES,8DAA6B,GAAvC,UAAwC,SAAsB;QAA9D,iBAMC;QALG,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,aAAG,CAAC,UAAU,EAAE,cAAM,YAAI,CAAC,YAAY,EAAE,EAAnB,CAAmB,CAAC,CAAC;QAC1E,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,aAAG,CAAC,WAAW,EAAE,cAAM,YAAI,CAAC,aAAa,EAAE,EAApB,CAAoB,CAAC,CAAC;QAC5E,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,aAAG,CAAC,QAAQ,EAAE,cAAM,YAAI,CAAC,UAAU,EAAE,EAAjB,CAAiB,CAAC,CAAC;QACtE,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,aAAG,CAAC,UAAU,EAAE,cAAM,YAAI,CAAC,YAAY,EAAE,EAAnB,CAAmB,CAAC,CAAC;QAC1E,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,aAAG,CAAC,KAAK,EAAE,cAAM,YAAI,CAAC,eAAe,EAAE,EAAtB,CAAsB,CAAC,CAAC;IAC5E,CAAC;IAES,6CAAY,GAAtB;QACI,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAES,8CAAa,GAAvB;QACI,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAES,2CAAU,GAApB;QACI,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAES,6CAAY,GAAtB;QACI,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAES,gDAAe,GAAzB;IAEA,CAAC;IAES,4CAAW,GAArB;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,IAAI,KAAK,EAAnB,CAAmB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IACpF,CAAC;IAES,2CAAU,GAApB,UAAqB,IAAO;QACxB,IAAM,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC7B,IAAI,CAAC,EAAE;YACH,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;SACtB;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAES,+CAAc,GAAxB;QACI,IAAM,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC;QACjC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SAC3C;aAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE;YAC/C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SACrC;IACL,CAAC;IAES,mDAAkB,GAA5B;QACI,IAAM,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC;QACjC,IAAI,GAAG,GAAG,CAAC,EAAE;YACT,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SAC3C;IACL,CAAC;IAED,sBAAc,mDAAe;aAA7B;YACI,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3C,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,IAAI,KAAK,EAAnB,CAAmB,CAAC,CAAC;aAC5D;YACD,OAAO,CAAC,CAAC,CAAC;QACd,CAAC;;;OAAA;IA5HmB;QAAnB,kBAAM,CAAC,wBAAU,CAAC;kCAAgC,wBAAU;8DAAC;IACvC;QAAtB,kBAAM,CAAC,8BAAa,CAAC;kCAAmC,8BAAa;iEAAC;IAEvE;QADC,kBAAM,CAAC,2DAA0B,CAAC;kCACE,2DAA0B;oEAAC;IAR9C,sBAAsB;QAD3C,sBAAU,EAAE;;OACS,sBAAsB,CAkI3C;IAAD,6BAAC;CAAA,CAlIsF,0BAAW,GAkIjG;AAlIqB,wDAAsB;AA6I5C;IAAsC,oCAAuC;IAA7E;QAAA,qEA2BC;QAFsB,kBAAY,GAAG,cAAM,YAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAA1C,CAA0C,CAAC;QAChE,gBAAU,GAAG,cAAM,YAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAxC,CAAwC,CAAC;;IACnF,CAAC;IAzBG,iCAAM,GAAN;QACU,SAA8C,IAAI,CAAC,KAAK,EAAtD,aAAa,qBAAE,gBAAgB,wBAAE,MAAM,YAAe,CAAC;QAC/D,IAAM,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAM,KAAK,GAAG,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAM,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACtD,IAAM,OAAO,GAAG,gBAAgB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACpD,IAAM,aAAa,GAAG,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAChE,OAAO,6BAAK,SAAS,EAAE,sBAAmB,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,wBAAc,CAAC,CAAC,CAAC,EAAE,CAAE,EACnF,aAAa,EAAE,IAAI,CAAC,YAAY,EAChC,OAAO,EAAE,IAAI,CAAC,UAAU;YACxB,8BAAM,SAAS,EAAE,IAAI,GAAG,YAAY,GAAS;YAC7C,6BAAK,SAAS,EAAC,YAAY,EAAC,KAAK,EAAE,OAAO;gBACtC,8BAAM,SAAS,EAAC,MAAM,IAAE,KAAK,GAAG,GAAG,CAAQ;gBAC3C,8BAAM,SAAS,EAAC,MAAM,IAAE,WAAW,CAAQ,CACzC;YACN,6BACI,KAAK,EAAE,OAAO,EACd,SAAS,EAAE,MAAM,CAAC,UAAU,CAAC,qBAAqB,EAAE,IACnD,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CACtB,CACJ,CAAC;IACX,CAAC;IAIL,uBAAC;AAAD,CAAC,CA3BqC,KAAK,CAAC,SAAS,GA2BpD;AA3BY,4CAAgB","file":"49.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2020 Arm and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ScmProvider } from '@theia/scm/lib/browser/scm-provider';\nimport { ScmHistorySupport } from './scm-history-widget';\n\nexport { ScmHistorySupport };\n\nexport interface ScmHistoryProvider extends ScmProvider {\n    historySupport?: ScmHistorySupport;\n}\nexport namespace ScmHistoryProvider {\n    export function is(scmProvider: ScmProvider | undefined): scmProvider is ScmHistoryProvider {\n        return !!scmProvider && 'historySupport' in scmProvider;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { MenuModelRegistry, CommandRegistry, Command, SelectionService } from '@theia/core';\nimport { AbstractViewContribution, OpenViewArguments } from '@theia/core/lib/browser';\nimport { injectable, inject } from 'inversify';\nimport { NavigatorContextMenu } from '@theia/navigator/lib/browser/navigator-contribution';\nimport { UriCommandHandler, UriAwareCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport URI from '@theia/core/lib/common/uri';\nimport { ScmHistoryWidget } from './scm-history-widget';\nimport { ScmService } from '@theia/scm/lib/browser/scm-service';\nimport { EDITOR_CONTEXT_MENU_SCM } from '../scm-extra-contribution';\n\nexport const SCM_HISTORY_ID = 'scm-history';\nexport const SCM_HISTORY_LABEL = 'History';\nexport const SCM_HISTORY_TOGGLE_KEYBINDING = 'alt+h';\nexport const SCM_HISTORY_MAX_COUNT = 100;\n\nexport namespace ScmHistoryCommands {\n    export const OPEN_FILE_HISTORY: Command = {\n        id: 'scm-history:open-file-history',\n    };\n    export const OPEN_BRANCH_HISTORY: Command = {\n        id: 'scm-history:open-branch-history',\n        label: SCM_HISTORY_LABEL\n    };\n}\n\nexport interface ScmHistoryOpenViewArguments extends OpenViewArguments {\n    uri: string | undefined;\n}\n\n@injectable()\nexport class ScmHistoryContribution extends AbstractViewContribution<ScmHistoryWidget> {\n\n    @inject(SelectionService)\n    protected readonly selectionService: SelectionService;\n    @inject(ScmService)\n    protected readonly scmService: ScmService;\n\n    constructor() {\n        super({\n            widgetId: SCM_HISTORY_ID,\n            widgetName: SCM_HISTORY_LABEL,\n            defaultWidgetOptions: {\n                area: 'left',\n                rank: 500\n            },\n            toggleCommandId: ScmHistoryCommands.OPEN_BRANCH_HISTORY.id,\n            toggleKeybinding: SCM_HISTORY_TOGGLE_KEYBINDING\n        });\n    }\n\n    async openView(args?: Partial<ScmHistoryOpenViewArguments>): Promise<ScmHistoryWidget> {\n        const widget = await super.openView(args);\n        this.refreshWidget(args!.uri);\n        return widget;\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(NavigatorContextMenu.SEARCH, {\n            commandId: ScmHistoryCommands.OPEN_FILE_HISTORY.id,\n            label: SCM_HISTORY_LABEL\n        });\n        menus.registerMenuAction(EDITOR_CONTEXT_MENU_SCM, {\n            commandId: ScmHistoryCommands.OPEN_FILE_HISTORY.id,\n            label: SCM_HISTORY_LABEL\n        });\n        super.registerMenus(menus);\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(ScmHistoryCommands.OPEN_FILE_HISTORY, this.newUriAwareCommandHandler({\n            isEnabled: (uri: URI) => !!this.scmService.findRepository(uri),\n            isVisible: (uri: URI) => !!this.scmService.findRepository(uri),\n            execute: async uri => this.openView({ activate: true, uri: uri.toString() }),\n        }));\n        super.registerCommands(commands);\n    }\n\n    protected async refreshWidget(uri: string | undefined): Promise<void> {\n        const widget = this.tryGetWidget();\n        if (!widget) {\n            // the widget doesn't exist, so don't wake it up\n            return;\n        }\n        await widget.setContent({ uri });\n    }\n\n    protected newUriAwareCommandHandler(handler: UriCommandHandler<URI>): UriAwareCommandHandler<URI> {\n        return new UriAwareCommandHandler(this.selectionService, handler);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { Event as TheiaEvent, DisposableCollection } from '@theia/core';\nimport { OpenerService, open, StatefulWidget, SELECTED_CLASS, WidgetManager, ApplicationShell } from '@theia/core/lib/browser';\nimport { CancellationTokenSource } from '@theia/core/lib/common/cancellation';\nimport { Message } from '@phosphor/messaging';\nimport { AutoSizer, List, ListRowRenderer, ListRowProps, InfiniteLoader, IndexRange, ScrollParams, CellMeasurerCache, CellMeasurer } from 'react-virtualized';\nimport URI from '@theia/core/lib/common/uri';\nimport { ScmService } from '@theia/scm/lib/browser/scm-service';\nimport { ScmHistoryProvider } from '.';\nimport { SCM_HISTORY_ID, SCM_HISTORY_MAX_COUNT, SCM_HISTORY_LABEL } from './scm-history-contribution';\nimport { ScmHistoryCommit, ScmFileChange } from '../scm-file-change-node';\nimport { FileSystem } from '@theia/filesystem/lib/common';\nimport { ScmAvatarService } from '@theia/scm/lib/browser/scm-avatar-service';\nimport { ScmItemComponent } from '../scm-navigable-list-widget';\nimport { ScmFileChangeNode } from '../scm-file-change-node';\nimport { ScmNavigableListWidget } from '../scm-navigable-list-widget';\nimport * as React from 'react';\nimport { AlertMessage } from '@theia/core/lib/browser/widgets/alert-message';\n\nexport const ScmHistorySupport = Symbol('scm-history-support');\nexport interface ScmHistorySupport {\n    getCommitHistory(options?: HistoryWidgetOptions): Promise<ScmHistoryCommit[]>;\n    readonly onDidChangeHistory: TheiaEvent<void>;\n}\n\nexport interface ScmCommitNode {\n    commitDetails: ScmHistoryCommit;\n    authorAvatar: string;\n    fileChangeNodes: ScmFileChangeNode[];\n    expanded: boolean;\n    selected: boolean;\n}\n\nexport namespace ScmCommitNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function is(node: any): node is ScmCommitNode {\n        return !!node && 'commitDetails' in node && 'expanded' in node && 'selected' in node;\n    }\n}\n\nexport interface HistoryWidgetOptions {\n    readonly range?: {\n        readonly toRevision?: string;\n        readonly fromRevision?: string;\n    };\n    readonly uri?: string;\n    readonly maxCount?: number;\n}\n\nexport type ScmHistoryListNode = (ScmCommitNode | ScmFileChangeNode);\n\n@injectable()\nexport class ScmHistoryWidget extends ScmNavigableListWidget<ScmHistoryListNode> implements StatefulWidget {\n    protected options: HistoryWidgetOptions;\n    protected singleFileMode: boolean;\n    private cancelIndicator: CancellationTokenSource;\n    protected listView: ScmHistoryList | undefined;\n    protected hasMoreCommits: boolean;\n    protected allowScrollToSelected: boolean;\n\n    protected status: {\n        state: 'loading',\n    } | {\n        state: 'ready',\n        commits: ScmCommitNode[];\n    } | {\n        state: 'error',\n        errorMessage: React.ReactNode\n    };\n\n    protected readonly toDisposeOnRepositoryChange = new DisposableCollection();\n\n    protected historySupport: ScmHistorySupport | undefined;\n\n    constructor(\n        @inject(ScmService) protected readonly scmService: ScmService,\n        @inject(OpenerService) protected readonly openerService: OpenerService,\n        @inject(ApplicationShell) protected readonly shell: ApplicationShell,\n        @inject(FileSystem) protected readonly fileSystem: FileSystem,\n        @inject(ScmAvatarService) protected readonly avatarService: ScmAvatarService,\n        @inject(WidgetManager) protected readonly widgetManager: WidgetManager,\n    ) {\n        super();\n        this.id = SCM_HISTORY_ID;\n        this.scrollContainer = 'scm-history-list-container';\n        this.title.label = SCM_HISTORY_LABEL;\n        this.title.caption = SCM_HISTORY_LABEL;\n        this.title.iconClass = 'fa scm-history-tab-icon';\n        this.title.closable = true;\n        this.addClass('theia-scm');\n        this.addClass('theia-scm-history');\n        this.resetState();\n        this.cancelIndicator = new CancellationTokenSource();\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.refreshOnRepositoryChange();\n        this.toDispose.push(this.scmService.onDidChangeSelectedRepository(() => this.refreshOnRepositoryChange()));\n        this.toDispose.push(this.labelProvider.onDidChange(event => {\n            if (this.scmNodes.some(node => ScmFileChangeNode.is(node) && event.affects(new URI(node.fileChange.uri)))) {\n                this.update();\n            }\n        }));\n    }\n\n    protected refreshOnRepositoryChange(): void {\n        this.toDisposeOnRepositoryChange.dispose();\n\n        const repository = this.scmService.selectedRepository;\n        if (repository && ScmHistoryProvider.is(repository.provider)) {\n            this.historySupport = repository.provider.historySupport;\n            if (this.historySupport) {\n                this.toDisposeOnRepositoryChange.push(this.historySupport.onDidChangeHistory(() => this.setContent(this.options)));\n            }\n        } else {\n            this.historySupport = undefined;\n        }\n        this.setContent(this.options);\n\n        // If switching repository, discard options because they are specific to a repository\n        this.options = {};\n\n        this.refresh();\n    }\n\n    protected readonly toDisposeOnRefresh = new DisposableCollection();\n    protected refresh(): void {\n        this.toDisposeOnRefresh.dispose();\n        this.toDispose.push(this.toDisposeOnRefresh);\n        const repository = this.scmService.selectedRepository;\n        this.title.label = SCM_HISTORY_LABEL;\n        if (repository) {\n            this.title.label += ': ' + repository.provider.label;\n        }\n        const area = this.shell.getAreaFor(this);\n        if (area === 'left') {\n            this.shell.leftPanelHandler.refresh();\n        } else if (area === 'right') {\n            this.shell.rightPanelHandler.refresh();\n        }\n        this.update();\n\n        if (repository) {\n            this.toDisposeOnRefresh.push(repository.onDidChange(() => this.update()));\n            // render synchronously to avoid cursor jumping\n            // see https://stackoverflow.com/questions/28922275/in-reactjs-why-does-setstate-behave-differently-when-called-synchronously/28922465#28922465\n            this.toDisposeOnRefresh.push(repository.input.onDidChange(() => this.setContent(this.options)));\n        }\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        this.addListNavigationKeyListeners(this.node);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.addEventListener<any>(this.node, 'ps-scroll-y', (e: Event & { target: { scrollTop: number } }) => {\n            if (this.listView && this.listView.list && this.listView.list.Grid) {\n                const { scrollTop } = e.target;\n                this.listView.list.Grid.handleScrollEvent({ scrollTop });\n            }\n        });\n    }\n\n    update(): void {\n        if (this.listView && this.listView.list) {\n            this.listView.list.forceUpdateGrid();\n        }\n        super.update();\n    }\n\n    async setContent(options?: HistoryWidgetOptions): Promise<void> {\n        this.resetState(options);\n        if (options && options.uri) {\n            const fileStat = await this.fileSystem.getFileStat(options.uri);\n            this.singleFileMode = !!fileStat && !fileStat.isDirectory;\n        }\n        await this.addCommits(options);\n        this.onDataReady();\n        if (this.scmNodes.length > 0) {\n            this.selectNode(this.scmNodes[0]);\n        }\n    }\n\n    protected resetState(options?: HistoryWidgetOptions): void {\n        this.options = options || {};\n        this.status = { state: 'loading' };\n        this.scmNodes = [];\n        this.hasMoreCommits = true;\n        this.allowScrollToSelected = true;\n    }\n\n    protected async addCommits(options?: HistoryWidgetOptions): Promise<void> {\n        // const repository: Repository | undefined = this.repositoryProvider.findRepositoryOrSelected(options);\n        const repository = this.scmService.selectedRepository;\n\n        this.cancelIndicator.cancel();\n        this.cancelIndicator = new CancellationTokenSource();\n        const token = this.cancelIndicator.token;\n\n        if (repository) {\n            if (this.historySupport) {\n                try {\n                    const currentCommits = this.status.state === 'ready' ? this.status.commits : [];\n\n                    let history = await this.historySupport.getCommitHistory(options);\n                    if (token.isCancellationRequested || !this.hasMoreCommits) {\n                        return;\n                    }\n\n                    if (options && ((options.maxCount && history.length < options.maxCount) || (!options.maxCount && currentCommits))) {\n                        this.hasMoreCommits = false;\n                    }\n                    if (currentCommits.length > 0) {\n                        history = history.slice(1);\n                    }\n                    const commits: ScmCommitNode[] = [];\n                    for (const commit of history) {\n                        const fileChangeNodes: ScmFileChangeNode[] = [];\n                        await Promise.all(commit.fileChanges.map(async fileChange => {\n                            fileChangeNodes.push({\n                                fileChange, commitId: commit.id\n                            });\n                        }));\n\n                        const avatarUrl = await this.avatarService.getAvatar(commit.authorEmail);\n                        commits.push({\n                            commitDetails: commit,\n                            authorAvatar: avatarUrl,\n                            fileChangeNodes,\n                            expanded: false,\n                            selected: false\n                        });\n                    }\n                    currentCommits.push(...commits);\n                    this.status = { state: 'ready', commits: currentCommits };\n                } catch (error) {\n                    if (options && options.uri && repository) {\n                        this.hasMoreCommits = false;\n                    }\n                    this.status = { state: 'error', errorMessage: <React.Fragment> {error.message} </React.Fragment> };\n                }\n            } else {\n                this.status = { state: 'error', errorMessage: <React.Fragment>History is not supported for {repository.provider.label} source control.</React.Fragment> };\n            }\n        } else {\n            this.status = { state: 'error', errorMessage: <React.Fragment>There is no repository selected in this workspace.</React.Fragment> };\n        }\n    }\n\n    protected async addOrRemoveFileChangeNodes(commit: ScmCommitNode): Promise<void> {\n        const id = this.scmNodes.findIndex(node => node === commit);\n        if (commit.expanded) {\n            this.removeFileChangeNodes(commit, id);\n        } else {\n            await this.addFileChangeNodes(commit, id);\n        }\n        commit.expanded = !commit.expanded;\n        this.update();\n    }\n\n    protected async addFileChangeNodes(commit: ScmCommitNode, scmNodesArrayIndex: number): Promise<void> {\n        if (commit.fileChangeNodes) {\n            this.scmNodes.splice(scmNodesArrayIndex + 1, 0, ...commit.fileChangeNodes.map(node =>\n                Object.assign(node, { commitSha: commit.commitDetails.id })\n            ));\n        }\n    }\n\n    protected removeFileChangeNodes(commit: ScmCommitNode, scmNodesArrayIndex: number): void {\n        if (commit.fileChangeNodes) {\n            this.scmNodes.splice(scmNodesArrayIndex + 1, commit.fileChangeNodes.length);\n        }\n    }\n\n    storeState(): object {\n        const { options, singleFileMode } = this;\n        return {\n            options,\n            singleFileMode\n        };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    restoreState(oldState: any): void {\n        this.options = oldState['options'];\n        this.singleFileMode = oldState['singleFileMode'];\n        this.setContent(this.options);\n    }\n\n    protected onDataReady(): void {\n        if (this.status.state === 'ready') {\n            this.scmNodes = this.status.commits;\n        }\n        this.update();\n    }\n\n    protected render(): React.ReactNode {\n        let content: React.ReactNode;\n        switch (this.status.state) {\n            case 'ready':\n                content = < React.Fragment >\n                    {this.renderHistoryHeader()}\n                    {this.renderCommitList()}\n                </React.Fragment>;\n                break;\n\n            case 'error':\n                const reason: React.ReactNode = this.status.errorMessage;\n                let path: React.ReactNode = '';\n                if (this.options.uri) {\n                    const relPathEncoded = this.scmLabelProvider.relativePath(this.options.uri);\n                    const relPath = relPathEncoded ? `${decodeURIComponent(relPathEncoded)}` : '';\n\n                    const repo = this.scmService.findRepository(new URI(this.options.uri));\n                    const repoName = repo ? `${new URI(repo.provider.rootUri).displayName}` : '';\n\n                    const relPathAndRepo = [relPath, repoName].filter(Boolean).join(' in ');\n                    path = ` for ${relPathAndRepo}`;\n                }\n                content = <AlertMessage\n                    type='WARNING'\n                    header={`There is no history available${path}.`}>\n                    {reason}\n                </AlertMessage>;\n                break;\n\n            case 'loading':\n                content = <div className='spinnerContainer'>\n                    <span className='fa fa-spinner fa-pulse fa-3x fa-fw'></span>\n                </div>;\n                break;\n        }\n        return <div className='scm-diff-container'>\n            {content}\n        </div>;\n    }\n\n    protected renderHistoryHeader(): React.ReactNode {\n        if (this.options.uri) {\n            const path = this.scmLabelProvider.relativePath(this.options.uri);\n            const fileName = path.split('/').pop();\n            return <div className='diff-header'>\n                {\n                    this.renderHeaderRow({ name: 'repository', value: this.getRepositoryLabel(this.options.uri) })\n                }\n                {\n                    this.renderHeaderRow({ name: 'file', value: fileName, title: path })\n                }\n                <div className='theia-header'>\n                    Commits\n                </div>\n            </div>;\n        }\n    }\n\n    protected renderCommitList(): React.ReactNode {\n        const list = <div className='listContainer' id={this.scrollContainer}>\n            <ScmHistoryList\n                ref={listView => this.listView = (listView || undefined)}\n                rows={this.scmNodes}\n                hasMoreRows={this.hasMoreCommits}\n                indexOfSelected={this.allowScrollToSelected ? this.indexOfSelected : -1}\n                handleScroll={this.handleScroll}\n                loadMoreRows={this.loadMoreRows}\n                renderCommit={this.renderCommit}\n                renderFileChangeList={this.renderFileChangeList}\n            ></ScmHistoryList>\n        </div>;\n        this.allowScrollToSelected = true;\n        return list;\n    }\n\n    protected readonly handleScroll = (info: ScrollParams) => this.doHandleScroll(info);\n    protected doHandleScroll(info: ScrollParams): void {\n        this.node.scrollTop = info.scrollTop;\n    }\n\n    protected readonly loadMoreRows = (params: IndexRange) => this.doLoadMoreRows(params);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected doLoadMoreRows(params: IndexRange): Promise<any> {\n        let resolver: () => void;\n        const promise = new Promise(resolve => resolver = resolve);\n        const lastRow = this.scmNodes[params.stopIndex - 1];\n        if (ScmCommitNode.is(lastRow)) {\n            const toRevision = lastRow.commitDetails.id;\n            this.addCommits({\n                range: { toRevision },\n                maxCount: SCM_HISTORY_MAX_COUNT,\n                uri: this.options.uri\n            }).then(() => {\n                this.allowScrollToSelected = false;\n                this.onDataReady();\n                resolver();\n            });\n        }\n        return promise;\n    }\n\n    protected readonly renderCommit = (commit: ScmCommitNode) => this.doRenderCommit(commit);\n    protected doRenderCommit(commit: ScmCommitNode): React.ReactNode {\n        let expansionToggleIcon = 'caret-right';\n        if (commit && commit.expanded) {\n            expansionToggleIcon = 'caret-down';\n        }\n        return <div\n            className={`containerHead${commit.selected ? ' ' + SELECTED_CLASS : ''}`}\n            onClick={\n                e => {\n                    if (commit.selected && !this.singleFileMode) {\n                        this.addOrRemoveFileChangeNodes(commit);\n                    } else {\n                        this.selectNode(commit);\n                    }\n                    e.preventDefault();\n                }\n            }\n            onDoubleClick={\n                e => {\n                    if (this.singleFileMode && commit.fileChangeNodes.length > 0) {\n                        this.openFile(commit.fileChangeNodes[0].fileChange);\n                    }\n                    e.preventDefault();\n                }\n            }\n        >\n            <div className='headContent'><div className='image-container'>\n                <img className='gravatar' src={commit.authorAvatar}></img>\n            </div>\n            <div className={`headLabelContainer${this.singleFileMode ? ' singleFileMode' : ''}`}>\n                <div className='headLabel noWrapInfo noselect'>\n                    {commit.commitDetails.summary}\n                </div>\n                <div className='commitTime noWrapInfo noselect'>\n                    {commit.commitDetails.authorDateRelative + ' by ' + commit.commitDetails.authorName}\n                </div>\n            </div>\n            <div className='fa fa-eye detailButton' onClick={() => this.openDetailWidget(commit)}></div>\n            {\n                !this.singleFileMode ? <div className='expansionToggle noselect'>\n                    <div className='toggle'>\n                        <div className='number'>{commit.commitDetails.fileChanges.length.toString()}</div>\n                        <div className={'icon fa fa-' + expansionToggleIcon}></div>\n                    </div>\n                </div>\n                    : ''\n            }\n            </div>\n        </div >;\n    }\n\n    protected async openDetailWidget(commitNode: ScmCommitNode): Promise<void> {\n        const options = {\n            ...commitNode.commitDetails.commitDetailOptions,\n            mode: 'reveal'\n        };\n        open(\n            this.openerService,\n            commitNode.commitDetails.commitDetailUri,\n            options\n        );\n    }\n\n    protected readonly renderFileChangeList = (fileChange: ScmFileChangeNode) => this.doRenderFileChangeList(fileChange);\n    protected doRenderFileChangeList(fileChange: ScmFileChangeNode): React.ReactNode {\n        const fileChangeElement: React.ReactNode = this.renderScmItem(fileChange, fileChange.commitId);\n        return fileChangeElement;\n    }\n\n    protected renderScmItem(change: ScmFileChangeNode, commitSha: string): React.ReactNode {\n        return <ScmItemComponent key={change.fileChange.uri.toString()} {...{\n            labelProvider: this.labelProvider,\n            scmLabelProvider: this.scmLabelProvider,\n            change,\n            revealChange: () => this.openFile(change.fileChange),\n            selectNode: () => this.selectNode(change)\n        }} />;\n    }\n\n    protected navigateLeft(): void {\n        const selected = this.getSelected();\n        if (selected && this.status.state === 'ready') {\n            if (ScmCommitNode.is(selected)) {\n                const idx = this.status.commits.findIndex(c => c.commitDetails.id === selected.commitDetails.id);\n                if (selected.expanded) {\n                    this.addOrRemoveFileChangeNodes(selected);\n                } else {\n                    if (idx > 0) {\n                        this.selectNode(this.status.commits[idx - 1]);\n                    }\n                }\n            } else if (ScmFileChangeNode.is(selected)) {\n                const idx = this.status.commits.findIndex(c => c.commitDetails.id === selected.commitId);\n                this.selectNode(this.status.commits[idx]);\n            }\n        }\n        this.update();\n    }\n\n    protected navigateRight(): void {\n        const selected = this.getSelected();\n        if (selected) {\n            if (ScmCommitNode.is(selected) && !selected.expanded && !this.singleFileMode) {\n                this.addOrRemoveFileChangeNodes(selected);\n            } else {\n                this.selectNextNode();\n            }\n        }\n        this.update();\n    }\n\n    protected handleListEnter(): void {\n        const selected = this.getSelected();\n        if (selected) {\n            if (ScmCommitNode.is(selected)) {\n                if (this.singleFileMode) {\n                    this.openFile(selected.fileChangeNodes[0].fileChange);\n                } else {\n                    this.openDetailWidget(selected);\n                }\n            } else if (ScmFileChangeNode.is(selected)) {\n                this.openFile(selected.fileChange);\n            }\n        }\n        this.update();\n    }\n\n    protected openFile(change: ScmFileChange): void {\n        const uriToOpen = change.getUriToOpen();\n        open(this.openerService, uriToOpen, { mode: 'reveal' });\n    }\n}\n\nexport namespace ScmHistoryList {\n    export interface Props {\n        readonly rows: ScmHistoryListNode[]\n        readonly indexOfSelected: number\n        readonly hasMoreRows: boolean\n        readonly handleScroll: (info: { clientHeight: number; scrollHeight: number; scrollTop: number }) => void\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        readonly loadMoreRows: (params: IndexRange) => Promise<any>\n        readonly renderCommit: (commit: ScmCommitNode) => React.ReactNode\n        readonly renderFileChangeList: (fileChange: ScmFileChangeNode) => React.ReactNode\n    }\n}\nexport class ScmHistoryList extends React.Component<ScmHistoryList.Props> {\n    list: List | undefined;\n\n    protected readonly checkIfRowIsLoaded = (opts: { index: number }) => this.doCheckIfRowIsLoaded(opts);\n    protected doCheckIfRowIsLoaded(opts: { index: number }): boolean {\n        const row = this.props.rows[opts.index];\n        return !!row;\n    }\n\n    render(): React.ReactNode {\n        return <InfiniteLoader\n            isRowLoaded={this.checkIfRowIsLoaded}\n            loadMoreRows={this.props.loadMoreRows}\n            rowCount={this.props.rows.length + 1}\n            threshold={15}\n        >\n            {\n                ({ onRowsRendered, registerChild }) => (\n                    <AutoSizer>\n                        {\n                            ({ width, height }) => <List\n                                className='commitList'\n                                ref={list => {\n                                    this.list = (list || undefined);\n                                    registerChild(list);\n                                }}\n                                width={width}\n                                height={height}\n                                onRowsRendered={onRowsRendered}\n                                rowRenderer={this.measureRowRenderer}\n                                rowHeight={this.measureCache.rowHeight}\n                                rowCount={this.props.hasMoreRows ? this.props.rows.length + 1 : this.props.rows.length}\n                                tabIndex={-1}\n                                onScroll={this.props.handleScroll}\n                                scrollToIndex={this.props.indexOfSelected}\n                                style={{\n                                    overflowY: 'visible',\n                                    overflowX: 'visible'\n                                }}\n                            />\n                        }\n                    </AutoSizer>\n                )\n            }\n        </InfiniteLoader>;\n    }\n\n    componentWillUpdate(): void {\n        this.measureCache.clearAll();\n    }\n\n    protected measureCache = new CellMeasurerCache();\n\n    protected measureRowRenderer: ListRowRenderer = (params: ListRowProps) => {\n        const { index, key, parent } = params;\n        return (\n            <CellMeasurer\n                cache={this.measureCache}\n                columnIndex={0}\n                key={key}\n                rowIndex={index}\n                parent={parent}\n            >\n                {() => this.renderRow(params)}\n            </CellMeasurer>\n        );\n    };\n\n    protected renderRow: ListRowRenderer = ({ index, key, style }) => {\n        if (this.checkIfRowIsLoaded({ index })) {\n            const row = this.props.rows[index];\n            if (ScmCommitNode.is(row)) {\n                const head = this.props.renderCommit(row);\n                return <div key={key} style={style} className={`commitListElement${index === 0 ? ' first' : ''}`} >\n                    {head}\n                </div>;\n            } else if (ScmFileChangeNode.is(row)) {\n                return <div key={key} style={style} className='fileChangeListElement'>\n                    {this.props.renderFileChangeList(row)}\n                </div>;\n            }\n        } else {\n            return <div key={key} style={style} className={`commitListElement${index === 0 ? ' first' : ''}`} >\n                <span className='fa fa-spinner fa-pulse fa-fw'></span>\n            </div>;\n        }\n    };\n}\n","/********************************************************************************\n * Copyright (C) 2019 Arm and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { EDITOR_CONTEXT_MENU } from '@theia/editor/lib/browser';\n\nexport const EDITOR_CONTEXT_MENU_SCM = [...EDITOR_CONTEXT_MENU, '3_scm'];\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { LabelProviderContribution, DidChangeLabelEvent, LabelProvider } from '@theia/core/lib/browser/label-provider';\nimport { ScmFileChangeNode } from './scm-file-change-node';\nimport URI from '@theia/core/lib/common/uri';\nimport { ScmService } from '@theia/scm/lib/browser/scm-service';\n\n@injectable()\nexport class ScmFileChangeLabelProvider implements LabelProviderContribution {\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(ScmService)\n    protected readonly scmService: ScmService;\n\n    canHandle(element: object): number {\n        return ScmFileChangeNode.is(element) ? 100 : 0;\n    }\n\n    getIcon(node: ScmFileChangeNode): string {\n        return this.labelProvider.getIcon(new URI(node.fileChange.uri));\n    }\n\n    getName(node: ScmFileChangeNode): string {\n        return this.labelProvider.getName(new URI(node.fileChange.uri));\n    }\n\n    getDescription(node: ScmFileChangeNode): string {\n        return this.relativePath(new URI(node.fileChange.uri).parent);\n    }\n\n    affects(node: ScmFileChangeNode, event: DidChangeLabelEvent): boolean {\n        return event.affects(new URI(node.fileChange.uri));\n    }\n\n    getCaption(node: ScmFileChangeNode): string {\n        return node.fileChange.getCaption();\n    }\n\n    relativePath(uri: URI | string): string {\n        const parsedUri = typeof uri === 'string' ? new URI(uri) : uri;\n        const repo = this.scmService.findRepository(parsedUri);\n        if (repo) {\n            const repositoryUri = new URI(repo.provider.rootUri);\n            const relativePath = repositoryUri.relative(parsedUri);\n            if (relativePath) {\n                return relativePath.toString();\n            }\n        }\n        return this.labelProvider.getLongName(parsedUri);\n    }\n\n    getStatusCaption(node: ScmFileChangeNode): string {\n        return node.fileChange.getStatusCaption();\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ScmCommit } from '@theia/scm/lib/browser/scm-provider';\nimport URI from '@theia/core/lib/common/uri';\n\nexport interface ScmFileChangeNode {\n    readonly fileChange: ScmFileChange;\n    readonly commitId: string;\n    selected?: boolean;\n}\nexport namespace ScmFileChangeNode {\n    export function is(node: Object | undefined): node is ScmFileChangeNode {\n        return !!node && 'fileChange' in node && 'commitId' in node;\n    }\n}\n\nexport interface ScmHistoryCommit extends ScmCommit {\n    readonly commitDetailUri: URI;\n    readonly fileChanges: ScmFileChange[];\n    readonly commitDetailOptions: {};\n}\n\nexport interface ScmFileChange {\n    readonly uri: string;\n    getCaption(): string;\n    getStatusCaption(): string;\n    getStatusAbbreviation(): string;\n    getClassNameForStatus(): string;\n    getUriToOpen(): URI;\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SELECTED_CLASS, Key, Widget } from '@theia/core/lib/browser';\nimport { ScmService } from '@theia/scm/lib/browser/scm-service';\nimport URI from '@theia/core/lib/common/uri';\nimport { LabelProvider } from '@theia/core/lib/browser/label-provider';\nimport { Message } from '@phosphor/messaging';\nimport { ElementExt } from '@phosphor/domutils';\nimport { inject, injectable } from 'inversify';\nimport { ReactWidget } from '@theia/core/lib/browser/widgets/react-widget';\nimport * as React from 'react';\nimport { ScmFileChangeLabelProvider } from './scm-file-change-label-provider';\nimport { ScmFileChangeNode } from './scm-file-change-node';\n\n@injectable()\nexport abstract class ScmNavigableListWidget<T extends { selected?: boolean }> extends ReactWidget {\n\n    protected scmNodes: T[];\n    private _scrollContainer: string;\n\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(ScmFileChangeLabelProvider)\n    protected readonly scmLabelProvider: ScmFileChangeLabelProvider;\n\n    constructor() {\n        super();\n        this.node.tabIndex = 0;\n    }\n\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.update();\n        this.node.focus();\n    }\n\n    protected set scrollContainer(id: string) {\n        this._scrollContainer = id + Date.now();\n    }\n\n    protected get scrollContainer(): string {\n        return this._scrollContainer;\n    }\n\n    protected onUpdateRequest(msg: Message): void {\n        if (!this.isAttached || !this.isVisible) {\n            return;\n        }\n        super.onUpdateRequest(msg);\n        (async () => {\n            const selected = this.node.getElementsByClassName(SELECTED_CLASS)[0];\n            if (selected) {\n                const container = document.getElementById(this.scrollContainer);\n                if (container) {\n                    ElementExt.scrollIntoViewIfNeeded(container, selected);\n                }\n            }\n        })();\n    }\n\n    protected onResize(msg: Widget.ResizeMessage): void {\n        super.onResize(msg);\n        this.update();\n    }\n\n    protected getRepositoryLabel(uri: string): string | undefined {\n        const repository = this.scmService.findRepository(new URI(uri));\n        const isSelectedRepo = this.scmService.selectedRepository && repository && this.scmService.selectedRepository.provider.rootUri === repository.provider.rootUri;\n        return repository && !isSelectedRepo ? this.labelProvider.getLongName(new URI(repository.provider.rootUri)) : undefined;\n    }\n\n    protected renderHeaderRow({ name, value, classNames, title }: { name: string, value: React.ReactNode, classNames?: string[], title?: string }): React.ReactNode {\n        if (!value) {\n            return;\n        }\n        const className = ['header-row', ...(classNames || [])].join(' ');\n        return <div key={name} className={className} title={title}>\n            <div className='theia-header'>{name}</div>\n            <div className='header-value'>{value}</div>\n        </div>;\n    }\n\n    protected addListNavigationKeyListeners(container: HTMLElement): void {\n        this.addKeyListener(container, Key.ARROW_LEFT, () => this.navigateLeft());\n        this.addKeyListener(container, Key.ARROW_RIGHT, () => this.navigateRight());\n        this.addKeyListener(container, Key.ARROW_UP, () => this.navigateUp());\n        this.addKeyListener(container, Key.ARROW_DOWN, () => this.navigateDown());\n        this.addKeyListener(container, Key.ENTER, () => this.handleListEnter());\n    }\n\n    protected navigateLeft(): void {\n        this.selectPreviousNode();\n    }\n\n    protected navigateRight(): void {\n        this.selectNextNode();\n    }\n\n    protected navigateUp(): void {\n        this.selectPreviousNode();\n    }\n\n    protected navigateDown(): void {\n        this.selectNextNode();\n    }\n\n    protected handleListEnter(): void {\n\n    }\n\n    protected getSelected(): T | undefined {\n        return this.scmNodes ? this.scmNodes.find(c => c.selected || false) : undefined;\n    }\n\n    protected selectNode(node: T): void {\n        const n = this.getSelected();\n        if (n) {\n            n.selected = false;\n        }\n        node.selected = true;\n        this.update();\n    }\n\n    protected selectNextNode(): void {\n        const idx = this.indexOfSelected;\n        if (idx >= 0 && idx < this.scmNodes.length - 1) {\n            this.selectNode(this.scmNodes[idx + 1]);\n        } else if (this.scmNodes.length > 0 && idx === -1) {\n            this.selectNode(this.scmNodes[0]);\n        }\n    }\n\n    protected selectPreviousNode(): void {\n        const idx = this.indexOfSelected;\n        if (idx > 0) {\n            this.selectNode(this.scmNodes[idx - 1]);\n        }\n    }\n\n    protected get indexOfSelected(): number {\n        if (this.scmNodes && this.scmNodes.length > 0) {\n            return this.scmNodes.findIndex(c => c.selected || false);\n        }\n        return -1;\n    }\n}\n\nexport namespace ScmItemComponent {\n    export interface Props {\n        labelProvider: LabelProvider;\n        scmLabelProvider: ScmFileChangeLabelProvider;\n        change: ScmFileChangeNode;\n        revealChange: (change: ScmFileChangeNode) => void\n        selectNode: (change: ScmFileChangeNode) => void\n    }\n}\nexport class ScmItemComponent extends React.Component<ScmItemComponent.Props> {\n\n    render(): JSX.Element {\n        const { labelProvider, scmLabelProvider, change } = this.props;\n        const icon = labelProvider.getIcon(change);\n        const label = labelProvider.getName(change);\n        const description = labelProvider.getLongName(change);\n        const caption = scmLabelProvider.getCaption(change);\n        const statusCaption = scmLabelProvider.getStatusCaption(change);\n        return <div className={`scmItem noselect${change.selected ? ' ' + SELECTED_CLASS : ''}`}\n            onDoubleClick={this.revealChange}\n            onClick={this.selectNode}>\n            <span className={icon + ' file-icon'}></span>\n            <div className='noWrapInfo' title={caption} >\n                <span className='name'>{label + ' '}</span>\n                <span className='path'>{description}</span>\n            </div>\n            <div\n                title={caption}\n                className={change.fileChange.getClassNameForStatus()}>\n                {statusCaption.charAt(0)}\n            </div>\n        </div>;\n    }\n\n    protected readonly revealChange = () => this.props.revealChange(this.props.change);\n    protected readonly selectNode = () => this.props.selectNode(this.props.change);\n}\n"],"sourceRoot":""}