{"version":3,"sources":["webpack:///./node_modules/@theia/monaco/src/browser/monaco-color-registry.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-command.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-frontend-application-contribution.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-frontend-module.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-keybinding-contexts.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-keybinding.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-loader.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-mime-service.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-outline-contribution.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-outline-decorator.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-semantic-highlighting-service.ts","webpack:///./node_modules/@theia/monaco/src/electron-browser/monaco-electron-module.ts","webpack:///./node_modules/@theia/monaco/src/browser/style/index.css?e8dd","webpack:///./node_modules/@theia/monaco/src/browser/style/symbol-icons.css?eb15","webpack:///./node_modules/@theia/monaco/src/browser/style/symbol-sprite.svg","webpack:///./node_modules/@theia/outline-view/src/browser/outline-decorator-service.ts","webpack:///./node_modules/@theia/outline-view/src/browser/outline-view-service.ts","webpack:///./node_modules/@theia/monaco/src/browser/style/index.css","webpack:///./node_modules/@theia/monaco/src/browser/style/symbol-icons.css"],"names":[],"mappings":"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","file":"61.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { ColorRegistry, ColorDefinition, Color } from '@theia/core/lib/browser/color-registry';\nimport { Disposable } from '@theia/core/lib/common/disposable';\n\n@injectable()\nexport class MonacoColorRegistry extends ColorRegistry {\n\n    protected readonly monacoThemeService = monaco.services.StaticServices.standaloneThemeService.get();\n    protected readonly monacoColorRegistry = monaco.color.getColorRegistry();\n\n    *getColors(): IterableIterator<string> {\n        for (const { id } of this.monacoColorRegistry.getColors()) {\n            yield id;\n        }\n    }\n\n    getCurrentColor(id: string): string | undefined {\n        const color = this.monacoThemeService.getTheme().getColor(id);\n        return color && color.toString();\n    }\n\n    protected doRegister(definition: ColorDefinition): Disposable {\n        let defaults: monaco.color.ColorDefaults | undefined;\n        if (definition.defaults) {\n            defaults = {};\n            defaults.dark = this.toColor(definition.defaults.dark);\n            defaults.light = this.toColor(definition.defaults.light);\n            defaults.hc = this.toColor(definition.defaults.hc);\n        }\n        const identifier = this.monacoColorRegistry.registerColor(definition.id, defaults, definition.description);\n        return Disposable.create(() => this.monacoColorRegistry.deregisterColor(identifier));\n    }\n\n    protected toColor(value: Color | undefined): monaco.color.ColorValue | undefined {\n        if (!value || typeof value === 'string') {\n            return value;\n        }\n        if ('kind' in value) {\n            return monaco.color[value.kind](value.v, value.f);\n        } else if ('r' in value) {\n            const { r, g, b, a } = value;\n            return new monaco.color.Color(new monaco.color.RGBA(r, g, b, a));\n        } else {\n            const { h, s, l, a } = value;\n            return new monaco.color.Color(new monaco.color.HSLA(h, s, l, a));\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { ProtocolToMonacoConverter } from 'monaco-languageclient/lib';\nimport { Position, Location } from '@theia/languages/lib/browser';\nimport { CommandContribution, CommandRegistry, CommandHandler } from '@theia/core/lib/common/command';\nimport { CommonCommands } from '@theia/core/lib/browser';\nimport { QuickOpenService } from '@theia/core/lib/browser/quick-open/quick-open-service';\nimport { QuickOpenItem, QuickOpenMode } from '@theia/core/lib/browser/quick-open/quick-open-model';\nimport { EditorCommands } from '@theia/editor/lib/browser';\nimport { MonacoEditor } from './monaco-editor';\nimport { MonacoCommandRegistry, MonacoEditorCommandHandler } from './monaco-command-registry';\nimport { MonacoEditorService } from './monaco-editor-service';\nimport { MonacoTextModelService } from './monaco-text-model-service';\n\nexport namespace MonacoCommands {\n\n    export const COMMON_ACTIONS = new Map<string, string>([\n        ['undo', CommonCommands.UNDO.id],\n        ['redo', CommonCommands.REDO.id],\n        ['editor.action.selectAll', CommonCommands.SELECT_ALL.id],\n        ['actions.find', CommonCommands.FIND.id],\n        ['editor.action.startFindReplaceAction', CommonCommands.REPLACE.id]\n    ]);\n\n    export const GO_TO_DEFINITION = 'editor.action.revealDefinition';\n\n    export const EXCLUDE_ACTIONS = new Set([\n        'editor.action.quickCommand',\n        'editor.action.clipboardCutAction',\n        'editor.action.clipboardCopyAction',\n        'editor.action.clipboardPasteAction'\n    ]);\n}\n\n@injectable()\nexport class MonacoEditorCommandHandlers implements CommandContribution {\n\n    @inject(MonacoCommandRegistry)\n    protected readonly monacoCommandRegistry: MonacoCommandRegistry;\n\n    @inject(CommandRegistry)\n    protected readonly commandRegistry: CommandRegistry;\n\n    @inject(ProtocolToMonacoConverter)\n    protected readonly p2m: ProtocolToMonacoConverter;\n\n    @inject(QuickOpenService)\n    protected readonly quickOpenService: QuickOpenService;\n\n    @inject(MonacoEditorService)\n    protected readonly codeEditorService: MonacoEditorService;\n\n    @inject(MonacoTextModelService)\n    protected readonly textModelService: MonacoTextModelService;\n\n    @inject(monaco.contextKeyService.ContextKeyService)\n    protected readonly contextKeyService: monaco.contextKeyService.ContextKeyService;\n\n    registerCommands(): void {\n        this.registerMonacoCommands();\n        this.registerEditorCommandHandlers();\n    }\n\n    /**\n     * Register commands from Monaco to Theia registry.\n     *\n     * Monaco has different kind of commands which should be handled differently by Theia.\n     *\n     * ### Editor Actions\n     *\n     * They should be registered with a label to be visible in the quick command palette.\n     *\n     * Such actions should be enabled only if the current editor is available and\n     * it supports such action in the current context.\n     *\n     * ### Editor Commands\n     *\n     * Such actions should be enabled only if the current editor is available.\n     *\n     * `actions.find` and `editor.action.startFindReplaceAction` are registered as handlers for `find` and `replace`.\n     * If handlers are not enabled then the core should prevent the default browser behavior.\n     * Other Theia extensions can register alternative implementations using custom enablement.\n     *\n     * ### Global Commands\n     *\n     * These commands are not necessary dependent on the current editor and enabled always.\n     * But they depend on services which are global in VS Code, but bound to the editor in Monaco,\n     * i.e. `ICodeEditorService` or `IContextKeyService`. We should take care of providing Theia implementations for such services.\n     *\n     * #### Global Native or Editor Commands\n     *\n     * Namely: `undo`, `redo` and `editor.action.selectAll`. They depend on `ICodeEditorService`.\n     * They will try to delegate to the current editor and if it is not available delegate to the browser.\n     * They are registered as handlers for corresponding core commands always.\n     * Other Theia extensions can provide alternative implementations by introducing a dependency to `@theia/monaco` extension.\n     *\n     * #### Global Language Commands\n     *\n     * Like `_executeCodeActionProvider`, they depend on `ICodeEditorService` and `ITextModelService`.\n     *\n     * #### Global Context Commands\n     *\n     * It is `setContext`. It depends on `IContextKeyService`.\n     *\n     * #### Global Editor Commands\n     *\n     * Like `openReferenceToSide` and `openReference`, they depend on `IListService`.\n     * We treat all commands which don't match any other category of global commands as global editor commands\n     * and execute them using the instantiation service of the current editor.\n     */\n    protected registerMonacoCommands(): void {\n        const editorRegistry = monaco.editorExtensions.EditorExtensionsRegistry;\n        const editorActions = new Map(editorRegistry.getEditorActions().map(({ id, label }) => [id, label]));\n\n        const { codeEditorService, textModelService, contextKeyService } = this;\n        const [, globalInstantiationService] = monaco.services.StaticServices.init({ codeEditorService, textModelService, contextKeyService });\n        const monacoCommands = monaco.commands.CommandsRegistry.getCommands();\n        for (const id of monacoCommands.keys()) {\n            if (MonacoCommands.EXCLUDE_ACTIONS.has(id)) {\n                continue;\n            }\n            const handler: CommandHandler = {\n                execute: (...args) => {\n                    /*\n                     * We check monaco focused code editor first since they can contain inline like the debug console and embedded editors like in the peek reference.\n                     * If there is not such then we check last focused editor tracked by us.\n                     */\n                    const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n                    if (editorActions.has(id)) {\n                        const action = editor && editor.getAction(id);\n                        if (!action) {\n                            return;\n                        }\n                        return action.run();\n                    }\n                    const editorCommand = !!editorRegistry.getEditorCommand(id) ||\n                        !(id.startsWith('_execute') || id === 'setContext' || MonacoCommands.COMMON_ACTIONS.has(id));\n                    const instantiationService = editorCommand ? editor && editor['_instantiationService'] : globalInstantiationService;\n                    if (!instantiationService) {\n                        return;\n                    }\n                    return instantiationService.invokeFunction(\n                        monacoCommands.get(id)!.handler,\n                        ...args\n                    );\n                },\n                isEnabled: () => {\n                    const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n                    if (editorActions.has(id)) {\n                        const action = editor && editor.getAction(id);\n                        return !!action && action.isSupported();\n                    }\n                    if (!!editorRegistry.getEditorCommand(id)) {\n                        return !!editor;\n                    }\n                    return true;\n                }\n            };\n            const label = editorActions.get(id);\n            this.commandRegistry.registerCommand({ id, label }, handler);\n            const coreCommand = MonacoCommands.COMMON_ACTIONS.get(id);\n            if (coreCommand) {\n                this.commandRegistry.registerHandler(coreCommand, handler);\n            }\n        }\n    }\n\n    protected registerEditorCommandHandlers(): void {\n        this.monacoCommandRegistry.registerHandler(EditorCommands.SHOW_REFERENCES.id, this.newShowReferenceHandler());\n        this.monacoCommandRegistry.registerHandler(EditorCommands.CONFIG_INDENTATION.id, this.newConfigIndentationHandler());\n        this.monacoCommandRegistry.registerHandler(EditorCommands.CONFIG_EOL.id, this.newConfigEolHandler());\n        this.monacoCommandRegistry.registerHandler(EditorCommands.INDENT_USING_SPACES.id, this.newConfigTabSizeHandler(true));\n        this.monacoCommandRegistry.registerHandler(EditorCommands.INDENT_USING_TABS.id, this.newConfigTabSizeHandler(false));\n    }\n\n    protected newShowReferenceHandler(): MonacoEditorCommandHandler {\n        return {\n            execute: (editor: MonacoEditor, uri: string, position: Position, locations: Location[]) => {\n                editor.commandService.executeCommand(\n                    'editor.action.showReferences',\n                    monaco.Uri.parse(uri),\n                    this.p2m.asPosition(position),\n                    locations.map(l => this.p2m.asLocation(l))\n                );\n            }\n        };\n    }\n\n    protected newConfigIndentationHandler(): MonacoEditorCommandHandler {\n        return {\n            execute: editor => this.configureIndentation(editor)\n        };\n    }\n    protected configureIndentation(editor: MonacoEditor): void {\n        const options = [true, false].map(useSpaces =>\n            new QuickOpenItem({\n                label: `Indent Using ${useSpaces ? 'Spaces' : 'Tabs'}`,\n                run: (mode: QuickOpenMode) => {\n                    if (mode === QuickOpenMode.OPEN) {\n                        this.configureTabSize(editor, useSpaces);\n                    }\n                    return false;\n                }\n            })\n        );\n        this.quickOpenService.open({ onType: (_, acceptor) => acceptor(options) }, {\n            placeholder: 'Select Action',\n            fuzzyMatchLabel: true\n        });\n    }\n\n    protected newConfigEolHandler(): MonacoEditorCommandHandler {\n        return {\n            execute: editor => this.configureEol(editor)\n        };\n    }\n\n    protected configureEol(editor: MonacoEditor): void {\n        const options = ['LF', 'CRLF'].map(lineEnding =>\n            new QuickOpenItem({\n                label: lineEnding,\n                run: (mode: QuickOpenMode) => {\n                    if (mode === QuickOpenMode.OPEN) {\n                        this.setEol(editor, lineEnding);\n                        return true;\n                    }\n                    return false;\n                }\n            })\n        );\n        this.quickOpenService.open({ onType: (_, acceptor) => acceptor(options) }, {\n            placeholder: 'Select End of Line Sequence',\n            fuzzyMatchLabel: true\n        });\n    }\n\n    protected setEol(editor: MonacoEditor, lineEnding: string): void {\n        const model = editor.document && editor.document.textEditorModel;\n        if (model) {\n            if (lineEnding === 'CRLF' || lineEnding === '\\r\\n') {\n                model.pushEOL(monaco.editor.EndOfLineSequence.CRLF);\n            } else {\n                model.pushEOL(monaco.editor.EndOfLineSequence.LF);\n            }\n        }\n    }\n\n    protected newConfigTabSizeHandler(useSpaces: boolean): MonacoEditorCommandHandler {\n        return {\n            execute: editor => this.configureTabSize(editor, useSpaces)\n        };\n    }\n    protected configureTabSize(editor: MonacoEditor, useSpaces: boolean): void {\n        const model = editor.document && editor.document.textEditorModel;\n        if (model) {\n            const { tabSize } = model.getOptions();\n            const sizes = Array.from(Array(8), (_, x) => x + 1);\n            const tabSizeOptions = sizes.map(size =>\n                new QuickOpenItem({\n                    label: size === tabSize ? `${size}   Configured Tab Size` : size.toString(),\n                    run: (mode: QuickOpenMode) => {\n                        if (mode !== QuickOpenMode.OPEN) {\n                            return false;\n                        }\n                        model.updateOptions({\n                            tabSize: size || tabSize,\n                            insertSpaces: useSpaces\n                        });\n                        return true;\n                    }\n                })\n            );\n            this.quickOpenService.open({ onType: (_, acceptor) => acceptor(tabSizeOptions) }, {\n                placeholder: 'Select Tab Size for Current File',\n                fuzzyMatchLabel: true,\n                selectIndex: lookFor => {\n                    if (!lookFor || lookFor === '') {\n                        return tabSize - 1;\n                    }\n                    return 0;\n                }\n            });\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { FrontendApplicationContribution, PreferenceSchemaProvider } from '@theia/core/lib/browser';\nimport { MonacoSnippetSuggestProvider } from './monaco-snippet-suggest-provider';\n\n@injectable()\nexport class MonacoFrontendApplicationContribution implements FrontendApplicationContribution {\n\n    @inject(MonacoSnippetSuggestProvider)\n    protected readonly snippetSuggestProvider: MonacoSnippetSuggestProvider;\n\n    @inject(PreferenceSchemaProvider)\n    protected readonly preferenceSchema: PreferenceSchemaProvider;\n\n    async initialize(): Promise<void> {\n        monaco.suggest.setSnippetSuggestSupport(this.snippetSuggestProvider);\n\n        for (const language of monaco.languages.getLanguages()) {\n            this.preferenceSchema.registerOverrideIdentifier(language.id);\n        }\n        const registerLanguage = monaco.languages.register.bind(monaco.languages);\n        monaco.languages.register = language => {\n            // first register override identifier, because monaco will immediately update already opened documents and then initialize with bad preferences.\n            this.preferenceSchema.registerOverrideIdentifier(language.id);\n            registerLanguage(language);\n        };\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport '../../src/browser/style/index.css';\nimport '../../src/browser/style/symbol-sprite.svg';\nimport '../../src/browser/style/symbol-icons.css';\n\nimport debounce = require('lodash.debounce');\nimport { ContainerModule, decorate, injectable, interfaces } from 'inversify';\nimport { MenuContribution, CommandContribution } from '@theia/core/lib/common';\nimport { PreferenceScope } from '@theia/core/lib/common/preferences/preference-scope';\nimport {\n    QuickOpenService, FrontendApplicationContribution, KeybindingContribution,\n    PreferenceService, PreferenceSchemaProvider, createPreferenceProxy\n} from '@theia/core/lib/browser';\nimport { Languages, Workspace } from '@theia/languages/lib/browser';\nimport { TextEditorProvider, DiffNavigatorProvider } from '@theia/editor/lib/browser';\nimport { StrictEditorTextFocusContext } from '@theia/editor/lib/browser/editor-keybinding-contexts';\nimport { MonacoToProtocolConverter, ProtocolToMonacoConverter } from 'monaco-languageclient';\nimport { MonacoEditorProvider, MonacoEditorFactory } from './monaco-editor-provider';\nimport { MonacoEditorMenuContribution } from './monaco-menu';\nimport { MonacoEditorCommandHandlers } from './monaco-command';\nimport { MonacoKeybindingContribution } from './monaco-keybinding';\nimport { MonacoLanguages } from './monaco-languages';\nimport { MonacoWorkspace } from './monaco-workspace';\nimport { MonacoConfigurations } from './monaco-configurations';\nimport { MonacoEditorService } from './monaco-editor-service';\nimport { MonacoTextModelService, MonacoEditorModelFactory } from './monaco-text-model-service';\nimport { MonacoContextMenuService } from './monaco-context-menu';\nimport { MonacoOutlineContribution } from './monaco-outline-contribution';\nimport { MonacoStatusBarContribution } from './monaco-status-bar-contribution';\nimport { MonacoCommandService, MonacoCommandServiceFactory } from './monaco-command-service';\nimport { MonacoCommandRegistry } from './monaco-command-registry';\nimport { MonacoQuickOpenService } from './monaco-quick-open-service';\nimport { MonacoDiffNavigatorFactory } from './monaco-diff-navigator-factory';\nimport { MonacoStrictEditorTextFocusContext } from './monaco-keybinding-contexts';\nimport { MonacoFrontendApplicationContribution } from './monaco-frontend-application-contribution';\nimport MonacoTextmateModuleBinder from './textmate/monaco-textmate-frontend-bindings';\nimport { MonacoSemanticHighlightingService } from './monaco-semantic-highlighting-service';\nimport { SemanticHighlightingService } from '@theia/editor/lib/browser/semantic-highlight/semantic-highlighting-service';\nimport { MonacoBulkEditService } from './monaco-bulk-edit-service';\nimport { MonacoOutlineDecorator } from './monaco-outline-decorator';\nimport { OutlineTreeDecorator } from '@theia/outline-view/lib/browser/outline-decorator-service';\nimport { MonacoSnippetSuggestProvider } from './monaco-snippet-suggest-provider';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { MonacoContextKeyService } from './monaco-context-key-service';\nimport { MonacoMimeService } from './monaco-mime-service';\nimport { MimeService } from '@theia/core/lib/browser/mime-service';\nimport { MonacoEditorServices } from './monaco-editor';\nimport { MonacoColorRegistry } from './monaco-color-registry';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\nimport { MonacoThemingService } from './monaco-theming-service';\nimport { bindContributionProvider } from '@theia/core';\n\ndecorate(injectable(), MonacoToProtocolConverter);\ndecorate(injectable(), ProtocolToMonacoConverter);\ndecorate(injectable(), monaco.contextKeyService.ContextKeyService);\n\nMonacoThemingService.init();\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    bind(MonacoThemingService).toSelf().inSingletonScope();\n\n    bind(MonacoContextKeyService).toSelf().inSingletonScope();\n    rebind(ContextKeyService).toService(MonacoContextKeyService);\n\n    bind(MonacoSnippetSuggestProvider).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).to(MonacoFrontendApplicationContribution).inSingletonScope();\n\n    bind(MonacoToProtocolConverter).toSelf().inSingletonScope();\n    bind(ProtocolToMonacoConverter).toSelf().inSingletonScope();\n\n    bind(MonacoLanguages).toSelf().inSingletonScope();\n    bind(Languages).toService(MonacoLanguages);\n\n    bind(MonacoConfigurations).toSelf().inSingletonScope();\n    bind(MonacoWorkspace).toSelf().inSingletonScope();\n    bind(Workspace).toService(MonacoWorkspace);\n\n    bind(MonacoConfigurationService).toDynamicValue(({ container }) =>\n        createMonacoConfigurationService(container)\n    ).inSingletonScope();\n    bind(monaco.contextKeyService.ContextKeyService).toDynamicValue(({ container }) =>\n        new monaco.contextKeyService.ContextKeyService(container.get(MonacoConfigurationService))\n    ).inSingletonScope();\n    bind(MonacoBulkEditService).toSelf().inSingletonScope();\n    bind(MonacoEditorService).toSelf().inSingletonScope();\n    bind(MonacoTextModelService).toSelf().inSingletonScope();\n    bind(MonacoContextMenuService).toSelf().inSingletonScope();\n    bind(MonacoEditorServices).toSelf().inSingletonScope();\n    bind(MonacoEditorProvider).toSelf().inSingletonScope();\n    bindContributionProvider(bind, MonacoEditorFactory);\n    bindContributionProvider(bind, MonacoEditorModelFactory);\n    bind(MonacoCommandService).toSelf().inTransientScope();\n    bind(MonacoCommandServiceFactory).toAutoFactory(MonacoCommandService);\n    bind(TextEditorProvider).toProvider(context =>\n        uri => context.container.get(MonacoEditorProvider).get(uri)\n    );\n    bind(MonacoDiffNavigatorFactory).toSelf().inSingletonScope();\n    bind(DiffNavigatorProvider).toFactory(context =>\n        editor => context.container.get(MonacoEditorProvider).getDiffNavigator(editor)\n    );\n\n    bind(MonacoOutlineContribution).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(MonacoOutlineContribution);\n\n    bind(MonacoStatusBarContribution).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(MonacoStatusBarContribution);\n\n    bind(MonacoCommandRegistry).toSelf().inSingletonScope();\n    bind(CommandContribution).to(MonacoEditorCommandHandlers).inSingletonScope();\n    bind(MonacoEditorMenuContribution).toSelf().inSingletonScope();\n    bind(MenuContribution).toService(MonacoEditorMenuContribution);\n    bind(MonacoKeybindingContribution).toSelf().inSingletonScope();\n    bind(KeybindingContribution).toService(MonacoKeybindingContribution);\n    rebind(StrictEditorTextFocusContext).to(MonacoStrictEditorTextFocusContext).inSingletonScope();\n\n    bind(MonacoQuickOpenService).toSelf().inSingletonScope();\n    rebind(QuickOpenService).toService(MonacoQuickOpenService);\n\n    MonacoTextmateModuleBinder(bind, unbind, isBound, rebind);\n\n    bind(MonacoSemanticHighlightingService).toSelf().inSingletonScope();\n    rebind(SemanticHighlightingService).to(MonacoSemanticHighlightingService).inSingletonScope();\n\n    bind(MonacoOutlineDecorator).toSelf().inSingletonScope();\n    bind(OutlineTreeDecorator).toService(MonacoOutlineDecorator);\n\n    bind(MonacoMimeService).toSelf().inSingletonScope();\n    rebind(MimeService).toService(MonacoMimeService);\n\n    bind(MonacoColorRegistry).toSelf().inSingletonScope();\n    rebind(ColorRegistry).toService(MonacoColorRegistry);\n});\n\nexport const MonacoConfigurationService = Symbol('MonacoConfigurationService');\nexport function createMonacoConfigurationService(container: interfaces.Container): monaco.services.IConfigurationService {\n    const configurations = container.get(MonacoConfigurations);\n    const preferences = container.get<PreferenceService>(PreferenceService);\n    const preferenceSchemaProvider = container.get<PreferenceSchemaProvider>(PreferenceSchemaProvider);\n    const service = monaco.services.StaticServices.configurationService.get();\n    const _configuration = service._configuration;\n\n    _configuration.getValue = (section, overrides, workspace) => {\n        const overrideIdentifier = overrides && 'overrideIdentifier' in overrides && overrides['overrideIdentifier'] as string || undefined;\n        const resourceUri = overrides && 'resource' in overrides && !!overrides['resource'] && overrides['resource'].toString();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const proxy = createPreferenceProxy<{ [key: string]: any }>(preferences, preferenceSchemaProvider.getCombinedSchema(), {\n            resourceUri, overrideIdentifier, style: 'both'\n        });\n        if (section) {\n            return proxy[section];\n        }\n        return proxy;\n    };\n\n    const initFromConfiguration = debounce(() => {\n        const event = new monaco.services.ConfigurationChangeEvent();\n        event._source = 6 /* DEFAULT */;\n        service._onDidChangeConfiguration.fire(event);\n    });\n    preferences.onPreferenceChanged(e => {\n        if (e.scope === PreferenceScope.Default) {\n            initFromConfiguration();\n        }\n    });\n    configurations.onDidChangeConfiguration(e => {\n        if (e.affectedSections) {\n            const event = new monaco.services.ConfigurationChangeEvent();\n            event.change(e.affectedSections);\n            service._onDidChangeConfiguration.fire(event);\n        }\n    });\n\n    return service;\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { EditorWidget } from '@theia/editor/lib/browser/editor-widget';\nimport { StrictEditorTextFocusContext } from '@theia/editor/lib/browser/editor-keybinding-contexts';\nimport { MonacoEditor } from './monaco-editor';\n\n/**\n * Besides checking whether this editor is the currently active one and has the focus, it also checks the followings:\n *  - the suggest widget is visible\n *  - the find (and replace) widget is visible.\n *  - the rename input widget (which we use for refactoring and not find and replace) is visible.\n *\n * If any of the above-mentioned additional checks evaluates to `true` the `canHandle` will evaluate to `false`.\n *\n * See: https://github.com/eamodio/vscode-gitlens/blob/57226d54d1e929be04b02ee31ca294c50305481b/package.json#L2857\n */\n@injectable()\nexport class MonacoStrictEditorTextFocusContext extends StrictEditorTextFocusContext {\n\n    protected canHandle(widget: EditorWidget): boolean {\n        const { editor } = widget;\n        if (editor instanceof MonacoEditor) {\n            return editor.isFocused({ strict: true });\n        }\n        return super.canHandle(widget);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { KeybindingContribution, KeybindingRegistry } from '@theia/core/lib/browser';\nimport { MonacoCommands } from './monaco-command';\nimport { MonacoCommandRegistry } from './monaco-command-registry';\nimport { environment } from '@theia/core';\nimport { MonacoResolvedKeybinding } from './monaco-resolved-keybinding';\n\n@injectable()\nexport class MonacoKeybindingContribution implements KeybindingContribution {\n\n    @inject(MonacoCommandRegistry)\n    protected readonly commands: MonacoCommandRegistry;\n\n    registerKeybindings(registry: KeybindingRegistry): void {\n        const defaultKeybindings = monaco.keybindings.KeybindingsRegistry.getDefaultKeybindings();\n        for (const item of defaultKeybindings) {\n            const command = this.commands.validate(item.command);\n            if (command) {\n                const when = item.when && item.when.serialize();\n                let keybinding;\n                if (item.command === MonacoCommands.GO_TO_DEFINITION && !environment.electron.is()) {\n                    keybinding = 'ctrlcmd+f11';\n                } else {\n                    keybinding = MonacoResolvedKeybinding.toKeybinding(item.keybinding);\n                }\n                registry.registerKeybinding({ command, keybinding, when });\n            }\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport function loadVsRequire(context: any): Promise<any> {\n    // Monaco uses a custom amd loader that over-rides node's require.\n    // Keep a reference to an original require so we can restore it after executing the amd loader file.\n    const originalRequire = context.require;\n\n    return new Promise<any>(resolve =>\n        window.addEventListener('load', () => {\n            const vsLoader = document.createElement('script');\n            vsLoader.type = 'text/javascript';\n            vsLoader.src = './vs/loader.js';\n            vsLoader.charset = 'utf-8';\n            vsLoader.addEventListener('load', () => {\n                // Save Monaco's amd require and restore the original require\n                const amdRequire = context.require;\n                if (originalRequire) {\n                    context.require = originalRequire;\n                }\n                resolve(amdRequire);\n            });\n            document.body.appendChild(vsLoader);\n        }, { once: true })\n    );\n}\n\nexport function loadMonaco(vsRequire: any): Promise<void> {\n    return new Promise<void>(resolve => {\n        vsRequire(['vs/editor/editor.main'], () => {\n            vsRequire([\n                'vs/platform/commands/common/commands',\n                'vs/platform/actions/common/actions',\n                'vs/platform/keybinding/common/keybindingsRegistry',\n                'vs/platform/keybinding/common/keybindingResolver',\n                'vs/platform/keybinding/common/usLayoutResolvedKeybinding',\n                'vs/base/common/keybindingLabels',\n                'vs/base/common/keyCodes',\n                'vs/base/common/mime',\n                'vs/editor/browser/editorExtensions',\n                'vs/editor/standalone/browser/simpleServices',\n                'vs/editor/standalone/browser/standaloneServices',\n                'vs/editor/standalone/browser/standaloneLanguages',\n                'vs/base/parts/quickopen/browser/quickOpenWidget',\n                'vs/base/parts/quickopen/browser/quickOpenModel',\n                'vs/base/common/filters',\n                'vs/platform/theme/common/themeService',\n                'vs/platform/theme/common/styler',\n                'vs/platform/theme/common/colorRegistry',\n                'vs/base/common/color',\n                'vs/base/common/platform',\n                'vs/editor/common/modes',\n                'vs/editor/contrib/suggest/suggest',\n                'vs/editor/contrib/snippet/snippetParser',\n                'vs/platform/configuration/common/configuration',\n                'vs/platform/configuration/common/configurationModels',\n                'vs/editor/common/services/resolverService',\n                'vs/editor/browser/services/codeEditorService',\n                'vs/editor/browser/services/codeEditorServiceImpl',\n                'vs/editor/browser/services/openerService',\n                'vs/platform/markers/common/markerService',\n                'vs/platform/contextkey/common/contextkey',\n                'vs/platform/contextkey/browser/contextKeyService',\n                'vs/editor/common/model/wordHelper',\n                'vs/base/common/errors',\n                'vs/base/common/path'\n            ], (commands: any, actions: any,\n                keybindingsRegistry: any, keybindingResolver: any, resolvedKeybinding: any, keybindingLabels: any,\n                keyCodes: any, mime: any, editorExtensions: any, simpleServices: any,\n                standaloneServices: any, standaloneLanguages: any, quickOpenWidget: any, quickOpenModel: any,\n                filters: any, themeService: any, styler: any, colorRegistry: any, color: any,\n                platform: any, modes: any, suggest: any, snippetParser: any,\n                configuration: any, configurationModels: any,\n                resolverService: any,\n                codeEditorService: any, codeEditorServiceImpl: any, openerService: any,\n                markerService: any,\n                contextKey: any, contextKeyService: any,\n                wordHelper: any,\n                error: any, path: any) => {\n                const global: any = self;\n                global.monaco.commands = commands;\n                global.monaco.actions = actions;\n                global.monaco.keybindings = Object.assign({}, keybindingsRegistry, keybindingResolver, resolvedKeybinding, keybindingLabels, keyCodes);\n                global.monaco.services = Object.assign({}, simpleServices, standaloneServices,\n                    standaloneLanguages, configuration, configurationModels,\n                    resolverService, codeEditorService, codeEditorServiceImpl, markerService, openerService);\n                global.monaco.quickOpen = Object.assign({}, quickOpenWidget, quickOpenModel);\n                global.monaco.filters = filters;\n                global.monaco.theme = Object.assign({}, themeService, styler);\n                global.monaco.color = Object.assign({}, colorRegistry, color);\n                global.monaco.platform = platform;\n                global.monaco.editorExtensions = editorExtensions;\n                global.monaco.modes = modes;\n                global.monaco.suggest = suggest;\n                global.monaco.snippetParser = snippetParser;\n                global.monaco.contextkey = contextKey;\n                global.monaco.contextKeyService = contextKeyService;\n                global.monaco.mime = mime;\n                global.monaco.wordHelper = wordHelper;\n                global.monaco.error = error;\n                global.monaco.path = path;\n                resolve();\n            });\n        });\n    });\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport debounce = require('lodash.debounce');\nimport { injectable } from 'inversify';\nimport { MimeAssociation, MimeService } from '@theia/core/lib/browser/mime-service';\n\n@injectable()\nexport class MonacoMimeService extends MimeService {\n\n    protected associations: MimeAssociation[] = [];\n    protected updatingAssociations = false;\n\n    constructor() {\n        super();\n        monaco.services.StaticServices.modeService.get()._onLanguagesMaybeChanged.event(() => {\n            if (this.updatingAssociations) {\n                return;\n            }\n            this.updateAssociations();\n        });\n    }\n\n    setAssociations(associations: MimeAssociation[]): void {\n        this.associations = associations;\n        this.updateAssociations();\n    }\n\n    protected updateAssociations = debounce(() => {\n        this.updatingAssociations = true;\n        try {\n            monaco.mime.clearTextMimes(true);\n\n            for (const association of this.associations) {\n                const mimetype = this.getMimeForMode(association.id) || `text/x-${association.id}`;\n                monaco.mime.registerTextMime({ id: association.id, mime: mimetype, filepattern: association.filepattern, userConfigured: true }, false);\n            }\n\n            monaco.services.StaticServices.modeService.get()._onLanguagesMaybeChanged.fire(undefined);\n        } finally {\n            this.updatingAssociations = false;\n        }\n    });\n\n    protected getMimeForMode(langId: string): string | undefined {\n        for (const language of monaco.languages.getLanguages()) {\n            if (language.id === langId && language.mimetypes) {\n                return language.mimetypes[0];\n            }\n        }\n\n        return undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport DocumentSymbol = monaco.languages.DocumentSymbol;\nimport SymbolKind = monaco.languages.SymbolKind;\nimport { FrontendApplicationContribution, FrontendApplication, TreeNode } from '@theia/core/lib/browser';\nimport { Range, EditorManager, EditorOpenerOptions } from '@theia/editor/lib/browser';\nimport DocumentSymbolProviderRegistry = monaco.modes.DocumentSymbolProviderRegistry;\nimport CancellationTokenSource = monaco.CancellationTokenSource;\nimport CancellationToken = monaco.CancellationToken;\nimport { DisposableCollection, Disposable } from '@theia/core';\nimport { OutlineViewService } from '@theia/outline-view/lib/browser/outline-view-service';\nimport { OutlineSymbolInformationNode } from '@theia/outline-view/lib/browser/outline-view-widget';\nimport URI from '@theia/core/lib/common/uri';\nimport { MonacoEditor } from './monaco-editor';\n\nimport debounce = require('lodash.debounce');\n\n@injectable()\nexport class MonacoOutlineContribution implements FrontendApplicationContribution {\n\n    protected readonly toDisposeOnClose = new DisposableCollection();\n    protected readonly toDisposeOnEditor = new DisposableCollection();\n    protected roots: MonacoOutlineSymbolInformationNode[] | undefined;\n    protected canUpdateOutline: boolean = true;\n\n    @inject(OutlineViewService) protected readonly outlineViewService: OutlineViewService;\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n\n    onStart(app: FrontendApplication): void {\n        this.outlineViewService.onDidChangeOpenState(async open => {\n            if (open) {\n                this.toDisposeOnClose.push(this.toDisposeOnEditor);\n                this.toDisposeOnClose.push(DocumentSymbolProviderRegistry.onDidChange(\n                    debounce(() => this.updateOutline())\n                ));\n                this.toDisposeOnClose.push(this.editorManager.onCurrentEditorChanged(\n                    debounce(() => this.handleCurrentEditorChanged(), 50)\n                ));\n                this.handleCurrentEditorChanged();\n            } else {\n                this.toDisposeOnClose.dispose();\n            }\n        });\n        this.outlineViewService.onDidSelect(async node => {\n            if (MonacoOutlineSymbolInformationNode.is(node) && node.parent) {\n                const options: EditorOpenerOptions = {\n                    mode: 'reveal',\n                    selection: node.range\n                };\n                await this.selectInEditor(node, options);\n            }\n        });\n        this.outlineViewService.onDidOpen(async node => {\n            if (MonacoOutlineSymbolInformationNode.is(node)) {\n                const options: EditorOpenerOptions = {\n                    selection: {\n                        start: node.range.start\n                    }\n                };\n                await this.selectInEditor(node, options);\n            }\n        });\n    }\n\n    protected async selectInEditor(node: MonacoOutlineSymbolInformationNode, options?: EditorOpenerOptions): Promise<void> {\n        // Avoid cyclic updates: Outline -> Editor -> Outline.\n        this.canUpdateOutline = false;\n        try {\n            await this.editorManager.open(node.uri, options);\n        } finally {\n            this.canUpdateOutline = true;\n        }\n    }\n\n    protected handleCurrentEditorChanged(): void {\n        this.toDisposeOnEditor.dispose();\n        if (this.toDisposeOnClose.disposed) {\n            return;\n        }\n        this.toDisposeOnClose.push(this.toDisposeOnEditor);\n        this.toDisposeOnEditor.push(Disposable.create(() => this.roots = undefined));\n        const editor = this.editorManager.currentEditor;\n        if (editor) {\n            const model = MonacoEditor.get(editor)!.getControl().getModel();\n            if (model) {\n                this.toDisposeOnEditor.push(model.onDidChangeContent(() => {\n                    this.roots = undefined; // Invalidate the previously resolved roots.\n                    this.updateOutline();\n                }));\n            }\n            this.toDisposeOnEditor.push(editor.editor.onSelectionChanged(selection => this.updateOutline(selection)));\n        }\n        this.updateOutline();\n    }\n\n    protected tokenSource = new CancellationTokenSource();\n    protected async updateOutline(editorSelection?: Range): Promise<void> {\n        if (!this.canUpdateOutline) {\n            return;\n        }\n        this.tokenSource.cancel();\n        this.tokenSource = new CancellationTokenSource();\n        const token = this.tokenSource.token;\n\n        const editor = MonacoEditor.get(this.editorManager.currentEditor);\n        const model = editor && editor.getControl().getModel();\n        const roots = model && await this.createRoots(model, token, editorSelection);\n        if (token.isCancellationRequested) {\n            return;\n        }\n        this.outlineViewService.publish(roots || []);\n    }\n\n    protected async createRoots(model: monaco.editor.IModel, token: CancellationToken, editorSelection?: Range): Promise<MonacoOutlineSymbolInformationNode[]> {\n        if (this.roots && this.roots.length > 0) {\n            // Reset the selection on the tree nodes, so that we can apply the new ones based on the `editorSelection`.\n            const resetSelection = (node: MonacoOutlineSymbolInformationNode) => {\n                node.selected = false;\n                node.children.forEach(resetSelection);\n            };\n            this.roots.forEach(resetSelection);\n        } else {\n            this.roots = [];\n            // eslint-disable-next-line @typescript-eslint/await-thenable\n            const providers = await DocumentSymbolProviderRegistry.all(model);\n            if (token.isCancellationRequested) {\n                return [];\n            }\n            const uri = new URI(model.uri.toString());\n            for (const provider of providers) {\n                try {\n                    const symbols = await provider.provideDocumentSymbols(model, token);\n                    if (token.isCancellationRequested) {\n                        return [];\n                    }\n                    const nodes = this.createNodes(uri, symbols || []);\n                    this.roots.push(...nodes);\n                } catch {\n                    /* collect symbols from other providers */\n                }\n            }\n        }\n        this.applySelection(this.roots, editorSelection);\n        return this.roots;\n    }\n\n    protected createNodes(uri: URI, symbols: DocumentSymbol[]): MonacoOutlineSymbolInformationNode[] {\n        let rangeBased = false;\n        const ids = new Map();\n        const roots: MonacoOutlineSymbolInformationNode[] = [];\n        const nodesByName = symbols.sort(this.orderByPosition).reduce((result, symbol) => {\n            const node = this.createNode(uri, symbol, ids);\n            if (symbol.children) {\n                MonacoOutlineSymbolInformationNode.insert(roots, node);\n            } else {\n                rangeBased = rangeBased || symbol.range.startLineNumber !== symbol.range.endLineNumber;\n                const values = result.get(symbol.name) || [];\n                values.push({ symbol, node });\n                result.set(symbol.name, values);\n            }\n            return result;\n        }, new Map<string, MonacoOutlineContribution.NodeAndSymbol[]>());\n\n        for (const nodes of nodesByName.values()) {\n            for (const { node, symbol } of nodes) {\n                if (!symbol.containerName) {\n                    MonacoOutlineSymbolInformationNode.insert(roots, node);\n                } else {\n                    const possibleParents = nodesByName.get(symbol.containerName);\n                    if (possibleParents) {\n                        const parent = possibleParents.find(possibleParent => this.parentContains(symbol, possibleParent.symbol, rangeBased));\n                        if (parent) {\n                            node.parent = parent.node;\n                            MonacoOutlineSymbolInformationNode.insert(parent.node.children, node);\n                        }\n                    }\n                }\n            }\n        }\n        if (!roots.length) {\n            const nodes = nodesByName.values().next().value;\n            if (nodes && !nodes[0].node.parent) {\n                return [nodes[0].node];\n            }\n            return [];\n        }\n        return roots;\n    }\n\n    /**\n     * Sets the selection on the sub-trees based on the optional editor selection.\n     * Select the narrowest node that is strictly contains the editor selection.\n     */\n    protected applySelection(roots: MonacoOutlineSymbolInformationNode[], editorSelection?: Range): boolean {\n        if (editorSelection) {\n            for (const root of roots) {\n                if (this.parentContains(editorSelection, root.fullRange, true)) {\n                    const { children } = root;\n                    root.selected = !root.expanded || !this.applySelection(children, editorSelection);\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns `true` if `candidate` is strictly contained inside `parent`\n     *\n     * If the argument is a `DocumentSymbol`, then `getFullRange` will be used to retrieve the range of the underlying symbol.\n     */\n    protected parentContains(candidate: DocumentSymbol | Range, parent: DocumentSymbol | Range, rangeBased: boolean): boolean {\n        // TODO: move this code to the `monaco-languageclient`: https://github.com/eclipse-theia/theia/pull/2885#discussion_r217800446\n        const candidateRange = Range.is(candidate) ? candidate : this.getFullRange(candidate);\n        const parentRange = Range.is(parent) ? parent : this.getFullRange(parent);\n        const sameStartLine = candidateRange.start.line === parentRange.start.line;\n        const startColGreaterOrEqual = candidateRange.start.character >= parentRange.start.character;\n        const startLineGreater = candidateRange.start.line > parentRange.start.line;\n        const sameEndLine = candidateRange.end.line === parentRange.end.line;\n        const endColSmallerOrEqual = candidateRange.end.character <= parentRange.end.character;\n        const endLineSmaller = candidateRange.end.line < parentRange.end.line;\n        return (((sameStartLine && startColGreaterOrEqual || startLineGreater) &&\n            (sameEndLine && endColSmallerOrEqual || endLineSmaller)) || !rangeBased);\n    }\n\n    /**\n     * `monaco` to LSP `Range` converter. Converts the `1-based` location indices into `0-based` ones.\n     */\n    protected asRange(range: monaco.IRange): Range {\n        const { startLineNumber, startColumn, endLineNumber, endColumn } = range;\n        return {\n            start: {\n                line: startLineNumber - 1,\n                character: startColumn - 1\n            },\n            end: {\n                line: endLineNumber - 1,\n                character: endColumn - 1\n            }\n        };\n    }\n\n    /**\n     * Returns with a range enclosing this symbol not including leading/trailing whitespace but everything else like comments.\n     * This information is typically used to determine if the clients cursor is inside the symbol to reveal in the symbol in the UI.\n     * This allows to obtain the range including the associated comments.\n     *\n     * See: [`DocumentSymbol#range`](https://microsoft.github.io/language-server-protocol/specification#textDocument_documentSymbol) for more details.\n     */\n    protected getFullRange(documentSymbol: DocumentSymbol): Range {\n        return this.asRange(documentSymbol.range);\n    }\n\n    /**\n     * The range that should be selected and revealed when this symbol is being picked, e.g the name of a function. Must be contained by the `getSelectionRange`.\n     *\n     * See: [`DocumentSymbol#selectionRange`](https://microsoft.github.io/language-server-protocol/specification#textDocument_documentSymbol) for more details.\n     */\n    protected getNameRange(documentSymbol: DocumentSymbol): Range {\n        return this.asRange(documentSymbol.selectionRange);\n    }\n\n    protected createNode(uri: URI, symbol: DocumentSymbol, ids: Map<string, number>, parent?: MonacoOutlineSymbolInformationNode): MonacoOutlineSymbolInformationNode {\n        const id = this.createId(symbol.name, ids);\n        const children: MonacoOutlineSymbolInformationNode[] = [];\n        const node: MonacoOutlineSymbolInformationNode = {\n            children,\n            id,\n            iconClass: SymbolKind[symbol.kind].toString().toLowerCase(),\n            name: this.getName(symbol),\n            detail: this.getDetail(symbol),\n            parent,\n            uri,\n            range: this.getNameRange(symbol),\n            fullRange: this.getFullRange(symbol),\n            selected: false,\n            expanded: this.shouldExpand(symbol)\n        };\n        if (symbol.children) {\n            for (const child of symbol.children) {\n                MonacoOutlineSymbolInformationNode.insert(children, this.createNode(uri, child, ids, node));\n            }\n        }\n        return node;\n    }\n\n    protected getName(symbol: DocumentSymbol): string {\n        return symbol.name;\n    }\n\n    protected getDetail(symbol: DocumentSymbol): string {\n        return symbol.detail;\n    }\n\n    protected createId(name: string, ids: Map<string, number>): string {\n        const counter = ids.get(name);\n        const index = typeof counter === 'number' ? counter + 1 : 0;\n        ids.set(name, index);\n        return name + '_' + index;\n    }\n\n    protected shouldExpand(symbol: DocumentSymbol): boolean {\n        return [\n            SymbolKind.Class,\n            SymbolKind.Enum, SymbolKind.File,\n            SymbolKind.Interface, SymbolKind.Module,\n            SymbolKind.Namespace, SymbolKind.Object,\n            SymbolKind.Package, SymbolKind.Struct\n        ].indexOf(symbol.kind) !== -1;\n    }\n\n    protected orderByPosition(symbol: DocumentSymbol, symbol2: DocumentSymbol): number {\n        const startLineComparison = symbol.range.startLineNumber - symbol2.range.startLineNumber;\n        if (startLineComparison !== 0) {\n            return startLineComparison;\n        }\n        const startOffsetComparison = symbol.range.startColumn - symbol2.range.startColumn;\n        if (startOffsetComparison !== 0) {\n            return startOffsetComparison;\n        }\n        const endLineComparison = symbol.range.endLineNumber - symbol2.range.endLineNumber;\n        if (endLineComparison !== 0) {\n            return endLineComparison;\n        }\n        return symbol.range.endColumn - symbol2.range.endColumn;\n    }\n\n}\nexport namespace MonacoOutlineContribution {\n    export interface NodeAndSymbol {\n        node: MonacoOutlineSymbolInformationNode;\n        symbol: DocumentSymbol\n    }\n}\n\nexport interface MonacoOutlineSymbolInformationNode extends OutlineSymbolInformationNode {\n    uri: URI;\n    range: Range;\n    fullRange: Range;\n    detail?: string;\n    parent: MonacoOutlineSymbolInformationNode | undefined;\n    children: MonacoOutlineSymbolInformationNode[];\n}\n\nexport namespace MonacoOutlineSymbolInformationNode {\n    export function is(node: TreeNode): node is MonacoOutlineSymbolInformationNode {\n        return OutlineSymbolInformationNode.is(node) && 'uri' in node && 'range' in node;\n    }\n    export function insert(nodes: MonacoOutlineSymbolInformationNode[], node: MonacoOutlineSymbolInformationNode): void {\n        const index = nodes.findIndex(current => compare(node, current) < 0);\n        if (index === -1) {\n            nodes.push(node);\n        } else {\n            nodes.splice(index, 0, node);\n        }\n    }\n    export function compare(node: MonacoOutlineSymbolInformationNode, node2: MonacoOutlineSymbolInformationNode): number {\n        const startLineComparison = node.range.start.line - node2.range.start.line;\n        if (startLineComparison !== 0) {\n            return startLineComparison;\n        }\n        const startColumnComparison = node.range.start.character - node2.range.start.character;\n        if (startColumnComparison !== 0) {\n            return startColumnComparison;\n        }\n        const endLineComparison = node2.range.end.line - node.range.end.line;\n        if (endLineComparison !== 0) {\n            return endLineComparison;\n        }\n        return node2.range.end.character - node.range.end.character;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 RedHat and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { Tree } from '@theia/core/lib/browser/tree/tree';\nimport { DepthFirstTreeIterator } from '@theia/core/lib/browser/tree/tree-iterator';\nimport { TreeDecorator, TreeDecoration } from '@theia/core/lib/browser/tree/tree-decorator';\nimport { MonacoOutlineSymbolInformationNode } from './monaco-outline-contribution';\n\n@injectable()\nexport class MonacoOutlineDecorator implements TreeDecorator {\n\n    readonly id = 'theia-monaco-outline-decorator';\n\n    protected readonly emitter = new Emitter<(tree: Tree) => Map<string, TreeDecoration.Data>>();\n\n    async decorations(tree: Tree): Promise<Map<string, TreeDecoration.Data>> {\n        return this.collectDecorations(tree);\n    }\n\n    get onDidChangeDecorations(): Event<(tree: Tree) => Map<string, TreeDecoration.Data>> {\n        return this.emitter.event;\n    }\n\n    protected collectDecorations(tree: Tree): Map<string, TreeDecoration.Data> {\n        const result = new Map();\n        if (tree.root === undefined) {\n            return result;\n        }\n\n        for (const treeNode of new DepthFirstTreeIterator(tree.root)) {\n            if (MonacoOutlineSymbolInformationNode.is(treeNode) && treeNode.detail) {\n                result.set(treeNode.id, this.toDecoration(treeNode));\n            }\n        }\n\n        return result;\n    }\n\n    protected toDecoration(node: MonacoOutlineSymbolInformationNode): TreeDecoration.Data {\n        const captionSuffixes: TreeDecoration.CaptionAffix[] = [{\n            data: (node.detail || ''),\n            fontData: {\n                color: 'var(--theia-descriptionForeground)',\n            }\n        }];\n\n        return {\n            captionSuffixes\n        };\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { ILogger } from '@theia/core/lib/common/logger';\nimport { EditorManager } from '@theia/editor/lib/browser/editor-manager';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { EditorDecoration, EditorDecorationOptions } from '@theia/editor/lib/browser/decorations';\nimport { SemanticHighlightingService, SemanticHighlightingRange, Range } from '@theia/editor/lib/browser/semantic-highlight/semantic-highlighting-service';\nimport { MonacoEditor } from './monaco-editor';\nimport { MonacoEditorService } from './monaco-editor-service';\n\n/**\n * A helper class for grouping information about a decoration type that has\n * been registered with the editor service.\n */\nclass DecorationTypeInfo {\n    key: string;\n    options: monaco.editor.IModelDecorationOptions;\n}\n\n@injectable()\nexport class MonacoSemanticHighlightingService extends SemanticHighlightingService {\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(MonacoEditorService)\n    protected readonly monacoEditorService: MonacoEditorService;\n\n    protected readonly decorations = new Map<string, Set<string>>();\n    protected readonly toDisposeOnEditorClose = new Map<string, Disposable>();\n    protected readonly toDisposeOnUnregister = new Map<string, Disposable>();\n\n    // language id -> (scope index -> decoration type)\n    protected readonly decorationTypes = new Map<string, Map<number, DecorationTypeInfo>>();\n\n    private lastDecorationTypeId: number = 0;\n\n    private nextDecorationTypeKey(): string {\n        return 'MonacoSemanticHighlighting' + (++this.lastDecorationTypeId);\n    }\n\n    protected registerDecorationTypesForLanguage(languageId: string): void {\n        const scopes = this.scopes.get(languageId);\n        if (scopes) {\n            const decorationTypes = new Map<number, DecorationTypeInfo>();\n            for (let index = 0; index < scopes.length; index++) {\n                const modelDecoration = this.toDecorationType(scopes[index]);\n                if (modelDecoration) {\n                    decorationTypes.set(index, modelDecoration);\n                }\n            }\n            this.decorationTypes.set(languageId, decorationTypes);\n        }\n    }\n\n    protected removeDecorationTypesForLanguage(languageId: string): void {\n        const decorationTypes = this.decorationTypes.get(languageId);\n        if (!decorationTypes) {\n            this.logger.warn(`No decoration types are registered for language: ${languageId}`);\n            return;\n        }\n        for (const [, decorationType] of decorationTypes) {\n            this.monacoEditorService.removeDecorationType(decorationType.key);\n        }\n    }\n\n    protected refreshDecorationTypesForLanguage(languageId: string): void {\n        const decorationTypes = this.decorationTypes.get(languageId);\n        const scopes = this.scopes.get(languageId);\n        if (!decorationTypes || !scopes) {\n            this.logger.warn(`No decoration types are registered for language: ${languageId}`);\n            return;\n        }\n        for (const [scope, decorationType] of decorationTypes) {\n            // Pass in the existing key to associate the new color with the same\n            // decoration type, thereby reusing it.\n            const newDecorationType = this.toDecorationType(scopes[scope], decorationType.key);\n            if (newDecorationType) {\n                decorationType.options = newDecorationType.options;\n            }\n        }\n    }\n\n    register(languageId: string, scopes: string[][] | undefined): Disposable {\n        const result = super.register(languageId, scopes);\n        this.registerDecorationTypesForLanguage(languageId);\n        const disposable = this.themeService().onThemeChange(() => {\n            // When the theme changes, refresh the decoration types to reflect\n            // the colors for the old theme.\n            // Note that we do not remove the old decoration types and add new ones.\n            // The new ones would have different class names, and we'd have to\n            // update all open editors to use the new class names.\n            this.refreshDecorationTypesForLanguage(languageId);\n        });\n        this.toDisposeOnUnregister.set(languageId, disposable);\n        return result;\n    }\n\n    protected unregister(languageId: string): void {\n        super.unregister(languageId);\n        this.removeDecorationTypesForLanguage(languageId);\n        const disposable = this.toDisposeOnUnregister.get(languageId);\n        if (disposable) {\n            disposable.dispose();\n        }\n        this.decorationTypes.delete(languageId);\n        this.toDisposeOnUnregister.delete(languageId);\n    }\n\n    protected toDecorationType(scopes: string[], reuseKey?: string): DecorationTypeInfo | undefined {\n        const key = reuseKey || this.nextDecorationTypeKey();\n        // TODO: why for-of? How to pick the right scope? Is it fine to get the first element (with the narrowest scope)?\n        for (const scope of scopes) {\n            const tokenTheme = this.tokenTheme();\n            const metadata = tokenTheme.match(monaco.services.LanguageId.Null, scope);\n            // Don't use the inlineClassName from the TokenMetadata, because this\n            // will conflict with styles used for TM scopes\n            // (https://github.com/Microsoft/monaco-editor/issues/1070).\n            // Instead, get the token color, use registerDecorationType() to cause\n            // monaco to allocate a new inlineClassName for that color, and use\n            // resolveDecorationOptions() to get an IModelDecorationOptions\n            // containing that inlineClassName.\n            const colorIndex = monaco.modes.TokenMetadata.getForeground(metadata);\n            const color = tokenTheme.getColorMap()[colorIndex];\n            // If we wanted to support other decoration options such as font style,\n            // we could include them here.\n            const options: monaco.editor.IDecorationRenderOptions = {\n                color: color.toString(),\n            };\n            this.monacoEditorService.registerDecorationType(key, options);\n            return {\n                key,\n                options: this.monacoEditorService.resolveDecorationOptions(key, false)\n            };\n        }\n        return undefined;\n    }\n\n    async decorate(languageId: string, uri: URI, ranges: SemanticHighlightingRange[]): Promise<void> {\n        const editor = await this.editor(uri);\n        if (!editor) {\n            return;\n        }\n\n        const key = uri.toString();\n        if (!this.toDisposeOnEditorClose.has(key)) {\n            this.toDisposeOnEditorClose.set(key, new DisposableCollection(\n                editor.onDispose(() => this.deleteDecorations(key, editor))\n            ));\n        }\n\n        const newDecorations = ranges.map(range => this.toDecoration(languageId, range));\n        const oldDecorations = this.oldDecorations(key, editor, ranges);\n        const newState = editor.deltaDecorations({\n            newDecorations,\n            oldDecorations\n        });\n\n        const decorationIds = this.decorationIds(key);\n        newState.forEach(id => decorationIds.add(id));\n        this.decorations.set(key, decorationIds);\n    }\n\n    dispose(): void {\n        Array.from(this.toDisposeOnEditorClose.values()).forEach(disposable => disposable.dispose());\n    }\n\n    protected decorationIds(uri: string | URI): Set<string> {\n        return this.decorations.get(typeof uri === 'string' ? uri : uri.toString()) || new Set();\n    }\n\n    protected async editor(uri: string | URI): Promise<MonacoEditor | undefined> {\n        const editorWidget = await this.editorManager.getByUri(typeof uri === 'string' ? new URI(uri) : uri);\n        if (!!editorWidget && editorWidget.editor instanceof MonacoEditor) {\n            return editorWidget.editor;\n        }\n        return undefined;\n    }\n\n    protected async model(uri: string | URI): Promise<monaco.editor.ITextModel | undefined> {\n        const editor = await this.editor(uri);\n        if (editor) {\n            return editor.getControl().getModel() || undefined;\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns all the semantic highlighting decoration IDs that are affected by any of the range arguments.\n     */\n    protected oldDecorations(uri: string, editor: MonacoEditor, ranges: SemanticHighlightingRange[]): string[] {\n        const ids = this.decorationIds(uri);\n        const affectedLines = Array.from(new Set(ranges.map(r => [r.start.line, r.end.line]).reduce((prev, curr) => prev.concat(curr), [])));\n        return affectedLines\n            .map(line => editor.getLinesDecorations(line, line))\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .map(decoration => decoration.id)\n            .filter(id => ids.has(id));\n    }\n\n    protected deleteDecorations(uri: string, editor: MonacoEditor): void {\n        const ids = this.decorations.get(uri);\n        if (ids) {\n            const oldDecorations = Array.from(ids);\n            editor.deltaDecorations({\n                newDecorations: [],\n                oldDecorations\n            });\n            this.decorations.delete(uri);\n        }\n        const disposable = this.toDisposeOnEditorClose.get(uri);\n        if (disposable) {\n            disposable.dispose();\n        }\n        this.toDisposeOnEditorClose.delete(uri);\n    }\n\n    protected toDecoration(languageId: string, range: SemanticHighlightingRange): EditorDecoration {\n        const { start, end } = range;\n        const options = this.toOptions(languageId, range.scope);\n        return {\n            range: Range.create(start, end),\n            options\n        };\n    }\n\n    protected toOptions(languageId: string, scope: number | undefined): EditorDecorationOptions {\n        if (scope !== undefined) {\n            const decorationTypes = this.decorationTypes.get(languageId);\n            if (decorationTypes) {\n                const decoration = decorationTypes.get(scope);\n                if (decoration) {\n                    return {\n                        inlineClassName: decoration.options.inlineClassName || undefined\n                    };\n                }\n            }\n        }\n        return {};\n    }\n\n    protected themeService(): monaco.services.IStandaloneThemeService {\n        return monaco.services.StaticServices.standaloneThemeService.get();\n    }\n\n    protected tokenTheme(): monaco.services.TokenTheme {\n        return this.themeService().getTheme().tokenTheme;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as path from 'path';\nimport { ContainerModule } from 'inversify';\nimport { loadVsRequire, loadMonaco } from '../browser/monaco-loader';\n\nexport { ContainerModule };\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst s = <any>self;\n\n/**\n * We cannot use `FileUri#create` because URIs with file scheme cannot be properly decoded via the AMD loader.\n * So if you have a FS path on Windows: `C:\\Users\\foo`, then you will get a URI `file:///c%3A/Users/foo` which\n * will be converted into the `c%3A/Users/foo` FS path on Windows by the AMD loader.\n */\nconst uriFromPath = (filePath: string) => {\n    let pathName = path.resolve(filePath).replace(/\\\\/g, '/');\n    if (pathName.length > 0 && pathName.charAt(0) !== '/') {\n        pathName = '/' + pathName;\n    }\n    return encodeURI('file://' + pathName);\n};\n\nexport default loadVsRequire(global)\n    .then(vsRequire => {\n        const baseUrl = uriFromPath(__dirname);\n        vsRequire.config({ baseUrl });\n\n        // workaround monaco-css not understanding the environment\n        s.module = undefined;\n        // workaround monaco-typescript not understanding the environment\n        s.process.browser = true;\n        return loadMonaco(vsRequire);\n    })\n    .then(() => import('../browser/monaco-frontend-module'))\n    .then(module => module.default);\n","\nvar content = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./index.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../css-loader/index.js!./symbol-icons.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./symbol-icons.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./symbol-icons.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = __webpack_public_path__ + \"cf2aabacdc2b3a5768b03545cb1d8330.svg\";","/********************************************************************************\n * Copyright (C) 2018 Redhat, Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, named } from 'inversify';\nimport { ContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { TreeDecorator, AbstractTreeDecoratorService } from '@theia/core/lib/browser/tree/tree-decorator';\n\n/**\n * Symbol for all decorators that would like to contribute into the outline.\n */\nexport const OutlineTreeDecorator = Symbol('OutlineTreeDecorator');\n\n/**\n * Decorator service for the outline.\n */\n@injectable()\nexport class OutlineDecoratorService extends AbstractTreeDecoratorService {\n\n    constructor(@inject(ContributionProvider) @named(OutlineTreeDecorator) protected readonly contributions: ContributionProvider<TreeDecorator>) {\n        super(contributions.getContributions());\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { Event, Emitter, DisposableCollection } from '@theia/core';\nimport { WidgetFactory } from '@theia/core/lib/browser';\nimport { OutlineViewWidget, OutlineViewWidgetFactory, OutlineSymbolInformationNode } from './outline-view-widget';\nimport { Widget } from '@phosphor/widgets';\n\n@injectable()\nexport class OutlineViewService implements WidgetFactory {\n\n    id = 'outline-view';\n\n    protected widget?: OutlineViewWidget;\n    protected readonly onDidChangeOutlineEmitter = new Emitter<OutlineSymbolInformationNode[]>();\n    protected readonly onDidChangeOpenStateEmitter = new Emitter<boolean>();\n    protected readonly onDidSelectEmitter = new Emitter<OutlineSymbolInformationNode>();\n    protected readonly onDidOpenEmitter = new Emitter<OutlineSymbolInformationNode>();\n\n    constructor(@inject(OutlineViewWidgetFactory) protected factory: OutlineViewWidgetFactory) { }\n\n    get onDidSelect(): Event<OutlineSymbolInformationNode> {\n        return this.onDidSelectEmitter.event;\n    }\n\n    get onDidOpen(): Event<OutlineSymbolInformationNode> {\n        return this.onDidOpenEmitter.event;\n    }\n\n    get onDidChangeOutline(): Event<OutlineSymbolInformationNode[]> {\n        return this.onDidChangeOutlineEmitter.event;\n    }\n\n    get onDidChangeOpenState(): Event<boolean> {\n        return this.onDidChangeOpenStateEmitter.event;\n    }\n\n    get open(): boolean {\n        return this.widget !== undefined && this.widget.isVisible;\n    }\n\n    /**\n     * Publish the collection of outline view symbols.\n     * - Publishing includes setting the `OutlineViewWidget` tree with symbol information.\n     * @param roots the list of outline symbol information nodes.\n     */\n    publish(roots: OutlineSymbolInformationNode[]): void {\n        if (this.widget) {\n            this.widget.setOutlineTree(roots);\n            this.onDidChangeOutlineEmitter.fire(roots);\n        }\n    }\n\n    createWidget(): Promise<Widget> {\n        this.widget = this.factory();\n        const disposables = new DisposableCollection();\n        disposables.push(this.widget.onDidChangeOpenStateEmitter.event(open => this.onDidChangeOpenStateEmitter.fire(open)));\n        disposables.push(this.widget.model.onOpenNode(node => this.onDidOpenEmitter.fire(node as OutlineSymbolInformationNode)));\n        disposables.push(this.widget.model.onSelectionChanged(selection => this.onDidSelectEmitter.fire(selection[0] as OutlineSymbolInformationNode)));\n        this.widget.disposed.connect(() => {\n            this.widget = undefined;\n            disposables.dispose();\n        });\n        return Promise.resolve(this.widget);\n    }\n}\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".monaco-editor {\\n    padding-bottom: 5.6px;\\n    font-family: var(--theia-ui-font-family);\\n    font-size: inherit !important;\\n}\\n\\n/*\\n * set z-index to 0, so tabs are not above overlay widgets\\n */\\n.p-TabBar.theia-app-centers {\\n    z-index: 0;\\n    display: flex;\\n}\\n\\n/*\\n * we need to disable the background image when using font awesome icons and file-icons\\n */\\n.monaco-quick-open-widget .quick-open-tree .quick-open-entry .quick-open-entry-icon.fa,\\n.monaco-quick-open-widget .quick-open-tree .quick-open-entry .quick-open-entry-icon.file-icon {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    background-image: none;\\n    margin-right: 0px;\\n}\\n\\n.monaco-quick-open-widget .quick-open-tree .quick-open-entry .codicon {\\n\\tvertical-align: sub;\\n}\\n\\n.monaco-quick-open-widget {\\n    background-color: var(--theia-quickInput-background) !important;\\n    color: var(--theia-quickInput-foreground) !important;\\n}\\n\\n.quick-open-entry .quick-open-row .monaco-icon-label .monaco-icon-label-description-container .label-description {\\n    font-size: calc(var(--theia-ui-font-size0) * 0.95);\\n}\\n\\n.monaco-editor .zone-widget {\\n\\tposition: absolute;\\n\\tz-index: 10;\\n}\\n\\n.monaco-editor .zone-widget .zone-widget-container {\\n\\tborder-top-style: solid;\\n\\tborder-bottom-style: solid;\\n\\tborder-top-width: 0;\\n\\tborder-bottom-width: 0;\\n    border-top-color: var(--theia-peekView-border);\\n    border-bottom-color: var(--theia-peekView-border);\\n\\tposition: relative;\\n}\\n\\n.monaco-editor .parameter-hints-widget > .wrapper {\\n    overflow: hidden;\\n}\\n\\n/* List highlight, see https://github.com/microsoft/vscode/blob/ff5f581425da6230b6f9216ecf19abf6c9d285a6/src/vs/workbench/browser/style.ts#L50 */\\n.monaco-tree .monaco-tree-row .monaco-highlighted-label .highlight,\\n.monaco-list .monaco-list-row .monaco-highlighted-label .highlight {\\n\\tcolor: var(--theia-list-highlightForeground) !important;\\n}\\n\\n/* Scrollbars, see https://github.com/microsoft/vscode/blob/ff5f581425da6230b6f9216ecf19abf6c9d285a6/src/vs/workbench/browser/style.ts#L65 */\\n.monaco-scrollable-element > .shadow.top {\\n    box-shadow: var(--theia-scrollbar-shadow) 0 6px 6px -6px inset !important;\\n}\\n\\n.monaco-scrollable-element > .shadow.left {\\n    box-shadow: var(--theia-scrollbar-shadow) 6px 0 6px -6px inset !important;\\n}\\n\\n.monaco-scrollable-element > .shadow.top.left {\\n    box-shadow: var(--theia-scrollbar-shadow) 6px 6px 6px -6px inset !important;\\n}\\n\\n.monaco-scrollable-element > .scrollbar > .slider {\\n    background: var(--theia-scrollbarSlider-background) !important;\\n}\\n\\n.monaco-scrollable-element > .scrollbar > .slider:hover {\\n    background: var(--theia-scrollbarSlider-hoverBackground) !important;\\n}\\n\\n.monaco-scrollable-element > .scrollbar > .slider.active {\\n    background: var(--theia-scrollbarSlider-activeBackground) !important;\\n}\\n\\n.monaco-scrollable-element > .scrollbar.vertical > .slider {\\n    width: var(--theia-scrollbar-width) !important;\\n}\\n\\n.monaco-scrollable-element > .scrollbar.horizontal > .slider {\\n    height: var(--theia-scrollbar-width) !important;\\n}\\n\\n.monaco-editor .reference-zone-widget .ref-tree .referenceMatch .highlight {\\n    color: unset !important;\\n}\\n\\n.monaco-editor .find-widget .monaco-inputbox.synthetic-focus {\\n    outline: var(--theia-border-width) solid;\\n    outline-offset: calc(-1*var(--theia-border-width));\\n    outline-color: var(--theia-focusBorder);\\n}\\n\", \"\"]);\n\n// exports\n","var escape = require(\"../../../../../css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".symbol-icon {\\n    background-image: url(\" + escape(require(\"./symbol-sprite.svg\")) + \");\\n    background-repeat: no-repeat;\\n    overflow: hidden;\\n    min-width: var(--theia-icon-size);\\n    height: var(--theia-icon-size);\\n    margin-right: 4px;\\n}\\n\\n.symbol-icon-center {\\n    align-self: center;\\n}\\n\\n.symbol-icon.method {\\n    background-position: 0 calc(var(--theia-sprite-y-offset));\\n}\\n\\n.symbol-icon.constant,\\n.symbol-icon.variable {\\n    background-position: -22px calc(var(--theia-sprite-y-offset));\\n}\\n\\n.symbol-icon.class {\\n    background-position: -42px calc(var(--theia-sprite-y-offset));\\n}\\n\\n.symbol-icon.interface {\\n    background-position: -62px calc(var(--theia-sprite-y-offset));\\n}\\n\\n.symbol-icon.module {\\n    background-position: -82px calc(var(--theia-sprite-y-offset));\\n}\\n\\n.symbol-icon.property {\\n    background-position: -102px calc(var(--theia-sprite-y-offset));\\n}\\n\\n.symbol-icon.enum {\\n    background-position: -122px calc(var(--theia-sprite-y-offset));\\n}\\n\\n.symbol-icon.rule {\\n    background-position: -242px calc(var(--theia-sprite-y-offset));\\n}\\n\\n.symbol-icon.file {\\n    background-position: -262px calc(var(--theia-sprite-y-offset));\\n}\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}