{"version":3,"sources":["webpack:///./node_modules/@theia/preferences/src/browser/abstract-resource-preference-provider.ts","webpack:///./node_modules/@theia/preferences/src/browser/section-preference-provider.ts","webpack:///./node_modules/@theia/preferences/src/browser/user-preference-provider.ts","webpack:///./node_modules/@theia/userstorage/src/browser/index.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,uDAAuD;AACvD,oCAAoC;AAEpC,yGAA4C;AAC5C,uHAAuD;AACvD,oGAA8D;AAC9D,sJAAwE;AACxE,uIAA+D;AAC/D,sHAAyJ;AACzJ,kHAA6C;AAC7C,8MAAyG;AACzG,0LAA6F;AAE7F,+JAA6E;AAC7E,6IAA+D;AAG/D;IAAiE,sDAAkB;IAAnF;QAAA,qEA8OC;QA5Oa,iBAAW,GAA2B,EAAE,CAAC;QAEhC,aAAO,GAAG,IAAI,uBAAQ,EAAE,CAAC;;IA0OhD,CAAC;IA1NmB,iDAAI,GAApB;;;;;;;wBACU,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;wBAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAU,CAAC,MAAM,CAAC,cAAM,YAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,8BAA4B,GAAG,mBAAgB,CAAC,CAAC,EAA/E,CAA+E,CAAC,CAAC,CAAC;wBAC9H,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;wBAEJ,qBAAM,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,GAAG,CAAC;;wBAAjE,SAAS,GAAG,SAAqD;wBACvE,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;4BACzB,SAAS,CAAC,OAAO,EAAE,CAAC;4BACpB,sBAAO;yBACV;wBAED,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC;wBAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;wBAEvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAU,CAAC,MAAM,CAAC,cAAM,YAAI,CAAC,KAAK,GAAG,SAAS,EAAtB,CAAsB,CAAC,CAAC,CAAC;wBAErE,IAAI,CAAC,eAAe,EAAE,CAAC;wBACvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,cAAM,YAAI,CAAC,eAAe,EAAE,EAAtB,CAAsB,CAAC,CAAC,CAAC;wBACjF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,cAAM,YAAI,CAAC,eAAe,EAAE,EAAtB,CAAsB,CAAC,CAAC,CAAC;wBAC7E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,cAAM,YAAI,CAAC,eAAe,EAAE,EAAtB,CAAsB,CAAC,CAAC,CAAC;wBAE/E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAU,CAAC,MAAM,CAAC,cAAM,YAAI,CAAC,KAAK,EAAE,EAAZ,CAAY,CAAC,CAAC,CAAC;;;;;KAC9D;IAKD,sBAAc,qDAAK;aAAnB;YACI,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC;QACnD,CAAC;;;OAAA;IAID,yDAAY,GAAZ,UAAa,WAAoB;QAC7B,IAAI,CAAC,WAAW,EAAE;YACd,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;SACxB;QACD,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;IAChF,CAAC;IAED,qDAAQ,GAAR,UAAS,WAA+B;QACpC,IAAI,CAAC,WAAW,EAAE;YACd,OAAO,IAAI,CAAC;SACf;QACD,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,IAAI,CAAC,MAAM,EAAE;YACT,OAAO,IAAI,CAAC;SACf;QACD,IAAM,YAAY,GAAG,IAAI,aAAG,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC;QAC/C,OAAO,MAAM,CAAC,IAAI,CAAC,aAAG,IAAI,WAAI,aAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,EAA/C,CAA+C,CAAC,CAAC;IAC/E,CAAC;IAED,2DAAc,GAAd,UAAe,WAAoB;QAC/B,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5E,CAAC;IAEK,0DAAa,GAAnB,UAAoB,GAAW,EAAE,KAAU,EAAE,WAAoB;;;;;;4BAC7D,qBAAM,IAAI,CAAC,OAAO,CAAC,OAAO;;wBAA1B,SAA0B,CAAC;wBAC3B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;4BACb,sBAAO,KAAK,EAAC;yBAChB;wBACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;4BAC7B,sBAAO,KAAK,EAAC;yBAChB;wBACK,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;wBAC/B,IAAI,CAAC,IAAI,EAAE;4BACP,sBAAO,KAAK,EAAC;yBAChB;;;;wBAES,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC;wBAC5C,IAAI,CAAC,OAAO,IAAI,KAAK,KAAK,SAAS,EAAE;4BACjC,sBAAO,IAAI,EAAC;yBACf;wBACK,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;wBACvC,cAAc,GAAmD,EAAE,CAAC;wBAC1E,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,KAAK,SAAS,EAAE;4BAC9B,KAAwC,SAAS,CAAC,UAAU,EAAE,EAA5D,YAAY,oBAAE,OAAO,eAAE,UAAU,iBAA4B;;gCACrE,KAAmB,yBAAW,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE;oCACxD,iBAAiB,EAAE;wCACf,YAAY;wCACZ,OAAO;wCACP,GAAG,EAAE,UAAU,KAAK,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM;qCACxE;iCACJ,CAAC,6CAAE;oCANO,IAAI;oCAOL,KAAK,GAAG,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oCAC7C,GAAG,GAAG,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;oCAC/D,cAAc,CAAC,IAAI,CAAC;wCAChB,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC;wCAC7C,IAAI,EAAE,IAAI,CAAC,OAAO,IAAI,IAAI;wCAC1B,gBAAgB,EAAE,KAAK;qCAC1B,CAAC,CAAC;iCACN;;;;;;;;;yBACJ;6BAAM;4BACH,cAAc,CAAC,IAAI,CAAC;gCAChB,KAAK,EAAE,SAAS,CAAC,iBAAiB,EAAE;gCACpC,IAAI,EAAE,IAAI;gCACV,gBAAgB,EAAE,KAAK;6BAC1B,CAAC,CAAC;yBACN;wBACD,qBAAM,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,EAAE,cAAc,CAAC;;wBAApE,SAAoE,CAAC;wBAC9D,qBAAM,IAAI,CAAC,cAAc;4BAAhC,sBAAO,SAAyB,EAAC;;;wBAE3B,OAAO,GAAG,oCAAkC,GAAG,cAAS,IAAI,CAAC,MAAM,EAAE,OAAI,CAAC;wBAChF,IAAI,CAAC,cAAc,CAAC,KAAK,CAAI,OAAO,sCAAmC,CAAC,CAAC;wBACzE,OAAO,CAAC,KAAK,CAAC,KAAG,OAAS,EAAE,GAAC,CAAC,CAAC;wBAC/B,sBAAO,KAAK,EAAC;;;;;KAEpB;IAES,oDAAO,GAAjB,UAAkB,cAAsB;QACpC,OAAO,CAAC,cAAc,CAAC,CAAC;IAC5B,CAAC;IAED;;;OAGG;IACO,4DAAe,GAAzB;QACI,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE;YACvB,OAAO;SACV;QACD,IAAI;YACA,IAAI,WAAW,UAAC;YAChB,IAAI,KAAK,CAAC,KAAK,EAAE;gBACb,IAAM,OAAO,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;gBAChC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;aAChD;iBAAM;gBACH,WAAW,GAAG,EAAE,CAAC;aACpB;YACD,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC;SAC7C;QAAC,OAAO,CAAC,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,sCAAoC,IAAI,CAAC,MAAM,EAAE,OAAI,EAAE,CAAC,CAAC,CAAC;SAC3E;IACL,CAAC;IAES,6DAAgB,GAA1B,UAA2B,OAAe;QACtC,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAErC,IAAM,WAAW,GAA2B,EAAE,CAAC;QAC/C,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YAC9B,OAAO,WAAW,CAAC;SACtB;QACD,wCAAwC;QACxC,KAAK,IAAM,cAAc,IAAI,QAAQ,EAAE;YACnC,IAAM,eAAe,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC;YACjD,IAAI,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,cAAc,EAAE,eAAe,CAAC,EAAE;gBACxE,wCAAwC;gBACxC,KAAK,IAAM,wBAAwB,IAAI,eAAe,EAAE;oBACpD,IAAM,eAAe,GAAG,eAAe,CAAC,wBAAwB,CAAC,CAAC;oBAClE,WAAW,CAAI,cAAc,SAAI,wBAA0B,CAAC,GAAG,eAAe,CAAC;iBAClF;aACJ;iBAAM;gBACH,WAAW,CAAC,cAAc,CAAC,GAAG,eAAe,CAAC;aACjD;SACJ;QACD,OAAO,WAAW,CAAC;IACvB,CAAC;IAES,kDAAK,GAAf,UAAgB,OAAe;QAC3B,OAAO,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,EAAE;YACV,OAAO,SAAS,CAAC;SACpB;QACD,IAAM,eAAe,GAAG,WAAW,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC3D,OAAO,WAAW,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;IAC9C,CAAC;IAES,oEAAuB,GAAjC,UAAkC,QAAgC;;QAC9D,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACrD,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC5B,IAAM,SAAS,GAAG,IAAI,GAAG,UAAK,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAK,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;QAChF,IAAM,WAAW,GAAmC,EAAE,CAAC;QACvD,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;;YAC1B,KAAuB,2BAAS,CAAC,MAAM,EAAE,6CAAE;gBAAtC,IAAM,QAAQ;gBACf,IAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACpC,IAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACpC,IAAM,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBACtF,IAAI,gBAAgB,EAAE;oBAClB,IAAM,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAC;oBACrC,yFAAyF;oBACzF,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE;wBAChE,OAAO,CAAC,IAAI,CAAC,gBAAc,QAAQ,YAAO,GAAG,wCAAmC,yBAAe,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAG,CAAC,CAAC;wBACpI,SAAS;qBACZ;iBACJ;gBACD,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,QAAQ;uBAC5C,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,QAAQ,CAAC,4DAA4D;uBAC5G,CAAC,cAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE;oBAC3C,WAAW,CAAC,IAAI,CAAC;wBACb,cAAc,EAAE,QAAQ;wBAAE,QAAQ,YAAE,QAAQ;wBAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE;qBACjG,CAAC,CAAC;iBACN;aACJ;;;;;;;;;QAED,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,gEAAgE;YAC1F,IAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC,CAAC;SACjD;IACL,CAAC;IAES,kDAAK,GAAf;;QACI,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAM,OAAO,GAAmC,EAAE,CAAC;;YACnD,KAAuB,wBAAM,CAAC,IAAI,CAAC,WAAW,CAAC,6CAAE;gBAA5C,IAAM,QAAQ;gBACf,IAAM,KAAK,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;gBACpC,IAAI,KAAK,KAAK,SAAS,EAAE;oBACrB,OAAO,CAAC,IAAI,CAAC;wBACT,cAAc,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE;qBACnH,CAAC,CAAC;iBACN;aACJ;;;;;;;;;QACD,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACpB,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;SAC7C;IACL,CAAC;IAtO0B;QAA1B,kBAAM,CAAC,2BAAiB,CAAC;;iFAAyD;IAC3D;QAAvB,kBAAM,CAAC,gCAAc,CAAC;kCAAoC,gCAAc;8EAAC;IACxC;QAAjC,kBAAM,CAAC,kCAAwB,CAAC;kCAAoC,kCAAwB;8EAAC;IAG9F;QADC,kBAAM,CAAC,oDAAwB,CAAC;kCACE,oDAAwB;8EAAC;IAG5D;QADC,kBAAM,CAAC,kDAAsB,CAAC;kCACM,kDAAsB;gFAAC;IAG5D;QADC,kBAAM,CAAC,kCAAe,CAAC;kCACM,kCAAe;yEAAC;IAG9C;QADC,yBAAa,EAAE;;;;kEAwBf;IA3CiB,kCAAkC;QADvD,sBAAU,EAAE;OACS,kCAAkC,CA8OvD;IAAD,yCAAC;CAAA,CA9OgE,4BAAkB,GA8OlF;AA9OqB,gFAAkC;;;;;;;;;;;;;;ACjCxD;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,oGAA+C;AAC/C,kHAA6C;AAC7C,2MAA6F;AAC7F,wKAAkF;AAClF,8MAAyG;AAE5F,oCAA4B,GAAG,MAAM,CAAC,8BAA8B,CAAC,CAAC;AACtE,wCAAgC,GAAG,MAAM,CAAC,kCAAkC,CAAC,CAAC;AAE3F;;;GAGG;AAEH;IAAwD,6CAAkC;IAA1F;;IAoDA,CAAC;IAvCG,sBAAY,gDAAS;aAArB;YACI,IAAI,OAAO,IAAI,CAAC,UAAU,KAAK,WAAW,EAAE;gBACxC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC/E;YACD,OAAO,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;;;OAAA;IAES,0CAAM,GAAhB;QACI,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IACD,8DAA8D;IACpD,yCAAK,GAAf,UAAgB,OAAe;QAC3B,IAAM,KAAK,GAAG,iBAAM,KAAK,YAAC,OAAO,CAAC,CAAC;QACnC,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,KAAK,KAAK,SAAS,EAAE;gBACrB,OAAO,SAAS,CAAC;aACpB;YACD,IAAM,MAAM,GAA6B,EAExC,CAAC;YACF,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAQ,KAAK,CAAE,CAAC;YACpC,OAAO,MAAM,CAAC;SACjB;aAAM;YACH,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;IAES,2CAAO,GAAjB,UAAkB,cAAsB;QACpC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,OAAO,iBAAM,OAAO,YAAC,cAAc,CAAC,CAAC;SACxC;QACD,IAAI,cAAc,KAAK,IAAI,CAAC,OAAO,EAAE;YACjC,OAAO,EAAE,CAAC;SACb;QACD,IAAI,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,EAAE;YAC/C,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,OAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;SAC5D;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAhDD;QADC,kBAAM,CAAC,oCAAgB,CAAC;kCACY,oCAAgB;uEAAC;IAEtD;QADC,kBAAM,CAAC,oCAA4B,CAAC;kCACb,aAAG;0DAAC;IAE5B;QADC,kBAAM,CAAC,wCAAgC,CAAC;;8DACN;IAEnC;QADC,kBAAM,CAAC,oDAAwB,CAAC;kCACY,oDAAwB;+EAAC;IATpD,yBAAyB;QAD9C,sBAAU,EAAE;OACS,yBAAyB,CAoD9C;IAAD,gCAAC;CAAA,CApDuD,0EAAkC,GAoDzF;AApDqB,8DAAyB;;;;;;;;;;;;;;AC9B/C;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;AAElF,oGAAuC;AACvC,kHAA6C;AAC7C,oIAAgE;AAChE,sHAA0D;AAC1D,6KAA0E;AAE7D,2BAAmB,GAAG,IAAI,aAAG,EAAE,CAAC,UAAU,CAAC,wBAAc,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;AAE7F,qCAA6B,GAAG,MAAM,CAAC,+BAA+B,CAAC,CAAC;AAGpF,CAAC;AAEF;;GAEG;AAEH;IAA4C,0CAAyB;IAArE;;IAIA,CAAC;IAHa,yCAAQ,GAAlB;QACI,OAAO,yBAAe,CAAC,IAAI,CAAC;IAChC,CAAC;IAHQ,sBAAsB;QADlC,sBAAU,EAAE;OACA,sBAAsB,CAIlC;IAAD,6BAAC;CAAA,CAJ2C,uDAAyB,GAIpE;AAJY,wDAAsB;;;;;;;;;;;;;;ACjCnC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;AAElF,kJAAuC;AACvC,oJAAwC;AACxC,0IAAmC;AACnC,wKAAkD;AAClD,kKAA+C","file":"22.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-null/no-null */\n\nimport * as jsoncparser from 'jsonc-parser';\nimport { JSONExt } from '@phosphor/coreutils/lib/json';\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport { Disposable } from '@theia/core/lib/common/disposable';\nimport { PreferenceProvider, PreferenceSchemaProvider, PreferenceScope, PreferenceProviderDataChange, PreferenceService } from '@theia/core/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\nimport { MonacoTextModelService } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport { MonacoEditorModel } from '@theia/monaco/lib/browser/monaco-editor-model';\nimport { MonacoWorkspace } from '@theia/monaco/lib/browser/monaco-workspace';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\n\n@injectable()\nexport abstract class AbstractResourcePreferenceProvider extends PreferenceProvider {\n\n    protected preferences: { [key: string]: any } = {};\n    protected model: MonacoEditorModel | undefined;\n    protected readonly loading = new Deferred();\n\n    @inject(PreferenceService) protected readonly preferenceService: PreferenceService;\n    @inject(MessageService) protected readonly messageService: MessageService;\n    @inject(PreferenceSchemaProvider) protected readonly schemaProvider: PreferenceSchemaProvider;\n\n    @inject(PreferenceConfigurations)\n    protected readonly configurations: PreferenceConfigurations;\n\n    @inject(MonacoTextModelService)\n    protected readonly textModelService: MonacoTextModelService;\n\n    @inject(MonacoWorkspace)\n    protected readonly workspace: MonacoWorkspace;\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        const uri = this.getUri();\n        this.toDispose.push(Disposable.create(() => this.loading.reject(new Error(`preference provider for '${uri}' was disposed`))));\n        this._ready.resolve();\n\n        const reference = await this.textModelService.createModelReference(uri);\n        if (this.toDispose.disposed) {\n            reference.dispose();\n            return;\n        }\n\n        this.model = reference.object;\n        this.loading.resolve();\n\n        this.toDispose.push(reference);\n        this.toDispose.push(Disposable.create(() => this.model = undefined));\n\n        this.readPreferences();\n        this.toDispose.push(this.model.onDidChangeContent(() => this.readPreferences()));\n        this.toDispose.push(this.model.onDirtyChanged(() => this.readPreferences()));\n        this.toDispose.push(this.model.onDidChangeValid(() => this.readPreferences()));\n\n        this.toDispose.push(Disposable.create(() => this.reset()));\n    }\n\n    protected abstract getUri(): URI;\n    protected abstract getScope(): PreferenceScope;\n\n    protected get valid(): boolean {\n        return this.model && this.model.valid || false;\n    }\n\n    getConfigUri(): URI;\n    getConfigUri(resourceUri: string | undefined): URI | undefined;\n    getConfigUri(resourceUri?: string): URI | undefined {\n        if (!resourceUri) {\n            return this.getUri();\n        }\n        return this.valid && this.contains(resourceUri) ? this.getUri() : undefined;\n    }\n\n    contains(resourceUri: string | undefined): boolean {\n        if (!resourceUri) {\n            return true;\n        }\n        const domain = this.getDomain();\n        if (!domain) {\n            return true;\n        }\n        const resourcePath = new URI(resourceUri).path;\n        return domain.some(uri => new URI(uri).path.relativity(resourcePath) >= 0);\n    }\n\n    getPreferences(resourceUri?: string): { [key: string]: any } {\n        return this.valid && this.contains(resourceUri) ? this.preferences : {};\n    }\n\n    async setPreference(key: string, value: any, resourceUri?: string): Promise<boolean> {\n        await this.loading.promise;\n        if (!this.model) {\n            return false;\n        }\n        if (!this.contains(resourceUri)) {\n            return false;\n        }\n        const path = this.getPath(key);\n        if (!path) {\n            return false;\n        }\n        try {\n            const content = this.model.getText().trim();\n            if (!content && value === undefined) {\n                return true;\n            }\n            const textModel = this.model.textEditorModel;\n            const editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [];\n            if (path.length || value !== undefined) {\n                const { insertSpaces, tabSize, defaultEOL } = textModel.getOptions();\n                for (const edit of jsoncparser.modify(content, path, value, {\n                    formattingOptions: {\n                        insertSpaces,\n                        tabSize,\n                        eol: defaultEOL === monaco.editor.DefaultEndOfLine.LF ? '\\n' : '\\r\\n'\n                    }\n                })) {\n                    const start = textModel.getPositionAt(edit.offset);\n                    const end = textModel.getPositionAt(edit.offset + edit.length);\n                    editOperations.push({\n                        range: monaco.Range.fromPositions(start, end),\n                        text: edit.content || null,\n                        forceMoveMarkers: false\n                    });\n                }\n            } else {\n                editOperations.push({\n                    range: textModel.getFullModelRange(),\n                    text: null,\n                    forceMoveMarkers: false\n                });\n            }\n            await this.workspace.applyBackgroundEdit(this.model, editOperations);\n            return await this.pendingChanges;\n        } catch (e) {\n            const message = `Failed to update the value of '${key}' in '${this.getUri()}'.`;\n            this.messageService.error(`${message} Please check if it is corrupted.`);\n            console.error(`${message}`, e);\n            return false;\n        }\n    }\n\n    protected getPath(preferenceName: string): string[] | undefined {\n        return [preferenceName];\n    }\n\n    /**\n     * It HAS to be sync to ensure that `setPreference` returns only when values are updated\n     * or any other operation modifying the monaco model content.\n     */\n    protected readPreferences(): void {\n        const model = this.model;\n        if (!model || model.dirty) {\n            return;\n        }\n        try {\n            let preferences;\n            if (model.valid) {\n                const content = model.getText();\n                preferences = this.getParsedContent(content);\n            } else {\n                preferences = {};\n            }\n            this.handlePreferenceChanges(preferences);\n        } catch (e) {\n            console.error(`Failed to load preferences from '${this.getUri()}'.`, e);\n        }\n    }\n\n    protected getParsedContent(content: string): { [key: string]: any } {\n        const jsonData = this.parse(content);\n\n        const preferences: { [key: string]: any } = {};\n        if (typeof jsonData !== 'object') {\n            return preferences;\n        }\n        // eslint-disable-next-line guard-for-in\n        for (const preferenceName in jsonData) {\n            const preferenceValue = jsonData[preferenceName];\n            if (this.schemaProvider.testOverrideValue(preferenceName, preferenceValue)) {\n                // eslint-disable-next-line guard-for-in\n                for (const overriddenPreferenceName in preferenceValue) {\n                    const overriddenValue = preferenceValue[overriddenPreferenceName];\n                    preferences[`${preferenceName}.${overriddenPreferenceName}`] = overriddenValue;\n                }\n            } else {\n                preferences[preferenceName] = preferenceValue;\n            }\n        }\n        return preferences;\n    }\n\n    protected parse(content: string): any {\n        content = content.trim();\n        if (!content) {\n            return undefined;\n        }\n        const strippedContent = jsoncparser.stripComments(content);\n        return jsoncparser.parse(strippedContent);\n    }\n\n    protected handlePreferenceChanges(newPrefs: { [key: string]: any }): void {\n        const oldPrefs = Object.assign({}, this.preferences);\n        this.preferences = newPrefs;\n        const prefNames = new Set([...Object.keys(oldPrefs), ...Object.keys(newPrefs)]);\n        const prefChanges: PreferenceProviderDataChange[] = [];\n        const uri = this.getUri();\n        for (const prefName of prefNames.values()) {\n            const oldValue = oldPrefs[prefName];\n            const newValue = newPrefs[prefName];\n            const schemaProperties = this.schemaProvider.getCombinedSchema().properties[prefName];\n            if (schemaProperties) {\n                const scope = schemaProperties.scope;\n                // do not emit the change event if the change is made out of the defined preference scope\n                if (!this.schemaProvider.isValidInScope(prefName, this.getScope())) {\n                    console.warn(`Preference ${prefName} in ${uri} can only be defined in scopes: ${PreferenceScope.getScopeNames(scope).join(', ')}.`);\n                    continue;\n                }\n            }\n            if (newValue === undefined && oldValue !== newValue\n                || oldValue === undefined && newValue !== oldValue // JSONExt.deepEqual() does not support handling `undefined`\n                || !JSONExt.deepEqual(oldValue, newValue)) {\n                prefChanges.push({\n                    preferenceName: prefName, newValue, oldValue, scope: this.getScope(), domain: this.getDomain()\n                });\n            }\n        }\n\n        if (prefChanges.length > 0) { // do not emit the change event if the pref value is not changed\n            this.emitPreferencesChangedEvent(prefChanges);\n        }\n    }\n\n    protected reset(): void {\n        const preferences = this.preferences;\n        this.preferences = {};\n        const changes: PreferenceProviderDataChange[] = [];\n        for (const prefName of Object.keys(preferences)) {\n            const value = preferences[prefName];\n            if (value !== undefined) {\n                changes.push({\n                    preferenceName: prefName, newValue: undefined, oldValue: value, scope: this.getScope(), domain: this.getDomain()\n                });\n            }\n        }\n        if (changes.length > 0) {\n            this.emitPreferencesChangedEvent(changes);\n        }\n    }\n\n}\n\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { AbstractResourcePreferenceProvider } from './abstract-resource-preference-provider';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\n\nexport const SectionPreferenceProviderUri = Symbol('SectionPreferenceProviderUri');\nexport const SectionPreferenceProviderSection = Symbol('SectionPreferenceProviderSection');\n\n/**\n * This class encapsulates the logic of using separate files for some workspace configuration like 'launch.json' or 'tasks.json'.\n * Anything that is not a contributed section will be in the main config file.\n */\n@injectable()\nexport abstract class SectionPreferenceProvider extends AbstractResourcePreferenceProvider {\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n    @inject(SectionPreferenceProviderUri)\n    protected readonly uri: URI;\n    @inject(SectionPreferenceProviderSection)\n    protected readonly section: string;\n    @inject(PreferenceConfigurations)\n    protected readonly preferenceConfigurations: PreferenceConfigurations;\n\n    private _isSection?: boolean;\n\n    private get isSection(): boolean {\n        if (typeof this._isSection === 'undefined') {\n            this._isSection = this.preferenceConfigurations.isSectionName(this.section);\n        }\n        return this._isSection;\n    }\n\n    protected getUri(): URI {\n        return this.uri;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected parse(content: string): any {\n        const prefs = super.parse(content);\n        if (this.isSection) {\n            if (prefs === undefined) {\n                return undefined;\n            }\n            const result: { [k: string]: unknown } = {\n\n            };\n            result[this.section] = { ...prefs };\n            return result;\n        } else {\n            return prefs;\n        }\n    }\n\n    protected getPath(preferenceName: string): string[] | undefined {\n        if (!this.isSection) {\n            return super.getPath(preferenceName);\n        }\n        if (preferenceName === this.section) {\n            return [];\n        }\n        if (preferenceName.startsWith(this.section + '.')) {\n            return [preferenceName.substr(this.section!.length + 1)];\n        }\n        return undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { UserStorageUri } from '@theia/userstorage/lib/browser';\nimport { PreferenceScope } from '@theia/core/lib/browser';\nimport { SectionPreferenceProvider } from './section-preference-provider';\n\nexport const USER_PREFERENCE_URI = new URI().withScheme(UserStorageUri.SCHEME).withPath('/settings.json');\n\nexport const UserPreferenceProviderFactory = Symbol('UserPreferenceProviderFactory');\nexport interface UserPreferenceProviderFactory {\n    (uri: URI, section: string): UserPreferenceProvider;\n};\n\n/**\n * A @SectionPreferenceProvider that targets the user-level settings\n */\n@injectable()\nexport class UserPreferenceProvider extends SectionPreferenceProvider {\n    protected getScope(): PreferenceScope {\n        return PreferenceScope.User;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './user-storage-service';\nexport * from './user-storage-resource';\nexport * from './user-storage-uri';\nexport * from './user-storage-service-filesystem';\nexport * from './user-storage-frontend-module';\n"],"sourceRoot":""}