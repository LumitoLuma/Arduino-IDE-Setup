{"version":3,"sources":["webpack:///./node_modules/@theia/preferences/src/browser/folder-preference-provider.ts","webpack:///./node_modules/@theia/preferences/src/browser/folders-preferences-provider.ts","webpack:///./node_modules/@theia/preferences/src/browser/preference-bindings.ts","webpack:///./node_modules/@theia/preferences/src/browser/preference-frontend-module.ts","webpack:///./node_modules/@theia/preferences/src/browser/preferences-decorator-service.ts","webpack:///./node_modules/@theia/preferences/src/browser/preferences-json-schema-contribution.ts","webpack:///./node_modules/@theia/preferences/src/browser/preferences-monaco-contribution.ts","webpack:///./node_modules/@theia/preferences/src/browser/views/preference-widget-bindings.ts","webpack:///./node_modules/@theia/preferences/src/browser/style/index.css?eae7","webpack:///./node_modules/@theia/preferences/src/browser/style/index.css","webpack:///./node_modules/@theia/preferences/src/browser/style/preference-array.css","webpack:///./node_modules/@theia/preferences/src/browser/style/preference-context-menu.css","webpack:///./node_modules/@theia/preferences/src/browser/style/preference-object.css","webpack:///./node_modules/@theia/preferences/src/browser/style/search-input.css"],"names":[],"mappings":"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","file":"62.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { PreferenceScope } from '@theia/core/lib/browser';\nimport { FileStat } from '@theia/filesystem/lib/common';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport { SectionPreferenceProvider } from './section-preference-provider';\n\nexport const FolderPreferenceProviderFactory = Symbol('FolderPreferenceProviderFactory');\nexport interface FolderPreferenceProviderFactory {\n    (uri: URI, section: string, folder: FileStat): FolderPreferenceProvider;\n}\n\nexport const FolderPreferenceProviderFolder = Symbol('FolderPreferenceProviderFolder');\nexport interface FolderPreferenceProviderOptions {\n    readonly configUri: URI;\n    readonly sectionName: string | undefined;\n}\n\n@injectable()\nexport class FolderPreferenceProvider extends SectionPreferenceProvider {\n\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(FolderPreferenceProviderFolder) protected readonly folder: FileStat;\n\n    private _folderUri: URI;\n\n    get folderUri(): URI {\n        if (!this._folderUri) {\n            this._folderUri = new URI(this.folder.uri);\n        }\n        return this._folderUri;\n    }\n    protected getScope(): PreferenceScope {\n        if (!this.workspaceService.isMultiRootWorkspaceOpened) {\n            // when FolderPreferenceProvider is used as a delegate of WorkspacePreferenceProvider in a one-folder workspace\n            return PreferenceScope.Workspace;\n        }\n        return PreferenceScope.Folder;\n    }\n\n    getDomain(): string[] {\n        return [this.folderUri.toString()];\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { PreferenceProvider, PreferenceResolveResult } from '@theia/core/lib/browser/preferences/preference-provider';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\nimport { FolderPreferenceProvider, FolderPreferenceProviderFactory } from './folder-preference-provider';\nimport { FileStat } from '@theia/filesystem/lib/common';\n\n@injectable()\nexport class FoldersPreferencesProvider extends PreferenceProvider {\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @inject(FolderPreferenceProviderFactory)\n    protected readonly folderPreferenceProviderFactory: FolderPreferenceProviderFactory;\n\n    @inject(PreferenceConfigurations)\n    protected readonly configurations: PreferenceConfigurations;\n\n    protected readonly providers = new Map<string, FolderPreferenceProvider>();\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        await this.workspaceService.roots;\n\n        this.updateProviders();\n        this.workspaceService.onWorkspaceChanged(() => this.updateProviders());\n\n        const readyPromises: Promise<void>[] = [];\n        for (const provider of this.providers.values()) {\n            readyPromises.push(provider.ready.catch(e => console.error(e)));\n        }\n        Promise.all(readyPromises).then(() => this._ready.resolve());\n    }\n\n    protected updateProviders(): void {\n        const roots = this.workspaceService.tryGetRoots();\n        const toDelete = new Set(this.providers.keys());\n        for (const folder of roots) {\n            for (const configPath of this.configurations.getPaths()) {\n                for (const configName of [...this.configurations.getSectionNames(), this.configurations.getConfigName()]) {\n                    const sectionUri = this.configurations.createUri(new URI(folder.uri), configPath, configName);\n                    const sectionKey = sectionUri.toString();\n                    toDelete.delete(sectionKey);\n                    if (!this.providers.has(sectionKey)) {\n                        const provider = this.createProvider(sectionUri, configName, folder);\n                        this.providers.set(sectionKey, provider);\n                    }\n                }\n            }\n        }\n        for (const key of toDelete) {\n            const provider = this.providers.get(key);\n            if (provider) {\n                this.providers.delete(key);\n                provider.dispose();\n            }\n        }\n    }\n\n    getConfigUri(resourceUri?: string): URI | undefined {\n        for (const provider of this.getFolderProviders(resourceUri)) {\n            const configUri = provider.getConfigUri(resourceUri);\n            if (this.configurations.isConfigUri(configUri)) {\n                return configUri;\n            }\n        }\n        return undefined;\n    }\n\n    getContainingConfigUri(resourceUri?: string): URI | undefined {\n        for (const provider of this.getFolderProviders(resourceUri)) {\n            const configUri = provider.getConfigUri();\n            if (this.configurations.isConfigUri(configUri) && provider.contains(resourceUri)) {\n                return configUri;\n            }\n        }\n        return undefined;\n    }\n\n    getDomain(): string[] {\n        return this.workspaceService.tryGetRoots().map(root => root.uri);\n    }\n\n    resolve<T>(preferenceName: string, resourceUri?: string): PreferenceResolveResult<T> {\n        const result: PreferenceResolveResult<T> = {};\n        const groups = this.groupProvidersByConfigName(resourceUri);\n        for (const group of groups.values()) {\n            for (const provider of group) {\n                const { value, configUri } = provider.resolve<T>(preferenceName, resourceUri);\n                if (configUri && value !== undefined) {\n                    result.configUri = configUri;\n                    result.value = PreferenceProvider.merge(result.value as any, value as any) as any;\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n    getPreferences(resourceUri?: string): { [p: string]: any } {\n        let result = {};\n        const groups = this.groupProvidersByConfigName(resourceUri);\n        for (const group of groups.values()) {\n            for (const provider of group) {\n                if (provider.getConfigUri(resourceUri)) {\n                    const preferences = provider.getPreferences();\n                    result = PreferenceProvider.merge(result, preferences) as any;\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n    async setPreference(preferenceName: string, value: any, resourceUri?: string): Promise<boolean> {\n        const sectionName = preferenceName.split('.', 1)[0];\n        const configName = this.configurations.isSectionName(sectionName) ? sectionName : this.configurations.getConfigName();\n\n        const providers = this.getFolderProviders(resourceUri);\n        let configPath: string | undefined;\n\n        const iterator: (() => FolderPreferenceProvider | undefined)[] = [];\n        for (const provider of providers) {\n            if (configPath === undefined) {\n                const configUri = provider.getConfigUri(resourceUri);\n                if (configUri) {\n                    configPath = this.configurations.getPath(configUri);\n                }\n            }\n            if (this.configurations.getName(provider.getConfigUri()) === configName) {\n                iterator.push(() => {\n                    if (provider.getConfigUri(resourceUri)) {\n                        return provider;\n                    }\n                    iterator.push(() => {\n                        if (this.configurations.getPath(provider.getConfigUri()) === configPath) {\n                            return provider;\n                        }\n                        iterator.push(() => provider);\n                    });\n                });\n            }\n        }\n\n        let next = iterator.shift();\n        while (next) {\n            const provider = next();\n            if (provider) {\n                if (await provider.setPreference(preferenceName, value, resourceUri)) {\n                    return true;\n                }\n            }\n            next = iterator.shift();\n        }\n        return false;\n    }\n\n    protected groupProvidersByConfigName(resourceUri?: string): Map<string, FolderPreferenceProvider[]> {\n        const groups = new Map<string, FolderPreferenceProvider[]>();\n        const providers = this.getFolderProviders(resourceUri);\n        for (const configName of [this.configurations.getConfigName(), ...this.configurations.getSectionNames()]) {\n            const group = [];\n            for (const provider of providers) {\n                if (this.configurations.getName(provider.getConfigUri()) === configName) {\n                    group.push(provider);\n                }\n            }\n            groups.set(configName, group);\n        }\n        return groups;\n    }\n\n    protected getFolderProviders(resourceUri?: string): FolderPreferenceProvider[] {\n        if (!resourceUri) {\n            return [];\n        }\n        const resourcePath = new URI(resourceUri).path;\n        let folder: Readonly<{ relativity: number, uri?: string }> = { relativity: Number.MAX_SAFE_INTEGER };\n        const providers = new Map<string, FolderPreferenceProvider[]>();\n        for (const provider of this.providers.values()) {\n            const uri = provider.folderUri.toString();\n            const folderProviders = (providers.get(uri) || []);\n            folderProviders.push(provider);\n            providers.set(uri, folderProviders);\n\n            // in case we have nested folders mounted as workspace roots, select the innermost enclosing folder\n            const relativity = provider.folderUri.path.relativity(resourcePath);\n            if (relativity >= 0 && folder.relativity > relativity) {\n                folder = { relativity, uri };\n            }\n        }\n        return folder.uri && providers.get(folder.uri) || [];\n    }\n\n    protected createProvider(uri: URI, section: string, folder: FileStat): FolderPreferenceProvider {\n        const provider = this.folderPreferenceProviderFactory(uri, section, folder);\n        this.toDispose.push(provider);\n        this.toDispose.push(provider.onDidPreferencesChanged(change => {\n            this.onDidPreferencesChangedEmitter.fire(change);\n        }\n        ));\n        return provider;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Container, interfaces } from 'inversify';\nimport { PreferenceProvider, PreferenceScope } from '@theia/core/lib/browser/preferences';\nimport { UserPreferenceProvider, UserPreferenceProviderFactory } from './user-preference-provider';\nimport { WorkspacePreferenceProvider } from './workspace-preference-provider';\nimport { WorkspaceFilePreferenceProvider, WorkspaceFilePreferenceProviderFactory, WorkspaceFilePreferenceProviderOptions } from './workspace-file-preference-provider';\nimport { FoldersPreferencesProvider } from './folders-preferences-provider';\nimport { FolderPreferenceProvider, FolderPreferenceProviderFactory, FolderPreferenceProviderFolder } from './folder-preference-provider';\nimport { UserConfigsPreferenceProvider } from './user-configs-preference-provider';\nimport { SectionPreferenceProviderUri, SectionPreferenceProviderSection } from './section-preference-provider';\n\nexport function bindWorkspaceFilePreferenceProvider(bind: interfaces.Bind): void {\n    bind(WorkspaceFilePreferenceProviderFactory).toFactory(ctx => (options: WorkspaceFilePreferenceProviderOptions) => {\n        const child = new Container({ defaultScope: 'Singleton' });\n        child.parent = ctx.container;\n        child.bind(WorkspaceFilePreferenceProvider).toSelf();\n        child.bind(WorkspaceFilePreferenceProviderOptions).toConstantValue(options);\n        return child.get(WorkspaceFilePreferenceProvider);\n    });\n}\n\nexport function bindFactory<F, C>(bind: interfaces.Bind,\n    factoryId: interfaces.ServiceIdentifier<F>,\n    constructor: interfaces.Newable<C>,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ...parameterBindings: interfaces.ServiceIdentifier<any>[]): void {\n    bind(factoryId).toFactory(ctx =>\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (...args: any[]) => {\n            const child = new Container({ defaultScope: 'Singleton' });\n            child.parent = ctx.container;\n            for (let i = 0; i < parameterBindings.length; i++) {\n                child.bind(parameterBindings[i]).toConstantValue(args[i]);\n            }\n            child.bind(constructor).to(constructor);\n            return child.get(constructor);\n        }\n    );\n}\n\nexport function bindPreferenceProviders(bind: interfaces.Bind, unbind: interfaces.Unbind): void {\n    unbind(PreferenceProvider);\n\n    bind(PreferenceProvider).to(UserConfigsPreferenceProvider).inSingletonScope().whenTargetNamed(PreferenceScope.User);\n    bind(PreferenceProvider).to(WorkspacePreferenceProvider).inSingletonScope().whenTargetNamed(PreferenceScope.Workspace);\n    bind(PreferenceProvider).to(FoldersPreferencesProvider).inSingletonScope().whenTargetNamed(PreferenceScope.Folder);\n    bindWorkspaceFilePreferenceProvider(bind);\n    bindFactory(bind, UserPreferenceProviderFactory, UserPreferenceProvider, SectionPreferenceProviderUri, SectionPreferenceProviderSection);\n    bindFactory(bind, FolderPreferenceProviderFactory, FolderPreferenceProvider, SectionPreferenceProviderUri, SectionPreferenceProviderSection, FolderPreferenceProviderFolder);\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport '../../src/browser/style/index.css';\nimport './preferences-monaco-contribution';\nimport { ContainerModule, interfaces } from 'inversify';\nimport { bindViewContribution } from '@theia/core/lib/browser';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { PreferenceTreeGenerator } from './util/preference-tree-generator';\nimport { bindPreferenceProviders } from './preference-bindings';\nimport { bindPreferencesWidgets } from './views/preference-widget-bindings';\nimport { PreferencesEventService } from './util/preference-event-service';\nimport { PreferencesTreeProvider } from './preference-tree-provider';\nimport { PreferencesContribution } from './preferences-contribution';\nimport { PreferenceScopeCommandManager } from './util/preference-scope-command-manager';\nimport { JsonSchemaContribution } from '@theia/core/lib/browser/json-schema-store';\nimport { PreferencesJsonSchemaContribution } from './preferences-json-schema-contribution';\n\nexport function bindPreferences(bind: interfaces.Bind, unbind: interfaces.Unbind): void {\n    bindPreferenceProviders(bind, unbind);\n    bindPreferencesWidgets(bind);\n\n    bind(PreferencesEventService).toSelf().inSingletonScope();\n    bind(PreferencesTreeProvider).toSelf().inSingletonScope();\n    bind(PreferenceTreeGenerator).toSelf().inSingletonScope();\n\n    bindViewContribution(bind, PreferencesContribution);\n\n    bind(PreferenceScopeCommandManager).toSelf().inSingletonScope();\n    bind(TabBarToolbarContribution).toService(PreferencesContribution);\n\n    bind(PreferencesJsonSchemaContribution).toSelf().inSingletonScope();\n    bind(JsonSchemaContribution).toService(PreferencesJsonSchemaContribution);\n}\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    bindPreferences(bind, unbind);\n});\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { AbstractTreeDecoratorService } from '@theia/core/lib/browser/tree/tree-decorator';\nimport { PreferencesDecorator } from './preferences-decorator';\n\n@injectable()\nexport class PreferencesDecoratorService extends AbstractTreeDecoratorService {\n\n    constructor(@inject(PreferencesDecorator) protected readonly preferencesTreeDecorator: PreferencesDecorator) {\n        super([preferencesTreeDecorator]);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { InMemoryResources } from '@theia/core';\nimport { JsonSchemaRegisterContext, JsonSchemaContribution } from '@theia/core/lib/browser/json-schema-store';\nimport { USER_PREFERENCE_URI } from './user-preference-provider';\nimport { PreferenceSchemaProvider } from '@theia/core/lib/browser/preferences/preference-contribution';\n\n@injectable()\nexport class PreferencesJsonSchemaContribution implements JsonSchemaContribution {\n\n    @inject(PreferenceSchemaProvider)\n    protected readonly schemaProvider: PreferenceSchemaProvider;\n\n    @inject(InMemoryResources)\n    protected readonly inmemoryResources: InMemoryResources;\n\n    registerSchemas(context: JsonSchemaRegisterContext): void {\n        const serializeSchema = () => JSON.stringify(this.schemaProvider.getCombinedSchema());\n        const uri = new URI('vscode://schemas/settings/user');\n        this.inmemoryResources.add(uri, serializeSchema());\n        context.registerSchema({\n            fileMatch: ['settings.json', USER_PREFERENCE_URI.toString()],\n            url: uri.toString()\n        });\n        this.schemaProvider.onDidPreferenceSchemaChanged(() =>\n            this.inmemoryResources.update(uri, serializeSchema())\n        );\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nmonaco.languages.register({\n    id: 'jsonc',\n    'aliases': [\n        'JSON with Comments'\n    ],\n    'filenames': [\n        'settings.json'\n    ],\n    'extensions': [\n        '.theia-workspace'\n    ]\n});\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { interfaces } from 'inversify';\nimport { WidgetFactory, createTreeContainer, TreeWidget, TreeProps, defaultTreeProps, TreeDecoratorService } from '@theia/core/lib/browser';\nimport { SinglePreferenceDisplayFactory } from './components/single-preference-display-factory';\nimport { SinglePreferenceWrapper } from './components/single-preference-wrapper';\nimport { PreferencesWidget } from './preference-widget';\nimport { PreferencesTreeWidget } from './preference-tree-widget';\nimport { PreferencesEditorWidget } from './preference-editor-widget';\nimport { PreferencesSearchbarWidget } from './preference-searchbar-widget';\nimport { PreferencesScopeTabBar } from './preference-scope-tabbar-widget';\nimport { PreferencesDecorator } from '../preferences-decorator';\nimport { PreferencesDecoratorService } from '../preferences-decorator-service';\n\nexport function bindPreferencesWidgets(bind: interfaces.Bind): void {\n    bind(PreferencesWidget).toSelf().inSingletonScope();\n    bind(WidgetFactory).toDynamicValue(({ container }) => ({\n        id: PreferencesWidget.ID,\n        createWidget: () => container.get(PreferencesWidget)\n    })).inSingletonScope();\n\n    bind(SinglePreferenceWrapper).toSelf();\n\n    bind(PreferencesTreeWidget).toDynamicValue(ctx =>\n        createPreferencesTree(ctx.container)\n    ).inSingletonScope();\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: PreferencesTreeWidget.ID,\n        createWidget: (): PreferencesTreeWidget => context.container.get(PreferencesTreeWidget),\n    })).inSingletonScope();\n\n    bind(PreferencesEditorWidget).toSelf().inSingletonScope();\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: PreferencesEditorWidget.ID,\n        createWidget: (): PreferencesEditorWidget => context.container.get<PreferencesEditorWidget>(PreferencesEditorWidget),\n    })).inSingletonScope();\n\n    bind(PreferencesSearchbarWidget).toSelf().inSingletonScope();\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: PreferencesSearchbarWidget.ID,\n        createWidget: (): PreferencesSearchbarWidget => context.container.get<PreferencesSearchbarWidget>(PreferencesSearchbarWidget),\n    })).inSingletonScope();\n\n    bind(PreferencesScopeTabBar).toSelf().inSingletonScope();\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: PreferencesScopeTabBar.ID,\n        createWidget: (): PreferencesScopeTabBar => context.container.get<PreferencesScopeTabBar>(PreferencesScopeTabBar),\n    })).inSingletonScope();\n\n    bind(SinglePreferenceDisplayFactory).toSelf().inSingletonScope();\n}\n\nfunction createPreferencesTree(parent: interfaces.Container): PreferencesTreeWidget {\n    const child = createTreeContainer(parent);\n    child.unbind(TreeWidget);\n    child.bind(PreferencesTreeWidget).toSelf();\n    child.rebind(TreeProps).toConstantValue({ ...defaultTreeProps, search: false });\n\n    bindPreferencesDecorator(child);\n\n    return child.get(PreferencesTreeWidget);\n}\n\nfunction bindPreferencesDecorator(parent: interfaces.Container): void {\n    parent.bind(PreferencesDecorator).toSelf().inSingletonScope();\n    parent.bind(PreferencesDecoratorService).toSelf().inSingletonScope();\n    parent.rebind(TreeDecoratorService).toService(PreferencesDecoratorService);\n}\n","\nvar content = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./index.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../../css-loader/index.js!./preference-context-menu.css\"), \"\");\nexports.i(require(\"-!../../../../../css-loader/index.js!./preference-array.css\"), \"\");\nexports.i(require(\"-!../../../../../css-loader/index.js!./preference-object.css\"), \"\");\nexports.i(require(\"-!../../../../../css-loader/index.js!./search-input.css\"), \"\");\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2019 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n#preferences_container_widget .p-SplitPanel-handle {\\n    border-right: var(--theia-border-width) solid var(--theia-editorGroup-border);\\n}\\n\\n#preferences_container_widget .p-TabBar-tabIcon {\\n    align-items: center;\\n    display: flex;\\n    line-height: var(--theia-content-line-height) !important;\\n}\\n\\n/* UI View */\\n\\n.theia-settings-container {\\n    max-width: 1000px;\\n    padding-top: 11px;\\n    display: grid;\\n    grid-template-areas:\\n        \\\"header header\\\"\\n        \\\"tabbar tabbar\\\"\\n        \\\"navbar editor\\\";\\n    grid-template-columns: minmax(150px, 280px) 1fr;\\n    grid-template-rows: 45px 45px 1fr;\\n}\\n\\n.theia-settings-container .settings-no-results-announcement {\\n    font-weight: bold;\\n    font-size: var(--theia-ui-font-size3);\\n    padding-left: var(--theia-ui-padding);\\n    margin: calc(2*var(--theia-ui-padding)) 0px;\\n}\\n\\n.theia-settings-container .preferences-searchbar-widget {\\n    grid-area: header;\\n    margin: 3px 24px 0px 24px;\\n}\\n\\n.theia-settings-container .preferences-tabbar-widget {\\n    grid-area: tabbar;\\n    margin: 3px 24px 0px 24px;\\n}\\n\\n.theia-settings-container .preferences-tabbar-widget.with-shadow {\\n    box-shadow: 0px 6px 5px -5px var(--theia-widget-shadow);\\n}\\n\\n.theia-settings-container .preferences-tabbar-widget .preferences-scope-tab .p-TabBar-tabIcon:not(.preferences-folder-dropdown-icon) {\\n    display: none;\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab {\\n    background: var(--theia-editor-background);\\n    border-right: unset;\\n    border-bottom: var(--theia-border-width) solid var(--theia-tab-unfocusedInactiveForeground);\\n}\\n\\n#theia-main-content-panel .theia-settings-container .tabbar-underline {\\n    width: 100%;\\n    position:absolute;\\n    top: calc(var(--theia-private-horizontal-tab-height) + var(--theia-private-horizontal-tab-scrollbar-rail-height) / 2 - 1px);\\n    border-top: 1px solid var(--theia-tab-unfocusedInactiveForeground);\\n    z-index: -1;\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.p-mod-current {\\n    color: var(--theia-panelTitle-activeForeground);\\n    border-bottom: var(--theia-border-width) solid var(--theia-panelTitle-activeBorder);\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.p-mod-current:not(.theia-mod-active) {\\n    border-top: unset;\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.preferences-folder-tab .p-TabBar-tabLabel::after {\\n    content: 'Folder';\\n    padding-left: 4px;\\n    font-size: 0.8em;\\n    color: var(--theia-tab-inactiveForeground);\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.preferences-folder-dropdown {\\n    position: relative;\\n    padding-right: 23px;\\n}\\n\\n.preferences-folder-dropdown-icon {\\n    background: var(--theia-icon-chevron-right) center center no-repeat;\\n    transform: rotate(90deg);\\n    width: 15px;\\n    height: 15px;\\n    position: absolute;\\n    right: var(--theia-ui-padding);\\n}\\n\\n.theia-settings-container .preferences-editor-widget {\\n    grid-area: editor;\\n    padding: 0 24px;\\n}\\n\\n.theia-settings-container .preferences-editor-widget.full-pane {\\n    grid-column-start: 1;\\n    grid-column-end: 3;\\n}\\n\\n.theia-settings-container .preferences-tree-widget {\\n    grid-area: navbar;\\n    padding-left: 31px;\\n}\\n\\n.theia-settings-container .preferences-tree-widget .theia-mod-selected {\\n    font-weight: bold;\\n}\\n\\n.theia-settings-container .preferences-tree-widget .theia-TreeNodeSegment {\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    max-width: 90%;\\n}\\n\\n.theia-settings-container .settings-main {\\n    height: 100%;\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.theia-settings-container .settings-main-scroll-container {\\n    position: relative;\\n    width: 100%;\\n    flex: 1 1 auto;\\n}\\n\\n.theia-settings-container .settings-main-sticky-misc {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    flex: 0 1 50px;\\n}\\n\\n.theia-settings-container .settings-main-sticky-misc .json-button>i {\\n    display: inline-block;\\n    background: var(--theia-icon-open-json) no-repeat;\\n    background-position-y: 1px;\\n    -webkit-filter: invert(1);\\n    filter: invert(1);\\n    height: var(--theia-icon-size);\\n    width: var(--theia-icon-size);\\n}\\n\\n.theia-settings-container .settings-scope>label {\\n    margin-right: 12px;\\n}\\n\\n.theia-settings-container .settings-section {\\n    padding-left: 0;\\n    padding-top: var(--theia-ui-padding);\\n    margin-top: calc(var(--theia-ui-padding) * -1);\\n}\\n\\n.theia-settings-container .settings-section a {\\n    border: none;\\n    color: var(--theia-foreground);\\n    font-weight: 500;\\n    outline: 0;\\n    text-decoration: none;\\n}\\n\\n.theia-settings-container .settings-section a:hover {\\n    text-decoration: underline;\\n}\\n\\n\\n\\n.theia-settings-container .settings-section-title {\\n    font-weight: bold;\\n    font-size: var(--theia-ui-font-size3);\\n    padding-left: calc(2 * var(--theia-ui-padding));\\n}\\n\\n.theia-settings-container .settings-section>li {\\n    list-style-type: none;\\n    margin: var(--theia-ui-padding) 0px;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-pack: justify;\\n    -ms-flex-pack: justify;\\n    justify-content: space-between;\\n    -webkit-box-align: start;\\n    -ms-flex-align: start;\\n    align-items: start;\\n}\\n\\n.theia-settings-container li.single-pref {\\n    list-style-type: none;\\n    margin: 12px 0 18px 0;\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    box-sizing: border-box;\\n    padding-left: calc(2 * var(--theia-ui-padding));\\n    position: relative;\\n}\\n\\n.theia-settings-container li.single-pref .pref-context-gutter {\\n    position: absolute;\\n    height: 100%;\\n    left: -16px;\\n    padding-right: 4px;\\n    border-right: 2px hidden;\\n}\\n\\n.theia-settings-container li.single-pref .pref-context-gutter .settings-context-menu-btn {\\n    opacity: 0;\\n    transition: opacity .5s;\\n}\\n\\n.theia-settings-container li.single-pref .pref-context-gutter .settings-context-menu-btn.show-cog {\\n    opacity: 1;\\n}\\n\\n.theia-settings-container li.single-pref .pref-context-gutter.theia-mod-item-modified {\\n    border-right: 2px solid var(--theia-settings-modifiedItemIndicator);\\n}\\n\\n.theia-settings-container li.single-pref input[type=\\\"text\\\"] {\\n    -webkit-box-sizing: border-box;\\n    box-sizing: border-box;\\n}\\n\\n.theia-settings-container .settings-main {\\n    margin: 0;\\n}\\n\\n.theia-settings-container .settings-main-sticky {\\n    top: 0;\\n    padding-top: calc(var(--theia-ui-padding));\\n    margin-top: calc(var(--theia-ui-padding) * -1);\\n    background-color: var(--theia-editor-background);\\n    -webkit-box-sizing: border-box;\\n    box-sizing: border-box;\\n    z-index: 1000;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-around;\\n}\\n\\n.theia-settings-container .pref-name {\\n    padding: 0;\\n    font-weight: bold;\\n}\\n\\n.preferences-tree-spacer {\\n    padding-left: calc(var(--theia-ui-padding)/2);\\n    padding-right: calc(var(--theia-ui-padding)/2);\\n    min-width: var(--theia-icon-size);\\n    min-height: var(--theia-icon-size);\\n}\\n\\n.theia-settings-container .pref-description {\\n    padding: var(--theia-ui-padding) 0;\\n    color: var(--theia-descriptionForeground);\\n    line-height: 18px;\\n}\\n\\n.theia-settings-container .theia-select:focus {\\n    outline-width: 1px;\\n    outline-style: solid;\\n    outline-offset: -1px;\\n    opacity: 1 !important;\\n    outline-color: var(--theia-focusBorder);\\n}\\n\\n.theia-settings-container .theia-input[type=\\\"text\\\"] {\\n    border: 1px solid var(--theia-dropdown-border);\\n}\\n\\n.theia-settings-container .theia-input[type=\\\"checkbox\\\"]:focus {\\n    outline-width: 2px;\\n}\\n\\n.theia-settings-container .pref-content-container a.theia-json-input {\\n    text-decoration: underline;\\n}\\n\\n.theia-settings-container .pref-content-container a.theia-json-input:hover {\\n    text-decoration: none;\\n    cursor: pointer;\\n}\\n\\n.theia-settings-container .pref-content-container {\\n    width: 100%;\\n}\\n\\n.theia-settings-container .pref-content-container .pref-input {\\n    padding: var(--theia-ui-padding) 0;\\n    width: 100%;\\n    max-width: 320px;\\n}\\n\\n.theia-settings-container .pref-content-container .pref-input>select,\\n.theia-settings-container .pref-content-container .pref-input>input {\\n    width: 100%;\\n}\\n\\n\\n/* These specifications for the boolean class ensure that the\\n    checkbox is rendered to the left of the description.\\n*/\\n.theia-settings-container .pref-content-container.boolean {\\n    display: grid;\\n    grid-template-columns: 30px 1fr;\\n}\\n\\n.theia-settings-container .pref-content-container.boolean .pref-description {\\n    grid-column-start: 2;\\n    grid-row-start: 1;\\n}\\n\\n.theia-settings-container .pref-content-container.boolean .pref-input {\\n    grid-column-start: 1;\\n    grid-row-start: 1;\\n    margin: 0;\\n}\\n\\n.theia-settings-container .settings-section>li:last-child {\\n    margin-bottom: 20px;\\n}\\n\\n.theia-settings-container .settings-scope-underlined {\\n    text-decoration: underline;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .preference-array {\\n  list-style: none;\\n  padding   : 0;\\n}\\n\\n.theia-settings-container .preference-array-element {\\n  display          : -webkit-box;\\n  display          : -ms-flexbox;\\n  display          : flex;\\n  -webkit-box-pack : justify;\\n  -ms-flex-pack    : justify;\\n  justify-content  : space-between;\\n  -webkit-box-align: center;\\n  -ms-flex-align   : center;\\n  align-items      : center;\\n  padding          : calc(var(--thiea-ui-padding) / 2) var(--thiea-ui-padding);\\n  border-bottom    : var(--theia-panel-border) 2px solid;\\n}\\n\\n.theia-settings-container .pref-input li:nth-last-child(2) {\\n  border-bottom: none;\\n}\\n\\n.theia-settings-container .pref-input li:last-child {\\n  display          : -webkit-box;\\n  display          : -ms-flexbox;\\n  display          : flex;\\n  -webkit-box-align: center;\\n  -ms-flex-align   : center;\\n  align-items      : center;\\n}\\n\\n.theia-settings-container .preference-array-element:hover {\\n  background-color: rgba(50%, 50%, 50%, 0.1);\\n}\\n\\n.theia-settings-container .preference-array-element-btn {\\n  width            : 1.5em;\\n  height           : 1.5em;\\n  display          : -webkit-box;\\n  display          : -ms-flexbox;\\n  display          : flex;\\n  -webkit-box-pack : center;\\n  -ms-flex-pack    : center;\\n  justify-content  : center;\\n  -webkit-box-align: center;\\n  -ms-flex-align   : center;\\n  align-items      : center;\\n}\\n\\n.theia-settings-container .preference-array-element .preference-array-element-btn {\\n  opacity: 0;\\n}\\n\\n.theia-settings-container .preference-array-element:hover .preference-array-element-btn {\\n  opacity: 1;\\n}\\n\\n.theia-settings-container .preference-array-element-btn:hover {\\n  background-color: rgba(50%, 50%, 50%, 0.1);\\n  cursor          : pointer;\\n}\\n\\n.theia-settings-container .preference-array .add-btn {\\n  margin-left : calc((var(--theia-icon-size) + 4px) * -1);\\n  margin-right: 4px;\\n  width       : var(--theia-icon-size);\\n  height      : var(--theia-icon-size);\\n}\\n\\n.theia-settings-container .preference-array-clear-item {\\n  background: var(--theia-icon-close) no-repeat;\\n  width     : var(--theia-icon-size);\\n  height    : var(--theia-icon-size);\\n}\\n\\n.theia-settings-container .preference-array-input {\\n  padding-right: calc(var(--theia-icon-size) + var(--thiea-ui-padding));\\n  width        : 100%;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .settings-context-menu-container {\\n  position: relative;\\n  padding-left: var(--theia-ui-padding);\\n}\\n\\n.theia-settings-container .settings-context-menu-btn {\\n  cursor: pointer;\\n}\\n\\n.theia-settings-container .settings-context-menu {\\n  position: absolute;\\n  width: var(--theia-settingsSidebar-width);\\n  list-style: none;\\n  padding: var(--theia-ui-padding);\\n  bottom: calc(100% + 10px);\\n  left: -10px;\\n  z-index: 9999;\\n  background-color: var(--theia-menu-background);\\n}\\n\\n.theia-settings-container .settings-context-menu:before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  left: 10px;\\n  bottom: -10px;\\n  width: 0;\\n  height: 0;\\n  border-left: 10px solid transparent;\\n  border-right: 10px solid transparent;\\n  border-top: 10px solid var(--theia-menu-background);\\n}\\n\\n.theia-settings-container .settings-context-menu li {\\n  padding: var(--theia-ui-padding);\\n}\\n\\n.theia-settings-container .settings-context-menu li:hover {\\n  background-color: var(--theia-menu-selectionBackground);\\n}\\n\\n.theia-settings-container .settings-context-menu i {\\n  padding-right: var(--theia-ui-padding);\\n  width: var(--theia-icon-size);\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  -webkit-box-pack: center;\\n  -ms-flex-pack: center;\\n  justify-content: center;\\n}\\n\\n.theia-settings-container .pref-context-menu-btn {\\n  margin-left: 5px;\\n}\\n\\n.theia-settings-container .pref-context-menu-btn:hover {\\n  background-color: rgba(50%, 50%, 50%, 0.1);\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .object-preference-input-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n  -ms-flex-pack: justify;\\n  justify-content: space-between;\\n  -ms-flex-wrap: wrap;\\n  flex-wrap: wrap;\\n}\\n\\n.theia-settings-container .object-preference-input {\\n  width: 100%;\\n  max-height: 250px;\\n  resize: none;\\n  color: var(--theia-settings-textInputForeground);\\n  background-color: var(--theia-settings-textInputBackground);\\n  border-color: var(--theia-panel-border);\\n  font-size: var(--theia-code-font-size);\\n  margin-bottom: 10px;\\n}\\n\\n.theia-settings-container .object-preference-input-btn-toggle {\\n  padding: 0 calc(var(--theia-ui-padding) / 2);\\n}\\n\\n.theia-settings-container .object-preference-input-btn-toggle-icon {\\n  display: inline-block;\\n  background: var(--theia-icon-open-json) no-repeat;\\n  background-position-y: 1px;\\n  height: var(--theia-icon-size);\\n  width: var(--theia-icon-size);\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .settings-search-container {\\n  width: 100%;\\n  position: relative;\\n}\\n\\n.theia-settings-container .settings-search-container .settings-search-input {\\n  width: 100%;\\n  text-indent: 8px;\\n  padding: calc(var(--theia-ui-padding) / 2) 0;\\n  box-sizing: border-box;\\n  border: 1px solid var(--theia-dropdown-border);\\n}\\n\\n.theia-settings-container .settings-search-container .settings-search-icon {\\n  position: absolute;\\n  height: 100%;\\n  left: 8px;\\n  font-size: var(--theia-ui-font-size0);\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: center;\\n  -ms-flex-pack: center;\\n  justify-content: center;\\n  -webkit-box-align: center;\\n  -ms-flex-align: center;\\n  align-items: center;\\n}\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}