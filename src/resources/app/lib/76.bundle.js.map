{"version":3,"sources":["webpack:///./node_modules/arduino-ide-extension/src/browser/menu/arduino-menus.ts","webpack:///./node_modules/arduino-ide-extension/src/common/main-menu-manager.ts","webpack:///./node_modules/arduino-ide-extension/src/electron-browser/theia/core/electron-main-menu-factory.ts","webpack:///./node_modules/arduino-ide-extension/src/electron-browser/theia/core/electron-menu-contribution.ts","webpack:///./node_modules/arduino-ide-extension/src/electron-browser/theia/core/electron-menu-module.ts"],"names":[],"mappings":"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","file":"76.bundle.js","sourcesContent":["import { MAIN_MENU_BAR } from '@theia/core/lib/common/menu';\r\nimport { CommonMenus } from '@theia/core/lib/browser/common-frontend-contribution';\r\nimport { isOSX } from '@theia/core';\r\n\r\nexport namespace ArduinoMenus {\r\n\r\n    // Main menu\r\n    // -- File\r\n    export const FILE__SKETCH_GROUP = [...CommonMenus.FILE, '0_sketch'];\r\n    export const FILE__PRINT_GROUP = [...CommonMenus.FILE, '1_print'];\r\n    // XXX: on macOS, the settings group is not under `File`\r\n    export const FILE__SETTINGS_GROUP = [...(isOSX ? MAIN_MENU_BAR : CommonMenus.FILE), '2_settings'];\r\n    export const FILE__QUIT_GROUP = [...CommonMenus.FILE, '3_quit'];\r\n\r\n    // -- Edit\r\n    // `Copy`, `Copy to Forum`, `Paste`, etc.\r\n    // Note: `1_undo` is the first group from Theia, we start with `2`\r\n    export const EDIT__TEXT_CONTROL_GROUP = [...CommonMenus.EDIT, '2_text_control'];\r\n    // `Comment/Uncomment`, etc.\r\n    export const EDIT__CODE_CONTROL_GROUP = [...CommonMenus.EDIT, '3_code_control'];\r\n    export const EDIT__FONT_CONTROL_GROUP = [...CommonMenus.EDIT, '4_font_control'];\r\n    export const EDIT__FIND_GROUP = [...CommonMenus.EDIT, '5_find'];\r\n\r\n    // -- Sketch\r\n    export const SKETCH = [...MAIN_MENU_BAR, '3_sketch'];\r\n    export const SKETCH__MAIN_GROUP = [...SKETCH, '0_main'];\r\n    export const SKETCH__UTILS_GROUP = [...SKETCH, '1_utils'];\r\n\r\n    // -- Tools\r\n    export const TOOLS = [...MAIN_MENU_BAR, '4_tools'];\r\n    // `Auto Format`, `Library Manager...`, `Boards Manager...`\r\n    export const TOOLS__MAIN_GROUP = [...TOOLS, '0_main'];\r\n    // Core settings, such as `Processor` and `Programmers` for the board.\r\n    export const TOOLS__BOARD_SETTINGS_GROUP = [...TOOLS, '1_board_settings'];\r\n\r\n    // Context menu\r\n    // -- Open\r\n    export const OPEN_SKETCH__CONTEXT = ['arduino-open-sketch--context'];\r\n    export const OPEN_SKETCH__CONTEXT__OPEN_GROUP = [...OPEN_SKETCH__CONTEXT, '0_open'];\r\n    export const OPEN_SKETCH__CONTEXT__RECENT_GROUP = [...OPEN_SKETCH__CONTEXT, '1_recent'];\r\n    export const OPEN_SKETCH__CONTEXT__EXAMPLES_GROUP = [...OPEN_SKETCH__CONTEXT, '2_examples'];\r\n\r\n    // -- Sketch control\r\n    export const SKETCH_CONTROL__CONTEXT = ['arduino-sketch-control--context'];\r\n    // `New Tab`, `Rename`, `Delete`\r\n    export const SKETCH_CONTROL__CONTEXT__MAIN_GROUP = [...SKETCH_CONTROL__CONTEXT, '0_main'];\r\n    // `Previous Tab`, `Next Tab`\r\n    export const SKETCH_CONTROL__CONTEXT__NAVIGATION_GROUP = [...SKETCH_CONTROL__CONTEXT, '1_navigation'];\r\n    // Sketch files opened in editors\r\n    export const SKETCH_CONTROL__CONTEXT__RESOURCES_GROUP = [...SKETCH_CONTROL__CONTEXT, '2_resources'];\r\n\r\n}\r\n","export const MainMenuManager = Symbol('MainMenuManager');\r\nexport interface MainMenuManager {\r\n    /**\r\n     * Call this method if you have changed the content of the main menu (updated a toggle flag, removed/added new groups or menu items)\r\n     * and you want to re-render it from scratch. Works for electron too.\r\n     */\r\n    update(): void;\r\n}\r\n","import { injectable } from 'inversify'\r\nimport { remote } from 'electron';\r\nimport { Keybinding } from '@theia/core/lib/common/keybinding';\r\nimport { ElectronMainMenuFactory as TheiaElectronMainMenuFactory } from '@theia/core/lib/electron-browser/menu/electron-main-menu-factory';\r\nimport { ArduinoMenus } from '../../../browser/menu/arduino-menus';\r\n\r\n@injectable()\r\nexport class ElectronMainMenuFactory extends TheiaElectronMainMenuFactory {\r\n\r\n    protected acceleratorFor(keybinding: Keybinding): string {\r\n        // TODO: https://github.com/eclipse-theia/theia/issues/8207\r\n        return this.keybindingRegistry.resolveKeybinding(keybinding)\r\n            .map(binding => this.keybindingRegistry.acceleratorForKeyCode(binding, '+'))\r\n            .join('')\r\n            .replace('←', 'Left')\r\n            .replace('→', 'Right');\r\n    }\r\n\r\n    protected createOSXMenu(): Electron.MenuItemConstructorOptions {\r\n        const { submenu } = super.createOSXMenu();\r\n        const label = 'Arduino Pro IDE';\r\n        if (!!submenu && !(submenu instanceof remote.Menu)) {\r\n            const [about, , ...rest] = submenu;\r\n            const menuModel = this.menuProvider.getMenu(ArduinoMenus.FILE__SETTINGS_GROUP);\r\n            const settings = this.fillMenuTemplate([], menuModel);\r\n            return {\r\n                label,\r\n                submenu: [\r\n                    about, // TODO: we have two about dialogs! one from electron the other from Theia.\r\n                    { type: 'separator' },\r\n                    ...settings,\r\n                    { type: 'separator' },\r\n                    ...rest\r\n                ]\r\n            };\r\n        }\r\n        return { label, submenu };\r\n    }\r\n\r\n}\r\n","import { injectable } from 'inversify';\r\nimport { CommandRegistry } from '@theia/core/lib/common/command';\r\nimport { MenuModelRegistry } from '@theia/core/lib/common/menu';\r\nimport { KeybindingRegistry } from '@theia/core/lib/browser/keybinding';\r\nimport { ElectronMenuContribution as TheiaElectronMenuContribution, ElectronCommands } from '@theia/core/lib/electron-browser/menu/electron-menu-contribution';\r\nimport { MainMenuManager } from '../../../common/main-menu-manager';\r\n\r\n@injectable()\r\nexport class ElectronMenuContribution extends TheiaElectronMenuContribution implements MainMenuManager {\r\n\r\n    protected hideTopPanel(): void {\r\n        // NOOP\r\n        // We reuse the `div` for the Arduino toolbar.\r\n    }\r\n\r\n    update(): void {\r\n        (this as any).setMenu();\r\n    }\r\n\r\n    registerCommands(registry: CommandRegistry): void {\r\n        super.registerCommands(registry);\r\n        registry.unregisterCommand(ElectronCommands.CLOSE_WINDOW);\r\n    }\r\n\r\n    registerMenus(registry: MenuModelRegistry): void {\r\n        super.registerMenus(registry);\r\n        registry.unregisterMenuAction(ElectronCommands.CLOSE_WINDOW);\r\n    }\r\n\r\n    registerKeybindings(registry: KeybindingRegistry): void {\r\n        super.registerKeybindings(registry);\r\n        registry.unregisterKeybinding(ElectronCommands.CLOSE_WINDOW.id);\r\n        registry.unregisterKeybinding(ElectronCommands.ZOOM_IN.id);\r\n        registry.unregisterKeybinding(ElectronCommands.ZOOM_OUT.id);\r\n    }\r\n\r\n}\r\n","import { ContainerModule } from 'inversify';\r\nimport { ElectronMenuContribution as TheiaElectronMenuContribution } from '@theia/core/lib/electron-browser/menu/electron-menu-contribution'\r\nimport { ElectronMenuContribution } from './electron-menu-contribution';\r\nimport { MainMenuManager } from '../../../common/main-menu-manager';\r\nimport { ElectronMainMenuFactory as TheiaElectronMainMenuFactory } from '@theia/core/lib/electron-browser/menu/electron-main-menu-factory';\r\nimport { ElectronMainMenuFactory } from './electron-main-menu-factory';\r\n\r\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\r\n    bind(ElectronMenuContribution).toSelf().inSingletonScope();\r\n    bind(MainMenuManager).toService(ElectronMenuContribution);\r\n    rebind(TheiaElectronMenuContribution).to(ElectronMenuContribution);\r\n    bind(ElectronMainMenuFactory).toSelf().inRequestScope();\r\n    rebind(TheiaElectronMainMenuFactory).toService(ElectronMainMenuFactory);\r\n});\r\n"],"sourceRoot":""}