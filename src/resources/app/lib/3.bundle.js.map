{"version":3,"sources":["webpack:///./node_modules/@theia/filesystem/src/browser/file-dialog/file-dialog-container.ts","webpack:///./node_modules/@theia/filesystem/src/browser/file-dialog/file-dialog-model.ts","webpack:///./node_modules/@theia/filesystem/src/browser/file-dialog/file-dialog-service.ts","webpack:///./node_modules/@theia/filesystem/src/browser/file-dialog/file-dialog-tree-filters-renderer.tsx","webpack:///./node_modules/@theia/filesystem/src/browser/file-dialog/file-dialog-tree.ts","webpack:///./node_modules/@theia/filesystem/src/browser/file-dialog/file-dialog-widget.ts","webpack:///./node_modules/@theia/filesystem/src/browser/file-dialog/file-dialog.ts","webpack:///./node_modules/@theia/filesystem/src/browser/file-dialog/index.ts","webpack:///./node_modules/@theia/filesystem/src/browser/file-tree/file-tree-container.ts","webpack:///./node_modules/@theia/filesystem/src/browser/file-tree/file-tree-model.ts","webpack:///./node_modules/@theia/filesystem/src/browser/file-tree/file-tree-widget.tsx","webpack:///./node_modules/@theia/filesystem/src/browser/file-tree/index.ts","webpack:///./node_modules/@theia/filesystem/src/browser/location/index.ts","webpack:///./node_modules/@theia/filesystem/src/browser/location/location-renderer.tsx","webpack:///./node_modules/@theia/filesystem/src/browser/location/location-service.ts"],"names":[],"mappings":"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","file":"3.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces, Container } from 'inversify';\nimport { Tree, TreeModel, TreeProps, defaultTreeProps } from '@theia/core/lib/browser';\nimport { createFileTreeContainer, FileTreeModel, FileTreeWidget } from '../file-tree';\nimport { OpenFileDialog, OpenFileDialogProps, SaveFileDialog, SaveFileDialogProps } from './file-dialog';\nimport { FileDialogModel } from './file-dialog-model';\nimport { FileDialogWidget } from './file-dialog-widget';\nimport { FileDialogTree } from './file-dialog-tree';\n\nexport function createFileDialogContainer(parent: interfaces.Container): Container {\n    const child = createFileTreeContainer(parent);\n\n    child.unbind(FileTreeModel);\n    child.bind(FileDialogModel).toSelf();\n    child.rebind(TreeModel).toService(FileDialogModel);\n\n    child.unbind(FileTreeWidget);\n    child.bind(FileDialogWidget).toSelf();\n\n    child.bind(FileDialogTree).toSelf();\n    child.rebind(Tree).toService(FileDialogTree);\n\n    return child;\n}\n\nexport function createOpenFileDialogContainer(parent: interfaces.Container, props: OpenFileDialogProps): Container {\n    const container = createFileDialogContainer(parent);\n    container.rebind(TreeProps).toConstantValue({\n        ...defaultTreeProps,\n        multiSelect: props.canSelectMany,\n        search: true\n    });\n\n    container.bind(OpenFileDialogProps).toConstantValue(props);\n    container.bind(OpenFileDialog).toSelf();\n\n    return container;\n}\n\nexport function createSaveFileDialogContainer(parent: interfaces.Container, props: SaveFileDialogProps): Container {\n    const container = createFileDialogContainer(parent);\n    container.rebind(TreeProps).toConstantValue({\n        ...defaultTreeProps,\n        multiSelect: false,\n        search: true\n    });\n\n    container.bind(SaveFileDialogProps).toConstantValue(props);\n    container.bind(SaveFileDialog).toSelf();\n\n    return container;\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Emitter, Event } from '@theia/core/lib/common';\nimport { TreeNode, SelectableTreeNode } from '@theia/core/lib/browser';\nimport { DirNode, FileNode, FileTreeModel, FileStatNode } from '../file-tree';\nimport { FileDialogTree } from './file-dialog-tree';\n\n@injectable()\nexport class FileDialogModel extends FileTreeModel {\n\n    @inject(FileDialogTree) readonly tree: FileDialogTree;\n    protected readonly onDidOpenFileEmitter = new Emitter<void>();\n    protected _initialLocation: URI | undefined;\n    private _disableFileSelection: boolean = false;\n\n    @postConstruct()\n    protected init(): void {\n        super.init();\n        this.toDispose.push(this.onDidOpenFileEmitter);\n    }\n\n    /**\n     * Returns the first valid location that was set by calling the `navigateTo` method. Once the initial location has a defined value, it will not change.\n     * Can be `undefined`.\n     */\n    get initialLocation(): URI | undefined {\n        return this._initialLocation;\n    }\n\n    set disableFileSelection(isSelectable: boolean) {\n        this._disableFileSelection = isSelectable;\n    }\n\n    async navigateTo(nodeOrId: TreeNode | string | undefined): Promise<TreeNode | undefined> {\n        const result = await super.navigateTo(nodeOrId);\n        if (!this._initialLocation && FileStatNode.is(result)) {\n            this._initialLocation = result.uri;\n        }\n        return result;\n    }\n\n    get onDidOpenFile(): Event<void> {\n        return this.onDidOpenFileEmitter.event;\n    }\n\n    protected doOpenNode(node: TreeNode): void {\n        if (FileNode.is(node)) {\n            this.onDidOpenFileEmitter.fire(undefined);\n        } else if (DirNode.is(node)) {\n            this.navigateTo(node);\n        } else {\n            super.doOpenNode(node);\n        }\n    }\n\n    getNextSelectableNode(node: SelectableTreeNode = this.selectedNodes[0]): SelectableTreeNode | undefined {\n        let nextNode: SelectableTreeNode | undefined = node;\n        do {\n            nextNode = super.getNextSelectableNode(nextNode);\n        } while (FileStatNode.is(nextNode) && !this.isFileStatNodeSelectable(nextNode));\n        return nextNode;\n    }\n\n    getPrevSelectableNode(node: SelectableTreeNode = this.selectedNodes[0]): SelectableTreeNode | undefined {\n        let prevNode: SelectableTreeNode | undefined = node;\n        do {\n            prevNode = super.getPrevSelectableNode(prevNode);\n        } while (FileStatNode.is(prevNode) && !this.isFileStatNodeSelectable(prevNode));\n        return prevNode;\n    }\n\n    private isFileStatNodeSelectable(node: FileStatNode): boolean {\n        return !(!node.fileStat.isDirectory && this._disableFileSelection);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { MaybeArray } from '@theia/core/lib/common';\nimport { LabelProvider } from '@theia/core/lib/browser';\nimport { FileSystem, FileStat } from '../../common';\nimport { DirNode } from '../file-tree';\nimport { OpenFileDialogFactory, OpenFileDialogProps, SaveFileDialogFactory, SaveFileDialogProps } from './file-dialog';\n\nexport const FileDialogService = Symbol('FileDialogService');\nexport interface FileDialogService {\n\n    showOpenDialog(props: OpenFileDialogProps & { canSelectMany: true }, folder?: FileStat): Promise<MaybeArray<URI> | undefined>;\n    showOpenDialog(props: OpenFileDialogProps, folder?: FileStat): Promise<URI | undefined>;\n    showOpenDialog(props: OpenFileDialogProps, folder?: FileStat): Promise<MaybeArray<URI> | undefined>;\n\n    showSaveDialog(props: SaveFileDialogProps, folder?: FileStat): Promise<URI | undefined>\n\n}\n\n@injectable()\nexport class DefaultFileDialogService {\n\n    @inject(FileSystem) protected readonly fileSystem: FileSystem;\n    @inject(OpenFileDialogFactory) protected readonly openFileDialogFactory: OpenFileDialogFactory;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(SaveFileDialogFactory) protected readonly saveFileDialogFactory: SaveFileDialogFactory;\n\n    async showOpenDialog(props: OpenFileDialogProps & { canSelectMany: true }, folder?: FileStat): Promise<MaybeArray<URI> | undefined>;\n    async showOpenDialog(props: OpenFileDialogProps, folder?: FileStat): Promise<URI | undefined>;\n    async showOpenDialog(props: OpenFileDialogProps, folder?: FileStat): Promise<MaybeArray<URI> | undefined> {\n        const title = props.title || 'Open';\n        const rootNode = await this.getRootNode(folder);\n        if (rootNode) {\n            const dialog = this.openFileDialogFactory(Object.assign(props, { title }));\n            await dialog.model.navigateTo(rootNode);\n            const value = await dialog.open();\n            if (value) {\n                if (!Array.isArray(value)) {\n                    return value.uri;\n                }\n                return value.map(node => node.uri);\n            }\n        }\n        return undefined;\n    }\n\n    async showSaveDialog(props: SaveFileDialogProps, folder?: FileStat): Promise<URI | undefined> {\n        const title = props.title || 'Save';\n        const rootNode = await this.getRootNode(folder);\n        if (rootNode) {\n            const dialog = this.saveFileDialogFactory(Object.assign(props, { title }));\n            await dialog.model.navigateTo(rootNode);\n            return dialog.open();\n        }\n        return undefined;\n    }\n\n    protected async getRootNode(folderToOpen?: FileStat): Promise<DirNode | undefined> {\n        const folder = folderToOpen || await this.fileSystem.getCurrentUserHome();\n        if (folder) {\n            const folderUri = new URI(folder.uri);\n            const rootUri = folder.isDirectory ? folderUri : folderUri.parent;\n            const rootStat = await this.fileSystem.getFileStat(rootUri.toString());\n            if (rootStat) {\n                return DirNode.createRoot(rootStat);\n            }\n        }\n        return undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ReactRenderer } from '@theia/core/lib/browser/widgets/react-renderer';\nimport { FileDialogTree } from './file-dialog-tree';\nimport * as React from 'react';\n\nexport const FILE_TREE_FILTERS_LIST_CLASS = 'theia-FileTreeFiltersList';\n\n/**\n * A set of file filters that are used by the dialog. Each entry is a human readable label,\n * like \"TypeScript\", and an array of extensions, e.g.\n * ```ts\n * {\n * \t'Images': ['png', 'jpg']\n * \t'TypeScript': ['ts', 'tsx']\n * }\n * ```\n */\nexport class FileDialogTreeFilters {\n    [name: string]: string[];\n}\n\nexport class FileDialogTreeFiltersRenderer extends ReactRenderer {\n\n    readonly appliedFilters: FileDialogTreeFilters;\n\n    constructor(\n        readonly suppliedFilters: FileDialogTreeFilters,\n        readonly fileDialogTree: FileDialogTree\n    ) {\n        super();\n        this.appliedFilters = { 'All Files': [], ...suppliedFilters, };\n    }\n\n    protected readonly handleFilterChanged = (e: React.ChangeEvent<HTMLSelectElement>) => this.onFilterChanged(e);\n\n    protected doRender(): React.ReactNode {\n        if (!this.appliedFilters) {\n            return undefined;\n        }\n\n        const options = Object.keys(this.appliedFilters).map(value => this.renderLocation(value));\n        return <select className={'theia-select ' + FILE_TREE_FILTERS_LIST_CLASS} onChange={this.handleFilterChanged}>{...options}</select>;\n    }\n\n    protected renderLocation(value: string): React.ReactNode {\n        return <option value={value} key={value}>{value}</option>;\n    }\n\n    protected onFilterChanged(e: React.ChangeEvent<HTMLSelectElement>): void {\n        const locationList = this.locationList;\n        if (locationList) {\n            const value = locationList.value;\n            const filters = this.appliedFilters[value];\n            this.fileDialogTree.setFilter(filters);\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    get locationList(): HTMLSelectElement | undefined {\n        const locationList = this.host.getElementsByClassName(FILE_TREE_FILTERS_LIST_CLASS)[0];\n        if (locationList instanceof HTMLSelectElement) {\n            return locationList;\n        }\n        return undefined;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { DirNode, FileTree } from '../file-tree';\nimport { TreeNode, CompositeTreeNode } from '@theia/core/lib/browser/tree/tree';\nimport { FileStat } from '../../common';\n\n@injectable()\nexport class FileDialogTree extends FileTree {\n\n    /**\n     * Extensions for files to be shown\n     */\n    protected fileExtensions: string[] = [];\n\n    /**\n     * Sets extensions for filtering files\n     *\n     * @param fileExtensions array of extensions\n     */\n    setFilter(fileExtensions: string[]): void {\n        this.fileExtensions = fileExtensions.slice();\n        this.refresh();\n    }\n\n    protected async toNodes(fileStat: FileStat, parent: CompositeTreeNode): Promise<TreeNode[]> {\n        if (!fileStat.children) {\n            return [];\n        }\n\n        const result = await Promise.all(\n            fileStat.children\n                .filter(child => this.isVisible(child))\n                .map(child => this.toNode(child, parent))\n        );\n\n        return result.sort(DirNode.compare);\n    }\n\n    /**\n     * Determines whether file or folder can be shown\n     *\n     * @param fileStat resource to check\n     */\n    protected isVisible(fileStat: FileStat): boolean {\n        if (fileStat.isDirectory) {\n            return true;\n        }\n\n        if (this.fileExtensions.length === 0) {\n            return true;\n        }\n\n        return !this.fileExtensions.every(value => !fileStat.uri.endsWith('.' + value));\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { ContextMenuRenderer, NodeProps, TreeProps, TreeNode, SELECTED_CLASS, FOCUS_CLASS } from '@theia/core/lib/browser';\nimport { FileTreeWidget, FileStatNode } from '../file-tree';\nimport { FileDialogModel } from './file-dialog-model';\n\nexport const FILE_DIALOG_CLASS = 'theia-FileDialog';\nexport const NOT_SELECTABLE_CLASS = 'theia-mod-not-selectable';\n\n@injectable()\nexport class FileDialogWidget extends FileTreeWidget {\n\n    private _disableFileSelection: boolean = false;\n\n    constructor(\n        @inject(TreeProps) readonly props: TreeProps,\n        @inject(FileDialogModel) readonly model: FileDialogModel,\n        @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer\n    ) {\n        super(props, model, contextMenuRenderer);\n        this.addClass(FILE_DIALOG_CLASS);\n    }\n\n    set disableFileSelection(isSelectable: boolean) {\n        this._disableFileSelection = isSelectable;\n        this.model.disableFileSelection = isSelectable;\n    }\n\n    protected createNodeAttributes(node: TreeNode, props: NodeProps): React.Attributes & React.HTMLAttributes<HTMLElement> {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const attr = super.createNodeAttributes(node, props) as any;\n        if (this.shouldDisableSelection(node)) {\n            const keys = Object.keys(attr);\n            keys.forEach(k => {\n                if (['className', 'style', 'title'].indexOf(k) < 0) {\n                    delete attr[k];\n                }\n            });\n        }\n        return attr;\n    }\n\n    protected createNodeClassNames(node: TreeNode, props: NodeProps): string[] {\n        const classNames = super.createNodeClassNames(node, props);\n        if (this.shouldDisableSelection(node)) {\n            [SELECTED_CLASS, FOCUS_CLASS].forEach(name => {\n                const ind = classNames.indexOf(name);\n                if (ind >= 0) {\n                    classNames.splice(ind, 1);\n                }\n            });\n            classNames.push(NOT_SELECTABLE_CLASS);\n        }\n        return classNames;\n    }\n\n    protected shouldDisableSelection(node: TreeNode): boolean {\n        return FileStatNode.is(node) && !node.fileStat.isDirectory && this._disableFileSelection;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { Message } from '@phosphor/messaging';\nimport { Disposable, MaybeArray } from '@theia/core/lib/common';\nimport { Key, LabelProvider } from '@theia/core/lib/browser';\nimport { AbstractDialog, DialogProps, setEnabled, createIconButton, Widget } from '@theia/core/lib/browser';\nimport { FileStatNode } from '../file-tree';\nimport { LocationListRenderer } from '../location';\nimport { FileDialogModel } from './file-dialog-model';\nimport { FileDialogWidget } from './file-dialog-widget';\nimport { FileDialogTreeFiltersRenderer, FileDialogTreeFilters } from './file-dialog-tree-filters-renderer';\nimport URI from '@theia/core/lib/common/uri';\nimport { Panel } from '@phosphor/widgets';\n\nexport const OpenFileDialogFactory = Symbol('OpenFileDialogFactory');\nexport interface OpenFileDialogFactory {\n    (props: OpenFileDialogProps): OpenFileDialog;\n}\n\nexport const SaveFileDialogFactory = Symbol('SaveFileDialogFactory');\nexport interface SaveFileDialogFactory {\n    (props: SaveFileDialogProps): SaveFileDialog;\n}\n\nexport const SAVE_DIALOG_CLASS = 'theia-SaveFileDialog';\n\nexport const NAVIGATION_PANEL_CLASS = 'theia-NavigationPanel';\nexport const NAVIGATION_BACK_CLASS = 'theia-NavigationBack';\nexport const NAVIGATION_FORWARD_CLASS = 'theia-NavigationForward';\nexport const NAVIGATION_HOME_CLASS = 'theia-NavigationHome';\nexport const NAVIGATION_LOCATION_LIST_PANEL_CLASS = 'theia-LocationListPanel';\n\nexport const FILTERS_PANEL_CLASS = 'theia-FiltersPanel';\nexport const FILTERS_LABEL_CLASS = 'theia-FiltersLabel';\nexport const FILTERS_LIST_PANEL_CLASS = 'theia-FiltersListPanel';\n\nexport const FILENAME_PANEL_CLASS = 'theia-FileNamePanel';\nexport const FILENAME_LABEL_CLASS = 'theia-FileNameLabel';\nexport const FILENAME_TEXTFIELD_CLASS = 'theia-FileNameTextField';\n\nexport const CONTROL_PANEL_CLASS = 'theia-ControlPanel';\n\nexport class FileDialogProps extends DialogProps {\n\n    /**\n     * A set of file filters that are used by the dialog. Each entry is a human readable label,\n     * like \"TypeScript\", and an array of extensions, e.g.\n     * ```ts\n     * {\n     * \t'Images': ['png', 'jpg']\n     * \t'TypeScript': ['ts', 'tsx']\n     * }\n     * ```\n     */\n    filters?: FileDialogTreeFilters;\n\n}\n\n@injectable()\nexport class OpenFileDialogProps extends FileDialogProps {\n\n    /**\n     * A human-readable string for the accept button.\n     */\n    openLabel?: string;\n\n    /**\n     * Allow to select files, defaults to `true`.\n     */\n    canSelectFiles?: boolean;\n\n    /**\n     * Allow to select folders, defaults to `false`.\n     */\n    canSelectFolders?: boolean;\n\n    /**\n     * Allow to select many files or folders.\n     */\n    canSelectMany?: boolean;\n\n}\n\n@injectable()\nexport class SaveFileDialogProps extends FileDialogProps {\n\n    /**\n     * A human-readable string for the accept button.\n     */\n    saveLabel?: string;\n\n    /**\n     * A human-readable value for the input.\n     */\n    inputValue?: string;\n\n}\n\nexport abstract class FileDialog<T> extends AbstractDialog<T> {\n\n    protected readonly back: HTMLSpanElement;\n    protected readonly forward: HTMLSpanElement;\n    protected readonly home: HTMLSpanElement;\n    protected readonly locationListRenderer: LocationListRenderer;\n    protected readonly treeFiltersRenderer: FileDialogTreeFiltersRenderer | undefined;\n    protected readonly treePanel: Panel;\n\n    constructor(\n        @inject(FileDialogProps) readonly props: FileDialogProps,\n        @inject(FileDialogWidget) readonly widget: FileDialogWidget\n    ) {\n        super(props);\n        this.treePanel = new Panel();\n        this.treePanel.addWidget(this.widget);\n        this.toDispose.push(this.treePanel);\n        this.toDispose.push(this.model.onChanged(() => this.update()));\n        this.toDispose.push(this.model.onDidOpenFile(() => this.accept()));\n        this.toDispose.push(this.model.onSelectionChanged(() => this.update()));\n\n        const navigationPanel = document.createElement('div');\n        navigationPanel.classList.add(NAVIGATION_PANEL_CLASS);\n        this.contentNode.appendChild(navigationPanel);\n\n        navigationPanel.appendChild(this.back = createIconButton('fa', 'fa-chevron-left'));\n        this.back.classList.add(NAVIGATION_BACK_CLASS);\n        this.back.title = 'Navigate Back';\n        navigationPanel.appendChild(this.forward = createIconButton('fa', 'fa-chevron-right'));\n        this.forward.classList.add(NAVIGATION_FORWARD_CLASS);\n        this.forward.title = 'Navigate Forward';\n        navigationPanel.appendChild(this.home = createIconButton('fa', 'fa-home'));\n        this.home.classList.add(NAVIGATION_HOME_CLASS);\n        this.home.title = 'Go To Initial Location';\n\n        this.locationListRenderer = this.createLocationListRenderer();\n        this.locationListRenderer.host.classList.add(NAVIGATION_LOCATION_LIST_PANEL_CLASS);\n        navigationPanel.appendChild(this.locationListRenderer.host);\n\n        this.treeFiltersRenderer = this.createFileTreeFiltersRenderer();\n    }\n\n    get model(): FileDialogModel {\n        return this.widget.model;\n    }\n\n    protected createLocationListRenderer(): LocationListRenderer {\n        return new LocationListRenderer(this.model);\n    }\n\n    protected createFileTreeFiltersRenderer(): FileDialogTreeFiltersRenderer | undefined {\n        if (this.props.filters) {\n            return new FileDialogTreeFiltersRenderer(this.props.filters, this.widget.model.tree);\n        }\n\n        return undefined;\n    }\n\n    protected onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        setEnabled(this.back, this.model.canNavigateBackward());\n        setEnabled(this.forward, this.model.canNavigateForward());\n        setEnabled(this.home, !!this.model.initialLocation\n            && !!this.model.location\n            && this.model.initialLocation.toString() !== this.model.location.toString());\n        this.locationListRenderer.render();\n\n        if (this.treeFiltersRenderer) {\n            this.treeFiltersRenderer.render();\n        }\n\n        this.widget.update();\n    }\n\n    protected appendFiltersPanel(): void {\n        if (this.treeFiltersRenderer) {\n            const filtersPanel = document.createElement('div');\n            filtersPanel.classList.add(FILTERS_PANEL_CLASS);\n            this.contentNode.appendChild(filtersPanel);\n\n            const titlePanel = document.createElement('div');\n            titlePanel.innerHTML = 'Format:';\n            titlePanel.classList.add(FILTERS_LABEL_CLASS);\n            filtersPanel.appendChild(titlePanel);\n\n            this.treeFiltersRenderer.host.classList.add(FILTERS_LIST_PANEL_CLASS);\n            filtersPanel.appendChild(this.treeFiltersRenderer.host);\n        }\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        Widget.attach(this.treePanel, this.contentNode);\n        this.toDisposeOnDetach.push(Disposable.create(() => {\n            Widget.detach(this.treePanel);\n            this.locationListRenderer.dispose();\n            if (this.treeFiltersRenderer) {\n                this.treeFiltersRenderer.dispose();\n            }\n        }));\n\n        this.appendFiltersPanel();\n\n        this.appendCloseButton('Cancel');\n        this.appendAcceptButton(this.getAcceptButtonLabel());\n\n        this.addKeyListener(this.back, Key.ENTER, () => this.model.navigateBackward(), 'click');\n        this.addKeyListener(this.forward, Key.ENTER, () => this.model.navigateForward(), 'click');\n        this.addKeyListener(this.home, Key.ENTER, () => {\n            if (this.model.initialLocation) {\n                this.model.location = this.model.initialLocation;\n            }\n        }, 'click');\n        super.onAfterAttach(msg);\n    }\n\n    protected abstract getAcceptButtonLabel(): string;\n\n    protected onActivateRequest(msg: Message): void {\n        this.widget.activate();\n    }\n\n}\n\n@injectable()\nexport class OpenFileDialog extends FileDialog<MaybeArray<FileStatNode>> {\n\n    constructor(\n        @inject(OpenFileDialogProps) readonly props: OpenFileDialogProps,\n        @inject(FileDialogWidget) readonly widget: FileDialogWidget\n    ) {\n        super(props, widget);\n        if (props.canSelectFiles !== undefined) {\n            this.widget.disableFileSelection = !props.canSelectFiles;\n        }\n    }\n\n    protected getAcceptButtonLabel(): string {\n        return this.props.openLabel ? this.props.openLabel : 'Open';\n    }\n\n    protected isValid(value: MaybeArray<FileStatNode>): string {\n        if (value && !this.props.canSelectMany && value instanceof Array) {\n            return 'You can select only one item';\n        }\n        return '';\n    }\n\n    get value(): MaybeArray<FileStatNode> {\n        if (this.widget.model.selectedFileStatNodes.length === 1) {\n            return this.widget.model.selectedFileStatNodes[0];\n        } else {\n            return this.widget.model.selectedFileStatNodes;\n        }\n    }\n\n    protected async accept(): Promise<void> {\n        const selection = this.value;\n        if (!this.props.canSelectFolders\n            && !Array.isArray(selection)\n            && selection.fileStat.isDirectory) {\n            this.widget.model.openNode(selection);\n            return;\n        }\n        super.accept();\n    }\n}\n\n@injectable()\nexport class SaveFileDialog extends FileDialog<URI | undefined> {\n\n    protected fileNameField: HTMLInputElement | undefined;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    constructor(\n        @inject(SaveFileDialogProps) readonly props: SaveFileDialogProps,\n        @inject(FileDialogWidget) readonly widget: FileDialogWidget\n    ) {\n        super(props, widget);\n        widget.addClass(SAVE_DIALOG_CLASS);\n    }\n\n    protected getAcceptButtonLabel(): string {\n        return this.props.saveLabel ? this.props.saveLabel : 'Save';\n    }\n\n    protected onUpdateRequest(msg: Message): void {\n        // Update file name field when changing a selection\n        if (this.fileNameField) {\n            if (this.widget.model.selectedFileStatNodes.length === 1) {\n                const node = this.widget.model.selectedFileStatNodes[0];\n                if (!node.fileStat.isDirectory) {\n                    this.fileNameField.value = this.labelProvider.getName(node);\n                }\n            } else {\n                this.fileNameField.value = '';\n            }\n        }\n\n        // Continue updating the dialog\n        super.onUpdateRequest(msg);\n    }\n\n    protected isValid(value: URI | undefined): string | boolean {\n        if (this.fileNameField && this.fileNameField.value) {\n            return '';\n        }\n        return false;\n    }\n\n    get value(): URI | undefined {\n        if (this.fileNameField && this.widget.model.selectedFileStatNodes.length === 1) {\n            const node = this.widget.model.selectedFileStatNodes[0];\n\n            if (node.fileStat.isDirectory) {\n                return node.uri.resolve(this.fileNameField.value);\n            }\n\n            return node.uri.parent.resolve(this.fileNameField.value);\n        }\n\n        return undefined;\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n\n        const fileNamePanel = document.createElement('div');\n        fileNamePanel.classList.add(FILENAME_PANEL_CLASS);\n        this.contentNode.appendChild(fileNamePanel);\n\n        const titlePanel = document.createElement('div');\n        titlePanel.innerHTML = 'Name:';\n        titlePanel.classList.add(FILENAME_LABEL_CLASS);\n        fileNamePanel.appendChild(titlePanel);\n\n        this.fileNameField = document.createElement('input');\n        this.fileNameField.type = 'text';\n        this.fileNameField.classList.add('theia-input', FILENAME_TEXTFIELD_CLASS);\n        this.fileNameField.value = this.props.inputValue || '';\n        fileNamePanel.appendChild(this.fileNameField);\n\n        this.fileNameField.onkeyup = () => this.validate();\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './file-dialog';\nexport * from './file-dialog-container';\nexport * from './file-dialog-tree-filters-renderer';\nexport * from './file-dialog-service';\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces, Container } from 'inversify';\nimport { createTreeContainer, Tree, TreeImpl, TreeModel, TreeModelImpl, TreeWidget } from '@theia/core/lib/browser';\nimport { FileTree } from './file-tree';\nimport { FileTreeModel } from './file-tree-model';\nimport { FileTreeWidget } from './file-tree-widget';\n\nexport function createFileTreeContainer(parent: interfaces.Container): Container {\n    const child = createTreeContainer(parent);\n\n    child.unbind(TreeImpl);\n    child.bind(FileTree).toSelf();\n    child.rebind(Tree).toService(FileTree);\n\n    child.unbind(TreeModelImpl);\n    child.bind(FileTreeModel).toSelf();\n    child.rebind(TreeModel).toService(FileTreeModel);\n\n    child.unbind(TreeWidget);\n    child.bind(FileTreeWidget).toSelf();\n\n    return child;\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { CompositeTreeNode, TreeModelImpl, TreeNode, ConfirmDialog } from '@theia/core/lib/browser';\nimport { FileSystem } from '../../common';\nimport { FileSystemWatcher, FileChangeType, FileChange, FileMoveEvent } from '../filesystem-watcher';\nimport { FileStatNode, DirNode, FileNode } from './file-tree';\nimport { LocationService } from '../location';\nimport { LabelProvider } from '@theia/core/lib/browser/label-provider';\n\n@injectable()\nexport class FileTreeModel extends TreeModelImpl implements LocationService {\n\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(FileSystem) protected readonly fileSystem: FileSystem;\n    @inject(FileSystemWatcher) protected readonly watcher: FileSystemWatcher;\n\n    @postConstruct()\n    protected init(): void {\n        super.init();\n        this.toDispose.push(this.watcher.onFilesChanged(changes => this.onFilesChanged(changes)));\n        this.toDispose.push(this.watcher.onDidMove(move => this.onDidMove(move)));\n    }\n\n    get location(): URI | undefined {\n        const root = this.root;\n        if (FileStatNode.is(root)) {\n            return root.uri;\n        }\n        return undefined;\n    }\n\n    set location(uri: URI | undefined) {\n        if (uri) {\n            this.fileSystem.getFileStat(uri.toString()).then(async fileStat => {\n                if (fileStat) {\n                    const node = DirNode.createRoot(fileStat);\n                    this.navigateTo(node);\n                }\n            });\n        } else {\n            this.navigateTo(undefined);\n        }\n    }\n\n    async drives(): Promise<URI[]> {\n        try {\n            const drives = await this.fileSystem.getDrives();\n            return drives.map(uri => new URI(uri));\n        } catch (e) {\n            this.logger.error('Error when loading drives.', e);\n            return [];\n        }\n    }\n\n    get selectedFileStatNodes(): Readonly<FileStatNode>[] {\n        return this.selectedNodes.filter(FileStatNode.is);\n    }\n\n    *getNodesByUri(uri: URI): IterableIterator<TreeNode> {\n        const node = this.getNode(uri.toString());\n        if (node) {\n            yield node;\n        }\n    }\n\n    /**\n     * to workaround https://github.com/Axosoft/nsfw/issues/42\n     */\n    protected onDidMove(move: FileMoveEvent): void {\n        if (FileMoveEvent.isRename(move)) {\n            return;\n        }\n        this.refreshAffectedNodes([\n            move.sourceUri,\n            move.targetUri\n        ]);\n    }\n\n    protected onFilesChanged(changes: FileChange[]): void {\n        if (!this.refreshAffectedNodes(this.getAffectedUris(changes)) && this.isRootAffected(changes)) {\n            this.refresh();\n        }\n    }\n\n    protected isRootAffected(changes: FileChange[]): boolean {\n        const root = this.root;\n        if (FileStatNode.is(root)) {\n            return changes.some(change =>\n                change.type < FileChangeType.DELETED && change.uri.toString() === root.uri.toString()\n            );\n        }\n        return false;\n    }\n\n    protected getAffectedUris(changes: FileChange[]): URI[] {\n        return changes.filter(change => !this.isFileContentChanged(change)).map(change => change.uri);\n    }\n\n    protected isFileContentChanged(change: FileChange): boolean {\n        return change.type === FileChangeType.UPDATED && FileNode.is(this.getNodesByUri(change.uri).next().value);\n    }\n\n    protected refreshAffectedNodes(uris: URI[]): boolean {\n        const nodes = this.getAffectedNodes(uris);\n        for (const node of nodes.values()) {\n            this.refresh(node);\n        }\n        return nodes.size !== 0;\n    }\n\n    protected getAffectedNodes(uris: URI[]): Map<string, CompositeTreeNode> {\n        const nodes = new Map<string, CompositeTreeNode>();\n        for (const uri of uris) {\n            for (const node of this.getNodesByUri(uri.parent)) {\n                if (DirNode.is(node) && node.expanded) {\n                    nodes.set(node.id, node);\n                }\n            }\n        }\n        return nodes;\n    }\n\n    copy(uri: URI): boolean {\n        if (uri.scheme !== 'file') {\n            return false;\n        }\n        const node = this.selectedFileStatNodes[0];\n        if (!node) {\n            return false;\n        }\n        const targetUri = node.uri.resolve(uri.path.base);\n        /* Check if the folder is copied on itself */\n        const sourcePath = uri.path.toString();\n        const targetPath = node.uri.path.toString();\n        if (sourcePath === targetPath) {\n            return false;\n        }\n\n        this.fileSystem.copy(uri.toString(), targetUri.toString());\n        return true;\n    }\n\n    /**\n     * Move the given source file or directory to the given target directory.\n     */\n    async move(source: TreeNode, target: TreeNode): Promise<void> {\n        if (DirNode.is(target) && FileStatNode.is(source)) {\n            const sourceUri = source.uri.toString();\n            if (target.uri.toString() === sourceUri) { /*  Folder on itself */\n                return;\n            }\n            const name = source.uri.displayName;\n            const targetUri = target.uri.resolve(name).toString();\n            if (sourceUri !== targetUri) { /*  File not on itself */\n                const fileExistsInTarget = await this.fileSystem.exists(targetUri);\n                if (!fileExistsInTarget || await this.shouldReplace(name)) {\n                    await this.fileSystem.move(sourceUri, targetUri, { overwrite: true });\n                }\n            }\n        }\n    }\n\n    protected async shouldReplace(fileName: string): Promise<boolean> {\n        const dialog = new ConfirmDialog({\n            title: 'Replace file',\n            msg: `File '${fileName}' already exists in the destination folder. Do you want to replace it?`,\n            ok: 'Yes',\n            cancel: 'No'\n        });\n        return !!await dialog.open();\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport { injectable, inject } from 'inversify';\nimport { DisposableCollection, Disposable } from '@theia/core/lib/common';\nimport { UriSelection } from '@theia/core/lib/common/selection';\nimport { isCancelled } from '@theia/core/lib/common/cancellation';\nimport { ContextMenuRenderer, NodeProps, TreeProps, TreeNode, TreeWidget, CompositeTreeNode } from '@theia/core/lib/browser';\nimport { FileUploadService } from '../file-upload-service';\nimport { DirNode, FileStatNode } from './file-tree';\nimport { FileTreeModel } from './file-tree-model';\nimport { IconThemeService } from '@theia/core/lib/browser/icon-theme-service';\n\nexport const FILE_TREE_CLASS = 'theia-FileTree';\nexport const FILE_STAT_NODE_CLASS = 'theia-FileStatNode';\nexport const DIR_NODE_CLASS = 'theia-DirNode';\nexport const FILE_STAT_ICON_CLASS = 'theia-FileStatIcon';\n\n@injectable()\nexport class FileTreeWidget extends TreeWidget {\n\n    protected readonly toCancelNodeExpansion = new DisposableCollection();\n\n    @inject(FileUploadService)\n    protected readonly uploadService: FileUploadService;\n\n    @inject(IconThemeService)\n    protected readonly iconThemeService: IconThemeService;\n\n    constructor(\n        @inject(TreeProps) readonly props: TreeProps,\n        @inject(FileTreeModel) readonly model: FileTreeModel,\n        @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer\n    ) {\n        super(props, model, contextMenuRenderer);\n        this.addClass(FILE_TREE_CLASS);\n        this.toDispose.push(this.toCancelNodeExpansion);\n    }\n\n    protected createNodeClassNames(node: TreeNode, props: NodeProps): string[] {\n        const classNames = super.createNodeClassNames(node, props);\n        if (FileStatNode.is(node)) {\n            classNames.push(FILE_STAT_NODE_CLASS);\n        }\n        if (DirNode.is(node)) {\n            classNames.push(DIR_NODE_CLASS);\n        }\n        return classNames;\n    }\n\n    protected renderIcon(node: TreeNode, props: NodeProps): React.ReactNode {\n        const icon = this.toNodeIcon(node);\n        if (icon) {\n            return <div className={icon + ' file-icon'}></div>;\n        }\n        // eslint-disable-next-line no-null/no-null\n        return null;\n    }\n\n    protected createContainerAttributes(): React.HTMLAttributes<HTMLElement> {\n        const attrs = super.createContainerAttributes();\n        return {\n            ...attrs,\n            onDragEnter: event => this.handleDragEnterEvent(this.model.root, event),\n            onDragOver: event => this.handleDragOverEvent(this.model.root, event),\n            onDragLeave: event => this.handleDragLeaveEvent(this.model.root, event),\n            onDrop: event => this.handleDropEvent(this.model.root, event)\n        };\n    }\n\n    protected createNodeAttributes(node: TreeNode, props: NodeProps): React.Attributes & React.HTMLAttributes<HTMLElement> {\n        const elementAttrs = super.createNodeAttributes(node, props);\n        return {\n            ...elementAttrs,\n            draggable: FileStatNode.is(node),\n            onDragStart: event => this.handleDragStartEvent(node, event),\n            onDragEnter: event => this.handleDragEnterEvent(node, event),\n            onDragOver: event => this.handleDragOverEvent(node, event),\n            onDragLeave: event => this.handleDragLeaveEvent(node, event),\n            onDrop: event => this.handleDropEvent(node, event),\n            title: this.getNodeTooltip(node)\n        };\n    }\n\n    protected getNodeTooltip(node: TreeNode): string | undefined {\n        const uri = UriSelection.getUri(node);\n        return uri ? uri.path.toString() : undefined;\n    }\n\n    protected handleDragStartEvent(node: TreeNode, event: React.DragEvent): void {\n        event.stopPropagation();\n        let selectedNodes;\n        if (this.model.selectedNodes.find(selected => TreeNode.equals(selected, node))) {\n            selectedNodes = [...this.model.selectedNodes];\n        } else {\n            selectedNodes = [node];\n        }\n        this.setSelectedTreeNodesAsData(event.dataTransfer, node, selectedNodes);\n        if (event.dataTransfer) {\n            let label: string;\n            if (selectedNodes.length === 1) {\n                label = this.toNodeName(node);\n            } else {\n                label = String(selectedNodes.length);\n            }\n            const dragImage = document.createElement('div');\n            dragImage.className = 'theia-file-tree-drag-image';\n            dragImage.textContent = label;\n            document.body.appendChild(dragImage);\n            event.dataTransfer.setDragImage(dragImage, -10, -10);\n            setTimeout(() => document.body.removeChild(dragImage), 0);\n        }\n    }\n\n    protected handleDragEnterEvent(node: TreeNode | undefined, event: React.DragEvent): void {\n        event.preventDefault();\n        event.stopPropagation();\n        this.toCancelNodeExpansion.dispose();\n        const containing = DirNode.getContainingDir(node);\n        if (!!containing && !containing.selected) {\n            this.model.selectNode(containing);\n        }\n    }\n\n    protected handleDragOverEvent(node: TreeNode | undefined, event: React.DragEvent): void {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!this.toCancelNodeExpansion.disposed) {\n            return;\n        }\n        const timer = setTimeout(() => {\n            const containing = DirNode.getContainingDir(node);\n            if (!!containing && !containing.expanded) {\n                this.model.expandNode(containing);\n            }\n        }, 500);\n        this.toCancelNodeExpansion.push(Disposable.create(() => clearTimeout(timer)));\n    }\n\n    protected handleDragLeaveEvent(node: TreeNode | undefined, event: React.DragEvent): void {\n        event.preventDefault();\n        event.stopPropagation();\n        this.toCancelNodeExpansion.dispose();\n    }\n\n    protected async handleDropEvent(node: TreeNode | undefined, event: React.DragEvent): Promise<void> {\n        try {\n            event.preventDefault();\n            event.stopPropagation();\n            event.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.\n            const containing = this.getDropTargetDirNode(node);\n            if (containing) {\n                const resources = this.getSelectedTreeNodesFromData(event.dataTransfer);\n                if (resources.length > 0) {\n                    for (const treeNode of resources) {\n                        await this.model.move(treeNode, containing);\n                    }\n                } else {\n                    await this.uploadService.upload(containing.uri, { source: event.dataTransfer });\n                }\n            }\n        } catch (e) {\n            if (!isCancelled(e)) {\n                console.error(e);\n            }\n        }\n    }\n\n    protected getDropTargetDirNode(node: TreeNode | undefined): DirNode | undefined {\n        if (CompositeTreeNode.is(node) && node.id === 'WorkspaceNodeId') {\n            if (node.children.length === 1) {\n                return DirNode.getContainingDir(node.children[0]);\n            } else if (node.children.length > 1) {\n                // move file to the last root folder in multi-root scenario\n                return DirNode.getContainingDir(node.children[node.children.length - 1]);\n            }\n        }\n        return DirNode.getContainingDir(node);\n    }\n\n    protected setTreeNodeAsData(data: DataTransfer, node: TreeNode): void {\n        data.setData('tree-node', node.id);\n    }\n\n    protected setSelectedTreeNodesAsData(data: DataTransfer, sourceNode: TreeNode, relatedNodes: TreeNode[]): void {\n        this.setTreeNodeAsData(data, sourceNode);\n        data.setData('selected-tree-nodes', JSON.stringify(relatedNodes.map(node => node.id)));\n    }\n\n    protected getTreeNodeFromData(data: DataTransfer): TreeNode | undefined {\n        const id = data.getData('tree-node');\n        return this.model.getNode(id);\n    }\n    protected getSelectedTreeNodesFromData(data: DataTransfer): TreeNode[] {\n        const resources = data.getData('selected-tree-nodes');\n        if (!resources) {\n            return [];\n        }\n        const ids: string[] = JSON.parse(resources);\n        return ids.map(id => this.model.getNode(id)).filter(node => node !== undefined) as TreeNode[];\n    }\n\n    protected get hidesExplorerArrows(): boolean {\n        const theme = this.iconThemeService.getDefinition(this.iconThemeService.current);\n        return !!theme && !!theme.hidesExplorerArrows;\n    }\n\n    protected renderExpansionToggle(node: TreeNode, props: NodeProps): React.ReactNode {\n        if (this.hidesExplorerArrows) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        return super.renderExpansionToggle(node, props);\n    }\n\n    protected getPaddingLeft(node: TreeNode, props: NodeProps): number {\n        if (this.hidesExplorerArrows) {\n            // additional left padding instead of top-level expansion toggle\n            return super.getPaddingLeft(node, props) + this.props.leftPadding;\n        }\n        return super.getPaddingLeft(node, props);\n    }\n\n    protected needsExpansionTogglePadding(node: TreeNode): boolean {\n        const theme = this.iconThemeService.getDefinition(this.iconThemeService.current);\n        if (theme && (theme.hidesExplorerArrows || (theme.hasFileIcons && !theme.hasFolderIcons))) {\n            return false;\n        }\n        return super.needsExpansionTogglePadding(node);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './file-tree';\nexport * from './file-tree-model';\nexport * from './file-tree-widget';\nexport * from './file-tree-container';\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './location-service';\nexport * from './location-renderer';\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from '@theia/core/lib/common/uri';\nimport { LocationService } from './location-service';\nimport { ReactRenderer } from '@theia/core/lib/browser/widgets/react-renderer';\nimport * as React from 'react';\n\nexport class LocationListRenderer extends ReactRenderer {\n\n    protected _drives: URI[] | undefined;\n\n    constructor(\n        protected readonly service: LocationService,\n        host?: HTMLElement\n    ) {\n        super(host);\n        this.doLoadDrives();\n    }\n\n    render(): void {\n        super.render();\n        const locationList = this.locationList;\n        if (locationList) {\n            const currentLocation = this.service.location;\n            locationList.value = currentLocation ? currentLocation.toString() : '';\n        }\n    }\n\n    protected readonly handleLocationChanged = (e: React.ChangeEvent<HTMLSelectElement>) => this.onLocationChanged(e);\n    protected doRender(): React.ReactNode {\n        const options = this.collectLocations().map(value => this.renderLocation(value));\n        return <select className={'theia-select ' + LocationListRenderer.Styles.LOCATION_LIST_CLASS} onChange={this.handleLocationChanged}>{...options}</select>;\n    }\n\n    /**\n     * Collects the available locations based on the currently selected, and appends the available drives to it.\n     */\n    protected collectLocations(): LocationListRenderer.Location[] {\n        const location = this.service.location;\n        const locations: LocationListRenderer.Location[] = (!!location ? location.allLocations : []).map(uri => ({ uri }));\n        if (this._drives) {\n            const drives = this._drives.map(uri => ({ uri, isDrive: true }));\n            // `URI.allLocations` returns with the URI without the trailing slash unlike `FileUri.create(fsPath)`.\n            // to be able to compare file:///path/to/resource with file:///path/to/resource/.\n            const toUriString = (uri: URI) => {\n                const toString = uri.toString();\n                return toString.endsWith('/') ? toString.slice(0, -1) : toString;\n            };\n            drives.forEach(drive => {\n                const index = locations.findIndex(loc => toUriString(loc.uri) === toUriString(drive.uri));\n                // Ignore drives which are already discovered as a location based on the current model root URI.\n                if (index === -1) {\n                    // Make sure, it does not have the trailing slash.\n                    locations.push({ uri: new URI(toUriString(drive.uri)), isDrive: true });\n                } else {\n                    // This is necessary for Windows to be able to show `/e:/` as a drive and `c:` as \"non-drive\" in the same way.\n                    // `URI.path.toString()` Vs. `URI.displayName` behaves a bit differently on Windows.\n                    // https://github.com/eclipse-theia/theia/pull/3038#issuecomment-425944189\n                    locations[index].isDrive = true;\n                }\n            });\n        }\n        this.doLoadDrives();\n        return locations;\n    }\n\n    /**\n     * Asynchronously loads the drives (if not yet available) and triggers a UI update on success with the new values.\n     */\n    protected doLoadDrives(): void {\n        if (!this._drives) {\n            this.service.drives().then(drives => {\n                // If the `drives` are empty, something already went wrong.\n                if (drives.length > 0) {\n                    this._drives = drives;\n                    this.render();\n                }\n            });\n        }\n    }\n\n    protected renderLocation(location: LocationListRenderer.Location): React.ReactNode {\n        const { uri, isDrive } = location;\n        const value = uri.toString();\n        return <option value={value} key={uri.toString()}>{isDrive ? uri.path.toString() : uri.displayName}</option>;\n    }\n\n    protected onLocationChanged(e: React.ChangeEvent<HTMLSelectElement>): void {\n        const locationList = this.locationList;\n        if (locationList) {\n            const value = locationList.value;\n            const uri = new URI(value);\n            this.service.location = uri;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    get locationList(): HTMLSelectElement | undefined {\n        const locationList = this.host.getElementsByClassName(LocationListRenderer.Styles.LOCATION_LIST_CLASS)[0];\n        if (locationList instanceof HTMLSelectElement) {\n            return locationList;\n        }\n        return undefined;\n    }\n\n}\n\nexport namespace LocationListRenderer {\n\n    export namespace Styles {\n        export const LOCATION_LIST_CLASS = 'theia-LocationList';\n    }\n\n    export interface Location {\n        uri: URI;\n        isDrive?: boolean;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from '@theia/core/lib/common/uri';\n\nexport interface LocationService {\n    location: URI | undefined;\n    drives(): Promise<URI[]>;\n}\n"],"sourceRoot":""}