{"version":3,"sources":["webpack:///./node_modules/@theia/debug/src/browser/breakpoint/breakpoint-manager.ts","webpack:///./node_modules/@theia/debug/src/browser/breakpoint/breakpoint-marker.ts","webpack:///./node_modules/@theia/debug/src/browser/console/debug-console-items.tsx","webpack:///./node_modules/@theia/debug/src/browser/debug-call-stack-item-type-key.ts","webpack:///./node_modules/@theia/debug/src/browser/debug-configuration-manager.ts","webpack:///./node_modules/@theia/debug/src/browser/debug-configuration-model.ts","webpack:///./node_modules/@theia/debug/src/browser/debug-preferences.ts","webpack:///./node_modules/@theia/debug/src/browser/debug-session-connection.ts","webpack:///./node_modules/@theia/debug/src/browser/debug-session-contribution.ts","webpack:///./node_modules/@theia/debug/src/browser/debug-session-manager.ts","webpack:///./node_modules/@theia/debug/src/browser/debug-session-options.ts","webpack:///./node_modules/@theia/debug/src/browser/debug-session.tsx","webpack:///./node_modules/@theia/debug/src/browser/debug-watch-manager.ts","webpack:///./node_modules/@theia/debug/src/browser/model/debug-breakpoint.tsx","webpack:///./node_modules/@theia/debug/src/browser/model/debug-function-breakpoint.tsx","webpack:///./node_modules/@theia/debug/src/browser/model/debug-source-breakpoint.tsx","webpack:///./node_modules/@theia/debug/src/browser/model/debug-source.ts","webpack:///./node_modules/@theia/debug/src/browser/model/debug-stack-frame.tsx","webpack:///./node_modules/@theia/debug/src/browser/model/debug-thread.tsx","webpack:///./node_modules/@theia/debug/src/browser/view/debug-stack-frames-source.tsx","webpack:///./node_modules/@theia/debug/src/browser/view/debug-stack-frames-widget.ts","webpack:///./node_modules/@theia/debug/src/browser/view/debug-threads-source.tsx","webpack:///./node_modules/@theia/debug/src/browser/view/debug-threads-widget.ts","webpack:///./node_modules/@theia/debug/src/browser/view/debug-view-model.ts","webpack:///./node_modules/@theia/debug/src/browser/view/debug-watch-expression.tsx","webpack:///./node_modules/@theia/debug/src/common/debug-common.ts","webpack:///./node_modules/@theia/debug/src/common/debug-configuration.ts","webpack:///./node_modules/@theia/debug/src/common/debug-service.ts"],"names":[],"mappings":"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","file":"31.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { Emitter } from '@theia/core/lib/common';\nimport { StorageService } from '@theia/core/lib/browser';\nimport { Marker } from '@theia/markers/lib/common/marker';\nimport { MarkerManager } from '@theia/markers/lib/browser/marker-manager';\nimport URI from '@theia/core/lib/common/uri';\nimport { SourceBreakpoint, BREAKPOINT_KIND, ExceptionBreakpoint, FunctionBreakpoint, BaseBreakpoint } from './breakpoint-marker';\n\nexport interface BreakpointsChangeEvent<T extends BaseBreakpoint> {\n    uri: URI\n    added: T[]\n    removed: T[]\n    changed: T[]\n}\nexport type SourceBreakpointsChangeEvent = BreakpointsChangeEvent<SourceBreakpoint>;\nexport type FunctionBreakpointsChangeEvent = BreakpointsChangeEvent<FunctionBreakpoint>;\n\n@injectable()\nexport class BreakpointManager extends MarkerManager<SourceBreakpoint> {\n\n    static EXCEPTION_URI = new URI('debug:exception://');\n\n    static FUNCTION_URI = new URI('debug:function://');\n\n    protected readonly owner = 'breakpoint';\n\n    @inject(StorageService)\n    protected readonly storage: StorageService;\n\n    getKind(): string {\n        return BREAKPOINT_KIND;\n    }\n\n    protected readonly onDidChangeBreakpointsEmitter = new Emitter<SourceBreakpointsChangeEvent>();\n    readonly onDidChangeBreakpoints = this.onDidChangeBreakpointsEmitter.event;\n\n    protected readonly onDidChangeFunctionBreakpointsEmitter = new Emitter<FunctionBreakpointsChangeEvent>();\n    readonly onDidChangeFunctionBreakpoints = this.onDidChangeFunctionBreakpointsEmitter.event;\n\n    setMarkers(uri: URI, owner: string, newMarkers: SourceBreakpoint[]): Marker<SourceBreakpoint>[] {\n        const result = super.setMarkers(uri, owner, newMarkers);\n        const added: SourceBreakpoint[] = [];\n        const removed: SourceBreakpoint[] = [];\n        const changed: SourceBreakpoint[] = [];\n        const oldMarkers = new Map(result.map(({ data }) => [data.id, data] as [string, SourceBreakpoint]));\n        const ids = new Set<string>();\n        for (const newMarker of newMarkers) {\n            ids.add(newMarker.id);\n            if (oldMarkers.has(newMarker.id)) {\n                changed.push(newMarker);\n            } else {\n                added.push(newMarker);\n            }\n        }\n        for (const [id, data] of oldMarkers.entries()) {\n            if (!ids.has(id)) {\n                removed.push(data);\n            }\n        }\n        this.onDidChangeBreakpointsEmitter.fire({ uri, added, removed, changed });\n        return result;\n    }\n\n    getLineBreakpoints(uri: URI, line: number): SourceBreakpoint[] {\n        return this.findMarkers({\n            uri,\n            dataFilter: breakpoint => breakpoint.raw.line === line\n        }).map(({ data }) => data);\n    }\n\n    getInlineBreakpoint(uri: URI, line: number, column: number): SourceBreakpoint | undefined {\n        const marker = this.findMarkers({\n            uri,\n            dataFilter: breakpoint => breakpoint.raw.line === line && breakpoint.raw.column === column\n        })[0];\n        return marker && marker.data;\n    }\n\n    getBreakpoints(uri?: URI): SourceBreakpoint[] {\n        return this.findMarkers({ uri }).map(marker => marker.data);\n    }\n\n    setBreakpoints(uri: URI, breakpoints: SourceBreakpoint[]): void {\n        this.setMarkers(uri, this.owner, breakpoints.sort((a, b) => (a.raw.line - b.raw.line) || ((a.raw.column || 0) - (b.raw.column || 0))));\n    }\n\n    addBreakpoint(breakpoint: SourceBreakpoint): boolean {\n        const uri = new URI(breakpoint.uri);\n        const breakpoints = this.getBreakpoints(uri);\n        const newBreakpoints = breakpoints.filter(({ raw }) => !(raw.line === breakpoint.raw.line && raw.column === breakpoint.raw.column));\n        if (breakpoints.length === newBreakpoints.length) {\n            newBreakpoints.push(breakpoint);\n            this.setBreakpoints(uri, newBreakpoints);\n            return true;\n        }\n        return false;\n    }\n\n    enableAllBreakpoints(enabled: boolean): void {\n        for (const uriString of this.getUris()) {\n            let didChange = false;\n            const uri = new URI(uriString);\n            const markers = this.findMarkers({ uri });\n            for (const marker of markers) {\n                if (marker.data.enabled !== enabled) {\n                    marker.data.enabled = enabled;\n                    didChange = true;\n                }\n            }\n            if (didChange) {\n                this.fireOnDidChangeMarkers(uri);\n            }\n        }\n        let didChangeFunction = false;\n        for (const breakpoint of this.getFunctionBreakpoints()) {\n            if (breakpoint.enabled !== enabled) {\n                breakpoint.enabled = enabled;\n                didChangeFunction = true;\n\n            }\n        }\n        if (didChangeFunction) {\n            this.fireOnDidChangeMarkers(BreakpointManager.FUNCTION_URI);\n        }\n    }\n\n    protected _breakpointsEnabled = true;\n    get breakpointsEnabled(): boolean {\n        return this._breakpointsEnabled;\n    }\n    set breakpointsEnabled(breakpointsEnabled: boolean) {\n        if (this._breakpointsEnabled !== breakpointsEnabled) {\n            this._breakpointsEnabled = breakpointsEnabled;\n            for (const uri of this.getUris()) {\n                this.fireOnDidChangeMarkers(new URI(uri));\n            }\n            this.fireOnDidChangeMarkers(BreakpointManager.FUNCTION_URI);\n        }\n    }\n\n    protected readonly exceptionBreakpoints = new Map<string, ExceptionBreakpoint>();\n\n    getExceptionBreakpoint(filter: string): ExceptionBreakpoint | undefined {\n        return this.exceptionBreakpoints.get(filter);\n    }\n\n    getExceptionBreakpoints(): IterableIterator<ExceptionBreakpoint> {\n        return this.exceptionBreakpoints.values();\n    }\n\n    setExceptionBreakpoints(exceptionBreakpoints: ExceptionBreakpoint[]): void {\n        const toRemove = new Set(this.exceptionBreakpoints.keys());\n        for (const exceptionBreakpoint of exceptionBreakpoints) {\n            const filter = exceptionBreakpoint.raw.filter;\n            toRemove.delete(filter);\n            this.exceptionBreakpoints.set(filter, exceptionBreakpoint);\n        }\n        for (const filter of toRemove) {\n            this.exceptionBreakpoints.delete(filter);\n        }\n        if (toRemove.size || exceptionBreakpoints.length) {\n            this.fireOnDidChangeMarkers(BreakpointManager.EXCEPTION_URI);\n        }\n    }\n\n    toggleExceptionBreakpoint(filter: string): void {\n        const breakpoint = this.getExceptionBreakpoint(filter);\n        if (breakpoint) {\n            breakpoint.enabled = !breakpoint.enabled;\n            this.fireOnDidChangeMarkers(BreakpointManager.EXCEPTION_URI);\n        }\n    }\n\n    protected functionBreakpoints: FunctionBreakpoint[] = [];\n\n    getFunctionBreakpoints(): FunctionBreakpoint[] {\n        return this.functionBreakpoints;\n    }\n\n    setFunctionBreakpoints(functionBreakpoints: FunctionBreakpoint[]): void {\n        const oldBreakpoints = new Map(this.functionBreakpoints.map(b => [b.id, b] as [string, FunctionBreakpoint]));\n\n        this.functionBreakpoints = functionBreakpoints;\n        this.fireOnDidChangeMarkers(BreakpointManager.FUNCTION_URI);\n\n        const added: FunctionBreakpoint[] = [];\n        const removed: FunctionBreakpoint[] = [];\n        const changed: FunctionBreakpoint[] = [];\n        const ids = new Set<string>();\n        for (const newBreakpoint of functionBreakpoints) {\n            ids.add(newBreakpoint.id);\n            if (oldBreakpoints.has(newBreakpoint.id)) {\n                changed.push(newBreakpoint);\n            } else {\n                added.push(newBreakpoint);\n            }\n        }\n        for (const [id, breakpoint] of oldBreakpoints.entries()) {\n            if (!ids.has(id)) {\n                removed.push(breakpoint);\n            }\n        }\n        this.onDidChangeFunctionBreakpointsEmitter.fire({ uri: BreakpointManager.FUNCTION_URI, added, removed, changed });\n    }\n\n    hasBreakpoints(): boolean {\n        return !!this.getUris().next().value || !!this.functionBreakpoints.length;\n    }\n\n    removeBreakpoints(): void {\n        this.cleanAllMarkers();\n        this.setFunctionBreakpoints([]);\n    }\n\n    async load(): Promise<void> {\n        const data = await this.storage.getData<BreakpointManager.Data>('breakpoints', {\n            breakpointsEnabled: true,\n            breakpoints: {}\n        });\n        this._breakpointsEnabled = data.breakpointsEnabled;\n        // eslint-disable-next-line guard-for-in\n        for (const uri in data.breakpoints) {\n            this.setBreakpoints(new URI(uri), data.breakpoints[uri]);\n        }\n        if (data.functionBreakpoints) {\n            this.setFunctionBreakpoints(data.functionBreakpoints);\n        }\n        if (data.exceptionBreakpoints) {\n            this.setExceptionBreakpoints(data.exceptionBreakpoints);\n        }\n    }\n\n    save(): void {\n        const data: BreakpointManager.Data = {\n            breakpointsEnabled: this._breakpointsEnabled,\n            breakpoints: {}\n        };\n        const uris = this.getUris();\n        for (const uri of uris) {\n            data.breakpoints[uri] = this.findMarkers({ uri: new URI(uri) }).map(marker => marker.data);\n        }\n        if (this.functionBreakpoints.length) {\n            data.functionBreakpoints = this.functionBreakpoints;\n        }\n        if (this.exceptionBreakpoints.size) {\n            data.exceptionBreakpoints = [...this.exceptionBreakpoints.values()];\n        }\n        this.storage.setData('breakpoints', data);\n    }\n\n}\nexport namespace BreakpointManager {\n    export interface Data {\n        breakpointsEnabled: boolean\n        breakpoints: {\n            [uri: string]: SourceBreakpoint[]\n        }\n        exceptionBreakpoints?: ExceptionBreakpoint[]\n        functionBreakpoints?: FunctionBreakpoint[]\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { UUID } from '@phosphor/coreutils';\nimport URI from '@theia/core/lib/common/uri';\nimport { Marker } from '@theia/markers/lib/common/marker';\nimport { DebugProtocol } from 'vscode-debugprotocol/lib/debugProtocol';\n\nexport const BREAKPOINT_KIND = 'breakpoint';\n\nexport interface BaseBreakpoint {\n    id: string;\n    enabled: boolean;\n}\n\nexport interface SourceBreakpoint extends BaseBreakpoint {\n    uri: string;\n    raw: DebugProtocol.SourceBreakpoint;\n}\nexport namespace SourceBreakpoint {\n    export function create(uri: URI, data: DebugProtocol.SourceBreakpoint, origin?: SourceBreakpoint): SourceBreakpoint {\n        return {\n            id: origin ? origin.id : UUID.uuid4(),\n            uri: uri.toString(),\n            enabled: origin ? origin.enabled : true,\n            raw: {\n                ...(origin && origin.raw),\n                ...data\n            }\n        };\n    }\n}\n\nexport interface BreakpointMarker extends Marker<SourceBreakpoint> {\n    kind: 'breakpoint'\n}\nexport namespace BreakpointMarker {\n    export function is(node: Marker<object>): node is BreakpointMarker {\n        return 'kind' in node && node.kind === BREAKPOINT_KIND;\n    }\n}\n\nexport interface ExceptionBreakpoint {\n    enabled: boolean;\n    raw: DebugProtocol.ExceptionBreakpointsFilter;\n}\nexport namespace ExceptionBreakpoint {\n    export function create(data: DebugProtocol.ExceptionBreakpointsFilter, origin?: ExceptionBreakpoint): ExceptionBreakpoint {\n        return {\n            enabled: origin ? origin.enabled : false,\n            raw: {\n                ...(origin && origin.raw),\n                ...data\n            }\n        };\n    }\n}\n\nexport interface FunctionBreakpoint extends BaseBreakpoint {\n    raw: DebugProtocol.FunctionBreakpoint;\n}\nexport namespace FunctionBreakpoint {\n    export function create(data: DebugProtocol.FunctionBreakpoint, origin?: FunctionBreakpoint): FunctionBreakpoint {\n        return {\n            id: origin ? origin.id : UUID.uuid4(),\n            enabled: origin ? origin.enabled : true,\n            raw: {\n                ...(origin && origin.raw),\n                ...data\n            }\n        };\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport { DebugProtocol } from 'vscode-debugprotocol/lib/debugProtocol';\nimport { SingleTextInputDialog } from '@theia/core/lib/browser';\nimport { ConsoleItem, CompositeConsoleItem } from '@theia/console/lib/browser/console-session';\nimport { DebugSession } from '../debug-session';\nimport { Severity } from '@theia/core/lib/common/severity';\n\nexport type DebugSessionProvider = () => DebugSession | undefined;\n\nexport class ExpressionContainer implements CompositeConsoleItem {\n\n    private static readonly BASE_CHUNK_SIZE = 100;\n\n    protected readonly sessionProvider: DebugSessionProvider;\n    protected get session(): DebugSession | undefined {\n        return this.sessionProvider();\n    }\n\n    protected variablesReference: number;\n    protected namedVariables: number | undefined;\n    protected indexedVariables: number | undefined;\n    protected readonly startOfVariables: number;\n\n    constructor(options: ExpressionContainer.Options) {\n        this.sessionProvider = options.session;\n        this.variablesReference = options.variablesReference || 0;\n        this.namedVariables = options.namedVariables;\n        this.indexedVariables = options.indexedVariables;\n        this.startOfVariables = options.startOfVariables || 0;\n    }\n\n    render(): React.ReactNode {\n        return undefined;\n    }\n\n    get hasElements(): boolean {\n        return !!this.variablesReference;\n    }\n\n    protected elements: Promise<ExpressionContainer[]> | undefined;\n    async getElements(): Promise<IterableIterator<ExpressionContainer>> {\n        if (!this.hasElements || !this.session) {\n            return [][Symbol.iterator]();\n        }\n        if (!this.elements) {\n            this.elements = this.doResolve();\n        }\n        return (await this.elements)[Symbol.iterator]();\n    }\n    protected async doResolve(): Promise<ExpressionContainer[]> {\n        const result: ExpressionContainer[] = [];\n        if (this.namedVariables) {\n            await this.fetch(result, 'named');\n        }\n        if (this.indexedVariables) {\n            let chunkSize = ExpressionContainer.BASE_CHUNK_SIZE;\n            while (this.indexedVariables > chunkSize * ExpressionContainer.BASE_CHUNK_SIZE) {\n                chunkSize *= ExpressionContainer.BASE_CHUNK_SIZE;\n            }\n            if (this.indexedVariables > chunkSize) {\n                const numberOfChunks = Math.ceil(this.indexedVariables / chunkSize);\n                for (let i = 0; i < numberOfChunks; i++) {\n                    const start = this.startOfVariables + i * chunkSize;\n                    const count = Math.min(chunkSize, this.indexedVariables - i * chunkSize);\n                    const { variablesReference } = this;\n                    result.push(new DebugVirtualVariable({\n                        session: this.sessionProvider,\n                        variablesReference,\n                        namedVariables: 0,\n                        indexedVariables: count,\n                        startOfVariables: start,\n                        name: `[${start}..${start + count - 1}]`\n                    }));\n                }\n                return result;\n            }\n        }\n        await this.fetch(result, 'indexed', this.startOfVariables, this.indexedVariables);\n        return result;\n    }\n\n    protected fetch(result: ConsoleItem[], filter: 'named'): Promise<void>;\n    protected fetch(result: ConsoleItem[], filter: 'indexed', start: number, count?: number): Promise<void>;\n    protected async fetch(result: ConsoleItem[], filter: 'indexed' | 'named', start?: number, count?: number): Promise<void> {\n        try {\n            const { variablesReference } = this;\n            const response = await this.session!.sendRequest('variables', { variablesReference, filter, start, count });\n            const { variables } = response.body;\n            const names = new Set<string>();\n            for (const variable of variables) {\n                if (!names.has(variable.name)) {\n                    result.push(new DebugVariable(this.sessionProvider, variable, this));\n                    names.add(variable.name);\n                }\n            }\n        } catch (e) {\n            result.push({\n                severity: Severity.Error,\n                visible: !!e.message,\n                render: () => e.message\n            });\n        }\n    }\n\n}\nexport namespace ExpressionContainer {\n    export interface Options {\n        session: DebugSessionProvider,\n        variablesReference?: number\n        namedVariables?: number\n        indexedVariables?: number\n        startOfVariables?: number\n    }\n}\n\nexport class DebugVariable extends ExpressionContainer {\n\n    static booleanRegex = /^true|false$/i;\n    static stringRegex = /^(['\"]).*\\1$/;\n\n    constructor(\n        session: DebugSessionProvider,\n        protected readonly variable: DebugProtocol.Variable,\n        protected readonly parent: ExpressionContainer\n    ) {\n        super({\n            session,\n            variablesReference: variable.variablesReference,\n            namedVariables: variable.namedVariables,\n            indexedVariables: variable.indexedVariables\n        });\n    }\n\n    get name(): string {\n        return this.variable.name;\n    }\n    protected _type: string | undefined;\n    get type(): string | undefined {\n        return this._type || this.variable.type;\n    }\n    protected _value: string | undefined;\n    get value(): string {\n        return this._value || this.variable.value;\n    }\n\n    render(): React.ReactNode {\n        const { type, value, name } = this;\n        return <div className={this.variableClassName}>\n            <span title={type || name} className='name' ref={this.setNameRef}>{name}{!!value && ': '}</span>\n            <span title={value} ref={this.setValueRef}>{value}</span>\n        </div>;\n    }\n\n    protected get variableClassName(): string {\n        const { type, value } = this;\n        const classNames = ['theia-debug-console-variable'];\n        if (type === 'number' || type === 'boolean' || type === 'string') {\n            classNames.push(type);\n        } else if (!isNaN(+value)) {\n            classNames.push('number');\n        } else if (DebugVariable.booleanRegex.test(value)) {\n            classNames.push('boolean');\n        } else if (DebugVariable.stringRegex.test(value)) {\n            classNames.push('string');\n        }\n        return classNames.join(' ');\n    }\n\n    get supportSetVariable(): boolean {\n        return !!this.session && !!this.session.capabilities.supportsSetVariable;\n    }\n    async setValue(value: string): Promise<void> {\n        if (!this.session) {\n            return;\n        }\n        const { name, parent } = this;\n        const variablesReference = parent['variablesReference'];\n        try {\n            const response = await this.session.sendRequest('setVariable', { variablesReference, name, value });\n            this._value = response.body.value;\n            this._type = response.body.type;\n            this.variablesReference = response.body.variablesReference || 0;\n            this.namedVariables = response.body.namedVariables;\n            this.indexedVariables = response.body.indexedVariables;\n            this.elements = undefined;\n            this.session['fireDidChange']();\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    get supportCopyValue(): boolean {\n        return !!this.valueRef && document.queryCommandSupported('copy');\n    }\n    copyValue(): void {\n        const selection = document.getSelection();\n        if (this.valueRef && selection) {\n            selection.selectAllChildren(this.valueRef);\n            document.execCommand('copy');\n        }\n    }\n    protected valueRef: HTMLSpanElement | undefined;\n    protected setValueRef = (valueRef: HTMLSpanElement | null) => this.valueRef = valueRef || undefined;\n\n    get supportCopyAsExpression(): boolean {\n        return !!this.nameRef && document.queryCommandSupported('copy');\n    }\n    copyAsExpression(): void {\n        const selection = document.getSelection();\n        if (this.nameRef && selection) {\n            selection.selectAllChildren(this.nameRef);\n            document.execCommand('copy');\n        }\n    }\n    protected nameRef: HTMLSpanElement | undefined;\n    protected setNameRef = (nameRef: HTMLSpanElement | null) => this.nameRef = nameRef || undefined;\n\n    async open(): Promise<void> {\n        const input = new SingleTextInputDialog({\n            title: `Set ${this.name} Value`,\n            initialValue: this.value\n        });\n        const newValue = await input.open();\n        if (newValue) {\n            await this.setValue(newValue);\n        }\n    }\n\n}\n\nexport class DebugVirtualVariable extends ExpressionContainer {\n\n    constructor(\n        protected readonly options: VirtualVariableItem.Options\n    ) {\n        super(options);\n    }\n\n    render(): React.ReactNode {\n        return this.options.name;\n    }\n}\nexport namespace VirtualVariableItem {\n    export interface Options extends ExpressionContainer.Options {\n        name: string\n    }\n}\n\nexport class ExpressionItem extends ExpressionContainer {\n\n    severity?: Severity;\n    static notAvailable = 'not available';\n\n    protected _value = ExpressionItem.notAvailable;\n    get value(): string {\n        return this._value;\n    }\n    protected _type: string | undefined;\n    get type(): string | undefined {\n        return this._type;\n    }\n\n    protected _available = false;\n    get available(): boolean {\n        return this._available;\n    }\n\n    constructor(\n        protected _expression: string,\n        session: DebugSessionProvider\n    ) {\n        super({ session });\n    }\n\n    get expression(): string {\n        return this._expression;\n    }\n\n    render(): React.ReactNode {\n        const valueClassNames: string[] = [];\n        if (!this._available) {\n            valueClassNames.push(ConsoleItem.errorClassName);\n            valueClassNames.push('theia-debug-console-unavailable');\n        }\n        return <div className={'theia-debug-console-expression'}>\n            <div>{this._expression}</div>\n            <div className={valueClassNames.join(' ')}>{this._value}</div>\n        </div>;\n    }\n\n    async evaluate(context: string = 'repl'): Promise<void> {\n        const session = this.session;\n        if (session) {\n            try {\n                const body = await session.evaluate(this._expression, context);\n                this.setResult(body);\n            } catch (err) {\n                this.setResult(undefined, err.message);\n            }\n        } else {\n            this.setResult(undefined, 'Please start a debug session to evaluate');\n        }\n    }\n\n    protected setResult(body?: DebugProtocol.EvaluateResponse['body'], error: string = ExpressionItem.notAvailable): void {\n        if (body) {\n            this._value = body.result;\n            this._type = body.type;\n            this._available = true;\n            this.variablesReference = body.variablesReference;\n            this.namedVariables = body.namedVariables;\n            this.indexedVariables = body.indexedVariables;\n            this.severity = Severity.Log;\n        } else {\n            this._value = error;\n            this._type = undefined;\n            this._available = false;\n            this.variablesReference = 0;\n            this.namedVariables = undefined;\n            this.indexedVariables = undefined;\n            this.severity = Severity.Error;\n        }\n        this.elements = undefined;\n    }\n\n}\n\nexport class DebugScope extends ExpressionContainer {\n\n    constructor(\n        protected readonly raw: DebugProtocol.Scope,\n        session: DebugSessionProvider\n    ) {\n        super({\n            session,\n            variablesReference: raw.variablesReference,\n            namedVariables: raw.namedVariables,\n            indexedVariables: raw.indexedVariables\n        });\n    }\n\n    render(): React.ReactNode {\n        return this.raw.name;\n    }\n\n    get expensive(): boolean {\n        return this.raw.expensive;\n    }\n\n    get range(): monaco.Range | undefined {\n        const { line, column, endLine, endColumn } = this.raw;\n        if (line !== undefined && column !== undefined && endLine !== undefined && endColumn !== undefined) {\n            return new monaco.Range(line, column, endLine, endColumn);\n        }\n        return undefined;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContextKey } from '@theia/core/lib/browser/context-key-service';\n\nexport const DebugCallStackItemTypeKey = Symbol('DebugCallStackItemTypeKey');\nexport type DebugCallStackItemTypeKey = ContextKey<'session' | 'thread' | 'stackFrame'>;\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\n\nimport debounce = require('p-debounce');\nimport { visit } from 'jsonc-parser';\nimport { inject, injectable, postConstruct } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Emitter, Event, WaitUntilEvent } from '@theia/core/lib/common/event';\nimport { EditorManager, EditorWidget } from '@theia/editor/lib/browser';\nimport { MonacoEditor } from '@theia/monaco/lib/browser/monaco-editor';\nimport { PreferenceService, StorageService } from '@theia/core/lib/browser';\nimport { QuickPickService } from '@theia/core/lib/common/quick-pick-service';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport { DebugConfigurationModel } from './debug-configuration-model';\nimport { DebugSessionOptions } from './debug-session-options';\nimport { DebugService } from '../common/debug-service';\nimport { ContextKey, ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { DebugConfiguration } from '../common/debug-common';\nimport { WorkspaceVariableContribution } from '@theia/workspace/lib/browser/workspace-variable-contribution';\nimport { FileSystem, FileSystemError } from '@theia/filesystem/lib/common';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\n\nexport interface WillProvideDebugConfiguration extends WaitUntilEvent {\n}\n\n@injectable()\nexport class DebugConfigurationManager {\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n    @inject(DebugService)\n    protected readonly debug: DebugService;\n    @inject(QuickPickService)\n    protected readonly quickPick: QuickPickService;\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    @inject(FileSystem)\n    protected readonly filesystem: FileSystem;\n\n    @inject(PreferenceService)\n    protected readonly preferences: PreferenceService;\n\n    @inject(PreferenceConfigurations)\n    protected readonly preferenceConfigurations: PreferenceConfigurations;\n\n    @inject(WorkspaceVariableContribution)\n    protected readonly workspaceVariables: WorkspaceVariableContribution;\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange: Event<void> = this.onDidChangeEmitter.event;\n\n    protected readonly onWillProvideDebugConfigurationEmitter = new Emitter<WillProvideDebugConfiguration>();\n    readonly onWillProvideDebugConfiguration: Event<WillProvideDebugConfiguration> = this.onWillProvideDebugConfigurationEmitter.event;\n\n    protected debugConfigurationTypeKey: ContextKey<string>;\n\n    protected initialized: Promise<void>;\n    @postConstruct()\n    protected async init(): Promise<void> {\n        this.debugConfigurationTypeKey = this.contextKeyService.createKey<string>('debugConfigurationType', undefined);\n        this.initialized = this.updateModels();\n        this.preferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'launch') {\n                this.updateModels();\n            }\n        });\n    }\n\n    protected readonly models = new Map<string, DebugConfigurationModel>();\n    protected updateModels = debounce(async () => {\n        const roots = await this.workspaceService.roots;\n        const toDelete = new Set(this.models.keys());\n        for (const rootStat of roots) {\n            const key = rootStat.uri;\n            toDelete.delete(key);\n            if (!this.models.has(key)) {\n                const model = new DebugConfigurationModel(key, this.preferences);\n                model.onDidChange(() => this.updateCurrent());\n                model.onDispose(() => this.models.delete(key));\n                this.models.set(key, model);\n            }\n        }\n        for (const uri of toDelete) {\n            const model = this.models.get(uri);\n            if (model) {\n                model.dispose();\n            }\n        }\n        this.updateCurrent();\n    }, 500);\n\n    get all(): IterableIterator<DebugSessionOptions> {\n        return this.getAll();\n    }\n    protected *getAll(): IterableIterator<DebugSessionOptions> {\n        for (const model of this.models.values()) {\n            for (const configuration of model.configurations) {\n                yield {\n                    configuration,\n                    workspaceFolderUri: model.workspaceFolderUri\n                };\n            }\n        }\n    }\n\n    get supported(): Promise<IterableIterator<DebugSessionOptions>> {\n        return this.getSupported();\n    }\n    protected async getSupported(): Promise<IterableIterator<DebugSessionOptions>> {\n        await this.initialized;\n        const debugTypes = await this.debug.debugTypes();\n        return this.doGetSupported(new Set(debugTypes));\n    }\n    protected *doGetSupported(debugTypes: Set<string>): IterableIterator<DebugSessionOptions> {\n        for (const options of this.getAll()) {\n            if (debugTypes.has(options.configuration.type)) {\n                yield options;\n            }\n        }\n    }\n\n    protected _currentOptions: DebugSessionOptions | undefined;\n    get current(): DebugSessionOptions | undefined {\n        return this._currentOptions;\n    }\n    set current(option: DebugSessionOptions | undefined) {\n        this.updateCurrent(option);\n    }\n    protected updateCurrent(options: DebugSessionOptions | undefined = this._currentOptions): void {\n        this._currentOptions = options\n            && this.find(options.configuration.name, options.workspaceFolderUri);\n        if (!this._currentOptions) {\n            const { model } = this;\n            if (model) {\n                const configuration = model.configurations[0];\n                if (configuration) {\n                    this._currentOptions = {\n                        configuration,\n                        workspaceFolderUri: model.workspaceFolderUri\n                    };\n                }\n            }\n        }\n        this.debugConfigurationTypeKey.set(this.current && this.current.configuration.type);\n        this.onDidChangeEmitter.fire(undefined);\n    }\n    find(name: string, workspaceFolderUri: string | undefined): DebugSessionOptions | undefined {\n        for (const model of this.models.values()) {\n            if (model.workspaceFolderUri === workspaceFolderUri) {\n                for (const configuration of model.configurations) {\n                    if (configuration.name === name) {\n                        return {\n                            configuration,\n                            workspaceFolderUri\n                        };\n                    }\n                }\n            }\n        }\n        return undefined;\n    }\n\n    async openConfiguration(): Promise<void> {\n        const { model } = this;\n        if (model) {\n            await this.doOpen(model);\n        }\n    }\n    async addConfiguration(): Promise<void> {\n        const { model } = this;\n        if (!model) {\n            return;\n        }\n        const widget = await this.doOpen(model);\n        if (!(widget.editor instanceof MonacoEditor)) {\n            return;\n        }\n        const editor = widget.editor.getControl();\n        const { commandService } = widget.editor;\n        let position: monaco.Position | undefined;\n        let depthInArray = 0;\n        let lastProperty = '';\n        visit(editor.getValue(), {\n            onObjectProperty: property => {\n                lastProperty = property;\n            },\n            onArrayBegin: offset => {\n                if (lastProperty === 'configurations' && depthInArray === 0) {\n                    position = editor.getModel()!.getPositionAt(offset + 1);\n                }\n                depthInArray++;\n            },\n            onArrayEnd: () => {\n                depthInArray--;\n            }\n        });\n        if (!position) {\n            return;\n        }\n        // Check if there are more characters on a line after a \"configurations\": [, if yes enter a newline\n        if (editor.getModel()!.getLineLastNonWhitespaceColumn(position.lineNumber) > position.column) {\n            editor.setPosition(position);\n            editor.trigger('debug', 'lineBreakInsert', undefined);\n        }\n        // Check if there is already an empty line to insert suggest, if yes just place the cursor\n        if (editor.getModel()!.getLineLastNonWhitespaceColumn(position.lineNumber + 1) === 0) {\n            editor.setPosition({ lineNumber: position.lineNumber + 1, column: 1 << 30 });\n            await commandService.executeCommand('editor.action.deleteLines');\n        }\n        editor.setPosition(position);\n        await commandService.executeCommand('editor.action.insertLineAfter');\n        await commandService.executeCommand('editor.action.triggerSuggest');\n    }\n\n    protected get model(): DebugConfigurationModel | undefined {\n        const workspaceFolderUri = this.workspaceVariables.getWorkspaceRootUri();\n        if (workspaceFolderUri) {\n            const key = workspaceFolderUri.toString();\n            for (const model of this.models.values()) {\n                if (model.workspaceFolderUri === key) {\n                    return model;\n                }\n            }\n        }\n        for (const model of this.models.values()) {\n            if (model.uri) {\n                return model;\n            }\n        }\n        return this.models.values().next().value;\n    }\n\n    protected async doOpen(model: DebugConfigurationModel): Promise<EditorWidget> {\n        let uri = model.uri;\n        if (!uri) {\n            uri = await this.doCreate(model);\n        }\n        return this.editorManager.open(uri, {\n            mode: 'activate'\n        });\n    }\n    protected async doCreate(model: DebugConfigurationModel): Promise<URI> {\n        await this.preferences.set('launch', {}); // create dummy launch.json in the correct place\n        const { configUri } = this.preferences.resolve('launch'); // get uri to write content to it\n        let uri: URI;\n        if (configUri && configUri.path.base === 'launch.json') {\n            uri = configUri;\n        } else { // fallback\n            uri = new URI(model.workspaceFolderUri).resolve(`${this.preferenceConfigurations.getPaths()[0]}/launch.json`);\n        }\n        const debugType = await this.selectDebugType();\n        const configurations = debugType ? await this.provideDebugConfigurations(debugType, model.workspaceFolderUri) : [];\n        const content = this.getInitialConfigurationContent(configurations);\n        const fileStat = await this.filesystem.getFileStat(uri.toString());\n        if (!fileStat) {\n            throw new Error(`file not found: ${uri.toString()}`);\n        }\n        try {\n            await this.filesystem.setContent(fileStat, content);\n        } catch (e) {\n            if (!FileSystemError.FileExists.is(e)) {\n                throw e;\n            }\n        }\n        return uri;\n    }\n\n    protected async provideDebugConfigurations(debugType: string, workspaceFolderUri: string | undefined): Promise<DebugConfiguration[]> {\n        await this.fireWillProvideDebugConfiguration();\n        return this.debug.provideDebugConfigurations(debugType, workspaceFolderUri);\n    }\n    protected async fireWillProvideDebugConfiguration(): Promise<void> {\n        await WaitUntilEvent.fire(this.onWillProvideDebugConfigurationEmitter, {});\n    }\n\n    protected getInitialConfigurationContent(initialConfigurations: DebugConfiguration[]): string {\n        return `{\n  // Use IntelliSense to learn about possible attributes.\n  // Hover to view descriptions of existing attributes.\n  \"version\": \"0.2.0\",\n  \"configurations\": ${JSON.stringify(initialConfigurations, undefined, '  ').split('\\n').map(line => '  ' + line).join('\\n').trim()}\n}\n`;\n    }\n\n    protected async selectDebugType(): Promise<string | undefined> {\n        const widget = this.editorManager.currentEditor;\n        if (!widget) {\n            return undefined;\n        }\n        const { languageId } = widget.editor.document;\n        const debuggers = await this.debug.getDebuggersForLanguage(languageId);\n        return this.quickPick.show(debuggers.map(\n            ({ label, type }) => ({ label, value: type }),\n            { placeholder: 'Select Environment' })\n        );\n    }\n\n    @inject(StorageService)\n    protected readonly storage: StorageService;\n\n    async load(): Promise<void> {\n        await this.initialized;\n        const data = await this.storage.getData<DebugConfigurationManager.Data>('debug.configurations', {});\n        if (data.current) {\n            this.current = this.find(data.current.name, data.current.workspaceFolderUri);\n        }\n    }\n\n    save(): void {\n        const data: DebugConfigurationManager.Data = {};\n        const { current } = this;\n        if (current) {\n            data.current = {\n                name: current.configuration.name,\n                workspaceFolderUri: current.workspaceFolderUri\n            };\n        }\n        this.storage.setData('debug.configurations', data);\n    }\n\n}\nexport namespace DebugConfigurationManager {\n    export interface Data {\n        current?: {\n            name: string\n            workspaceFolderUri?: string\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from '@theia/core/lib/common/uri';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { DebugConfiguration } from '../common/debug-common';\nimport { PreferenceService } from '@theia/core/lib/browser/preferences/preference-service';\n\nexport class DebugConfigurationModel implements Disposable {\n\n    protected json: DebugConfigurationModel.JsonContent;\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange: Event<void> = this.onDidChangeEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection(\n        this.onDidChangeEmitter\n    );\n\n    constructor(\n        readonly workspaceFolderUri: string,\n        protected readonly preferences: PreferenceService\n    ) {\n        this.reconcile();\n        this.toDispose.push(this.preferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'launch' && e.affects(workspaceFolderUri)) {\n                this.reconcile();\n            }\n        }));\n    }\n\n    get uri(): URI | undefined {\n        return this.json.uri;\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n    get onDispose(): Event<void> {\n        return this.toDispose.onDispose;\n    }\n\n    get configurations(): DebugConfiguration[] {\n        return this.json.configurations;\n    }\n\n    async reconcile(): Promise<void> {\n        this.json = this.parseConfigurations();\n        this.onDidChangeEmitter.fire(undefined);\n    }\n    protected parseConfigurations(): DebugConfigurationModel.JsonContent {\n        const configurations: DebugConfiguration[] = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const { configUri, value } = this.preferences.resolve<any>('launch', undefined, this.workspaceFolderUri);\n        if (value && typeof value === 'object' && 'configurations' in value) {\n            if (Array.isArray(value.configurations)) {\n                for (const configuration of value.configurations) {\n                    if (DebugConfiguration.is(configuration)) {\n                        configurations.push(configuration);\n                    }\n                }\n            }\n        }\n        return {\n            uri: configUri,\n            configurations\n        };\n    }\n\n}\nexport namespace DebugConfigurationModel {\n    export interface JsonContent {\n        uri?: URI\n        configurations: DebugConfiguration[]\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { PreferenceSchema, PreferenceProxy, PreferenceService, createPreferenceProxy, PreferenceContribution } from '@theia/core/lib/browser/preferences';\nimport { interfaces } from 'inversify';\n\nexport const debugPreferencesSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        'debug.trace': {\n            type: 'boolean',\n            default: false,\n            description: 'Enable/disable tracing communications with debug adapters'\n        },\n        'debug.debugViewLocation': {\n            enum: ['default', 'left', 'right', 'bottom'],\n            default: 'default',\n            description: 'Controls the location of the debug view.'\n        },\n        'debug.openDebug': {\n            enum: ['neverOpen', 'openOnSessionStart', 'openOnFirstSessionStart', 'openOnDebugBreak'],\n            default: 'openOnSessionStart',\n            description: 'Controls when the debug view should open.'\n        },\n        'debug.internalConsoleOptions': {\n            enum: ['neverOpen', 'openOnSessionStart', 'openOnFirstSessionStart'],\n            default: 'openOnFirstSessionStart',\n            description: 'Controls when the internal debug console should open.'\n        },\n        'debug.inlineValues': {\n            type: 'boolean',\n            default: false,\n            description: 'Show variable values inline in editor while debugging.'\n        },\n        'debug.showInStatusBar': {\n            enum: ['never', 'always', 'onFirstSessionStart'],\n            description: 'Controls when the debug status bar should be visible.',\n            default: 'onFirstSessionStart'\n        }\n    }\n};\n\nexport class DebugConfiguration {\n    'debug.trace': boolean;\n    'debug.debugViewLocation': 'default' | 'left' | 'right' | 'bottom';\n    'debug.openDebug': 'neverOpen' | 'openOnSessionStart' | 'openOnFirstSessionStart' | 'openOnDebugBreak';\n    'debug.internalConsoleOptions': 'neverOpen' | 'openOnSessionStart' | 'openOnFirstSessionStart';\n    'debug.inlineValues': boolean;\n    'debug.showInStatusBar': 'never' | 'always' | 'onFirstSessionStart';\n}\n\nexport const DebugPreferences = Symbol('DebugPreferences');\nexport type DebugPreferences = PreferenceProxy<DebugConfiguration>;\n\nexport function createDebugPreferences(preferences: PreferenceService): DebugPreferences {\n    return createPreferenceProxy(preferences, debugPreferencesSchema);\n}\n\nexport function bindDebugPreferences(bind: interfaces.Bind): void {\n    bind(DebugPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createDebugPreferences(preferences);\n    }).inSingletonScope();\n\n    bind(PreferenceContribution).toConstantValue({ schema: debugPreferencesSchema });\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { DebugProtocol } from 'vscode-debugprotocol';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { Event, Emitter, DisposableCollection, Disposable, MaybePromise } from '@theia/core';\nimport { OutputChannel } from '@theia/output/lib/common/output-channel';\nimport { IWebSocket } from 'vscode-ws-jsonrpc/lib/socket/socket';\n\nexport interface DebugExitEvent {\n    code?: number\n    reason?: string | Error\n}\n\nexport type DebugRequestHandler = (request: DebugProtocol.Request) => MaybePromise<any>;\n\nexport interface DebugRequestTypes {\n    'attach': [DebugProtocol.AttachRequestArguments, DebugProtocol.AttachResponse]\n    'completions': [DebugProtocol.CompletionsArguments, DebugProtocol.CompletionsResponse]\n    'configurationDone': [DebugProtocol.ConfigurationDoneArguments, DebugProtocol.ConfigurationDoneResponse]\n    'continue': [DebugProtocol.ContinueArguments, DebugProtocol.ContinueResponse]\n    'disconnect': [DebugProtocol.DisconnectArguments, DebugProtocol.DisconnectResponse]\n    'evaluate': [DebugProtocol.EvaluateArguments, DebugProtocol.EvaluateResponse]\n    'exceptionInfo': [DebugProtocol.ExceptionInfoArguments, DebugProtocol.ExceptionInfoResponse]\n    'goto': [DebugProtocol.GotoArguments, DebugProtocol.GotoResponse]\n    'gotoTargets': [DebugProtocol.GotoTargetsArguments, DebugProtocol.GotoTargetsResponse]\n    'initialize': [DebugProtocol.InitializeRequestArguments, DebugProtocol.InitializeResponse]\n    'launch': [DebugProtocol.LaunchRequestArguments, DebugProtocol.LaunchResponse]\n    'loadedSources': [DebugProtocol.LoadedSourcesArguments, DebugProtocol.LoadedSourcesResponse]\n    'modules': [DebugProtocol.ModulesArguments, DebugProtocol.ModulesResponse]\n    'next': [DebugProtocol.NextArguments, DebugProtocol.NextResponse]\n    'pause': [DebugProtocol.PauseArguments, DebugProtocol.PauseResponse]\n    'restart': [DebugProtocol.RestartArguments, DebugProtocol.RestartResponse]\n    'restartFrame': [DebugProtocol.RestartFrameArguments, DebugProtocol.RestartFrameResponse]\n    'reverseContinue': [DebugProtocol.ReverseContinueArguments, DebugProtocol.ReverseContinueResponse]\n    'scopes': [DebugProtocol.ScopesArguments, DebugProtocol.ScopesResponse]\n    'setBreakpoints': [DebugProtocol.SetBreakpointsArguments, DebugProtocol.SetBreakpointsResponse]\n    'setExceptionBreakpoints': [DebugProtocol.SetExceptionBreakpointsArguments, DebugProtocol.SetExceptionBreakpointsResponse]\n    'setExpression': [DebugProtocol.SetExpressionArguments, DebugProtocol.SetExpressionResponse]\n    'setFunctionBreakpoints': [DebugProtocol.SetFunctionBreakpointsArguments, DebugProtocol.SetFunctionBreakpointsResponse]\n    'setVariable': [DebugProtocol.SetVariableArguments, DebugProtocol.SetVariableResponse]\n    'source': [DebugProtocol.SourceArguments, DebugProtocol.SourceResponse]\n    'stackTrace': [DebugProtocol.StackTraceArguments, DebugProtocol.StackTraceResponse]\n    'stepBack': [DebugProtocol.StepBackArguments, DebugProtocol.StepBackResponse]\n    'stepIn': [DebugProtocol.StepInArguments, DebugProtocol.StepInResponse]\n    'stepInTargets': [DebugProtocol.StepInTargetsArguments, DebugProtocol.StepInTargetsResponse]\n    'stepOut': [DebugProtocol.StepOutArguments, DebugProtocol.StepOutResponse]\n    'terminate': [DebugProtocol.TerminateArguments, DebugProtocol.TerminateResponse]\n    'terminateThreads': [DebugProtocol.TerminateThreadsArguments, DebugProtocol.TerminateThreadsResponse]\n    'threads': [{}, DebugProtocol.ThreadsResponse]\n    'variables': [DebugProtocol.VariablesArguments, DebugProtocol.VariablesResponse]\n}\n\nexport interface DebugEventTypes {\n    'breakpoint': DebugProtocol.BreakpointEvent\n    'capabilities': DebugProtocol.CapabilitiesEvent\n    'continued': DebugProtocol.ContinuedEvent\n    'exited': DebugExitEvent\n    'initialized': DebugProtocol.InitializedEvent\n    'loadedSource': DebugProtocol.LoadedSourceEvent\n    'module': DebugProtocol.ModuleEvent\n    'output': DebugProtocol.OutputEvent\n    'process': DebugProtocol.ProcessEvent\n    'stopped': DebugProtocol.StoppedEvent\n    'terminated': DebugProtocol.TerminatedEvent\n    'thread': DebugProtocol.ThreadEvent\n}\nconst standardDebugEvents = new Set<string>([\n    'breakpoint',\n    'capabilities',\n    'continued',\n    'exited',\n    'initialized',\n    'loadedSource',\n    'module',\n    'output',\n    'process',\n    'stopped',\n    'terminated',\n    'thread'\n]);\n\nexport class DebugSessionConnection implements Disposable {\n\n    private sequence = 1;\n\n    protected readonly pendingRequests = new Map<number, (response: DebugProtocol.Response) => void>();\n    protected readonly connection: Promise<IWebSocket>;\n\n    protected readonly requestHandlers = new Map<string, DebugRequestHandler>();\n\n    protected readonly onDidCustomEventEmitter = new Emitter<DebugProtocol.Event>();\n    readonly onDidCustomEvent: Event<DebugProtocol.Event> = this.onDidCustomEventEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection(\n        this.onDidCustomEventEmitter,\n        Disposable.create(() => this.pendingRequests.clear()),\n        Disposable.create(() => this.emitters.clear())\n    );\n\n    constructor(\n        readonly sessionId: string,\n        protected readonly connectionFactory: (sessionId: string) => Promise<IWebSocket>,\n        protected readonly traceOutputChannel: OutputChannel | undefined\n    ) {\n        this.connection = this.createConnection();\n    }\n\n    get disposed(): boolean {\n        return this.toDispose.disposed;\n    }\n    protected checkDisposed(): void {\n        if (this.disposed) {\n            throw new Error('the debug session connection is disposed, id: ' + this.sessionId);\n        }\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    protected async createConnection(): Promise<IWebSocket> {\n        if (this.disposed) {\n            throw new Error('Connection has been already disposed.');\n        } else {\n            const connection = await this.connectionFactory(this.sessionId);\n            connection.onClose((code, reason) => {\n                connection.dispose();\n                this.fire('exited', { code, reason });\n            });\n            connection.onMessage(data => this.handleMessage(data));\n            return connection;\n        }\n    }\n\n    protected allThreadsContinued = true;\n    async sendRequest<K extends keyof DebugRequestTypes>(command: K, args: DebugRequestTypes[K][0]): Promise<DebugRequestTypes[K][1]> {\n        const result = await this.doSendRequest(command, args);\n        if (command === 'next' || command === 'stepIn' ||\n            command === 'stepOut' || command === 'stepBack' ||\n            command === 'reverseContinue' || command === 'restartFrame') {\n            this.fireContinuedEvent((args as any).threadId);\n        }\n        if (command === 'continue') {\n            const response = result as DebugProtocol.ContinueResponse;\n            const allThreadsContinued = response && response.body && response.body.allThreadsContinued;\n            if (allThreadsContinued !== undefined) {\n                this.allThreadsContinued = result.body.allThreadsContinued;\n            }\n            this.fireContinuedEvent((args as any).threadId, this.allThreadsContinued);\n            return result;\n        }\n        return result;\n    }\n    sendCustomRequest<T extends DebugProtocol.Response>(command: string, args?: any): Promise<T> {\n        return this.doSendRequest<T>(command, args);\n    }\n    protected async doSendRequest<K extends DebugProtocol.Response>(command: string, args?: any): Promise<K> {\n        const result = new Deferred<K>();\n\n        const request: DebugProtocol.Request = {\n            seq: this.sequence++,\n            type: 'request',\n            command: command,\n            arguments: args\n        };\n\n        const onDispose = this.toDispose.push(Disposable.create(() => {\n            const pendingRequest = this.pendingRequests.get(request.seq);\n            if (pendingRequest) {\n                pendingRequest({\n                    type: 'response',\n                    request_seq: request.seq,\n                    command: request.command,\n                    seq: 0,\n                    success: false,\n                    message: 'debug session is closed'\n                });\n            }\n        }));\n        this.pendingRequests.set(request.seq, (response: K) => {\n            onDispose.dispose();\n            if (!response.success) {\n                result.reject(response);\n            } else {\n                result.resolve(response);\n            }\n        });\n\n        await this.send(request);\n        return result.promise;\n    }\n\n    protected async send(message: DebugProtocol.ProtocolMessage): Promise<void> {\n        const connection = await this.connection;\n        const messageStr = JSON.stringify(message);\n        if (this.traceOutputChannel) {\n            this.traceOutputChannel.appendLine(`${this.sessionId.substring(0, 8)} theia -> adapter: ${messageStr}`);\n        }\n        connection.send(messageStr);\n    }\n\n    protected handleMessage(data: string): void {\n        if (this.traceOutputChannel) {\n            this.traceOutputChannel.appendLine(`${this.sessionId.substring(0, 8)} theia <- adapter: ${data}`);\n        }\n        const message: DebugProtocol.ProtocolMessage = JSON.parse(data);\n        if (message.type === 'request') {\n            this.handleRequest(message as DebugProtocol.Request);\n        } else if (message.type === 'response') {\n            this.handleResponse(message as DebugProtocol.Response);\n        } else if (message.type === 'event') {\n            this.handleEvent(message as DebugProtocol.Event);\n        }\n    }\n\n    protected handleResponse(response: DebugProtocol.Response): void {\n        const callback = this.pendingRequests.get(response.request_seq);\n        if (callback) {\n            this.pendingRequests.delete(response.request_seq);\n            callback(response);\n        }\n    }\n\n    onRequest(command: string, handler: DebugRequestHandler): void {\n        this.requestHandlers.set(command, handler);\n    }\n\n    protected async handleRequest(request: DebugProtocol.Request): Promise<void> {\n        const response: DebugProtocol.Response = {\n            type: 'response',\n            seq: 0,\n            command: request.command,\n            request_seq: request.seq,\n            success: true,\n        };\n        const handler = this.requestHandlers.get(request.command);\n        if (handler) {\n            try {\n                response.body = await handler(request);\n            } catch (error) {\n                response.success = false;\n                response.message = error.message;\n            }\n        } else {\n            console.error('Unhandled request', request);\n        }\n        await this.send(response);\n    }\n\n    protected handleEvent(event: DebugProtocol.Event): void {\n        if ('event' in event) {\n            if (event.event === 'continued') {\n                this.allThreadsContinued = (<DebugProtocol.ContinuedEvent>event).body.allThreadsContinued === false ? false : true;\n            }\n            if (standardDebugEvents.has(event.event)) {\n                this.doFire(event.event, event);\n            } else {\n                this.onDidCustomEventEmitter.fire(event);\n            }\n        } else {\n            this.fire('exited', event);\n        }\n    }\n\n    protected readonly emitters = new Map<string, Emitter<DebugProtocol.Event | DebugExitEvent>>();\n    on<K extends keyof DebugEventTypes>(kind: K, listener: (e: DebugEventTypes[K]) => any): Disposable {\n        return this.getEmitter(kind).event(listener);\n    }\n    protected fire<K extends keyof DebugEventTypes>(kind: K, e: DebugEventTypes[K]): void {\n        this.doFire(kind, e);\n    }\n    protected doFire(kind: string, e: DebugProtocol.Event | DebugExitEvent): void {\n        this.getEmitter(kind).fire(e);\n    }\n    protected getEmitter(kind: string): Emitter<DebugProtocol.Event | DebugExitEvent> {\n        const emitter = this.emitters.get(kind) || this.newEmitter();\n        this.emitters.set(kind, emitter);\n        return emitter;\n    }\n    protected newEmitter(): Emitter<DebugProtocol.Event | DebugExitEvent> {\n        const emitter = new Emitter();\n        this.checkDisposed();\n        this.toDispose.push(emitter);\n        return emitter;\n    }\n\n    protected fireContinuedEvent(threadId: number, allThreadsContinued = false): void {\n        this.fire('continued', {\n            type: 'event',\n            event: 'continued',\n            body: {\n                threadId,\n                allThreadsContinued\n            },\n            seq: -1\n        });\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, named, postConstruct } from 'inversify';\nimport { MessageClient } from '@theia/core/lib/common';\nimport { LabelProvider } from '@theia/core/lib/browser';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { TerminalService } from '@theia/terminal/lib/browser/base/terminal-service';\nimport { WebSocketConnectionProvider } from '@theia/core/lib/browser/messaging/ws-connection-provider';\nimport { DebugSession } from './debug-session';\nimport { BreakpointManager } from './breakpoint/breakpoint-manager';\nimport { DebugSessionOptions } from './debug-session-options';\nimport { OutputChannelManager, OutputChannel } from '@theia/output/lib/common/output-channel';\nimport { DebugPreferences } from './debug-preferences';\nimport { DebugSessionConnection } from './debug-session-connection';\nimport { IWebSocket } from 'vscode-ws-jsonrpc/lib/socket/socket';\nimport { DebugAdapterPath } from '../common/debug-service';\nimport { ContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { FileSystem } from '@theia/filesystem/lib/common';\n\n/**\n * DebugSessionContribution symbol for DI.\n */\nexport const DebugSessionContribution = Symbol('DebugSessionContribution');\n/**\n * The [debug session](#DebugSession) contribution.\n * Can be used to instantiate a specific debug sessions.\n */\nexport interface DebugSessionContribution {\n    /**\n     * The debug type.\n     */\n    debugType: string;\n\n    /**\n     * The [debug session](#DebugSession) factory.\n     */\n    debugSessionFactory(): DebugSessionFactory;\n}\n\n/**\n * DebugSessionContributionRegistry symbol for DI.\n */\nexport const DebugSessionContributionRegistry = Symbol('DebugSessionContributionRegistry');\n/**\n * Debug session contribution registry.\n */\nexport interface DebugSessionContributionRegistry {\n    get(debugType: string): DebugSessionContribution | undefined;\n}\n\n@injectable()\nexport class DebugSessionContributionRegistryImpl implements DebugSessionContributionRegistry {\n    protected readonly contribs = new Map<string, DebugSessionContribution>();\n\n    @inject(ContributionProvider) @named(DebugSessionContribution)\n    protected readonly contributions: ContributionProvider<DebugSessionContribution>;\n\n    @postConstruct()\n    protected init(): void {\n        for (const contrib of this.contributions.getContributions()) {\n            this.contribs.set(contrib.debugType, contrib);\n        }\n    }\n\n    get(debugType: string): DebugSessionContribution | undefined {\n        return this.contribs.get(debugType);\n    }\n}\n\n/**\n * DebugSessionFactory symbol for DI.\n */\nexport const DebugSessionFactory = Symbol('DebugSessionFactory');\n\n/**\n * The [debug session](#DebugSession) factory.\n */\nexport interface DebugSessionFactory {\n    get(sessionId: string, options: DebugSessionOptions): DebugSession;\n}\n\n@injectable()\nexport class DefaultDebugSessionFactory implements DebugSessionFactory {\n\n    @inject(WebSocketConnectionProvider)\n    protected readonly connectionProvider: WebSocketConnectionProvider;\n    @inject(TerminalService)\n    protected readonly terminalService: TerminalService;\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n    @inject(BreakpointManager)\n    protected readonly breakpoints: BreakpointManager;\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n    @inject(MessageClient)\n    protected readonly messages: MessageClient;\n    @inject(OutputChannelManager)\n    protected readonly outputChannelManager: OutputChannelManager;\n    @inject(DebugPreferences)\n    protected readonly debugPreferences: DebugPreferences;\n    @inject(FileSystem)\n    protected readonly fileSystem: FileSystem;\n\n    get(sessionId: string, options: DebugSessionOptions): DebugSession {\n        const connection = new DebugSessionConnection(\n            sessionId,\n            () => new Promise<IWebSocket>(resolve =>\n                this.connectionProvider.openChannel(`${DebugAdapterPath}/${sessionId}`, channel => {\n                    resolve(channel);\n                }, { reconnecting: false })\n            ),\n            this.getTraceOutputChannel());\n        return new DebugSession(\n            sessionId,\n            options,\n            connection,\n            this.terminalService,\n            this.editorManager,\n            this.breakpoints,\n            this.labelProvider,\n            this.messages,\n            this.fileSystem);\n    }\n\n    protected getTraceOutputChannel(): OutputChannel | undefined {\n        if (this.debugPreferences['debug.trace']) {\n            return this.outputChannelManager.getChannel('Debug adapters');\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { DisposableCollection, Emitter, Event, MessageService, ProgressService, WaitUntilEvent } from '@theia/core';\nimport { LabelProvider, ApplicationShell } from '@theia/core/lib/browser';\nimport { ContextKey, ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport URI from '@theia/core/lib/common/uri';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { QuickOpenTask } from '@theia/task/lib/browser/quick-open-task';\nimport { TaskService, TaskEndedInfo, TaskEndedTypes } from '@theia/task/lib/browser/task-service';\nimport { VariableResolverService } from '@theia/variable-resolver/lib/browser';\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { DebugConfiguration } from '../common/debug-common';\nimport { DebugError, DebugService } from '../common/debug-service';\nimport { BreakpointManager } from './breakpoint/breakpoint-manager';\nimport { DebugConfigurationManager } from './debug-configuration-manager';\nimport { DebugSession, DebugState } from './debug-session';\nimport { DebugSessionContributionRegistry, DebugSessionFactory } from './debug-session-contribution';\nimport { DebugSessionOptions, InternalDebugSessionOptions } from './debug-session-options';\nimport { DebugStackFrame } from './model/debug-stack-frame';\nimport { DebugThread } from './model/debug-thread';\nimport { TaskIdentifier } from '@theia/task/lib/common';\nimport { DebugSourceBreakpoint } from './model/debug-source-breakpoint';\nimport { DebugFunctionBreakpoint } from './model/debug-function-breakpoint';\n\nexport interface WillStartDebugSession extends WaitUntilEvent {\n}\n\nexport interface WillResolveDebugConfiguration extends WaitUntilEvent {\n    debugType: string\n}\n\nexport interface DidChangeActiveDebugSession {\n    previous: DebugSession | undefined\n    current: DebugSession | undefined\n}\n\nexport interface DidChangeBreakpointsEvent {\n    session?: DebugSession\n    uri: URI\n}\n\nexport interface DebugSessionCustomEvent {\n    readonly body?: any\n    readonly event: string\n    readonly session: DebugSession\n}\n\n@injectable()\nexport class DebugSessionManager {\n    protected readonly _sessions = new Map<string, DebugSession>();\n\n    protected readonly onWillStartDebugSessionEmitter = new Emitter<WillStartDebugSession>();\n    readonly onWillStartDebugSession: Event<WillStartDebugSession> = this.onWillStartDebugSessionEmitter.event;\n\n    protected readonly onWillResolveDebugConfigurationEmitter = new Emitter<WillResolveDebugConfiguration>();\n    readonly onWillResolveDebugConfiguration: Event<WillResolveDebugConfiguration> = this.onWillResolveDebugConfigurationEmitter.event;\n\n    protected readonly onDidCreateDebugSessionEmitter = new Emitter<DebugSession>();\n    readonly onDidCreateDebugSession: Event<DebugSession> = this.onDidCreateDebugSessionEmitter.event;\n\n    protected readonly onDidStartDebugSessionEmitter = new Emitter<DebugSession>();\n    readonly onDidStartDebugSession: Event<DebugSession> = this.onDidStartDebugSessionEmitter.event;\n\n    protected readonly onDidStopDebugSessionEmitter = new Emitter<DebugSession>();\n    readonly onDidStopDebugSession: Event<DebugSession> = this.onDidStopDebugSessionEmitter.event;\n\n    protected readonly onDidChangeActiveDebugSessionEmitter = new Emitter<DidChangeActiveDebugSession>();\n    readonly onDidChangeActiveDebugSession: Event<DidChangeActiveDebugSession> = this.onDidChangeActiveDebugSessionEmitter.event;\n\n    protected readonly onDidDestroyDebugSessionEmitter = new Emitter<DebugSession>();\n    readonly onDidDestroyDebugSession: Event<DebugSession> = this.onDidDestroyDebugSessionEmitter.event;\n\n    protected readonly onDidReceiveDebugSessionCustomEventEmitter = new Emitter<DebugSessionCustomEvent>();\n    readonly onDidReceiveDebugSessionCustomEvent: Event<DebugSessionCustomEvent> = this.onDidReceiveDebugSessionCustomEventEmitter.event;\n\n    protected readonly onDidChangeBreakpointsEmitter = new Emitter<DidChangeBreakpointsEvent>();\n    readonly onDidChangeBreakpoints: Event<DidChangeBreakpointsEvent> = this.onDidChangeBreakpointsEmitter.event;\n    protected fireDidChangeBreakpoints(event: DidChangeBreakpointsEvent): void {\n        this.onDidChangeBreakpointsEmitter.fire(event);\n    }\n\n    protected readonly onDidChangeEmitter = new Emitter<DebugSession | undefined>();\n    readonly onDidChange: Event<DebugSession | undefined> = this.onDidChangeEmitter.event;\n    protected fireDidChange(current: DebugSession | undefined): void {\n        this.inDebugModeKey.set(this.inDebugMode);\n        this.onDidChangeEmitter.fire(current);\n    }\n\n    @inject(DebugSessionFactory)\n    protected readonly debugSessionFactory: DebugSessionFactory;\n\n    @inject(DebugService)\n    protected readonly debug: DebugService;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(BreakpointManager)\n    protected readonly breakpoints: BreakpointManager;\n\n    @inject(VariableResolverService)\n    protected readonly variableResolver: VariableResolverService;\n\n    @inject(DebugSessionContributionRegistry)\n    protected readonly sessionContributionRegistry: DebugSessionContributionRegistry;\n\n    @inject(MessageService)\n    protected readonly messageService: MessageService;\n\n    @inject(ProgressService)\n    protected readonly progressService: ProgressService;\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    @inject(TaskService)\n    protected readonly taskService: TaskService;\n\n    @inject(DebugConfigurationManager)\n    protected readonly debugConfigurationManager: DebugConfigurationManager;\n\n    @inject(QuickOpenTask)\n    protected readonly quickOpenTask: QuickOpenTask;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    protected debugTypeKey: ContextKey<string>;\n    protected inDebugModeKey: ContextKey<boolean>;\n\n    @postConstruct()\n    protected init(): void {\n        this.debugTypeKey = this.contextKeyService.createKey<string>('debugType', undefined);\n        this.inDebugModeKey = this.contextKeyService.createKey<boolean>('inDebugMode', this.inDebugMode);\n        this.breakpoints.onDidChangeMarkers(uri => this.fireDidChangeBreakpoints({ uri }));\n        this.labelProvider.onDidChange(event => {\n            for (const uriString of this.breakpoints.getUris()) {\n                const uri = new URI(uriString);\n                if (event.affects(uri)) {\n                    this.fireDidChangeBreakpoints({ uri });\n                }\n            }\n        });\n    }\n\n    get inDebugMode(): boolean {\n        return this.state > DebugState.Inactive;\n    }\n\n    async start(options: DebugSessionOptions): Promise<DebugSession | undefined> {\n        return this.progressService.withProgress('Start...', 'debug', async () => {\n            try {\n                await this.shell.saveAll();\n                await this.fireWillStartDebugSession();\n                const resolved = await this.resolveConfiguration(options);\n\n                // preLaunchTask isn't run in case of auto restart as well as postDebugTask\n                if (!options.configuration.__restart) {\n                    const taskRun = await this.runTask(options.workspaceFolderUri, resolved.configuration.preLaunchTask, true);\n                    if (!taskRun) {\n                        return undefined;\n                    }\n                }\n\n                const sessionId = await this.debug.createDebugSession(resolved.configuration);\n                return this.doStart(sessionId, resolved);\n            } catch (e) {\n                if (DebugError.NotFound.is(e)) {\n                    this.messageService.error(`The debug session type \"${e.data.type}\" is not supported.`);\n                    return undefined;\n                }\n\n                this.messageService.error('There was an error starting the debug session, check the logs for more details.');\n                console.error('Error starting the debug session', e);\n                throw e;\n            }\n        });\n    }\n\n    protected async fireWillStartDebugSession(): Promise<void> {\n        await WaitUntilEvent.fire(this.onWillStartDebugSessionEmitter, {});\n    }\n\n    protected configurationIds = new Map<string, number>();\n    protected async resolveConfiguration(options: Readonly<DebugSessionOptions>): Promise<InternalDebugSessionOptions> {\n        if (InternalDebugSessionOptions.is(options)) {\n            return options;\n        }\n        const { workspaceFolderUri } = options;\n        let configuration = await this.resolveDebugConfiguration(options.configuration, workspaceFolderUri);\n        configuration = await this.variableResolver.resolve(configuration, {\n            context: options.workspaceFolderUri ? new URI(options.workspaceFolderUri) : undefined,\n            configurationSection: 'launch'\n        });\n        configuration = await this.resolveDebugConfigurationWithSubstitutedVariables(configuration, workspaceFolderUri);\n        const key = configuration.name + workspaceFolderUri;\n        const id = this.configurationIds.has(key) ? this.configurationIds.get(key)! + 1 : 0;\n        this.configurationIds.set(key, id);\n        return {\n            id,\n            configuration,\n            workspaceFolderUri\n        };\n    }\n\n    protected async resolveDebugConfiguration(configuration: DebugConfiguration, workspaceFolderUri: string | undefined): Promise<DebugConfiguration> {\n        await this.fireWillResolveDebugConfiguration(configuration.type);\n        return this.debug.resolveDebugConfiguration(configuration, workspaceFolderUri);\n    }\n    protected async fireWillResolveDebugConfiguration(debugType: string): Promise<void> {\n        await WaitUntilEvent.fire(this.onWillResolveDebugConfigurationEmitter, { debugType });\n    }\n\n    protected async resolveDebugConfigurationWithSubstitutedVariables(configuration: DebugConfiguration, workspaceFolderUri: string | undefined): Promise<DebugConfiguration> {\n        return this.debug.resolveDebugConfigurationWithSubstitutedVariables(configuration, workspaceFolderUri);\n    }\n\n    protected async doStart(sessionId: string, options: DebugSessionOptions): Promise<DebugSession> {\n        const contrib = this.sessionContributionRegistry.get(options.configuration.type);\n        const sessionFactory = contrib ? contrib.debugSessionFactory() : this.debugSessionFactory;\n        const session = sessionFactory.get(sessionId, options);\n        this._sessions.set(sessionId, session);\n\n        this.debugTypeKey.set(session.configuration.type);\n        this.onDidCreateDebugSessionEmitter.fire(session);\n\n        let state = DebugState.Inactive;\n        session.onDidChange(() => {\n            if (state !== session.state) {\n                state = session.state;\n                if (state === DebugState.Stopped) {\n                    this.onDidStopDebugSessionEmitter.fire(session);\n                }\n            }\n            this.updateCurrentSession(session);\n        });\n        session.onDidChangeBreakpoints(uri => this.fireDidChangeBreakpoints({ session, uri }));\n        session.on('terminated', async event => {\n            const restart = event.body && event.body.restart;\n            if (restart) {\n                // postDebugTask isn't run in case of auto restart as well as preLaunchTask\n                this.doRestart(session, restart);\n            } else {\n                session.terminate();\n                await this.runTask(session.options.workspaceFolderUri, session.configuration.postDebugTask);\n            }\n        });\n        session.on('exited', () => this.destroy(session.id));\n        session.start().then(() => this.onDidStartDebugSessionEmitter.fire(session));\n        session.onDidCustomEvent(({ event, body }) =>\n            this.onDidReceiveDebugSessionCustomEventEmitter.fire({ event, body, session })\n        );\n        return session;\n    }\n\n    restart(): Promise<DebugSession | undefined>;\n    restart(session: DebugSession): Promise<DebugSession>;\n    async restart(session: DebugSession | undefined = this.currentSession): Promise<DebugSession | undefined> {\n        return session && this.doRestart(session);\n    }\n    protected async doRestart(session: DebugSession, restart?: any): Promise<DebugSession | undefined> {\n        if (await session.restart()) {\n            return session;\n        }\n        await session.terminate(true);\n        const { options, configuration } = session;\n        configuration.__restart = restart;\n        return this.start(options);\n    }\n\n    protected remove(sessionId: string): void {\n        this._sessions.delete(sessionId);\n        const { currentSession } = this;\n        if (currentSession && currentSession.id === sessionId) {\n            this.updateCurrentSession(undefined);\n        }\n    }\n\n    getSession(sessionId: string): DebugSession | undefined {\n        return this._sessions.get(sessionId);\n    }\n\n    get sessions(): DebugSession[] {\n        return Array.from(this._sessions.values()).filter(session => session.state > DebugState.Inactive);\n    }\n\n    protected _currentSession: DebugSession | undefined;\n    protected readonly toDisposeOnCurrentSession = new DisposableCollection();\n    get currentSession(): DebugSession | undefined {\n        return this._currentSession;\n    }\n    set currentSession(current: DebugSession | undefined) {\n        if (this._currentSession === current) {\n            return;\n        }\n        this.toDisposeOnCurrentSession.dispose();\n        const previous = this.currentSession;\n        this._currentSession = current;\n        this.onDidChangeActiveDebugSessionEmitter.fire({ previous, current });\n        if (current) {\n            this.toDisposeOnCurrentSession.push(current.onDidChange(() => {\n                if (this.currentFrame === this.topFrame) {\n                    this.open();\n                }\n                this.fireDidChange(current);\n            }));\n        }\n        this.updateBreakpoints(previous, current);\n        this.open();\n        this.fireDidChange(current);\n    }\n    open(): void {\n        const { currentFrame } = this;\n        if (currentFrame) {\n            currentFrame.open();\n        }\n    }\n    protected updateBreakpoints(previous: DebugSession | undefined, current: DebugSession | undefined): void {\n        const affectedUri = new Set();\n        for (const session of [previous, current]) {\n            if (session) {\n                for (const uriString of session.breakpointUris) {\n                    if (!affectedUri.has(uriString)) {\n                        affectedUri.add(uriString);\n                        this.fireDidChangeBreakpoints({\n                            session: current,\n                            uri: new URI(uriString)\n                        });\n                    }\n                }\n            }\n        }\n    }\n    protected updateCurrentSession(session: DebugSession | undefined): void {\n        this.currentSession = session || this.sessions[0];\n    }\n\n    get currentThread(): DebugThread | undefined {\n        const session = this.currentSession;\n        return session && session.currentThread;\n    }\n\n    get state(): DebugState {\n        const session = this.currentSession;\n        return session ? session.state : DebugState.Inactive;\n    }\n\n    get currentFrame(): DebugStackFrame | undefined {\n        const { currentThread } = this;\n        return currentThread && currentThread.currentFrame;\n    }\n    get topFrame(): DebugStackFrame | undefined {\n        const { currentThread } = this;\n        return currentThread && currentThread.topFrame;\n    }\n\n    /**\n     * Destroy the debug session. If session identifier isn't provided then\n     * all active debug session will be destroyed.\n     * @param sessionId The session identifier\n     */\n    destroy(sessionId?: string): void {\n        if (sessionId) {\n            const session = this._sessions.get(sessionId);\n            if (session) {\n                this.doDestroy(session);\n            }\n        } else {\n            this._sessions.forEach(session => this.doDestroy(session));\n        }\n    }\n\n    private doDestroy(session: DebugSession): void {\n        this.debug.terminateDebugSession(session.id);\n\n        session.dispose();\n        this.remove(session.id);\n        this.onDidDestroyDebugSessionEmitter.fire(session);\n    }\n\n    getFunctionBreakpoints(session: DebugSession | undefined = this.currentSession): DebugFunctionBreakpoint[] {\n        if (session && session.state > DebugState.Initializing) {\n            return session.getFunctionBreakpoints();\n        }\n        const { labelProvider, breakpoints, editorManager } = this;\n        return this.breakpoints.getFunctionBreakpoints().map(origin => new DebugFunctionBreakpoint(origin, { labelProvider, breakpoints, editorManager }));\n    }\n\n    getBreakpoints(session?: DebugSession): DebugSourceBreakpoint[];\n    getBreakpoints(uri: URI, session?: DebugSession): DebugSourceBreakpoint[];\n    getBreakpoints(arg?: URI | DebugSession, arg2?: DebugSession): DebugSourceBreakpoint[] {\n        const uri = arg instanceof URI ? arg : undefined;\n        const session = arg instanceof DebugSession ? arg : arg2 instanceof DebugSession ? arg2 : this.currentSession;\n        if (session && session.state > DebugState.Initializing) {\n            return session.getSourceBreakpoints(uri);\n        }\n        const { labelProvider, breakpoints, editorManager } = this;\n        return this.breakpoints.findMarkers({ uri }).map(({ data }) => new DebugSourceBreakpoint(data, { labelProvider, breakpoints, editorManager }));\n    }\n\n    getLineBreakpoints(uri: URI, line: number): DebugSourceBreakpoint[] {\n        const session = this.currentSession;\n        if (session && session.state > DebugState.Initializing) {\n            return session.getSourceBreakpoints(uri).filter(breakpoint => breakpoint.line === line);\n        }\n        const { labelProvider, breakpoints, editorManager } = this;\n        return this.breakpoints.getLineBreakpoints(uri, line).map(origin =>\n            new DebugSourceBreakpoint(origin, { labelProvider, breakpoints, editorManager })\n        );\n    }\n\n    getInlineBreakpoint(uri: URI, line: number, column: number): DebugSourceBreakpoint | undefined {\n        const session = this.currentSession;\n        if (session && session.state > DebugState.Initializing) {\n            return session.getSourceBreakpoints(uri).filter(breakpoint => breakpoint.line === line && breakpoint.column === column)[0];\n        }\n        const origin = this.breakpoints.getInlineBreakpoint(uri, line, column);\n        const { labelProvider, breakpoints, editorManager } = this;\n        return origin && new DebugSourceBreakpoint(origin, { labelProvider, breakpoints, editorManager });\n    }\n\n    /**\n     * Runs the given tasks.\n     * @param taskName the task name to run, see [TaskNameResolver](#TaskNameResolver)\n     * @return true if it allowed to continue debugging otherwise it returns false\n     */\n    protected async runTask(workspaceFolderUri: string | undefined, taskName: string | TaskIdentifier | undefined, checkErrors?: boolean): Promise<boolean> {\n        if (!taskName) {\n            return true;\n        }\n\n        const taskInfo = await this.taskService.runWorkspaceTask(this.taskService.startUserAction(), workspaceFolderUri, taskName);\n        if (!checkErrors) {\n            return true;\n        }\n\n        if (!taskInfo) {\n            return this.doPostTaskAction(`Could not run the task '${taskName}'.`);\n        }\n\n        const getExitCodePromise: Promise<TaskEndedInfo> = this.taskService.getExitCode(taskInfo.taskId).then(result =>\n            ({ taskEndedType: TaskEndedTypes.TaskExited, value: result }));\n        const isBackgroundTaskEndedPromise: Promise<TaskEndedInfo> = this.taskService.isBackgroundTaskEnded(taskInfo.taskId).then(result =>\n            ({ taskEndedType: TaskEndedTypes.BackgroundTaskEnded, value: result }));\n\n        // After start running the task, we wait for the task process to exit and if it is a background task, we also wait for a feedback\n        // that a background task is active, as soon as one of the promises fulfills, we can continue and analyze the results.\n        const taskEndedInfo: TaskEndedInfo = await Promise.race([getExitCodePromise, isBackgroundTaskEndedPromise]);\n\n        if (taskEndedInfo.taskEndedType === TaskEndedTypes.BackgroundTaskEnded && taskEndedInfo.value) {\n            return true;\n        }\n        if (taskEndedInfo.taskEndedType === TaskEndedTypes.TaskExited && taskEndedInfo.value === 0) {\n            return true;\n        } else if (taskEndedInfo.taskEndedType === TaskEndedTypes.TaskExited && taskEndedInfo.value !== undefined) {\n            return this.doPostTaskAction(`Task '${taskName}' terminated with exit code ${taskEndedInfo.value}.`);\n        } else {\n            const signal = await this.taskService.getTerminateSignal(taskInfo.taskId);\n            if (signal !== undefined) {\n                return this.doPostTaskAction(`Task '${taskName}' terminated by signal ${signal}.`);\n            } else {\n                return this.doPostTaskAction(`Task '${taskName}' terminated for unknown reason.`);\n            }\n        }\n    }\n\n    protected async doPostTaskAction(errorMessage: string): Promise<boolean> {\n        const actions = ['Open launch.json', 'Cancel', 'Configure Task', 'Debug Anyway'];\n        const result = await this.messageService.error(errorMessage, ...actions);\n        switch (result) {\n            case actions[0]: // open launch.json\n                this.debugConfigurationManager.openConfiguration();\n                return false;\n            case actions[1]: // cancel\n                return false;\n            case actions[2]: // configure tasks\n                this.quickOpenTask.configure();\n                return false;\n            default: // continue debugging\n                return true;\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { DebugConfiguration } from '../common/debug-common';\n\nexport interface DebugSessionOptions {\n    configuration: DebugConfiguration\n    workspaceFolderUri?: string\n}\nexport interface InternalDebugSessionOptions extends DebugSessionOptions {\n    id: number\n}\nexport namespace InternalDebugSessionOptions {\n    export function is(options: DebugSessionOptions): options is InternalDebugSessionOptions {\n        return ('id' in options);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as React from 'react';\nimport { LabelProvider } from '@theia/core/lib/browser';\nimport { DebugProtocol } from 'vscode-debugprotocol';\nimport { Emitter, Event, DisposableCollection, Disposable, MessageClient, MessageType, Mutable } from '@theia/core/lib/common';\nimport { TerminalService } from '@theia/terminal/lib/browser/base/terminal-service';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { CompositeTreeElement } from '@theia/core/lib/browser/source-tree';\nimport { DebugSessionConnection, DebugRequestTypes, DebugEventTypes } from './debug-session-connection';\nimport { DebugThread, StoppedDetails, DebugThreadData } from './model/debug-thread';\nimport { DebugScope } from './console/debug-console-items';\nimport { DebugStackFrame } from './model/debug-stack-frame';\nimport { DebugSource } from './model/debug-source';\nimport { DebugBreakpoint, DebugBreakpointOptions } from './model/debug-breakpoint';\nimport { DebugSourceBreakpoint } from './model/debug-source-breakpoint';\nimport debounce = require('p-debounce');\nimport URI from '@theia/core/lib/common/uri';\nimport { BreakpointManager } from './breakpoint/breakpoint-manager';\nimport { DebugSessionOptions, InternalDebugSessionOptions } from './debug-session-options';\nimport { DebugConfiguration } from '../common/debug-common';\nimport { SourceBreakpoint, ExceptionBreakpoint } from './breakpoint/breakpoint-marker';\nimport { FileSystem } from '@theia/filesystem/lib/common';\nimport { TerminalWidgetOptions, TerminalWidget } from '@theia/terminal/lib/browser/base/terminal-widget';\nimport { DebugFunctionBreakpoint } from './model/debug-function-breakpoint';\n\nexport enum DebugState {\n    Inactive,\n    Initializing,\n    Running,\n    Stopped\n}\n\n// FIXME: make injectable to allow easily inject services\nexport class DebugSession implements CompositeTreeElement {\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange: Event<void> = this.onDidChangeEmitter.event;\n    protected fireDidChange(): void {\n        this.onDidChangeEmitter.fire(undefined);\n    }\n\n    protected readonly onDidChangeBreakpointsEmitter = new Emitter<URI>();\n    readonly onDidChangeBreakpoints: Event<URI> = this.onDidChangeBreakpointsEmitter.event;\n    protected fireDidChangeBreakpoints(uri: URI): void {\n        this.onDidChangeBreakpointsEmitter.fire(uri);\n    }\n\n    protected readonly toDispose = new DisposableCollection();\n\n    constructor(\n        readonly id: string,\n        readonly options: DebugSessionOptions,\n        protected readonly connection: DebugSessionConnection,\n        protected readonly terminalServer: TerminalService,\n        protected readonly editorManager: EditorManager,\n        protected readonly breakpoints: BreakpointManager,\n        protected readonly labelProvider: LabelProvider,\n        protected readonly messages: MessageClient,\n        protected readonly fileSystem: FileSystem) {\n        this.connection.onRequest('runInTerminal', (request: DebugProtocol.RunInTerminalRequest) => this.runInTerminal(request));\n        this.toDispose.pushAll([\n            this.onDidChangeEmitter,\n            this.onDidChangeBreakpointsEmitter,\n            Disposable.create(() => {\n                this.clearBreakpoints();\n                this.doUpdateThreads([]);\n            }),\n            this.connection,\n            this.on('initialized', () => this.configure()),\n            this.on('breakpoint', ({ body }) => this.updateBreakpoint(body)),\n            this.on('continued', ({ body: { allThreadsContinued, threadId } }) => {\n                if (allThreadsContinued !== false) {\n                    this.clearThreads();\n                } else {\n                    this.clearThread(threadId);\n                }\n            }),\n            this.on('stopped', async ({ body }) => {\n                // Update thread list\n                await this.updateThreads(body);\n\n                // Update current thread's frames immediately\n                await this.updateFrames();\n            }),\n            this.on('thread', ({ body: { reason, threadId } }) => {\n                if (reason === 'started') {\n                    this.scheduleUpdateThreads();\n                } else if (reason === 'exited') {\n                    this.clearThread(threadId);\n                }\n            }),\n            this.on('terminated', () => this.terminated = true),\n            this.on('capabilities', event => this.updateCapabilities(event.body.capabilities)),\n            this.breakpoints.onDidChangeMarkers(uri => this.updateBreakpoints({ uri, sourceModified: true }))\n        ]);\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    get configuration(): DebugConfiguration {\n        return this.options.configuration;\n    }\n\n    protected _capabilities: DebugProtocol.Capabilities = {};\n    get capabilities(): DebugProtocol.Capabilities {\n        return this._capabilities;\n    }\n\n    protected readonly sources = new Map<string, DebugSource>();\n    getSource(raw: DebugProtocol.Source): DebugSource {\n        const uri = DebugSource.toUri(raw).toString();\n        const source = this.sources.get(uri) || new DebugSource(this, this.editorManager, this.labelProvider);\n        source.update({ raw });\n        this.sources.set(uri, source);\n        return source;\n    }\n    getSourceForUri(uri: URI): DebugSource | undefined {\n        return this.sources.get(uri.toString());\n    }\n    async toSource(uri: URI): Promise<DebugSource> {\n        const source = this.getSourceForUri(uri);\n        if (source) {\n            return source;\n        }\n\n        return this.getSource(await this.toDebugSource(uri));\n    }\n\n    async toDebugSource(uri: URI): Promise<DebugProtocol.Source> {\n        if (uri.scheme === DebugSource.SCHEME) {\n            return {\n                name: uri.path.toString(),\n                sourceReference: Number(uri.query)\n            };\n        }\n        const name = uri.displayName;\n        let path: string | undefined = uri.toString();\n        if (uri.scheme === 'file') {\n            path = await this.fileSystem.getFsPath(path);\n        }\n        return { name, path };\n    }\n\n    protected _threads = new Map<number, DebugThread>();\n    get threads(): IterableIterator<DebugThread> {\n        return this._threads.values();\n    }\n    get threadCount(): number {\n        return this._threads.size;\n    }\n    *getThreads(filter: (thread: DebugThread) => boolean): IterableIterator<DebugThread> {\n        for (const thread of this.threads) {\n            if (filter(thread)) {\n                yield thread;\n            }\n        }\n    }\n    get runningThreads(): IterableIterator<DebugThread> {\n        return this.getThreads(thread => !thread.stopped);\n    }\n    get stoppedThreads(): IterableIterator<DebugThread> {\n        return this.getThreads(thread => thread.stopped);\n    }\n\n    async pauseAll(): Promise<void> {\n        const promises: Promise<void>[] = [];\n        for (const thread of this.runningThreads) {\n            promises.push((async () => {\n                try {\n                    await thread.pause();\n                } catch (e) {\n                    console.error(e);\n                }\n            })());\n        }\n        await Promise.all(promises);\n    }\n\n    async continueAll(): Promise<void> {\n        const promises: Promise<void>[] = [];\n        for (const thread of this.stoppedThreads) {\n            promises.push((async () => {\n                try {\n                    await thread.continue();\n                } catch (e) {\n                    console.error(e);\n                }\n            })());\n        }\n        await Promise.all(promises);\n    }\n\n    get currentFrame(): DebugStackFrame | undefined {\n        return this.currentThread && this.currentThread.currentFrame;\n    }\n\n    protected _currentThread: DebugThread | undefined;\n    protected readonly toDisposeOnCurrentThread = new DisposableCollection();\n    get currentThread(): DebugThread | undefined {\n        return this._currentThread;\n    }\n    set currentThread(thread: DebugThread | undefined) {\n        this.toDisposeOnCurrentThread.dispose();\n        this._currentThread = thread;\n        this.fireDidChange();\n        if (thread) {\n            this.toDisposeOnCurrentThread.push(thread.onDidChanged(() => this.fireDidChange()));\n\n            // If this thread is missing stack frame information, then load that.\n            this.updateFrames();\n        }\n    }\n\n    get state(): DebugState {\n        if (this.connection.disposed) {\n            return DebugState.Inactive;\n        }\n        if (!this.initialized) {\n            return DebugState.Initializing;\n        }\n        const thread = this.currentThread;\n        if (thread) {\n            return thread.stopped ? DebugState.Stopped : DebugState.Running;\n        }\n        return !!this.stoppedThreads.next().value ? DebugState.Stopped : DebugState.Running;\n    }\n\n    async getScopes(): Promise<DebugScope[]> {\n        const { currentFrame } = this;\n        return currentFrame ? currentFrame.getScopes() : [];\n    }\n\n    async start(): Promise<void> {\n        await this.initialize();\n        await this.launchOrAttach();\n    }\n    protected async initialize(): Promise<void> {\n        const response = await this.connection.sendRequest('initialize', {\n            clientID: 'Theia',\n            clientName: 'Theia IDE',\n            adapterID: this.configuration.type,\n            locale: 'en-US',\n            linesStartAt1: true,\n            columnsStartAt1: true,\n            pathFormat: 'path',\n            supportsVariableType: false,\n            supportsVariablePaging: false,\n            supportsRunInTerminalRequest: true\n        });\n        this.updateCapabilities(response.body || {});\n    }\n    protected async launchOrAttach(): Promise<void> {\n        try {\n            if (this.configuration.request === 'attach') {\n                await this.sendRequest('attach', this.configuration);\n            } else {\n                await this.sendRequest('launch', this.configuration);\n            }\n        } catch (reason) {\n            this.fireExited(reason);\n            await this.messages.showMessage({\n                type: MessageType.Error,\n                text: reason.message || 'Debug session initialization failed. See console for details.',\n                options: {\n                    timeout: 10000\n                }\n            });\n            throw reason;\n        }\n    }\n    protected initialized = false;\n    protected async configure(): Promise<void> {\n        if (this.capabilities.exceptionBreakpointFilters) {\n            const exceptionBreakpoints = [];\n            for (const filter of this.capabilities.exceptionBreakpointFilters) {\n                const origin = this.breakpoints.getExceptionBreakpoint(filter.filter);\n                exceptionBreakpoints.push(ExceptionBreakpoint.create(filter, origin));\n            }\n            this.breakpoints.setExceptionBreakpoints(exceptionBreakpoints);\n        }\n        await this.updateBreakpoints({ sourceModified: false });\n        if (this.capabilities.supportsConfigurationDoneRequest) {\n            await this.sendRequest('configurationDone', {});\n        }\n        this.initialized = true;\n        await this.updateThreads(undefined);\n    }\n\n    protected terminated = false;\n    async terminate(restart?: boolean): Promise<void> {\n        if (!this.terminated && this.capabilities.supportsTerminateRequest && this.configuration.request === 'launch') {\n            this.terminated = true;\n            await this.connection.sendRequest('terminate', { restart });\n            if (!await this.exited(1000)) {\n                await this.disconnect(restart);\n            }\n        } else {\n            await this.disconnect(restart);\n        }\n    }\n    protected async disconnect(restart?: boolean): Promise<void> {\n        try {\n            await this.sendRequest('disconnect', { restart });\n        } catch (reason) {\n            this.fireExited(reason);\n            return;\n        }\n        const timeout = 500;\n        if (!await this.exited(timeout)) {\n            this.fireExited(new Error(`timeout after ${timeout} ms`));\n        }\n    }\n\n    protected fireExited(reason?: Error): void {\n        this.connection['fire']('exited', { reason });\n    }\n    protected exited(timeout: number): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            const listener = this.on('exited', () => {\n                listener.dispose();\n                resolve(true);\n            });\n            setTimeout(() => {\n                listener.dispose();\n                resolve(false);\n            }, timeout);\n        });\n    }\n\n    async restart(): Promise<boolean> {\n        if (this.capabilities.supportsRestartRequest) {\n            this.terminated = false;\n            await this.sendRequest('restart', {});\n            return true;\n        }\n        return false;\n    }\n\n    async completions(text: string, column: number, line: number): Promise<DebugProtocol.CompletionItem[]> {\n        const frameId = this.currentFrame && this.currentFrame.raw.id;\n        const response = await this.sendRequest('completions', { frameId, text, column, line });\n        return response.body.targets;\n    }\n\n    async evaluate(expression: string, context?: string): Promise<DebugProtocol.EvaluateResponse['body']> {\n        const frameId = this.currentFrame && this.currentFrame.raw.id;\n        const response = await this.sendRequest('evaluate', { expression, frameId, context });\n        return response.body;\n    }\n\n    sendRequest<K extends keyof DebugRequestTypes>(command: K, args: DebugRequestTypes[K][0]): Promise<DebugRequestTypes[K][1]> {\n        return this.connection.sendRequest(command, args);\n    }\n\n    sendCustomRequest<T extends DebugProtocol.Response>(command: string, args?: any): Promise<T> {\n        return this.connection.sendCustomRequest(command, args);\n    }\n\n    on<K extends keyof DebugEventTypes>(kind: K, listener: (e: DebugEventTypes[K]) => any): Disposable {\n        return this.connection.on(kind, listener);\n    }\n\n    get onDidCustomEvent(): Event<DebugProtocol.Event> {\n        return this.connection.onDidCustomEvent;\n    }\n\n    protected async runInTerminal({ arguments: { title, cwd, args, env } }: DebugProtocol.RunInTerminalRequest): Promise<DebugProtocol.RunInTerminalResponse['body']> {\n        const terminal = await this.doCreateTerminal({ title, cwd, env, useServerTitle: false });\n        const { processId } = terminal;\n        await terminal.executeCommand({ cwd, args, env });\n        return { processId: await processId };\n    }\n\n    protected async doCreateTerminal(options: TerminalWidgetOptions): Promise<TerminalWidget> {\n        let terminal = undefined;\n        for (const t of this.terminalServer.all) {\n            if ((t.title.label === options.title || t.title.caption === options.title) && (await t.hasChildProcesses()) === false) {\n                terminal = t;\n                break;\n            }\n        }\n\n        if (!terminal) {\n            terminal = await this.terminalServer.newTerminal(options);\n            await terminal.start();\n        }\n        this.terminalServer.open(terminal);\n        return terminal;\n    }\n\n    protected clearThreads(): void {\n        for (const thread of this.threads) {\n            thread.clear();\n        }\n        this.updateCurrentThread();\n    }\n    protected clearThread(threadId: number): void {\n        const thread = this._threads.get(threadId);\n        if (thread) {\n            thread.clear();\n        }\n        this.updateCurrentThread();\n    }\n\n    protected readonly scheduleUpdateThreads = debounce(() => this.updateThreads(undefined), 100);\n    protected pendingThreads = Promise.resolve();\n    updateThreads(stoppedDetails: StoppedDetails | undefined): Promise<void> {\n        return this.pendingThreads = this.pendingThreads.then(async () => {\n            try {\n                const response = await this.sendRequest('threads', {});\n                // java debugger returns an empty body sometimes\n                const threads = response && response.body && response.body.threads || [];\n                this.doUpdateThreads(threads, stoppedDetails);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n    protected doUpdateThreads(threads: DebugProtocol.Thread[], stoppedDetails?: StoppedDetails): void {\n        const existing = this._threads;\n        this._threads = new Map();\n        for (const raw of threads) {\n            const id = raw.id;\n            const thread = existing.get(id) || new DebugThread(this);\n            this._threads.set(id, thread);\n            const data: Partial<Mutable<DebugThreadData>> = { raw };\n            if (stoppedDetails) {\n                if (stoppedDetails.threadId === id) {\n                    data.stoppedDetails = stoppedDetails;\n                } else if (stoppedDetails.allThreadsStopped) {\n                    data.stoppedDetails = {\n                        // When a debug adapter notifies us that all threads are stopped,\n                        // we do not know why the others are stopped, so we should default\n                        // to something generic.\n                        reason: '',\n                    };\n                }\n            }\n            thread.update(data);\n        }\n        this.updateCurrentThread(stoppedDetails);\n    }\n\n    protected updateCurrentThread(stoppedDetails?: StoppedDetails): void {\n        const { currentThread } = this;\n        let threadId = currentThread && currentThread.raw.id;\n        if (stoppedDetails && !stoppedDetails.preserveFocusHint && !!stoppedDetails.threadId) {\n            threadId = stoppedDetails.threadId;\n        }\n        this.currentThread = typeof threadId === 'number' && this._threads.get(threadId)\n            || this._threads.values().next().value;\n    }\n\n    protected async updateFrames(): Promise<void> {\n        const thread = this._currentThread;\n        if (!thread || thread.pendingFrameCount || thread.frameCount) {\n            return;\n        }\n        if (this.capabilities.supportsDelayedStackTraceLoading) {\n            await thread.fetchFrames(1);\n            await thread.fetchFrames(19);\n        } else {\n            await thread.fetchFrames();\n        }\n    }\n\n    protected updateCapabilities(capabilities: DebugProtocol.Capabilities): void {\n        Object.assign(this._capabilities, capabilities);\n    }\n\n    protected readonly _breakpoints = new Map<string, DebugBreakpoint[]>();\n    get breakpointUris(): IterableIterator<string> {\n        return this._breakpoints.keys();\n    }\n\n    getSourceBreakpoints(uri?: URI): DebugSourceBreakpoint[] {\n        const breakpoints = [];\n        for (const breakpoint of this.getBreakpoints(uri)) {\n            if (breakpoint instanceof DebugSourceBreakpoint) {\n                breakpoints.push(breakpoint);\n            }\n        }\n        return breakpoints;\n    }\n\n    getFunctionBreakpoints(): DebugFunctionBreakpoint[] {\n        const breakpoints = [];\n        for (const breakpoint of this.getBreakpoints(BreakpointManager.FUNCTION_URI)) {\n            if (breakpoint instanceof DebugFunctionBreakpoint) {\n                breakpoints.push(breakpoint);\n            }\n        }\n        return breakpoints;\n    }\n\n    getBreakpoints(uri?: URI): DebugBreakpoint[] {\n        if (uri) {\n            return this._breakpoints.get(uri.toString()) || [];\n        }\n        const result = [];\n        for (const breakpoints of this._breakpoints.values()) {\n            result.push(...breakpoints);\n        }\n        return result;\n    }\n\n    protected clearBreakpoints(): void {\n        const uris = [...this._breakpoints.keys()];\n        this._breakpoints.clear();\n        for (const uri of uris) {\n            this.fireDidChangeBreakpoints(new URI(uri));\n        }\n    }\n    protected updatingBreakpoints = false;\n    protected updateBreakpoint(body: DebugProtocol.BreakpointEvent['body']): void {\n        this.updatingBreakpoints = true;\n        try {\n            const raw = body.breakpoint;\n            if (body.reason === 'new') {\n                if (raw.source && typeof raw.line === 'number') {\n                    const uri = DebugSource.toUri(raw.source);\n                    const origin = SourceBreakpoint.create(uri, { line: raw.line, column: raw.column });\n                    if (this.breakpoints.addBreakpoint(origin)) {\n                        const breakpoints = this.getSourceBreakpoints(uri);\n                        const breakpoint = new DebugSourceBreakpoint(origin, this.asDebugBreakpointOptions());\n                        breakpoint.update({ raw });\n                        breakpoints.push(breakpoint);\n                        this.setSourceBreakpoints(uri, breakpoints);\n                    }\n                }\n            }\n            if (body.reason === 'removed' && raw.id) {\n                const toRemove = this.findBreakpoint(b => b.idFromAdapter === raw.id);\n                if (toRemove) {\n                    toRemove.remove();\n                    const breakpoints = this.getBreakpoints(toRemove.uri);\n                    const index = breakpoints.indexOf(toRemove);\n                    if (index !== -1) {\n                        breakpoints.splice(index, 1);\n                        this.setBreakpoints(toRemove.uri, breakpoints);\n                    }\n                }\n            }\n            if (body.reason === 'changed' && raw.id) {\n                const toUpdate = this.findBreakpoint(b => b.idFromAdapter === raw.id);\n                if (toUpdate) {\n                    toUpdate.update({ raw });\n                    if (toUpdate instanceof DebugSourceBreakpoint) {\n                        const sourceBreakpoints = this.getSourceBreakpoints(toUpdate.uri);\n                        // in order to dedup again if a debugger converted line breakpoint to inline breakpoint\n                        // i.e. assigned a column to a line breakpoint\n                        this.setSourceBreakpoints(toUpdate.uri, sourceBreakpoints);\n                    } else {\n                        this.fireDidChangeBreakpoints(toUpdate.uri);\n                    }\n                }\n            }\n        } finally {\n            this.updatingBreakpoints = false;\n        }\n    }\n    protected findBreakpoint(match: (breakpoint: DebugBreakpoint) => boolean): DebugBreakpoint | undefined {\n        for (const [, breakpoints] of this._breakpoints) {\n            for (const breakpoint of breakpoints) {\n                if (match(breakpoint)) {\n                    return breakpoint;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    protected async updateBreakpoints(options: {\n        uri?: URI,\n        sourceModified: boolean\n    }): Promise<void> {\n        if (this.updatingBreakpoints) {\n            return;\n        }\n        const { uri, sourceModified } = options;\n        for (const affectedUri of this.getAffectedUris(uri)) {\n            if (affectedUri.toString() === BreakpointManager.EXCEPTION_URI.toString()) {\n                await this.sendExceptionBreakpoints();\n            } else if (affectedUri.toString() === BreakpointManager.FUNCTION_URI.toString()) {\n                await this.sendFunctionBreakpoints(affectedUri);\n            } else {\n                await this.sendSourceBreakpoints(affectedUri, sourceModified);\n            }\n        }\n    }\n\n    protected async sendExceptionBreakpoints(): Promise<void> {\n        const filters = [];\n        for (const breakpoint of this.breakpoints.getExceptionBreakpoints()) {\n            if (breakpoint.enabled) {\n                filters.push(breakpoint.raw.filter);\n            }\n        }\n        await this.sendRequest('setExceptionBreakpoints', { filters });\n    }\n\n    protected async sendFunctionBreakpoints(affectedUri: URI): Promise<void> {\n        const all = this.breakpoints.getFunctionBreakpoints().map(origin =>\n            new DebugFunctionBreakpoint(origin, this.asDebugBreakpointOptions())\n        );\n        const enabled = all.filter(b => b.enabled);\n        if (this.capabilities.supportsFunctionBreakpoints) {\n            try {\n                const response = await this.sendRequest('setFunctionBreakpoints', {\n                    breakpoints: enabled.map(b => b.origin.raw)\n                });\n                response.body.breakpoints.map((raw, index) => {\n                    // node debug adapter returns more breakpoints sometimes\n                    if (enabled[index]) {\n                        enabled[index].update({ raw });\n                    }\n                });\n            } catch (error) {\n                // could be error or promise rejection of DebugProtocol.SetFunctionBreakpoints\n                if (error instanceof Error) {\n                    console.error(`Error setting breakpoints: ${error.message}`);\n                } else {\n                    // handle adapters that send failed DebugProtocol.SetFunctionBreakpoints for invalid breakpoints\n                    const genericMessage: string = 'Function breakpoint not valid for current debug session';\n                    const message: string = error.message ? `${error.message}` : genericMessage;\n                    console.warn(`Could not handle function breakpoints: ${message}, disabling...`);\n                    enabled.forEach(b => b.update({\n                        raw: {\n                            verified: false,\n                            message\n                        }\n                    }));\n                }\n            }\n        }\n        this.setBreakpoints(affectedUri, all);\n    }\n\n    protected async sendSourceBreakpoints(affectedUri: URI, sourceModified?: boolean): Promise<void> {\n        const source = await this.toSource(affectedUri);\n        const all = this.breakpoints.findMarkers({ uri: affectedUri }).map(({ data }) =>\n            new DebugSourceBreakpoint(data, this.asDebugBreakpointOptions())\n        );\n        const enabled = all.filter(b => b.enabled);\n        try {\n            const response = await this.sendRequest('setBreakpoints', {\n                source: source.raw,\n                sourceModified,\n                breakpoints: enabled.map(({ origin }) => origin.raw)\n            });\n            response.body.breakpoints.map((raw, index) => {\n                // node debug adapter returns more breakpoints sometimes\n                if (enabled[index]) {\n                    enabled[index].update({ raw });\n                }\n            });\n        } catch (error) {\n            // could be error or promise rejection of DebugProtocol.SetBreakpointsResponse\n            if (error instanceof Error) {\n                console.error(`Error setting breakpoints: ${error.message}`);\n            } else {\n                // handle adapters that send failed DebugProtocol.SetBreakpointsResponse for invalid breakpoints\n                const genericMessage: string = 'Breakpoint not valid for current debug session';\n                const message: string = error.message ? `${error.message}` : genericMessage;\n                console.warn(`Could not handle breakpoints for ${affectedUri}: ${message}, disabling...`);\n                enabled.forEach(b => b.update({\n                    raw: {\n                        verified: false,\n                        message\n                    }\n                }));\n            }\n        }\n        this.setSourceBreakpoints(affectedUri, all);\n    }\n\n    protected setBreakpoints(uri: URI, breakpoints: DebugBreakpoint[]): void {\n        this._breakpoints.set(uri.toString(), breakpoints);\n        this.fireDidChangeBreakpoints(uri);\n    }\n\n    protected setSourceBreakpoints(uri: URI, breakpoints: DebugSourceBreakpoint[]): void {\n        const distinct = this.dedupSourceBreakpoints(breakpoints);\n        this.setBreakpoints(uri, distinct);\n    }\n    protected dedupSourceBreakpoints(all: DebugSourceBreakpoint[]): DebugSourceBreakpoint[] {\n        const positions = new Map<string, DebugSourceBreakpoint>();\n        for (const breakpoint of all) {\n            let primary = positions.get(breakpoint.renderPosition()) || breakpoint;\n            if (primary !== breakpoint) {\n                let secondary = breakpoint;\n                if (secondary.raw && secondary.raw.line === secondary.origin.raw.line && secondary.raw.column === secondary.origin.raw.column) {\n                    [primary, secondary] = [breakpoint, primary];\n                }\n                primary.origins.push(...secondary.origins);\n            }\n            positions.set(primary.renderPosition(), primary);\n        }\n        return [...positions.values()];\n    }\n    protected *getAffectedUris(uri?: URI): IterableIterator<URI> {\n        if (uri) {\n            yield uri;\n        } else {\n            for (const uriString of this.breakpoints.getUris()) {\n                yield new URI(uriString);\n            }\n            yield BreakpointManager.FUNCTION_URI;\n            yield BreakpointManager.EXCEPTION_URI;\n        }\n    }\n\n    protected asDebugBreakpointOptions(): DebugBreakpointOptions {\n        const { labelProvider, breakpoints, editorManager } = this;\n        return { labelProvider, breakpoints, editorManager, session: this };\n    }\n\n    get label(): string {\n        if (InternalDebugSessionOptions.is(this.options) && this.options.id) {\n            return this.configuration.name + ' (' + (this.options.id + 1) + ')';\n        }\n        return this.configuration.name;\n    }\n\n    get visible(): boolean {\n        return this.state > DebugState.Inactive;\n    }\n\n    render(): React.ReactNode {\n        return <div className='theia-debug-session' title='Session'>\n            <span className='label'>{this.label}</span>\n            <span className='status'>{this.state === DebugState.Stopped ? 'Paused' : 'Running'}</span>\n        </div>;\n    }\n\n    getElements(): IterableIterator<DebugThread> {\n        return this.threads;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { Emitter } from '@theia/core/lib/common/event';\nimport { StorageService } from '@theia/core/lib/browser/storage-service';\n\n@injectable()\nexport class DebugWatchManager {\n\n    @inject(StorageService)\n    protected readonly storage: StorageService;\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange = this.onDidChangeEmitter.event;\n\n    protected idSequence = 0;\n    protected readonly _watchExpressions = new Map<number, string>();\n\n    get watchExpressions(): IterableIterator<[number, string]> {\n        return this._watchExpressions.entries();\n    }\n\n    addWatchExpression(expression: string): number {\n        const id = this.idSequence++;\n        this._watchExpressions.set(id, expression);\n        this.onDidChangeEmitter.fire(undefined);\n        return id;\n    }\n\n    removeWatchExpression(id: number): boolean {\n        if (!this._watchExpressions.has(id)) {\n            return false;\n        }\n        this._watchExpressions.delete(id);\n        this.onDidChangeEmitter.fire(undefined);\n        return true;\n    }\n\n    removeWatchExpressions(): void {\n        if (this._watchExpressions.size) {\n            this.idSequence = 0;\n            this._watchExpressions.clear();\n            this.onDidChangeEmitter.fire(undefined);\n        }\n    }\n\n    async load(): Promise<void> {\n        const data = await this.storage.getData<DebugWatchData>(this.storageKey, {\n            expressions: []\n        });\n        this.restoreState(data);\n    }\n\n    save(): void {\n        const data = this.storeState();\n        this.storage.setData(this.storageKey, data);\n    }\n\n    protected get storageKey(): string {\n        return 'debug:watch';\n    }\n\n    protected storeState(): DebugWatchData {\n        return {\n            expressions: [...this._watchExpressions.values()]\n        };\n    }\n\n    protected restoreState(state: DebugWatchData): void {\n        for (const expression of state.expressions) {\n            this.addWatchExpression(expression);\n        }\n    }\n\n}\n\nexport interface DebugWatchData {\n    readonly expressions: string[];\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport { DebugProtocol } from 'vscode-debugprotocol/lib/debugProtocol';\nimport URI from '@theia/core/lib/common/uri';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { LabelProvider, DISABLED_CLASS } from '@theia/core/lib/browser';\nimport { TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { DebugSession } from '../debug-session';\nimport { BaseBreakpoint } from '../breakpoint/breakpoint-marker';\nimport { BreakpointManager } from '../breakpoint/breakpoint-manager';\n\nexport class DebugBreakpointData {\n    readonly raw?: DebugProtocol.Breakpoint;\n}\n\nexport class DebugBreakpointOptions {\n    readonly labelProvider: LabelProvider;\n    readonly breakpoints: BreakpointManager;\n    readonly editorManager: EditorManager;\n    readonly session?: DebugSession;\n}\n\nexport class DebugBreakpointDecoration {\n    readonly className: string;\n    readonly message: string[];\n}\n\nexport abstract class DebugBreakpoint<T extends BaseBreakpoint = BaseBreakpoint> extends DebugBreakpointOptions implements TreeElement {\n\n    readonly raw?: DebugProtocol.Breakpoint;\n\n    constructor(\n        readonly uri: URI,\n        options: DebugBreakpointOptions\n    ) {\n        super();\n        Object.assign(this, options);\n    }\n\n    abstract get origin(): T;\n\n    update(data: DebugBreakpointData): void {\n        Object.assign(this, data);\n    }\n\n    get idFromAdapter(): number | undefined {\n        return this.raw && this.raw.id;\n    }\n\n    get id(): string {\n        return this.origin.id;\n    }\n\n    get enabled(): boolean {\n        return this.breakpoints.breakpointsEnabled && this.origin.enabled;\n    }\n\n    get installed(): boolean {\n        return !!this.raw;\n    }\n\n    get verified(): boolean {\n        return !!this.raw ? this.raw.verified : true;\n    }\n\n    get message(): string {\n        return this.raw && this.raw.message || '';\n    }\n\n    abstract setEnabled(enabled: boolean): void;\n\n    abstract remove(): void;\n\n    protected readonly setBreakpointEnabled = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setEnabled(event.target.checked);\n    };\n\n    render(): React.ReactNode {\n        const classNames = ['theia-source-breakpoint'];\n        if (!this.isEnabled()) {\n            classNames.push(DISABLED_CLASS);\n        }\n        const decoration = this.getDecoration();\n        return <div title={decoration.message.join('\\n')} className={classNames.join(' ')}>\n            <span className={'theia-debug-breakpoint-icon ' + decoration.className} />\n            <input className='theia-input' type='checkbox' checked={this.origin.enabled} onChange={this.setBreakpointEnabled} />\n            {this.doRender()}\n        </div>;\n    }\n\n    protected isEnabled(): boolean {\n        return this.breakpoints.breakpointsEnabled && this.verified;\n    }\n\n    protected abstract doRender(): React.ReactNode;\n\n    getDecoration(): DebugBreakpointDecoration {\n        if (!this.enabled) {\n            return this.getDisabledBreakpointDecoration();\n        }\n        if (this.installed && !this.verified) {\n            return this.getUnverifiedBreakpointDecoration();\n        }\n        return this.doGetDecoration();\n    }\n\n    protected getUnverifiedBreakpointDecoration(): DebugBreakpointDecoration {\n        const decoration = this.getBreakpointDecoration();\n        return {\n            className: decoration.className + '-unverified',\n            message: [this.message || 'Unverified ' + decoration.message[0]]\n        };\n    }\n\n    protected getDisabledBreakpointDecoration(message?: string): DebugBreakpointDecoration {\n        const decoration = this.getBreakpointDecoration();\n        return {\n            className: decoration.className + '-disabled',\n            message: [message || ('Disabled ' + decoration.message[0])]\n        };\n    }\n\n    protected doGetDecoration(messages: string[] = []): DebugBreakpointDecoration {\n        if (this.message) {\n            if (messages.length) {\n                messages[messages.length - 1].concat(', ' + this.message);\n            } else {\n                messages.push(this.message);\n            }\n        }\n        return this.getBreakpointDecoration(messages);\n    }\n\n    protected abstract getBreakpointDecoration(message?: string[]): DebugBreakpointDecoration;\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport { TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { FunctionBreakpoint } from '../breakpoint/breakpoint-marker';\nimport { BreakpointManager } from '../breakpoint/breakpoint-manager';\nimport { DebugBreakpoint, DebugBreakpointOptions, DebugBreakpointDecoration } from './debug-breakpoint';\nimport { SingleTextInputDialog } from '@theia/core/lib/browser/dialogs';\n\nexport class DebugFunctionBreakpoint extends DebugBreakpoint<FunctionBreakpoint> implements TreeElement {\n\n    constructor(readonly origin: FunctionBreakpoint, options: DebugBreakpointOptions) {\n        super(BreakpointManager.FUNCTION_URI, options);\n    }\n\n    setEnabled(enabled: boolean): void {\n        const breakpoints = this.breakpoints.getFunctionBreakpoints();\n        const breakpoint = breakpoints.find(b => b.id === this.id);\n        if (breakpoint && breakpoint.enabled !== enabled) {\n            breakpoint.enabled = enabled;\n            this.breakpoints.setFunctionBreakpoints(breakpoints);\n        }\n    }\n\n    protected isEnabled(): boolean {\n        return super.isEnabled() && this.isSupported();\n    }\n\n    protected isSupported(): boolean {\n        const { session } = this;\n        return !session || !!session.capabilities.supportsFunctionBreakpoints;\n    }\n\n    remove(): void {\n        const breakpoints = this.breakpoints.getFunctionBreakpoints();\n        const newBreakpoints = breakpoints.filter(b => b.id !== this.id);\n        if (breakpoints.length !== newBreakpoints.length) {\n            this.breakpoints.setFunctionBreakpoints(newBreakpoints);\n        }\n    }\n\n    get name(): string {\n        return this.origin.raw.name;\n    }\n\n    protected doRender(): React.ReactNode {\n        return <span className='line-info'>{this.name}</span>;\n    }\n\n    protected doGetDecoration(): DebugBreakpointDecoration {\n        if (!this.isSupported()) {\n            return this.getDisabledBreakpointDecoration('Function breakpoints are not supported by this debug type');\n        }\n        return super.doGetDecoration();\n    }\n\n    protected getBreakpointDecoration(message?: string[]): DebugBreakpointDecoration {\n        return {\n            className: 'theia-debug-function',\n            message: message || ['Function Breakpoint']\n        };\n    }\n\n    async open(): Promise<void> {\n        const input = new SingleTextInputDialog({\n            title: 'Add Function Breakpoint',\n            initialValue: this.name\n        });\n        const newValue = await input.open();\n        if (newValue !== undefined && newValue !== this.name) {\n            const breakpoints = this.breakpoints.getFunctionBreakpoints();\n            const breakpoint = breakpoints.find(b => b.id === this.id);\n            if (breakpoint) {\n                if (breakpoint.raw.name !== newValue) {\n                    breakpoint.raw.name = newValue;\n                    this.breakpoints.setFunctionBreakpoints(breakpoints);\n                }\n            } else {\n                this.origin.raw.name = newValue;\n                breakpoints.push(this.origin);\n                this.breakpoints.setFunctionBreakpoints(breakpoints);\n            }\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport { DebugProtocol } from 'vscode-debugprotocol/lib/debugProtocol';\nimport { RecursivePartial } from '@theia/core';\nimport URI from '@theia/core/lib/common/uri';\nimport { Range } from '@theia/editor/lib/browser';\nimport { WidgetOpenerOptions } from '@theia/core/lib/browser';\nimport { TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { SourceBreakpoint } from '../breakpoint/breakpoint-marker';\nimport { DebugSource } from './debug-source';\nimport { DebugBreakpoint, DebugBreakpointOptions, DebugBreakpointData, DebugBreakpointDecoration } from './debug-breakpoint';\n\nexport class DebugSourceBreakpointData extends DebugBreakpointData {\n    readonly origins: SourceBreakpoint[];\n}\n\nexport class DebugSourceBreakpoint extends DebugBreakpoint<SourceBreakpoint> implements TreeElement {\n\n    readonly origins: SourceBreakpoint[];\n\n    constructor(origin: SourceBreakpoint, options: DebugBreakpointOptions) {\n        super(new URI(origin.uri), options);\n        this.origins = [origin];\n    }\n\n    update(data: Partial<DebugSourceBreakpointData>): void {\n        super.update(data);\n    }\n\n    get origin(): SourceBreakpoint {\n        return this.origins[0];\n    }\n\n    setEnabled(enabled: boolean): void {\n        const { uri, raw } = this;\n        let shouldUpdate = false;\n        let breakpoints = raw && this.doRemove(this.origins.filter(origin => !(origin.raw.line === raw.line && origin.raw.column === raw.column)));\n        if (breakpoints) {\n            shouldUpdate = true;\n        } else {\n            breakpoints = this.breakpoints.getBreakpoints(uri);\n        }\n        for (const breakpoint of breakpoints) {\n            if (breakpoint.raw.line === this.origin.raw.line && breakpoint.raw.column === this.origin.raw.column && breakpoint.enabled !== enabled) {\n                breakpoint.enabled = enabled;\n                shouldUpdate = true;\n            }\n        }\n        if (shouldUpdate) {\n            this.breakpoints.setBreakpoints(this.uri, breakpoints);\n        }\n    }\n\n    updateOrigins(data: Partial<DebugProtocol.SourceBreakpoint>): void {\n        const breakpoints = this.breakpoints.getBreakpoints(this.uri);\n        let shouldUpdate = false;\n        const originPositions = new Set();\n        this.origins.forEach(origin => originPositions.add(origin.raw.line + ':' + origin.raw.column));\n        for (const breakpoint of breakpoints) {\n            if (originPositions.has(breakpoint.raw.line + ':' + breakpoint.raw.column)) {\n                Object.assign(breakpoint.raw, data);\n                shouldUpdate = true;\n            }\n        }\n        if (shouldUpdate) {\n            this.breakpoints.setBreakpoints(this.uri, breakpoints);\n        }\n    }\n\n    /** 1-based */\n    get line(): number {\n        return this.raw && this.raw.line || this.origins[0].raw.line;\n    }\n    get column(): number | undefined {\n        return this.raw && this.raw.column || this.origins[0].raw.column;\n    }\n    get endLine(): number | undefined {\n        return this.raw && this.raw.endLine;\n    }\n    get endColumn(): number | undefined {\n        return this.raw && this.raw.endColumn;\n    }\n\n    get condition(): string | undefined {\n        return this.origin.raw.condition;\n    }\n    get hitCondition(): string | undefined {\n        return this.origin.raw.hitCondition;\n    }\n    get logMessage(): string | undefined {\n        return this.origin.raw.logMessage;\n    }\n\n    get source(): DebugSource | undefined {\n        return this.raw && this.raw.source && this.session && this.session.getSource(this.raw.source);\n    }\n\n    async open(options: WidgetOpenerOptions = {\n        mode: 'reveal'\n    }): Promise<void> {\n        const { line, column, endLine, endColumn } = this;\n        const selection: RecursivePartial<Range> = {\n            start: {\n                line: line - 1,\n                character: typeof column === 'number' ? column - 1 : undefined\n            }\n        };\n        if (typeof endLine === 'number') {\n            selection.end = {\n                line: endLine - 1,\n                character: typeof endColumn === 'number' ? endColumn - 1 : undefined\n            };\n        }\n        if (this.source) {\n            await this.source.open({\n                ...options,\n                selection\n            });\n        } else {\n            await this.editorManager.open(this.uri, {\n                ...options,\n                selection\n            });\n        }\n    }\n\n    protected readonly setBreakpointEnabled = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setEnabled(event.target.checked);\n    };\n\n    protected doRender(): React.ReactNode {\n        return <React.Fragment>\n            <span className='line-info' title={this.labelProvider.getLongName(this.uri)}>\n                <span className='name'>{this.labelProvider.getName(this.uri)} </span>\n                <span className='path'>{this.labelProvider.getLongName(this.uri.parent)} </span>\n            </span>\n            <span className='line'>{this.renderPosition()}</span>\n        </React.Fragment>;\n    }\n\n    renderPosition(): string {\n        return this.line + (typeof this.column === 'number' ? ':' + this.column : '');\n    }\n\n    doGetDecoration(messages: string[] = []): DebugBreakpointDecoration {\n        if (this.logMessage || this.condition || this.hitCondition) {\n            const { session } = this;\n            if (this.logMessage) {\n                if (session && !session.capabilities.supportsLogPoints) {\n                    return this.getUnsupportedBreakpointDecoration('Logpoints not supported by this debug type');\n                }\n                messages.push('Log Message: ' + this.logMessage);\n            }\n            if (this.condition) {\n                if (session && !session.capabilities.supportsConditionalBreakpoints) {\n                    return this.getUnsupportedBreakpointDecoration('Conditional breakpoints not supported by this debug type');\n                }\n                messages.push('Expression: ' + this.condition);\n            }\n            if (this.hitCondition) {\n                if (session && !session.capabilities.supportsHitConditionalBreakpoints) {\n                    return this.getUnsupportedBreakpointDecoration('Hit conditional breakpoints not supported by this debug type');\n                }\n                messages.push('Hit Count: ' + this.hitCondition);\n            }\n        }\n        return super.doGetDecoration(messages);\n    }\n\n    protected getUnsupportedBreakpointDecoration(message: string): DebugBreakpointDecoration {\n        return {\n            className: 'theia-debug-breakpoint-unsupported',\n            message: [message]\n        };\n    }\n\n    protected getBreakpointDecoration(message?: string[]): DebugBreakpointDecoration {\n        if (this.logMessage) {\n            return {\n                className: 'theia-debug-logpoint',\n                message: message || ['Logpoint']\n            };\n        }\n        if (this.condition || this.hitCondition) {\n            return {\n                className: 'theia-debug-conditional-breakpoint',\n                message: message || ['Conditional Breakpoint']\n            };\n        }\n        return {\n            className: 'theia-debug-breakpoint',\n            message: message || ['Breakpoint']\n        };\n    }\n\n    remove(): void {\n        const breakpoints = this.doRemove(this.origins);\n        if (breakpoints) {\n            this.breakpoints.setBreakpoints(this.uri, breakpoints);\n        }\n    }\n    protected doRemove(origins: SourceBreakpoint[]): SourceBreakpoint[] | undefined {\n        if (!origins.length) {\n            return undefined;\n        }\n        const { uri } = this;\n        const toRemove = new Set();\n        origins.forEach(origin => toRemove.add(origin.raw.line + ':' + origin.raw.column));\n        let shouldUpdate = false;\n        const breakpoints = this.breakpoints.findMarkers({\n            uri,\n            dataFilter: data => {\n                const result = !toRemove.has(data.raw.line + ':' + data.raw.column);\n                shouldUpdate = shouldUpdate || !result;\n                return result;\n            }\n        }).map(({ data }) => data);\n        return shouldUpdate && breakpoints || undefined;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { LabelProvider } from '@theia/core/lib/browser';\nimport { EditorManager, EditorOpenerOptions, EditorWidget } from '@theia/editor/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { DebugProtocol } from 'vscode-debugprotocol/lib/debugProtocol';\nimport { DebugSession } from '../debug-session';\nimport { URI as Uri } from 'vscode-uri';\n\nexport class DebugSourceData {\n    readonly raw: DebugProtocol.Source;\n}\n\nexport class DebugSource extends DebugSourceData {\n\n    constructor(\n        protected readonly session: DebugSession,\n        protected readonly editorManager: EditorManager,\n        protected readonly labelProvider: LabelProvider\n    ) {\n        super();\n    }\n\n    get uri(): URI {\n        return DebugSource.toUri(this.raw);\n    }\n\n    update(data: Partial<DebugSourceData>): void {\n        Object.assign(this, data);\n    }\n\n    open(options?: EditorOpenerOptions): Promise<EditorWidget> {\n        return this.editorManager.open(this.uri, options);\n    }\n\n    async load(): Promise<string> {\n        const source = this.raw;\n        const sourceReference = source.sourceReference!;\n        const response = await this.session.sendRequest('source', {\n            sourceReference,\n            source\n        });\n        return response.body.content;\n    }\n\n    get inMemory(): boolean {\n        return this.uri.scheme === DebugSource.SCHEME;\n    }\n\n    get name(): string {\n        if (this.inMemory) {\n            return this.raw.name || this.uri.path.base || this.uri.path.toString();\n        }\n        return this.labelProvider.getName(this.uri);\n    }\n\n    get longName(): string {\n        if (this.inMemory) {\n            return this.name;\n        }\n        return this.labelProvider.getLongName(this.uri);\n    }\n\n    static SCHEME = 'debug';\n    static SCHEME_PATTERN = /^[a-zA-Z][a-zA-Z0-9\\+\\-\\.]+:/;\n    static toUri(raw: DebugProtocol.Source): URI {\n        if (raw.sourceReference && raw.sourceReference > 0) {\n            return new URI().withScheme(DebugSource.SCHEME).withPath(raw.name!).withQuery(String(raw.sourceReference));\n        }\n        if (!raw.path) {\n            throw new Error('Unrecognized source type: ' + JSON.stringify(raw));\n        }\n        if (raw.path.match(DebugSource.SCHEME_PATTERN)) {\n            return new URI(raw.path);\n        }\n        return new URI(Uri.file(raw.path));\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Based on https://github.com/theia-ide/vscode/blob/standalone/0.19.x/src/vs/workbench/contrib/debug/common/debugModel.ts\n\nimport * as React from 'react';\nimport { WidgetOpenerOptions, DISABLED_CLASS } from '@theia/core/lib/browser';\nimport { EditorWidget, Range, Position } from '@theia/editor/lib/browser';\nimport { DebugProtocol } from 'vscode-debugprotocol/lib/debugProtocol';\nimport { TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { DebugScope } from '../console/debug-console-items';\nimport { DebugSource } from './debug-source';\nimport { RecursivePartial } from '@theia/core';\nimport { DebugSession } from '../debug-session';\nimport { DebugThread } from './debug-thread';\n\nexport class DebugStackFrameData {\n    readonly raw: DebugProtocol.StackFrame;\n}\n\nexport class DebugStackFrame extends DebugStackFrameData implements TreeElement {\n\n    constructor(\n        readonly thread: DebugThread,\n        readonly session: DebugSession\n    ) {\n        super();\n    }\n\n    get id(): string {\n        return this.session.id + ':' + this.thread.id + ':' + this.raw.id;\n    }\n\n    protected _source: DebugSource | undefined;\n    get source(): DebugSource | undefined {\n        return this._source;\n    }\n    update(data: Partial<DebugStackFrameData>): void {\n        Object.assign(this, data);\n        this._source = this.raw.source && this.session.getSource(this.raw.source);\n    }\n\n    async restart(): Promise<void> {\n        await this.session.sendRequest('restartFrame', this.toArgs({\n            threadId: this.thread.id\n        }));\n    }\n\n    async open(options: WidgetOpenerOptions = {\n        mode: 'reveal'\n    }): Promise<EditorWidget | undefined> {\n        if (!this.source) {\n            return undefined;\n        }\n        const { line, column, endLine, endColumn } = this.raw;\n        const selection: RecursivePartial<Range> = {\n            start: Position.create(line - 1, column - 1)\n        };\n        if (typeof endLine === 'number') {\n            selection.end = {\n                line: endLine - 1,\n                character: typeof endColumn === 'number' ? endColumn - 1 : undefined\n            };\n        }\n        this.source.open({\n            ...options,\n            selection\n        });\n    }\n\n    protected scopes: Promise<DebugScope[]> | undefined;\n    getScopes(): Promise<DebugScope[]> {\n        return this.scopes || (this.scopes = this.doGetScopes());\n    }\n    protected async doGetScopes(): Promise<DebugScope[]> {\n        let response;\n        try {\n            response = await this.session.sendRequest('scopes', this.toArgs());\n        } catch {\n            // no-op: ignore debug adapter errors\n        }\n        if (!response) {\n            return [];\n        }\n        return response.body.scopes.map(raw => new DebugScope(raw, () => this.session));\n    }\n\n    // https://github.com/theia-ide/vscode/blob/standalone/0.19.x/src/vs/workbench/contrib/debug/common/debugModel.ts#L324-L335\n    async getMostSpecificScopes(range: monaco.IRange): Promise<DebugScope[]> {\n        const scopes = await this.getScopes();\n        const nonExpensiveScopes = scopes.filter(s => !s.expensive);\n        const haveRangeInfo = nonExpensiveScopes.some(s => !!s.range);\n        if (!haveRangeInfo) {\n            return nonExpensiveScopes;\n        }\n\n        const scopesContainingRange = nonExpensiveScopes.filter(scope => scope.range && monaco.Range.containsRange(scope.range, range))\n            .sort((first, second) => (first.range!.endLineNumber - first.range!.startLineNumber) - (second.range!.endLineNumber - second.range!.startLineNumber));\n        return scopesContainingRange.length ? scopesContainingRange : nonExpensiveScopes;\n    }\n\n    protected toArgs<T extends object>(arg?: T): { frameId: number } & T {\n        return Object.assign({}, arg, {\n            frameId: this.raw.id\n        });\n    }\n\n    render(): React.ReactNode {\n        const classNames = ['theia-debug-stack-frame'];\n        if (this.raw.presentationHint === 'label') {\n            classNames.push('label');\n        }\n        if (this.raw.presentationHint === 'subtle') {\n            classNames.push('subtle');\n        }\n        if (!this.source || this.source.raw.presentationHint === 'deemphasize') {\n            classNames.push(DISABLED_CLASS);\n        }\n        return <div className={classNames.join(' ')}>\n            <span className='expression' title={this.raw.name}>{this.raw.name}</span>\n            {this.renderFile()}\n        </div>;\n    }\n    protected renderFile(): React.ReactNode {\n        const { source } = this;\n        if (!source) {\n            return undefined;\n        }\n        const origin = source.raw.origin && `\\n${source.raw.origin}` || '';\n        return <span className='file' title={source.longName + origin}>\n            <span className='name'>{source.name}</span>\n            <span className='line'>{this.raw.line}:{this.raw.column}</span>\n        </span>;\n    }\n\n    get range(): monaco.IRange | undefined {\n        const { source, line: startLine, column: startColumn, endLine, endColumn } = this.raw;\n        if (source) {\n            return new monaco.Range(startLine, startColumn, endLine || startLine, endColumn || startColumn);\n        }\n        return undefined;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport { CancellationTokenSource, Emitter, Event } from '@theia/core';\nimport { DebugProtocol } from 'vscode-debugprotocol/lib/debugProtocol';\nimport { TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { DebugStackFrame } from './debug-stack-frame';\nimport { DebugSession } from '../debug-session';\n\nexport type StoppedDetails = DebugProtocol.StoppedEvent['body'] & {\n    framesErrorMessage?: string\n    totalFrames?: number\n};\n\nexport class DebugThreadData {\n    readonly raw: DebugProtocol.Thread;\n    readonly stoppedDetails: StoppedDetails | undefined;\n}\n\nexport interface DebugExceptionInfo {\n    id?: string\n    description?: string\n    details?: DebugProtocol.ExceptionDetails\n}\n\nexport class DebugThread extends DebugThreadData implements TreeElement {\n\n    protected readonly onDidChangedEmitter = new Emitter<void>();\n    readonly onDidChanged: Event<void> = this.onDidChangedEmitter.event;\n\n    constructor(\n        readonly session: DebugSession\n    ) {\n        super();\n    }\n\n    get id(): string {\n        return this.session.id + ':' + this.raw.id;\n    }\n\n    protected _currentFrame: DebugStackFrame | undefined;\n    get currentFrame(): DebugStackFrame | undefined {\n        return this._currentFrame;\n    }\n    set currentFrame(frame: DebugStackFrame | undefined) {\n        this._currentFrame = frame;\n        this.onDidChangedEmitter.fire(undefined);\n    }\n\n    get stopped(): boolean {\n        return !!this.stoppedDetails;\n    }\n\n    update(data: Partial<DebugThreadData>): void {\n        Object.assign(this, data);\n        if ('stoppedDetails' in data) {\n            this.clearFrames();\n        }\n    }\n\n    clear(): void {\n        this.update({\n            raw: this.raw,\n            stoppedDetails: undefined\n        });\n    }\n\n    continue(): Promise<DebugProtocol.ContinueResponse> {\n        return this.session.sendRequest('continue', this.toArgs());\n    }\n\n    stepOver(): Promise<DebugProtocol.NextResponse> {\n        return this.session.sendRequest('next', this.toArgs());\n    }\n\n    stepIn(): Promise<DebugProtocol.StepInResponse> {\n        return this.session.sendRequest('stepIn', this.toArgs());\n    }\n\n    stepOut(): Promise<DebugProtocol.StepOutResponse> {\n        return this.session.sendRequest('stepOut', this.toArgs());\n    }\n\n    pause(): Promise<DebugProtocol.PauseResponse> {\n        return this.session.sendRequest('pause', this.toArgs());\n    }\n\n    async getExceptionInfo(): Promise<DebugExceptionInfo | undefined> {\n        if (this.stoppedDetails && this.stoppedDetails.reason === 'exception') {\n            if (this.session.capabilities.supportsExceptionInfoRequest) {\n                const response = await this.session.sendRequest('exceptionInfo', this.toArgs());\n                return {\n                    id: response.body.exceptionId,\n                    description: response.body.description,\n                    details: response.body.details\n                };\n            }\n            return {\n                description: this.stoppedDetails.text\n            };\n        }\n        return undefined;\n    }\n\n    get supportsTerminate(): boolean {\n        return !!this.session.capabilities.supportsTerminateThreadsRequest;\n    }\n\n    async terminate(): Promise<void> {\n        if (this.supportsTerminate) {\n            await this.session.sendRequest('terminateThreads', {\n                threadIds: [this.raw.id]\n            });\n        }\n    }\n\n    protected readonly _frames = new Map<number, DebugStackFrame>();\n    get frames(): IterableIterator<DebugStackFrame> {\n        return this._frames.values();\n    }\n    get topFrame(): DebugStackFrame | undefined {\n        return this.frames.next().value;\n    }\n    get frameCount(): number {\n        return this._frames.size;\n    }\n\n    protected pendingFetch = Promise.resolve<DebugStackFrame[]>([]);\n    protected _pendingFetchCount: number = 0;\n    protected pendingFetchCancel = new CancellationTokenSource();\n    async fetchFrames(levels: number = 20): Promise<DebugStackFrame[]> {\n        const cancel = this.pendingFetchCancel.token;\n        this._pendingFetchCount += 1;\n\n        return this.pendingFetch = this.pendingFetch.then(async () => {\n            try {\n                const start = this.frameCount;\n                const frames = await this.doFetchFrames(start, levels);\n                if (cancel.isCancellationRequested) {\n                    return [];\n                }\n                return this.doUpdateFrames(frames);\n            } catch (e) {\n                console.error(e);\n                return [];\n            } finally {\n                if (!cancel.isCancellationRequested) {\n                    this._pendingFetchCount -= 1;\n                }\n            }\n        });\n    }\n    get pendingFrameCount(): number {\n        return this._pendingFetchCount;\n    }\n    protected async doFetchFrames(startFrame: number, levels: number): Promise<DebugProtocol.StackFrame[]> {\n        try {\n            const response = await this.session.sendRequest('stackTrace',\n                this.toArgs<Partial<DebugProtocol.StackTraceArguments>>({ startFrame, levels })\n            );\n            if (this.stoppedDetails) {\n                this.stoppedDetails.totalFrames = response.body.totalFrames;\n            }\n            return response.body.stackFrames;\n        } catch (e) {\n            if (this.stoppedDetails) {\n                this.stoppedDetails.framesErrorMessage = e.message;\n            }\n            return [];\n        }\n    }\n    protected doUpdateFrames(frames: DebugProtocol.StackFrame[]): DebugStackFrame[] {\n        const result = new Set<DebugStackFrame>();\n        for (const raw of frames) {\n            const id = raw.id;\n            const frame = this._frames.get(id) || new DebugStackFrame(this, this.session);\n            this._frames.set(id, frame);\n            frame.update({ raw });\n            result.add(frame);\n        }\n        this.updateCurrentFrame();\n        return [...result.values()];\n    }\n    protected clearFrames(): void {\n        // Clear all frames\n        this._frames.clear();\n\n        // Cancel all request promises\n        this.pendingFetchCancel.cancel();\n        this.pendingFetchCancel = new CancellationTokenSource();\n\n        // Empty all current requests\n        this.pendingFetch = Promise.resolve([]);\n        this._pendingFetchCount = 0;\n\n        this.updateCurrentFrame();\n    }\n    protected updateCurrentFrame(): void {\n        const { currentFrame } = this;\n        const frameId = currentFrame && currentFrame.raw.id;\n        this.currentFrame = typeof frameId === 'number' &&\n            this._frames.get(frameId) ||\n            this._frames.values().next().value;\n    }\n\n    protected toArgs<T extends object>(arg?: T): { threadId: number } & T {\n        return Object.assign({}, arg, {\n            threadId: this.raw.id\n        });\n    }\n\n    render(): React.ReactNode {\n        const reason = this.stoppedDetails && this.stoppedDetails.reason;\n        const status = this.stoppedDetails ? reason ? `Paused on ${reason}` : 'Paused' : 'Running';\n        return <div className='theia-debug-thread' title='Thread'>\n            <span className='label'>{this.raw.name}</span>\n            <span className='status'>{status}</span>\n        </div>;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { TreeSource, TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { DebugThread } from '../model/debug-thread';\nimport { DebugViewModel } from './debug-view-model';\nimport debounce = require('p-debounce');\n\n@injectable()\nexport class DebugStackFramesSource extends TreeSource {\n\n    @inject(DebugViewModel)\n    protected readonly model: DebugViewModel;\n\n    constructor() {\n        super({\n            placeholder: 'Not paused'\n        });\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.refresh();\n        this.toDispose.push(this.model.onDidChange(() => this.refresh()));\n    }\n\n    protected readonly refresh = debounce(() => this.fireDidChange(), 100);\n\n    *getElements(): IterableIterator<TreeElement> {\n        const thread = this.model.currentThread;\n        if (!thread) {\n            return;\n        }\n        for (const frame of thread.frames) {\n            yield frame;\n\n        }\n        if (thread.stoppedDetails) {\n            const { framesErrorMessage, totalFrames } = thread.stoppedDetails;\n            if (framesErrorMessage) {\n                yield {\n                    render: () => <span title={framesErrorMessage}>{framesErrorMessage}</span>\n                };\n            }\n            if (totalFrames && totalFrames > thread.frameCount) {\n                yield new LoadMoreStackFrames(thread);\n            }\n        }\n    }\n}\n\nexport class LoadMoreStackFrames implements TreeElement {\n\n    constructor(\n        readonly thread: DebugThread\n    ) { }\n\n    render(): React.ReactNode {\n        return <span className='theia-load-more-frames'>Load More Stack Frames</span>;\n    }\n\n    async open(): Promise<void> {\n        const frames = await this.thread.fetchFrames();\n        if (frames[0]) {\n            this.thread.currentFrame = frames[0];\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct, interfaces, Container } from 'inversify';\nimport { MenuPath } from '@theia/core';\nimport { TreeNode, NodeProps, SelectableTreeNode } from '@theia/core/lib/browser';\nimport { SourceTreeWidget, TreeElementNode } from '@theia/core/lib/browser/source-tree';\nimport { DebugStackFramesSource, LoadMoreStackFrames } from './debug-stack-frames-source';\nimport { DebugStackFrame } from '../model/debug-stack-frame';\nimport { DebugViewModel } from './debug-view-model';\nimport { DebugCallStackItemTypeKey } from '../debug-call-stack-item-type-key';\n\n@injectable()\nexport class DebugStackFramesWidget extends SourceTreeWidget {\n\n    static CONTEXT_MENU: MenuPath = ['debug-frames-context-menu'];\n    static createContainer(parent: interfaces.Container): Container {\n        const child = SourceTreeWidget.createContainer(parent, {\n            contextMenuPath: DebugStackFramesWidget.CONTEXT_MENU,\n            virtualized: false,\n            scrollIfActive: true\n        });\n        child.bind(DebugStackFramesSource).toSelf();\n        child.unbind(SourceTreeWidget);\n        child.bind(DebugStackFramesWidget).toSelf();\n        return child;\n    }\n    static createWidget(parent: interfaces.Container): DebugStackFramesWidget {\n        return DebugStackFramesWidget.createContainer(parent).get(DebugStackFramesWidget);\n    }\n\n    @inject(DebugStackFramesSource)\n    protected readonly frames: DebugStackFramesSource;\n\n    @inject(DebugViewModel)\n    protected readonly viewModel: DebugViewModel;\n\n    @inject(DebugCallStackItemTypeKey)\n    protected readonly debugCallStackItemTypeKey: DebugCallStackItemTypeKey;\n\n    @postConstruct()\n    protected init(): void {\n        super.init();\n        this.id = 'debug:frames:' + this.viewModel.id;\n        this.title.label = 'Call Stack';\n        this.toDispose.push(this.frames);\n        this.source = this.frames;\n\n        this.toDispose.push(this.viewModel.onDidChange(() => this.updateWidgetSelection()));\n        this.toDispose.push(this.model.onNodeRefreshed(() => this.updateWidgetSelection()));\n        this.toDispose.push(this.model.onSelectionChanged(() => this.updateModelSelection()));\n    }\n\n    protected updatingSelection = false;\n    protected async updateWidgetSelection(): Promise<void> {\n        if (this.updatingSelection) {\n            return;\n        }\n        this.updatingSelection = true;\n        try {\n            const { currentFrame } = this.viewModel;\n            if (currentFrame) {\n                const node = this.model.getNode(currentFrame.id);\n                if (SelectableTreeNode.is(node)) {\n                    this.model.selectNode(node);\n                }\n            }\n        } finally {\n            this.updatingSelection = false;\n        }\n    }\n    protected async updateModelSelection(): Promise<void> {\n        if (this.updatingSelection) {\n            return;\n        }\n        this.updatingSelection = true;\n        try {\n            const node = this.model.selectedNodes[0];\n            if (TreeElementNode.is(node)) {\n                if (node.element instanceof DebugStackFrame) {\n                    node.element.thread.currentFrame = node.element;\n                    this.debugCallStackItemTypeKey.set('stackFrame');\n                }\n            }\n        } finally {\n            this.updatingSelection = false;\n        }\n    }\n\n    protected toContextMenuArgs(node: SelectableTreeNode): [string | number] | undefined {\n        if (TreeElementNode.is(node)) {\n            if (node.element instanceof DebugStackFrame) {\n                const source = node.element.source;\n                if (source) {\n                    if (source.inMemory) {\n                        const path = source.raw.path || source.raw.sourceReference;\n                        if (path !== undefined) {\n                            return [path];\n                        }\n                    } else {\n                        return [source.uri.toString()];\n                    }\n                }\n            }\n        }\n        return undefined;\n    }\n\n    protected handleClickEvent(node: TreeNode | undefined, event: React.MouseEvent<HTMLElement>): void {\n        if (TreeElementNode.is(node) && node.element instanceof LoadMoreStackFrames) {\n            node.element.open();\n        }\n        super.handleClickEvent(node, event);\n    }\n\n    protected getDefaultNodeStyle(node: TreeNode, props: NodeProps): React.CSSProperties | undefined {\n        return undefined;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { TreeSource, TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { DebugViewModel } from './debug-view-model';\n\n@injectable()\nexport class DebugThreadsSource extends TreeSource {\n\n    @inject(DebugViewModel)\n    protected readonly model: DebugViewModel;\n\n    constructor() {\n        super({\n            placeholder: 'Not running'\n        });\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.fireDidChange();\n        this.toDispose.push(this.model.onDidChange(() => this.fireDidChange()));\n    }\n\n    get multiSession(): boolean {\n        return this.model.sessionCount > 1;\n    }\n\n    getElements(): IterableIterator<TreeElement> {\n        if (this.model.sessionCount === 1 && this.model.session && this.model.session.threadCount) {\n            return this.model.session.threads;\n        }\n        return this.model.sessions;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct, interfaces, Container } from 'inversify';\nimport { MenuPath } from '@theia/core';\nimport { TreeNode, NodeProps, SelectableTreeNode } from '@theia/core/lib/browser';\nimport { SourceTreeWidget, TreeElementNode } from '@theia/core/lib/browser/source-tree';\nimport { DebugThreadsSource } from './debug-threads-source';\nimport { DebugSession } from '../debug-session';\nimport { DebugThread } from '../model/debug-thread';\nimport { DebugViewModel } from '../view/debug-view-model';\nimport { DebugCallStackItemTypeKey } from '../debug-call-stack-item-type-key';\n\n@injectable()\nexport class DebugThreadsWidget extends SourceTreeWidget {\n\n    static CONTEXT_MENU: MenuPath = ['debug-threads-context-menu'];\n    static CONTROL_MENU = [...DebugThreadsWidget.CONTEXT_MENU, 'a_control'];\n    static TERMINATE_MENU = [...DebugThreadsWidget.CONTEXT_MENU, 'b_terminate'];\n    static OPEN_MENU = [...DebugThreadsWidget.CONTEXT_MENU, 'c_open'];\n    static createContainer(parent: interfaces.Container): Container {\n        const child = SourceTreeWidget.createContainer(parent, {\n            contextMenuPath: DebugThreadsWidget.CONTEXT_MENU,\n            virtualized: false,\n            scrollIfActive: true\n        });\n        child.bind(DebugThreadsSource).toSelf();\n        child.unbind(SourceTreeWidget);\n        child.bind(DebugThreadsWidget).toSelf();\n        return child;\n    }\n    static createWidget(parent: interfaces.Container): DebugThreadsWidget {\n        return DebugThreadsWidget.createContainer(parent).get(DebugThreadsWidget);\n    }\n\n    @inject(DebugThreadsSource)\n    protected readonly threads: DebugThreadsSource;\n\n    @inject(DebugViewModel)\n    protected readonly viewModel: DebugViewModel;\n\n    @inject(DebugCallStackItemTypeKey)\n    protected readonly debugCallStackItemTypeKey: DebugCallStackItemTypeKey;\n\n    @postConstruct()\n    protected init(): void {\n        super.init();\n        this.id = 'debug:threads:' + this.viewModel.id;\n        this.title.label = 'Threads';\n        this.toDispose.push(this.threads);\n        this.source = this.threads;\n\n        this.toDispose.push(this.viewModel.onDidChange(() => this.updateWidgetSelection()));\n        this.toDispose.push(this.model.onSelectionChanged(() => this.updateModelSelection()));\n    }\n\n    protected updatingSelection = false;\n    protected updateWidgetSelection(): void {\n        if (this.updatingSelection) {\n            return;\n        }\n        this.updatingSelection = true;\n        try {\n            const { currentThread } = this.viewModel;\n            if (currentThread) {\n                const node = this.model.getNode(currentThread.id);\n                if (SelectableTreeNode.is(node)) {\n                    this.model.selectNode(node);\n                }\n            }\n        } finally {\n            this.updatingSelection = false;\n        }\n    }\n    protected updateModelSelection(): void {\n        if (this.updatingSelection) {\n            return;\n        }\n        this.updatingSelection = true;\n        try {\n            const node = this.model.selectedNodes[0];\n            if (TreeElementNode.is(node)) {\n                if (node.element instanceof DebugSession) {\n                    this.viewModel.currentSession = node.element;\n                    this.debugCallStackItemTypeKey.set('session');\n                } else if (node.element instanceof DebugThread) {\n                    node.element.session.currentThread = node.element;\n                    this.debugCallStackItemTypeKey.set('thread');\n                }\n            }\n        } finally {\n            this.updatingSelection = false;\n        }\n    }\n\n    protected toContextMenuArgs(node: SelectableTreeNode): [number] | undefined {\n        if (TreeElementNode.is(node) && node.element instanceof DebugThread) {\n            return [node.element.raw.id];\n        }\n        return undefined;\n    }\n\n    protected getDefaultNodeStyle(node: TreeNode, props: NodeProps): React.CSSProperties | undefined {\n        if (this.threads.multiSession) {\n            return super.getDefaultNodeStyle(node, props);\n        }\n        return undefined;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport debounce from 'p-debounce';\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { Disposable, DisposableCollection, Event, Emitter } from '@theia/core/lib/common';\nimport URI from '@theia/core/lib/common/uri';\nimport { DebugSession, DebugState } from '../debug-session';\nimport { DebugSessionManager } from '../debug-session-manager';\nimport { DebugThread } from '../model/debug-thread';\nimport { DebugStackFrame } from '../model/debug-stack-frame';\nimport { DebugSourceBreakpoint } from '../model/debug-source-breakpoint';\nimport { DebugWatchExpression } from './debug-watch-expression';\nimport { DebugWatchManager } from '../debug-watch-manager';\nimport { DebugFunctionBreakpoint } from '../model/debug-function-breakpoint';\n\nexport const DebugViewOptions = Symbol('DebugViewOptions');\nexport interface DebugViewOptions {\n    session?: DebugSession\n}\n\n@injectable()\nexport class DebugViewModel implements Disposable {\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange: Event<void> = this.onDidChangeEmitter.event;\n    protected fireDidChange(): void {\n        this.refreshWatchExpressions();\n        this.onDidChangeEmitter.fire(undefined);\n    }\n\n    protected readonly onDidChangeBreakpointsEmitter = new Emitter<URI>();\n    readonly onDidChangeBreakpoints: Event<URI> = this.onDidChangeBreakpointsEmitter.event;\n    protected fireDidChangeBreakpoints(uri: URI): void {\n        this.onDidChangeBreakpointsEmitter.fire(uri);\n    }\n\n    protected readonly _watchExpressions = new Map<number, DebugWatchExpression>();\n\n    protected readonly onDidChangeWatchExpressionsEmitter = new Emitter<void>();\n    readonly onDidChangeWatchExpressions = this.onDidChangeWatchExpressionsEmitter.event;\n    protected fireDidChangeWatchExpressions(): void {\n        this.onDidChangeWatchExpressionsEmitter.fire(undefined);\n    }\n\n    protected readonly toDispose = new DisposableCollection(\n        this.onDidChangeEmitter,\n        this.onDidChangeBreakpointsEmitter,\n        this.onDidChangeWatchExpressionsEmitter\n    );\n\n    @inject(DebugViewOptions)\n    protected readonly options: DebugViewOptions;\n\n    @inject(DebugSessionManager)\n    protected readonly manager: DebugSessionManager;\n\n    @inject(DebugWatchManager)\n    protected readonly watch: DebugWatchManager;\n\n    protected readonly _sessions = new Set<DebugSession>();\n    get sessions(): IterableIterator<DebugSession> {\n        return this._sessions.values();\n    }\n    get sessionCount(): number {\n        return this._sessions.size;\n    }\n    push(session: DebugSession): void {\n        if (this._sessions.has(session)) {\n            return;\n        }\n        this._sessions.add(session);\n        this.fireDidChange();\n    }\n    delete(session: DebugSession): boolean {\n        if (this._sessions.delete(session)) {\n            this.fireDidChange();\n            return true;\n        }\n        return false;\n    }\n\n    get session(): DebugSession | undefined {\n        return this.sessions.next().value;\n    }\n    get id(): string {\n        return this.session && this.session.id || '-1';\n    }\n    get label(): string {\n        return this.session && this.session.label || 'Unknown Session';\n    }\n    has(session: DebugSession | undefined): session is DebugSession {\n        return !!session && this._sessions.has(session);\n    }\n\n    @postConstruct()\n    protected init(): void {\n        if (this.options.session) {\n            this.push(this.options.session);\n        }\n        this.toDispose.push(this.manager.onDidChangeActiveDebugSession(({ previous, current }) => {\n            if (this.has(previous) && !this.has(current)) {\n                this.fireDidChange();\n            }\n        }));\n        this.toDispose.push(this.manager.onDidChange(current => {\n            if (this.has(current)) {\n                this.fireDidChange();\n            }\n        }));\n        this.toDispose.push(this.manager.onDidChangeBreakpoints(({ session, uri }) => {\n            if (!session || session === this.currentSession) {\n                this.fireDidChangeBreakpoints(uri);\n            }\n        }));\n        this.updateWatchExpressions();\n        this.toDispose.push(this.watch.onDidChange(() => this.updateWatchExpressions()));\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    get currentSession(): DebugSession | undefined {\n        const { currentSession } = this.manager;\n        return this.has(currentSession) && currentSession || this.session;\n    }\n    set currentSession(currentSession: DebugSession | undefined) {\n        this.manager.currentSession = currentSession;\n    }\n\n    get state(): DebugState {\n        const { currentSession } = this;\n        return currentSession && currentSession.state || DebugState.Inactive;\n    }\n    get currentThread(): DebugThread | undefined {\n        const { currentSession } = this;\n        return currentSession && currentSession.currentThread;\n    }\n    get currentFrame(): DebugStackFrame | undefined {\n        const { currentThread } = this;\n        return currentThread && currentThread.currentFrame;\n    }\n\n    get breakpoints(): DebugSourceBreakpoint[] {\n        return this.manager.getBreakpoints(this.currentSession);\n    }\n\n    get functionBreakpoints(): DebugFunctionBreakpoint[] {\n        return this.manager.getFunctionBreakpoints(this.currentSession);\n    }\n\n    async start(): Promise<void> {\n        const { session } = this;\n        if (!session) {\n            return;\n        }\n        const newSession = await this.manager.start(session.options);\n        if (newSession) {\n            this._sessions.delete(session);\n            this._sessions.add(newSession);\n            this.fireDidChange();\n        }\n    }\n\n    async restart(): Promise<void> {\n        const { session } = this;\n        if (!session) {\n            return;\n        }\n        const newSession = await this.manager.restart(session);\n        if (newSession !== session) {\n            this._sessions.delete(session);\n            this._sessions.add(newSession);\n        }\n        this.fireDidChange();\n    }\n\n    get watchExpressions(): IterableIterator<DebugWatchExpression> {\n        return this._watchExpressions.values();\n    }\n\n    async addWatchExpression(expression: string = ''): Promise<DebugWatchExpression | undefined> {\n        const watchExpression = new DebugWatchExpression({\n            id: Number.MAX_SAFE_INTEGER,\n            expression,\n            session: () => this.currentSession,\n            onDidChange: () => { /* no-op */ }\n        });\n        await watchExpression.open();\n        if (!watchExpression.expression) {\n            return undefined;\n        }\n        const id = this.watch.addWatchExpression(watchExpression.expression);\n        return this._watchExpressions.get(id);\n    }\n\n    removeWatchExpressions(): void {\n        this.watch.removeWatchExpressions();\n    }\n\n    removeWatchExpression(expression: DebugWatchExpression): void {\n        this.watch.removeWatchExpression(expression.id);\n    }\n\n    protected updateWatchExpressions(): void {\n        let added = false;\n        const toRemove = new Set(this._watchExpressions.keys());\n        for (const [id, expression] of this.watch.watchExpressions) {\n            toRemove.delete(id);\n            if (!this._watchExpressions.has(id)) {\n                added = true;\n                const watchExpression = new DebugWatchExpression({\n                    id,\n                    expression,\n                    session: () => this.currentSession,\n                    onDidChange: () => this.fireDidChangeWatchExpressions()\n                });\n                this._watchExpressions.set(id, watchExpression);\n                watchExpression.evaluate();\n            }\n        }\n        for (const id of toRemove) {\n            this._watchExpressions.delete(id);\n        }\n        if (added || toRemove.size) {\n            this.fireDidChangeWatchExpressions();\n        }\n    }\n\n    protected refreshWatchExpressionsQueue = Promise.resolve();\n    protected refreshWatchExpressions = debounce(() => {\n        this.refreshWatchExpressionsQueue = this.refreshWatchExpressionsQueue.then(async () => {\n            try {\n                for (const watchExpression of this.watchExpressions) {\n                    await watchExpression.evaluate();\n                }\n            } catch (e) {\n                console.error('Failed to refresh watch expressions: ', e);\n            }\n        });\n    }, 50);\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport { SingleTextInputDialog } from '@theia/core/lib/browser/dialogs';\nimport { ExpressionItem, DebugSessionProvider } from '../console/debug-console-items';\nimport { DebugProtocol } from 'vscode-debugprotocol';\n\nexport class DebugWatchExpression extends ExpressionItem {\n\n    readonly id: number;\n\n    constructor(protected readonly options: {\n        id: number,\n        expression: string,\n        session: DebugSessionProvider,\n        onDidChange: () => void\n    }) {\n        super(options.expression, options.session);\n        this.id = options.id;\n    }\n\n    async evaluate(): Promise<void> {\n        await super.evaluate('watch');\n    }\n\n    protected setResult(body?: DebugProtocol.EvaluateResponse['body']): void {\n        // overridden to ignore error\n        super.setResult(body);\n        this.options.onDidChange();\n    }\n\n    render(): React.ReactNode {\n        return <div className='theia-debug-console-variable'>\n            <span title={this.type || this._expression} className='name'>{this._expression}: </span>\n            <span title={this._value} ref={this.setValueRef}>{this._value}</span>\n        </div >;\n    }\n\n    async open(): Promise<void> {\n        const input = new SingleTextInputDialog({\n            title: 'Edit Watch Expression',\n            initialValue: this.expression\n        });\n        const newValue = await input.open();\n        if (newValue !== undefined) {\n            this._expression = newValue;\n            await this.evaluate();\n        }\n    }\n\n    get supportCopyValue(): boolean {\n        return !!this.valueRef && document.queryCommandSupported('copy');\n    }\n    copyValue(): void {\n        const selection = document.getSelection();\n        if (this.valueRef && selection) {\n            selection.selectAllChildren(this.valueRef);\n            document.execCommand('copy');\n        }\n    }\n    protected valueRef: HTMLSpanElement | undefined;\n    protected setValueRef = (valueRef: HTMLSpanElement | null) => this.valueRef = valueRef || undefined;\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n// FIXME: refactor extensions to get rid of this file and remove it\n\nexport * from './debug-configuration';\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { TaskIdentifier } from '@theia/task/lib/common';\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type DebugViewLocation = 'default' | 'left' | 'right' | 'bottom';\n\n/**\n * Configuration for a debug adapter session.\n */\nexport interface DebugConfiguration {\n    /**\n     * The type of the debug adapter session.\n     */\n    type: string;\n\n    /**\n     * The name of the debug adapter session.\n     */\n    name: string;\n\n    /**\n     * Additional debug type specific properties.\n     */\n    [key: string]: any;\n\n    /**\n     * The request type of the debug adapter session.\n     */\n    request: string;\n\n    /**\n     * If noDebug is true the launch request should launch the program without enabling debugging.\n     */\n    noDebug?: boolean;\n\n    /**\n     * Optional data from the previous, restarted session.\n     * The data is sent as the 'restart' attribute of the 'terminated' event.\n     * The client should leave the data intact.\n     */\n    __restart?: any;\n\n    /** default: default */\n    debugViewLocation?: DebugViewLocation\n\n    /** default: neverOpen */\n    openDebug?: 'neverOpen' | 'openOnSessionStart' | 'openOnFirstSessionStart' | 'openOnDebugBreak';\n\n    /** default: neverOpen */\n    internalConsoleOptions?: 'neverOpen' | 'openOnSessionStart' | 'openOnFirstSessionStart'\n\n    /** Task to run before debug session starts */\n    preLaunchTask?: string | TaskIdentifier;\n\n    /** Task to run after debug session ends */\n    postDebugTask?: string | TaskIdentifier;\n}\nexport namespace DebugConfiguration {\n    export function is(arg: DebugConfiguration | any): arg is DebugConfiguration {\n        return !!arg && typeof arg === 'object' && 'type' in arg && 'name' in arg && 'request' in arg;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Disposable } from '@theia/core';\nimport { ApplicationError } from '@theia/core/lib/common/application-error';\nimport { IJSONSchema, IJSONSchemaSnippet } from '@theia/core/lib/common/json-schema';\nimport { DebugConfiguration } from './debug-configuration';\n\nexport interface DebuggerDescription {\n    type: string\n    label: string\n}\n\n/**\n * The WS endpoint path to the Debug service.\n */\nexport const DebugPath = '/services/debug';\n\n/**\n * DebugService symbol for DI.\n */\nexport const DebugService = Symbol('DebugService');\n\n/**\n * This service provides functionality to configure and to start a new debug adapter session.\n * The workflow is the following. If user wants to debug an application and\n * there is no debug configuration associated with the application then\n * the list of available providers is requested to create suitable debug configuration.\n * When configuration is chosen it is possible to alter the configuration\n * by filling in missing values or by adding/changing/removing attributes. For this purpose the\n * #resolveDebugConfiguration method is invoked. After that the debug adapter session will be started.\n */\nexport interface DebugService extends Disposable {\n    /**\n     * Finds and returns an array of registered debug types.\n     * @returns An array of registered debug types\n     */\n    debugTypes(): Promise<string[]>;\n\n    getDebuggersForLanguage(language: string): Promise<DebuggerDescription[]>;\n\n    /**\n     * Provides the schema attributes.\n     * @param debugType The registered debug type\n     * @returns An JSON Schema describing the configuration attributes for the given debug type\n     */\n    getSchemaAttributes(debugType: string): Promise<IJSONSchema[]>;\n\n    getConfigurationSnippets(): Promise<IJSONSchemaSnippet[]>;\n\n    /**\n     * Provides initial [debug configuration](#DebugConfiguration).\n     * @param debugType The registered debug type\n     * @returns An array of [debug configurations](#DebugConfiguration)\n     */\n    provideDebugConfigurations(debugType: string, workspaceFolderUri: string | undefined): Promise<DebugConfiguration[]>;\n\n    /**\n     * Resolves a [debug configuration](#DebugConfiguration) by filling in missing values\n     * or by adding/changing/removing attributes before variable substitution.\n     * @param debugConfiguration The [debug configuration](#DebugConfiguration) to resolve.\n     * @returns The resolved debug configuration.\n     */\n    resolveDebugConfiguration(config: DebugConfiguration, workspaceFolderUri: string | undefined): Promise<DebugConfiguration>;\n\n    /**\n     * Resolves a [debug configuration](#DebugConfiguration) by filling in missing values\n     * or by adding/changing/removing attributes with substituted variables.\n     * @param debugConfiguration The [debug configuration](#DebugConfiguration) to resolve.\n     * @returns The resolved debug configuration.\n     */\n    resolveDebugConfigurationWithSubstitutedVariables(config: DebugConfiguration, workspaceFolderUri: string | undefined): Promise<DebugConfiguration>;\n\n    /**\n     * Creates a new [debug adapter session](#DebugAdapterSession).\n     * @param config The resolved [debug configuration](#DebugConfiguration).\n     * @returns The identifier of the created [debug adapter session](#DebugAdapterSession).\n     */\n    createDebugSession(config: DebugConfiguration): Promise<string>;\n\n    /**\n     * Stop a running session for the given session id.\n     */\n    terminateDebugSession(sessionId: string): Promise<void>;\n}\n\n/**\n * The endpoint path to the debug adapter session.\n */\nexport const DebugAdapterPath = '/services/debug-adapter';\n\nexport namespace DebugError {\n    export const NotFound = ApplicationError.declare(-41000, (type: string) => ({\n        message: `'${type}' debugger type is not supported.`,\n        data: { type }\n    }));\n}\n"],"sourceRoot":""}