{"version":3,"sources":["webpack:///./node_modules/@theia/markers/src/browser/marker-tree-model.ts","webpack:///./node_modules/@theia/markers/src/browser/marker-tree.ts","webpack:///./node_modules/@theia/markers/src/browser/problem/problem-preferences.ts","webpack:///./node_modules/@theia/markers/src/browser/problem/problem-selection.ts","webpack:///./node_modules/@theia/markers/src/browser/problem/problem-tree-model.ts","webpack:///./node_modules/@theia/markers/src/browser/problem/problem-utils.ts","webpack:///./node_modules/@theia/markers/src/browser/problem/problem-widget.tsx"],"names":[],"mappings":"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","file":"20.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { MarkerNode } from './marker-tree';\nimport { TreeModelImpl, OpenerService, open, TreeNode, OpenerOptions } from '@theia/core/lib/browser';\n\n@injectable()\nexport class MarkerTreeModel extends TreeModelImpl {\n\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n\n    protected doOpenNode(node: TreeNode): void {\n        if (MarkerNode.is(node)) {\n            open(this.openerService, node.uri, this.getOpenerOptionsByMarker(node));\n        } else {\n            super.doOpenNode(node);\n        }\n    }\n\n    protected getOpenerOptionsByMarker(node: MarkerNode): OpenerOptions | undefined {\n        return undefined;\n    }\n\n    /**\n     * Reveal the corresponding node at the marker.\n     * @param node {TreeNode} the tree node.\n     */\n    revealNode(node: TreeNode): void {\n        if (MarkerNode.is(node)) {\n            open(this.openerService, node.uri, { ...this.getOpenerOptionsByMarker(node), mode: 'reveal' });\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { TreeImpl, CompositeTreeNode, TreeNode, SelectableTreeNode, ExpandableTreeNode } from '@theia/core/lib/browser';\nimport { MarkerManager } from './marker-manager';\nimport { Marker } from '../common/marker';\nimport { UriSelection } from '@theia/core/lib/common/selection';\nimport URI from '@theia/core/lib/common/uri';\nimport { ProblemSelection } from './problem/problem-selection';\n\nexport const MarkerOptions = Symbol('MarkerOptions');\nexport interface MarkerOptions {\n    readonly kind: string;\n}\n\n@injectable()\nexport abstract class MarkerTree<T extends object> extends TreeImpl {\n\n    constructor(\n        protected readonly markerManager: MarkerManager<T>,\n        protected readonly markerOptions: MarkerOptions\n    ) {\n        super();\n\n        this.toDispose.push(markerManager.onDidChangeMarkers(uri => this.refreshMarkerInfo(uri)));\n\n        this.root = <MarkerRootNode>{\n            visible: false,\n            id: 'theia-' + markerOptions.kind + '-marker-widget',\n            name: 'MarkerTree',\n            kind: markerOptions.kind,\n            children: [],\n            parent: undefined\n        };\n    }\n\n    protected async refreshMarkerInfo(uri: URI): Promise<void> {\n        const id = uri.toString();\n        const existing = this.getNode(id);\n        const markers = this.markerManager.findMarkers({ uri });\n        if (markers.length <= 0) {\n            if (MarkerInfoNode.is(existing)) {\n                CompositeTreeNode.removeChild(existing.parent, existing);\n                this.removeNode(existing);\n                this.fireChanged();\n            }\n            return;\n        }\n        const node = MarkerInfoNode.is(existing) ? existing : this.createMarkerInfo(id, uri);\n        CompositeTreeNode.addChild(node.parent, node);\n        const children = this.getMarkerNodes(node, markers);\n        node.numberOfMarkers = markers.length;\n        this.setChildren(node, children);\n    }\n\n    protected async resolveChildren(parent: CompositeTreeNode): Promise<TreeNode[]> {\n        if (MarkerRootNode.is(parent)) {\n            const nodes: MarkerInfoNode[] = [];\n            for (const id of this.markerManager.getUris()) {\n                const uri = new URI(id);\n                const existing = this.getNode(id);\n                const markers = this.markerManager.findMarkers({ uri });\n                const node = MarkerInfoNode.is(existing) ? existing : this.createMarkerInfo(id, uri);\n                node.children = this.getMarkerNodes(node, markers);\n                node.numberOfMarkers = node.children.length;\n                nodes.push(node);\n            }\n            return nodes;\n        }\n        return super.resolveChildren(parent);\n    }\n\n    protected createMarkerInfo(id: string, uri: URI): MarkerInfoNode {\n        return {\n            children: [],\n            expanded: true,\n            uri,\n            id,\n            parent: this.root as MarkerRootNode,\n            selected: false,\n            numberOfMarkers: 0\n        };\n    }\n\n    protected getMarkerNodes(parent: MarkerInfoNode, markers: Marker<T>[]): MarkerNode[] {\n        return markers.map((marker, index) =>\n            this.createMarkerNode(marker, index, parent)\n        );\n    }\n    protected createMarkerNode(marker: Marker<T>, index: number, parent: MarkerInfoNode): MarkerNode {\n        const id = parent.id + '_' + index;\n        const existing = this.getNode(id);\n        if (MarkerNode.is(existing)) {\n            existing.marker = marker;\n            return existing;\n        }\n        return {\n            id,\n            name: 'marker',\n            parent,\n            selected: false,\n            uri: parent.uri,\n            marker\n        };\n    }\n}\n\nexport interface MarkerNode extends UriSelection, SelectableTreeNode, ProblemSelection {\n    marker: Marker<object>;\n}\nexport namespace MarkerNode {\n    export function is(node: TreeNode | undefined): node is MarkerNode {\n        return UriSelection.is(node) && SelectableTreeNode.is(node) && ProblemSelection.is(node);\n    }\n}\n\nexport interface MarkerInfoNode extends UriSelection, SelectableTreeNode, ExpandableTreeNode {\n    parent: MarkerRootNode;\n    numberOfMarkers: number;\n}\nexport namespace MarkerInfoNode {\n    export function is(node: Object | undefined): node is MarkerInfoNode {\n        return ExpandableTreeNode.is(node) && UriSelection.is(node) && 'numberOfMarkers' in node;\n    }\n}\n\nexport interface MarkerRootNode extends CompositeTreeNode {\n    kind: string;\n}\nexport namespace MarkerRootNode {\n    export function is(node: TreeNode | undefined): node is MarkerRootNode {\n        return CompositeTreeNode.is(node) && 'kind' in node;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService, PreferenceContribution, PreferenceSchema } from '@theia/core/lib/browser';\n\nexport const ProblemConfigSchema: PreferenceSchema = {\n    'type': 'object',\n    'properties': {\n        'problems.decorations.enabled': {\n            'type': 'boolean',\n            'description': 'Show problem decorators (diagnostic markers) in tree widgets.',\n            'default': true,\n        },\n        'problems.decorations.tabbar.enabled': {\n            'type': 'boolean',\n            'description': 'Show problem decorators (diagnostic markers) in the tab bars.',\n            'default': true\n        },\n        'problems.autoReveal': {\n            'type': 'boolean',\n            'description': 'Controls whether Problems view should reveal markers when file is opened.',\n            'default': true\n        }\n    }\n};\n\nexport interface ProblemConfiguration {\n    'problems.decorations.enabled': boolean,\n    'problems.decorations.tabbar.enabled': boolean,\n    'problems.autoReveal': boolean\n}\n\nexport const ProblemPreferences = Symbol('ProblemPreferences');\nexport type ProblemPreferences = PreferenceProxy<ProblemConfiguration>;\n\nexport const createProblemPreferences = (preferences: PreferenceService): ProblemPreferences =>\n    createPreferenceProxy(preferences, ProblemConfigSchema);\n\nexport const bindProblemPreferences = (bind: interfaces.Bind): void => {\n    bind(ProblemPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createProblemPreferences(preferences);\n    });\n    bind(PreferenceContribution).toConstantValue({ schema: ProblemConfigSchema });\n};\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { SelectionCommandHandler } from '@theia/core/lib/common/selection-command-handler';\nimport { Marker } from '../../common/marker';\nimport { ProblemMarker } from '../../common/problem-marker';\n\nexport interface ProblemSelection {\n    marker: Marker<object>;\n}\nexport namespace ProblemSelection {\n    export function is(arg: Object | undefined): arg is ProblemSelection {\n        return typeof arg === 'object' && ('marker' in arg) && ProblemMarker.is(arg['marker']);\n    }\n\n    export class CommandHandler extends SelectionCommandHandler<ProblemSelection> {\n\n        constructor(\n            protected readonly selectionService: SelectionService,\n            protected readonly options: SelectionCommandHandler.Options<ProblemSelection>\n        ) {\n            super(\n                selectionService,\n                arg => ProblemSelection.is(arg) ? arg : undefined,\n                options\n            );\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ProblemMarker } from '../../common/problem-marker';\nimport { ProblemManager } from './problem-manager';\nimport { MarkerNode, MarkerTree, MarkerOptions, MarkerInfoNode } from '../marker-tree';\nimport { MarkerTreeModel } from '../marker-tree-model';\nimport { injectable, inject } from 'inversify';\nimport { OpenerOptions, TreeNode } from '@theia/core/lib/browser';\nimport { Marker } from '../../common/marker';\nimport { Diagnostic } from 'vscode-languageserver-types';\nimport { ProblemUtils } from './problem-utils';\n\n@injectable()\nexport class ProblemTree extends MarkerTree<Diagnostic> {\n\n    constructor(\n        @inject(ProblemManager) protected readonly problemManager: ProblemManager,\n        @inject(MarkerOptions) protected readonly markerOptions: MarkerOptions) {\n        super(problemManager, markerOptions);\n    }\n\n    protected getMarkerNodes(parent: MarkerInfoNode, markers: Marker<Diagnostic>[]): MarkerNode[] {\n        const nodes = super.getMarkerNodes(parent, markers);\n        return nodes.sort((a, b) => this.sortMarkers(a, b));\n    }\n\n    /**\n     * Sort markers based on the following rules:\n     * - Markers are fist sorted by `severity`.\n     * - Markers are sorted by `line number` if applicable.\n     * - Markers are sorted by `column number` if\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    protected sortMarkers(a: MarkerNode, b: MarkerNode): number {\n        const markerA = a.marker as Marker<Diagnostic>;\n        const markerB = b.marker as Marker<Diagnostic>;\n\n        // Determine the marker with the highest severity.\n        const severity = ProblemUtils.severityCompare(markerA, markerB);\n        if (severity !== 0) {\n            return severity;\n        }\n        // Determine the marker with the lower line number.\n        const lineNumber = ProblemUtils.lineNumberCompare(markerA, markerB);\n        if (lineNumber !== 0) {\n            return lineNumber;\n        }\n        // Determine the marker with the lower column number.\n        const columnNumber = ProblemUtils.columnNumberCompare(markerA, markerB);\n        if (columnNumber !== 0) {\n            return columnNumber;\n        }\n        return 0;\n    }\n\n}\n\n@injectable()\nexport class ProblemTreeModel extends MarkerTreeModel {\n\n    @inject(ProblemManager) protected readonly problemManager: ProblemManager;\n\n    protected getOpenerOptionsByMarker(node: MarkerNode): OpenerOptions | undefined {\n        if (ProblemMarker.is(node.marker)) {\n            return {\n                selection: node.marker.data.range\n            };\n        }\n        return undefined;\n    }\n\n    removeNode(node: TreeNode): void {\n        if (MarkerInfoNode.is(node)) {\n            this.problemManager.cleanAllMarkers(node.uri);\n        }\n        if (MarkerNode.is(node)) {\n            const { uri } = node;\n            const { owner } = node.marker;\n            const diagnostics = this.problemManager.findMarkers({ uri, owner, dataFilter: data => node.marker.data !== data }).map(({ data }) => data);\n            this.problemManager.setMarkers(uri, owner, diagnostics);\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Marker } from '../../common/marker';\nimport { Diagnostic } from '@theia/languages/lib/browser';\n\nexport namespace ProblemUtils {\n\n    /**\n     * Comparator for severity.\n     * - The highest severity (`error`) come first followed by others.\n     * - `undefined` severities are treated as the last ones.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    export const severityCompare = (a: Marker<Diagnostic>, b: Marker<Diagnostic>): number =>\n        (a.data.severity || Number.MAX_SAFE_INTEGER) - (b.data.severity || Number.MAX_SAFE_INTEGER);\n\n    /**\n     * Comparator for line numbers.\n     * - The lowest line number comes first.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    export const lineNumberCompare = (a: Marker<Diagnostic>, b: Marker<Diagnostic>): number => a.data.range.start.line - b.data.range.start.line;\n\n    /**\n     * Comparator for column numbers.\n     * - The lowest column number comes first.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    export const columnNumberCompare = (a: Marker<Diagnostic>, b: Marker<Diagnostic>): number => a.data.range.start.character - b.data.range.start.character;\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { ProblemManager } from './problem-manager';\nimport { ProblemMarker } from '../../common/problem-marker';\nimport { ProblemTreeModel } from './problem-tree-model';\nimport { MarkerInfoNode, MarkerNode, MarkerRootNode } from '../marker-tree';\nimport {\n    TreeWidget, TreeProps, ContextMenuRenderer, TreeNode, NodeProps, TreeModel,\n    ApplicationShell, Navigatable, ExpandableTreeNode, SelectableTreeNode\n} from '@theia/core/lib/browser';\nimport { DiagnosticSeverity } from 'vscode-languageserver-types';\nimport * as React from 'react';\nimport { ProblemPreferences } from './problem-preferences';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\n\nexport const PROBLEMS_WIDGET_ID = 'problems';\n\n@injectable()\nexport class ProblemWidget extends TreeWidget {\n\n    protected readonly toDisposeOnCurrentWidgetChanged = new DisposableCollection();\n\n    @inject(ProblemPreferences)\n    protected readonly preferences: ProblemPreferences;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    constructor(\n        @inject(ProblemManager) protected readonly problemManager: ProblemManager,\n        @inject(TreeProps) readonly treeProps: TreeProps,\n        @inject(ProblemTreeModel) readonly model: ProblemTreeModel,\n        @inject(ContextMenuRenderer) readonly contextMenuRenderer: ContextMenuRenderer\n    ) {\n        super(treeProps, model, contextMenuRenderer);\n\n        this.id = PROBLEMS_WIDGET_ID;\n        this.title.label = 'Problems';\n        this.title.caption = 'Problems';\n        this.title.iconClass = 'fa problem-tab-icon';\n        this.title.closable = true;\n        this.addClass('theia-marker-container');\n\n        this.addClipboardListener(this.node, 'copy', e => this.handleCopy(e));\n    }\n\n    @postConstruct()\n    protected init(): void {\n        super.init();\n        this.updateFollowActiveEditor();\n        this.toDispose.push(this.preferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'problems.autoReveal') {\n                this.updateFollowActiveEditor();\n            }\n        }));\n    }\n\n    protected updateFollowActiveEditor(): void {\n        this.toDisposeOnCurrentWidgetChanged.dispose();\n        this.toDispose.push(this.toDisposeOnCurrentWidgetChanged);\n        if (this.preferences.get('problems.autoReveal')) {\n            this.followActiveEditor();\n        }\n    }\n\n    protected followActiveEditor(): void {\n        this.autoRevealFromActiveEditor();\n        this.toDisposeOnCurrentWidgetChanged.push(this.shell.onDidChangeCurrentWidget(() => this.autoRevealFromActiveEditor()));\n    }\n\n    protected autoRevealFromActiveEditor(): void {\n        const widget = this.shell.currentWidget;\n        if (widget && Navigatable.is(widget)) {\n            const uri = widget.getResourceUri();\n            const node = uri && this.model.getNode(uri.toString());\n            if (ExpandableTreeNode.is(node) && SelectableTreeNode.is(node)) {\n                this.model.expandNode(node);\n                this.model.selectNode(node);\n            }\n        }\n    }\n\n    storeState(): object {\n        // no-op\n        return {};\n    }\n    protected superStoreState(): object {\n        return super.storeState();\n    }\n    restoreState(state: object): void {\n        // no-op\n    }\n    protected superRestoreState(state: object): void {\n        super.restoreState(state);\n        return;\n    }\n\n    protected handleClickEvent(node: TreeNode | undefined, event: React.MouseEvent<HTMLElement>): void {\n        super.handleClickEvent(node, event);\n        if (MarkerNode.is(node)) {\n            this.model.revealNode(node);\n        }\n    }\n\n    protected handleCopy(event: ClipboardEvent): void {\n        const uris = this.model.selectedNodes.filter(MarkerNode.is).map(node => node.uri.toString());\n        if (uris.length > 0 && event.clipboardData) {\n            event.clipboardData.setData('text/plain', uris.join('\\n'));\n            event.preventDefault();\n        }\n    }\n\n    protected handleDown(event: KeyboardEvent): void {\n        const node = this.model.getNextSelectableNode();\n        super.handleDown(event);\n        if (MarkerNode.is(node)) {\n            this.model.revealNode(node);\n        }\n    }\n\n    protected handleUp(event: KeyboardEvent): void {\n        const node = this.model.getPrevSelectableNode();\n        super.handleUp(event);\n        if (MarkerNode.is(node)) {\n            this.model.revealNode(node);\n        }\n    }\n\n    protected renderTree(model: TreeModel): React.ReactNode {\n        if (MarkerRootNode.is(model.root) && model.root.children.length > 0) {\n            return super.renderTree(model);\n        }\n        return <div className='theia-widget-noInfo noMarkers'>No problems have been detected in the workspace so far.</div>;\n    }\n\n    protected renderCaption(node: TreeNode, props: NodeProps): React.ReactNode {\n        if (MarkerInfoNode.is(node)) {\n            return this.decorateMarkerFileNode(node);\n        } else if (MarkerNode.is(node)) {\n            return this.decorateMarkerNode(node);\n        }\n        return 'caption';\n    }\n\n    protected renderTailDecorations(node: TreeNode, props: NodeProps): JSX.Element {\n        return <div className='row-button-container'>\n            {this.renderRemoveButton(node)}\n        </div>;\n    }\n\n    protected renderRemoveButton(node: TreeNode): React.ReactNode {\n        return <ProblemMarkerRemoveButton model={this.model} node={node} />;\n    }\n\n    protected decorateMarkerNode(node: MarkerNode): React.ReactNode {\n        if (ProblemMarker.is(node.marker)) {\n            let severityClass: string = '';\n            const problemMarker = node.marker;\n            if (problemMarker.data.severity) {\n                severityClass = this.getSeverityClass(problemMarker.data.severity);\n            }\n            return <div\n                className='markerNode'\n                title={`${problemMarker.data.message} (${problemMarker.data.range.start.line + 1}, ${problemMarker.data.range.start.character + 1})`}>\n                <div>\n                    <i className={severityClass}></i>\n                </div>\n                <div className='message'>{problemMarker.data.message}\n                    <span className='owner'>\n                        {(problemMarker.data.source || problemMarker.owner)}\n                        {problemMarker.data.code ? `(${problemMarker.data.code})` : ''}\n                    </span>\n                    <span className='position'>\n                        {'[' + (problemMarker.data.range.start.line + 1) + ', ' + (problemMarker.data.range.start.character + 1) + ']'}\n                    </span>\n                </div>\n            </div>;\n        }\n        return '';\n    }\n\n    protected getSeverityClass(severity: DiagnosticSeverity): string {\n        switch (severity) {\n            case 1: return 'fa fa-times-circle error';\n            case 2: return 'fa fa-exclamation-circle warning';\n            case 3: return 'fa fa-info-circle information';\n            default: return 'fa fa-hand-o-up hint';\n        }\n    }\n\n    protected decorateMarkerFileNode(node: MarkerInfoNode): React.ReactNode {\n        const icon = this.toNodeIcon(node);\n        const name = this.toNodeName(node);\n        const description = this.toNodeDescription(node);\n        // Use a custom scheme so that we fallback to the `DefaultUriLabelProviderContribution`.\n        const path = this.labelProvider.getLongName(node.uri.withScheme('marker'));\n        return <div title={path} className='markerFileNode'>\n            {icon && <div className={icon + ' file-icon'}></div>}\n            <div className='name'>{name}</div>\n            <div className='path'>{description}</div>\n            <div className='notification-count-container'>\n                <span className='notification-count'>{node.numberOfMarkers.toString()}</span>\n            </div>\n        </div>;\n    }\n\n}\n\nexport class ProblemMarkerRemoveButton extends React.Component<{ model: ProblemTreeModel, node: TreeNode }> {\n\n    render(): React.ReactNode {\n        return <span className='remove-node' onClick={this.remove}></span>;\n    }\n\n    protected readonly remove = (e: React.MouseEvent<HTMLElement>) => this.doRemove(e);\n    protected doRemove(e: React.MouseEvent<HTMLElement>): void {\n        this.props.model.removeNode(this.props.node);\n        e.stopPropagation();\n    }\n}\n"],"sourceRoot":""}