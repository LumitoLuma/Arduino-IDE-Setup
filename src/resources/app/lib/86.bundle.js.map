{"version":3,"sources":["webpack:///./node_modules/@theia/core/src/electron-browser/keyboard/electron-keyboard-layout-change-notifier.ts","webpack:///./node_modules/@theia/core/src/electron-browser/keyboard/electron-keyboard-module.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;AAElF,oGAAsD;AACtD,iEAAuC;AAEvC,8GAAoD;AAEpD;;;GAGG;AAEH;IAAA;QAEuB,wBAAmB,GAAG,IAAI,eAAO,EAAwB,CAAC;IAWjF,CAAC;IATG,sBAAI,yEAAuB;aAA3B;YACI,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;QAC1C,CAAC;;;OAAA;IAGS,yDAAU,GAApB;QADA,iBAGC;QADG,sBAAW,CAAC,EAAE,CAAC,uBAAuB,EAAE,UAAC,KAAgC,EAAE,SAA+B,IAAK,YAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAxC,CAAwC,CAAC,CAAC;IAC7J,CAAC;IAFD;QADC,yBAAa,EAAE;;;;0EAGf;IAXQ,oCAAoC;QADhD,sBAAU,EAAE;OACA,oCAAoC,CAahD;IAAD,2CAAC;CAAA;AAbY,oFAAoC;;;;;;;;;;;;;;AC1BjD;;;;;;;;;;;;;;kFAckF;;AAElF,oGAA4C;AAC5C,yLAAoI;AACpI,uLAA6F;AAC7F,+NAAkG;AAElG,kBAAe,IAAI,2BAAe,CAAC,UAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM;IAC7D,IAAI,CAAC,iDAAsB,CAAC,CAAC,cAAc,CAAC,aAAG;QAC3C,2DAA2B,CAAC,WAAW,CAAyB,GAAG,CAAC,SAAS,EAAE,uCAAY,CAAC;IAA5F,CAA4F,CAC/F,CAAC,gBAAgB,EAAE,CAAC;IACrB,IAAI,CAAC,+EAAoC,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACvE,IAAI,CAAC,uDAA4B,CAAC,CAAC,SAAS,CAAC,+EAAoC,CAAC,CAAC;AACvF,CAAC,CAAC,CAAC","file":"86.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { postConstruct, injectable } from 'inversify';\nimport { ipcRenderer } from 'electron';\nimport { KeyboardLayoutChangeNotifier, NativeKeyboardLayout } from '../../common/keyboard/keyboard-layout-provider';\nimport { Emitter, Event } from '../../common/event';\n\n/**\n * Keyboard layout changes are detected by the native-keymap package. This must happen in the\n * main process of Electron. The events are sent to the renderer process using Electron IPC.\n */\n@injectable()\nexport class ElectronKeyboardLayoutChangeNotifier implements KeyboardLayoutChangeNotifier {\n\n    protected readonly nativeLayoutChanged = new Emitter<NativeKeyboardLayout>();\n\n    get onDidChangeNativeLayout(): Event<NativeKeyboardLayout> {\n        return this.nativeLayoutChanged.event;\n    }\n\n    @postConstruct()\n    protected initialize(): void {\n        ipcRenderer.on('keyboardLayoutChanged', (event: Electron.IpcRendererEvent, newLayout: NativeKeyboardLayout) => this.nativeLayoutChanged.fire(newLayout));\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from 'inversify';\nimport { KeyboardLayoutProvider, keyboardPath, KeyboardLayoutChangeNotifier } from '../../common/keyboard/keyboard-layout-provider';\nimport { WebSocketConnectionProvider } from '../../browser/messaging/ws-connection-provider';\nimport { ElectronKeyboardLayoutChangeNotifier } from './electron-keyboard-layout-change-notifier';\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    bind(KeyboardLayoutProvider).toDynamicValue(ctx =>\n        WebSocketConnectionProvider.createProxy<KeyboardLayoutProvider>(ctx.container, keyboardPath)\n    ).inSingletonScope();\n    bind(ElectronKeyboardLayoutChangeNotifier).toSelf().inSingletonScope();\n    bind(KeyboardLayoutChangeNotifier).toService(ElectronKeyboardLayoutChangeNotifier);\n});\n"],"sourceRoot":""}