{"version":3,"sources":["webpack:///./node_modules/@theia/markers/src/browser/marker-manager.ts","webpack:///./node_modules/@theia/markers/src/browser/problem/problem-manager.ts","webpack:///./node_modules/@theia/markers/src/common/problem-marker.ts"],"names":[],"mappings":"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","file":"13.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { Event, Emitter } from '@theia/core/lib/common';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileSystemWatcher, FileChangeEvent, FileChangeType } from '@theia/filesystem/lib/browser/filesystem-watcher';\nimport { Marker } from '../common/marker';\n\n/*\n * argument to the `findMarkers` method.\n */\nexport interface SearchFilter<D> {\n    uri?: URI,\n    owner?: string,\n    dataFilter?: (data: D) => boolean\n}\n\nexport class MarkerCollection<T> {\n\n    protected readonly owner2Markers = new Map<string, Readonly<Marker<T>>[]>();\n\n    constructor(\n        public readonly uri: URI,\n        public readonly kind: string\n    ) { }\n\n    get empty(): boolean {\n        return !this.owner2Markers.size;\n    }\n\n    getOwners(): string[] {\n        return Array.from(this.owner2Markers.keys());\n    }\n\n    getMarkers(owner: string): Readonly<Marker<T>>[] {\n        return this.owner2Markers.get(owner) || [];\n    }\n\n    setMarkers(owner: string, markerData: T[]): Marker<T>[] {\n        const before = this.owner2Markers.get(owner);\n        if (markerData.length > 0) {\n            this.owner2Markers.set(owner, markerData.map(data => this.createMarker(owner, data)));\n        } else {\n            this.owner2Markers.delete(owner);\n        }\n        return before || [];\n    }\n\n    protected createMarker(owner: string, data: T): Readonly<Marker<T>> {\n        return Object.freeze({\n            uri: this.uri.toString(),\n            kind: this.kind,\n            owner: owner,\n            data\n        });\n    }\n\n    findMarkers(filter: SearchFilter<T>): Marker<T>[] {\n        if (filter.owner) {\n            if (this.owner2Markers.has(filter.owner)) {\n                return this.filterMarkers(filter, this.owner2Markers.get(filter.owner));\n            }\n            return [];\n        } else {\n            const result: Marker<T>[] = [];\n            for (const markers of this.owner2Markers.values()) {\n                result.push(...this.filterMarkers(filter, markers));\n            }\n            return result;\n        }\n    }\n\n    protected filterMarkers(filter: SearchFilter<T>, toFilter?: Marker<T>[]): Marker<T>[] {\n        if (!toFilter) {\n            return [];\n        }\n        if (filter.dataFilter) {\n            return toFilter.filter(d => filter.dataFilter!(d.data));\n        } else {\n            return toFilter;\n        }\n    }\n\n}\n\nexport interface Uri2MarkerEntry {\n    uri: string\n    markers: Owner2MarkerEntry[]\n}\n\nexport interface Owner2MarkerEntry {\n    owner: string\n    markerData: object[];\n}\n\n@injectable()\nexport abstract class MarkerManager<D extends object> {\n\n    public abstract getKind(): string;\n\n    protected readonly uri2MarkerCollection = new Map<string, MarkerCollection<D>>();\n    protected readonly onDidChangeMarkersEmitter = new Emitter<URI>();\n\n    @inject(FileSystemWatcher) protected fileWatcher: FileSystemWatcher;\n\n    @postConstruct()\n    protected init(): void {\n        this.fileWatcher.onFilesChanged(event => {\n            const relevantEvent = event.filter(({ type }) => type === FileChangeType.DELETED);\n            if (relevantEvent.length) {\n                this.cleanMarkers(relevantEvent);\n            }\n        });\n    }\n\n    protected cleanMarkers(event: FileChangeEvent): void {\n        for (const uriString of this.uri2MarkerCollection.keys()) {\n            const uri = new URI(uriString);\n            if (FileChangeEvent.isDeleted(event, uri)) {\n                this.cleanAllMarkers(uri);\n            }\n        }\n    }\n\n    get onDidChangeMarkers(): Event<URI> {\n        return this.onDidChangeMarkersEmitter.event;\n    }\n\n    protected fireOnDidChangeMarkers(uri: URI): void {\n        this.onDidChangeMarkersEmitter.fire(uri);\n    }\n\n    /*\n     * replaces the current markers for the given uri and owner with the given data.\n     */\n    setMarkers(uri: URI, owner: string, data: D[]): Marker<D>[] {\n        const uriString = uri.toString();\n        const collection = this.uri2MarkerCollection.get(uriString) || new MarkerCollection<D>(uri, this.getKind());\n        const oldMarkers = collection.setMarkers(owner, data);\n        if (collection.empty) {\n            this.uri2MarkerCollection.delete(uri.toString());\n        } else {\n            this.uri2MarkerCollection.set(uriString, collection);\n        }\n        this.fireOnDidChangeMarkers(uri);\n        return oldMarkers;\n    }\n\n    /*\n     * returns all markers that satisfy the given filter.\n     */\n    findMarkers(filter: SearchFilter<D> = {}): Marker<D>[] {\n        if (filter.uri) {\n            const collection = this.uri2MarkerCollection.get(filter.uri.toString());\n            return collection ? collection.findMarkers(filter) : [];\n        }\n        const result: Marker<D>[] = [];\n        for (const uri of this.getUris()) {\n            result.push(...this.uri2MarkerCollection.get(uri)!.findMarkers(filter));\n        }\n        return result;\n    }\n\n    getUris(): IterableIterator<string> {\n        return this.uri2MarkerCollection.keys();\n    }\n\n    cleanAllMarkers(uri?: URI): void {\n        if (uri) {\n            this.doCleanAllMarkers(uri);\n        } else {\n            for (const uriString of this.getUris()) {\n                this.doCleanAllMarkers(new URI(uriString));\n            }\n        }\n    }\n    protected doCleanAllMarkers(uri: URI): void {\n        const uriString = uri.toString();\n        const collection = this.uri2MarkerCollection.get(uriString);\n        if (collection !== undefined) {\n            this.uri2MarkerCollection.delete(uriString);\n            this.fireOnDidChangeMarkers(uri);\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { MarkerManager } from '../marker-manager';\nimport { PROBLEM_KIND } from '../../common/problem-marker';\nimport { Diagnostic } from 'vscode-languageserver-types';\n\nexport interface ProblemStat {\n    errors: number;\n    warnings: number;\n    infos: number;\n}\n\n@injectable()\nexport class ProblemManager extends MarkerManager<Diagnostic> {\n\n    public getKind(): string {\n        return PROBLEM_KIND;\n    }\n\n    getProblemStat(): ProblemStat {\n        let errors = 0;\n        let warnings = 0;\n        let infos = 0;\n        for (const marker of this.findMarkers()) {\n            if (marker.data.severity === 1) {\n                errors++;\n            } else if (marker.data.severity === 2) {\n                warnings++;\n            } else if (marker.data.severity === 3) {\n                infos++;\n            }\n        }\n        return { errors, warnings, infos };\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Marker } from './marker';\nimport { Diagnostic } from 'vscode-languageserver-types';\n\nexport const PROBLEM_KIND = 'problem';\n\nexport interface ProblemMarker extends Marker<Diagnostic> {\n    kind: 'problem';\n}\n\nexport namespace ProblemMarker {\n    export function is(node: Marker<object>): node is ProblemMarker {\n        return 'kind' in node && node.kind === PROBLEM_KIND;\n    }\n}\n"],"sourceRoot":""}