{"version":3,"sources":["webpack:///./node_modules/@theia/filesystem/src/browser/filesystem-preferences.ts","webpack:///./node_modules/@theia/filesystem/src/browser/filesystem-watcher.ts","webpack:///./node_modules/@theia/filesystem/src/common/filesystem-utils.ts","webpack:///./node_modules/@theia/filesystem/src/common/filesystem-watcher-protocol.ts","webpack:///./node_modules/@theia/filesystem/src/common/index.ts"],"names":[],"mappings":"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","file":"1.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport {\n    createPreferenceProxy,\n    PreferenceProxy,\n    PreferenceService,\n    PreferenceSchema,\n    PreferenceContribution\n} from '@theia/core/lib/browser/preferences';\n\nexport const filesystemPreferenceSchema: PreferenceSchema = {\n    'type': 'object',\n    'properties': {\n        'files.watcherExclude': {\n            'description': 'List of paths to exclude from the filesystem watcher',\n            'additionalProperties': {\n                'type': 'boolean'\n            },\n            'default': {\n                '**/.git/objects/**': true,\n                '**/.git/subtree-cache/**': true,\n                '**/node_modules/**': true\n            },\n            'scope': 'resource'\n        },\n        'files.exclude': {\n            'type': 'object',\n            'default': { '**/.git': true, '**/.svn': true, '**/.hg': true, '**/CVS': true, '**/.DS_Store': true },\n            'description': 'Configure glob patterns for excluding files and folders.',\n            'scope': 'resource'\n        },\n        'files.enableTrash': {\n            'type': 'boolean',\n            'default': true,\n            'description': 'Moves files/folders to the OS trash (recycle bin on Windows) when deleting. Disabling this will delete files/folders permanently.'\n        },\n        'files.associations': {\n            'type': 'object',\n            'description': 'Configure file associations to languages (e.g. \\\"*.extension\\\": \\\"html\\\"). \\\nThese have precedence over the default associations of the languages installed.'\n        }\n    }\n};\n\nexport interface FileSystemConfiguration {\n    'files.watcherExclude': { [globPattern: string]: boolean };\n    'files.exclude': { [key: string]: boolean };\n    'files.enableTrash': boolean;\n    'files.associations': { [filepattern: string]: string };\n}\n\nexport const FileSystemPreferences = Symbol('FileSystemPreferences');\nexport type FileSystemPreferences = PreferenceProxy<FileSystemConfiguration>;\n\nexport function createFileSystemPreferences(preferences: PreferenceService): FileSystemPreferences {\n    return createPreferenceProxy(preferences, filesystemPreferenceSchema);\n}\n\nexport function bindFileSystemPreferences(bind: interfaces.Bind): void {\n    bind(FileSystemPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createFileSystemPreferences(preferences);\n    }).inSingletonScope();\n\n    bind(PreferenceContribution).toConstantValue({ schema: filesystemPreferenceSchema });\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { Emitter, WaitUntilEvent } from '@theia/core/lib/common/event';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileSystem, FileShouldOverwrite } from '../common/filesystem';\nimport { DidFilesChangedParams, FileChangeType, FileSystemWatcherServer, WatchOptions } from '../common/filesystem-watcher-protocol';\nimport { FileSystemPreferences } from './filesystem-preferences';\n\nexport {\n    FileChangeType\n};\n\nexport interface FileChange {\n    uri: URI;\n    type: FileChangeType;\n}\nexport namespace FileChange {\n    export function isUpdated(change: FileChange, uri: URI): boolean {\n        return change.type === FileChangeType.UPDATED && uri.toString() === change.uri.toString();\n    }\n    export function isAdded(change: FileChange, uri: URI): boolean {\n        return change.type === FileChangeType.ADDED && uri.toString() === change.uri.toString();\n    }\n    export function isDeleted(change: FileChange, uri: URI): boolean {\n        return change.type === FileChangeType.DELETED && change.uri.isEqualOrParent(uri);\n    }\n    export function isAffected(change: FileChange, uri: URI): boolean {\n        return isDeleted(change, uri) || uri.toString() === change.uri.toString();\n    }\n    export function isChanged(change: FileChange, uri: URI): boolean {\n        return !isDeleted(change, uri) && uri.toString() === change.uri.toString();\n    }\n}\n\nexport type FileChangeEvent = FileChange[];\nexport namespace FileChangeEvent {\n    export function isUpdated(event: FileChangeEvent, uri: URI): boolean {\n        return event.some(change => FileChange.isUpdated(change, uri));\n    }\n    export function isAdded(event: FileChangeEvent, uri: URI): boolean {\n        return event.some(change => FileChange.isAdded(change, uri));\n    }\n    export function isDeleted(event: FileChangeEvent, uri: URI): boolean {\n        return event.some(change => FileChange.isDeleted(change, uri));\n    }\n    export function isAffected(event: FileChangeEvent, uri: URI): boolean {\n        return event.some(change => FileChange.isAffected(change, uri));\n    }\n    export function isChanged(event: FileChangeEvent, uri: URI): boolean {\n        return !isDeleted(event, uri) && event.some(change => FileChange.isChanged(change, uri));\n    }\n}\n\nexport interface FileMoveEvent extends WaitUntilEvent {\n    sourceUri: URI\n    targetUri: URI\n}\nexport namespace FileMoveEvent {\n    export function isRename({ sourceUri, targetUri }: FileMoveEvent): boolean {\n        return sourceUri.parent.toString() === targetUri.parent.toString();\n    }\n}\n\nexport interface FileEvent extends WaitUntilEvent {\n    uri: URI\n}\n\nexport class FileOperationEmitter<E extends WaitUntilEvent> implements Disposable {\n\n    protected readonly onWillEmitter = new Emitter<E>();\n    readonly onWill = this.onWillEmitter.event;\n\n    protected readonly onDidFailEmitter = new Emitter<E>();\n    readonly onDidFail = this.onDidFailEmitter.event;\n\n    protected readonly onDidEmitter = new Emitter<E>();\n    readonly onDid = this.onDidEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection(\n        this.onWillEmitter,\n        this.onDidFailEmitter,\n        this.onDidEmitter\n    );\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    async fireWill(event: Pick<E, Exclude<keyof E, 'waitUntil'>>): Promise<void> {\n        await WaitUntilEvent.fire(this.onWillEmitter, event);\n    }\n\n    async fireDid(failed: boolean, event: Pick<E, Exclude<keyof E, 'waitUntil'>>): Promise<void> {\n        const onDidEmitter = failed ? this.onDidFailEmitter : this.onDidEmitter;\n        await WaitUntilEvent.fire(onDidEmitter, event);\n    }\n\n}\n\n/**\n * React to file system events, including calls originating from the\n * application or event coming from the system's filesystem directly\n * (actual file watching).\n *\n * `on(will|did)(create|rename|delete)` events solely come from application\n * usage, not from actual filesystem.\n */\n@injectable()\nexport class FileSystemWatcher implements Disposable {\n\n    protected readonly toDispose = new DisposableCollection();\n    protected readonly toRestartAll = new DisposableCollection();\n\n    protected readonly onFileChangedEmitter = new Emitter<FileChangeEvent>();\n    readonly onFilesChanged = this.onFileChangedEmitter.event;\n\n    protected readonly fileCreateEmitter = new FileOperationEmitter<FileEvent>();\n    readonly onWillCreate = this.fileCreateEmitter.onWill;\n    readonly onDidFailCreate = this.fileCreateEmitter.onDidFail;\n    readonly onDidCreate = this.fileCreateEmitter.onDid;\n\n    protected readonly fileDeleteEmitter = new FileOperationEmitter<FileEvent>();\n    readonly onWillDelete = this.fileDeleteEmitter.onWill;\n    readonly onDidFailDelete = this.fileDeleteEmitter.onDidFail;\n    readonly onDidDelete = this.fileDeleteEmitter.onDid;\n\n    protected readonly fileMoveEmitter = new FileOperationEmitter<FileMoveEvent>();\n    readonly onWillMove = this.fileMoveEmitter.onWill;\n    readonly onDidFailMove = this.fileMoveEmitter.onDidFail;\n    readonly onDidMove = this.fileMoveEmitter.onDid;\n\n    @inject(FileSystemWatcherServer)\n    protected readonly server: FileSystemWatcherServer;\n\n    @inject(FileSystemPreferences)\n    protected readonly preferences: FileSystemPreferences;\n\n    @inject(FileSystem)\n    protected readonly filesystem: FileSystem;\n\n    // This is injected so we can avoid including UI stuff and make this class\n    // unit-testable.\n    @inject(FileShouldOverwrite)\n    protected readonly shouldOverwrite: FileShouldOverwrite;\n\n    @postConstruct()\n    protected init(): void {\n        this.toDispose.push(this.onFileChangedEmitter);\n        this.toDispose.push(this.fileDeleteEmitter);\n        this.toDispose.push(this.fileMoveEmitter);\n\n        this.toDispose.push(this.server);\n        this.server.setClient({\n            onDidFilesChanged: e => this.onDidFilesChanged(e)\n        });\n\n        this.toDispose.push(this.preferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'files.watcherExclude') {\n                this.toRestartAll.dispose();\n            }\n        }));\n\n        this.filesystem.setClient({\n            /* eslint-disable no-void */\n            shouldOverwrite: this.shouldOverwrite.bind(this),\n            willCreate: async uri => void await this.fileCreateEmitter.fireWill({ uri: new URI(uri) }),\n            didCreate: async (uri, failed) => void await this.fileCreateEmitter.fireDid(failed, { uri: new URI(uri) }),\n            willDelete: async uri => void await this.fileDeleteEmitter.fireWill({ uri: new URI(uri) }),\n            didDelete: async (uri, failed) => void await this.fileDeleteEmitter.fireDid(failed, { uri: new URI(uri) }),\n            willMove: async (sourceUri, targetUri) => void await this.fileMoveEmitter.fireWill({ sourceUri: new URI(sourceUri), targetUri: new URI(targetUri) }),\n            didMove: async (sourceUri, targetUri, failed) => void await this.fileMoveEmitter.fireDid(failed, { sourceUri: new URI(sourceUri), targetUri: new URI(targetUri) }),\n            /* eslint-enable no-void */\n        });\n    }\n\n    /**\n     * Stop watching.\n     */\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    protected onDidFilesChanged(event: DidFilesChangedParams): void {\n        const changes = event.changes.map(change => <FileChange>{\n            uri: new URI(change.uri),\n            type: change.type\n        });\n        this.onFileChangedEmitter.fire(changes);\n    }\n\n    /**\n     * Start file watching under the given uri.\n     *\n     * Resolve when watching is started.\n     * Return a disposable to stop file watching under the given uri.\n     */\n    watchFileChanges(uri: URI): Promise<Disposable> {\n        return this.createWatchOptions(uri.toString())\n            .then(options =>\n                this.server.watchFileChanges(uri.toString(), options)\n            )\n            .then(watcher => {\n                const toDispose = new DisposableCollection();\n                const toStop = Disposable.create(() =>\n                    this.server.unwatchFileChanges(watcher)\n                );\n                const toRestart = toDispose.push(toStop);\n                this.toRestartAll.push(Disposable.create(() => {\n                    toRestart.dispose();\n                    toStop.dispose();\n                    this.watchFileChanges(uri).then(disposable =>\n                        toDispose.push(disposable)\n                    );\n                }));\n                return toDispose;\n            });\n    }\n\n    protected createWatchOptions(uri: string): Promise<WatchOptions> {\n        return this.getIgnored(uri).then(ignored => ({\n            // always ignore temporary upload files\n            ignored: ignored.concat('**/theia_upload_*')\n        }));\n    }\n\n    protected async getIgnored(uri: string): Promise<string[]> {\n        const patterns = this.preferences.get('files.watcherExclude', undefined, uri);\n        return Object.keys(patterns).filter(pattern => patterns[pattern]);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { FileStat } from './filesystem';\nimport URI from '@theia/core/lib/common/uri';\nimport { Path } from '@theia/core/lib/common';\n\nexport namespace FileSystemUtils {\n\n    /**\n     * Tildify path, replacing `home` with `~` if user's `home` is present at the beginning of the path.\n     * This is a non-operation for Windows.\n     *\n     * @param resourcePath\n     * @param home\n     */\n    export function tildifyPath(resourcePath: string, home: string): string {\n        const path = new Path(resourcePath);\n        const isWindows = path.root && Path.isDrive(path.root.base);\n\n        if (!isWindows && home && resourcePath.indexOf(`${home}/`) === 0) {\n            return resourcePath.replace(`${home}/`, '~/');\n        }\n\n        return resourcePath;\n    }\n\n    /**\n     * Generate unique URI for a given parent which does not collide\n     *\n     * @param parentUri the `URI` of the parent\n     * @param parent the `FileStat` of the parent\n     * @param name the resource name\n     * @param ext the resource extension\n     */\n    export function generateUniqueResourceURI(parentUri: URI, parent: FileStat, name: string, ext: string = ''): URI {\n        const children = !parent.children ? [] : parent.children!.map(child => new URI(child.uri));\n\n        let index = 1;\n        let base = name + ext;\n        while (children.some(child => child.path.base === base)) {\n            index = index + 1;\n            base = name + '_' + index + ext;\n        }\n        return parentUri.resolve(base);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { JsonRpcServer, JsonRpcProxy } from '@theia/core';\n\nexport const fileSystemWatcherPath = '/services/fs-watcher';\n\nexport const FileSystemWatcherServer = Symbol('FileSystemWatcherServer');\nexport interface FileSystemWatcherServer extends JsonRpcServer<FileSystemWatcherClient> {\n    /**\n     * Start file watching for the given param.\n     * Resolve when watching is started.\n     * Return a watcher id.\n     */\n    watchFileChanges(uri: string, options?: WatchOptions): Promise<number>;\n\n    /**\n     * Stop file watching for the given id.\n     * Resolve when watching is stopped.\n     */\n    unwatchFileChanges(watcher: number): Promise<void>;\n}\n\nexport interface FileSystemWatcherClient {\n    /**\n     * Notify when files under watched uris are changed.\n     */\n    onDidFilesChanged(event: DidFilesChangedParams): void;\n}\n\nexport interface WatchOptions {\n    ignored: string[];\n}\n\nexport interface DidFilesChangedParams {\n    changes: FileChange[];\n}\n\nexport interface FileChange {\n    uri: string;\n    type: FileChangeType;\n}\n\nexport enum FileChangeType {\n    UPDATED = 0,\n    ADDED = 1,\n    DELETED = 2\n}\n\nexport const FileSystemWatcherServerProxy = Symbol('FileSystemWatcherServerProxy');\nexport type FileSystemWatcherServerProxy = JsonRpcProxy<FileSystemWatcherServer>;\n\n@injectable()\nexport class ReconnectingFileSystemWatcherServer implements FileSystemWatcherServer {\n\n    protected watcherSequence = 1;\n    protected readonly watchParams = new Map<number, {\n        uri: string;\n        options?: WatchOptions\n    }>();\n    protected readonly localToRemoteWatcher = new Map<number, number>();\n\n    constructor(\n        @inject(FileSystemWatcherServerProxy) protected readonly proxy: FileSystemWatcherServerProxy\n    ) {\n        const onInitialized = this.proxy.onDidOpenConnection(() => {\n            // skip reconnection on the first connection\n            onInitialized.dispose();\n            this.proxy.onDidOpenConnection(() => this.reconnect());\n        });\n    }\n\n    protected reconnect(): void {\n        for (const [watcher, { uri, options }] of this.watchParams.entries()) {\n            this.doWatchFileChanges(watcher, uri, options);\n        }\n    }\n\n    dispose(): void {\n        this.proxy.dispose();\n    }\n\n    watchFileChanges(uri: string, options?: WatchOptions): Promise<number> {\n        const watcher = this.watcherSequence++;\n        this.watchParams.set(watcher, { uri, options });\n        return this.doWatchFileChanges(watcher, uri, options);\n    }\n\n    protected doWatchFileChanges(watcher: number, uri: string, options?: WatchOptions): Promise<number> {\n        return this.proxy.watchFileChanges(uri, options).then(remote => {\n            this.localToRemoteWatcher.set(watcher, remote);\n            return watcher;\n        });\n    }\n\n    unwatchFileChanges(watcher: number): Promise<void> {\n        this.watchParams.delete(watcher);\n        const remote = this.localToRemoteWatcher.get(watcher);\n        if (remote) {\n            this.localToRemoteWatcher.delete(watcher);\n            return this.proxy.unwatchFileChanges(remote);\n        }\n        return Promise.resolve();\n    }\n\n    setClient(client: FileSystemWatcherClient | undefined): void {\n        this.proxy.setClient(client);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './filesystem';\nexport * from './filesystem-utils';\n"],"sourceRoot":""}