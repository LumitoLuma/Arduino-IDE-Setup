"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApplicationShell = void 0;
var inversify_1 = require("inversify");
var browser_1 = require("@theia/editor/lib/browser");
var command_1 = require("@theia/core/lib/common/command");
var output_widget_1 = require("@theia/output/lib/browser/output-widget");
var browser_2 = require("@theia/core/lib/browser");
var protocol_1 = require("../../../common/protocol");
var editor_mode_1 = require("../../editor-mode");
var save_as_sketch_1 = require("../../contributions/save-as-sketch");
var sketches_service_client_impl_1 = require("../../../common/protocol/sketches-service-client-impl");
var ApplicationShell = /** @class */ (function (_super) {
    __extends(ApplicationShell, _super);
    function ApplicationShell() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ApplicationShell.prototype.track = function (widget) {
        _super.prototype.track.call(this, widget);
        if (widget instanceof output_widget_1.OutputWidget) {
            widget.title.closable = false; // TODO: https://arduino.slack.com/archives/C01698YT7S4/p1598011990133700
        }
        if (!this.editorMode.proMode && widget instanceof browser_1.EditorWidget) {
            // Make the editor un-closeable asynchronously.
            this.sketchesServiceClient.currentSketch().then(function (sketch) {
                if (sketch) {
                    if (protocol_1.Sketch.isInSketch(widget.editor.uri, sketch)) {
                        widget.title.closable = false;
                    }
                }
            });
        }
    };
    ApplicationShell.prototype.addWidget = function (widget, options) {
        if (options === void 0) { options = {}; }
        return __awaiter(this, void 0, void 0, function () {
            var ref, area, tabBar, last;
            return __generator(this, function (_a) {
                // By default, Theia open a widget **next** to the currently active in the target area.
                // Instead of this logic, we want to open the new widget after the last of the target area.
                if (!widget.id) {
                    console.error('Widgets added to the application shell must have a unique id property.');
                    return [2 /*return*/];
                }
                ref = options.ref;
                area = options.area || 'main';
                if (!ref && (area === 'main' || area === 'bottom')) {
                    tabBar = this.getTabBarFor(area);
                    if (tabBar) {
                        last = tabBar.titles[tabBar.titles.length - 1];
                        if (last) {
                            ref = last.owner;
                        }
                    }
                }
                return [2 /*return*/, _super.prototype.addWidget.call(this, widget, __assign(__assign({}, options), { ref: ref }))];
            });
        });
    };
    ApplicationShell.prototype.saveAll = function () {
        return __awaiter(this, void 0, void 0, function () {
            var options;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, _super.prototype.saveAll.call(this)];
                    case 1:
                        _a.sent();
                        options = { execOnlyIfTemp: true, openAfterMove: true };
                        return [4 /*yield*/, this.commandService.executeCommand(save_as_sketch_1.SaveAsSketch.Commands.SAVE_AS_SKETCH.id, options)];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    __decorate([
        inversify_1.inject(editor_mode_1.EditorMode),
        __metadata("design:type", editor_mode_1.EditorMode)
    ], ApplicationShell.prototype, "editorMode", void 0);
    __decorate([
        inversify_1.inject(command_1.CommandService),
        __metadata("design:type", Object)
    ], ApplicationShell.prototype, "commandService", void 0);
    __decorate([
        inversify_1.inject(sketches_service_client_impl_1.SketchesServiceClientImpl),
        __metadata("design:type", sketches_service_client_impl_1.SketchesServiceClientImpl)
    ], ApplicationShell.prototype, "sketchesServiceClient", void 0);
    ApplicationShell = __decorate([
        inversify_1.injectable()
    ], ApplicationShell);
    return ApplicationShell;
}(browser_2.ApplicationShell));
exports.ApplicationShell = ApplicationShell;
//# sourceMappingURL=application-shell.js.map