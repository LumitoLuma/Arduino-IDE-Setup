"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var event_1 = require("@theia/core/lib/common/event");
var MonitorServiceClientImpl = /** @class */ (function () {
    function MonitorServiceClientImpl() {
        this.onReadEmitter = new event_1.Emitter();
        this.onErrorEmitter = new event_1.Emitter();
        this.onRead = this.onReadEmitter.event;
        this.onError = this.onErrorEmitter.event;
    }
    MonitorServiceClientImpl.prototype.notifyRead = function (event) {
        this.onReadEmitter.fire(event);
        var data = event.data;
        console.debug("Received data: " + data);
    };
    MonitorServiceClientImpl.prototype.notifyError = function (error) {
        this.onErrorEmitter.fire(error);
    };
    MonitorServiceClientImpl = __decorate([
        inversify_1.injectable()
    ], MonitorServiceClientImpl);
    return MonitorServiceClientImpl;
}());
exports.MonitorServiceClientImpl = MonitorServiceClientImpl;
//# sourceMappingURL=monitor-service-client-impl.js.map