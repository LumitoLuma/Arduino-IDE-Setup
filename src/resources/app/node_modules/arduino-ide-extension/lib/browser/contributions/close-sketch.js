"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CloseSketch = void 0;
var inversify_1 = require("inversify");
var electron_1 = require("electron");
var arduino_menus_1 = require("../menu/arduino-menus");
var contribution_1 = require("./contribution");
var save_as_sketch_1 = require("./save-as-sketch");
var browser_1 = require("@theia/editor/lib/browser");
var monaco_editor_1 = require("@theia/monaco/lib/browser/monaco-editor");
var CloseSketch = /** @class */ (function (_super) {
    __extends(CloseSketch, _super);
    function CloseSketch() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CloseSketch_1 = CloseSketch;
    CloseSketch.prototype.registerCommands = function (registry) {
        var _this = this;
        registry.registerCommand(CloseSketch_1.Commands.CLOSE_SKETCH, {
            execute: function () { return __awaiter(_this, void 0, void 0, function () {
                var sketch, isTemp, uri, _a, response, saved;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.sketchServiceClient.currentSketch()];
                        case 1:
                            sketch = _b.sent();
                            if (!sketch) {
                                return [2 /*return*/];
                            }
                            return [4 /*yield*/, this.sketchService.isTemp(sketch)];
                        case 2:
                            isTemp = _b.sent();
                            return [4 /*yield*/, this.sketchServiceClient.currentSketchFile()];
                        case 3:
                            uri = _b.sent();
                            if (!uri) {
                                return [2 /*return*/];
                            }
                            _a = isTemp;
                            if (!_a) return [3 /*break*/, 5];
                            return [4 /*yield*/, this.wasTouched(uri)];
                        case 4:
                            _a = (_b.sent());
                            _b.label = 5;
                        case 5:
                            if (!_a) return [3 /*break*/, 8];
                            return [4 /*yield*/, electron_1.remote.dialog.showMessageBox({
                                    type: 'question',
                                    buttons: ["Don't Save", 'Cancel', 'Save'],
                                    message: 'Do you want to save changes to this sketch before closing?',
                                    detail: "If you don't save, your changes will be lost."
                                })];
                        case 6:
                            response = (_b.sent()).response;
                            if (response === 1) { // Cancel
                                return [2 /*return*/];
                            }
                            if (!(response === 2)) return [3 /*break*/, 8];
                            return [4 /*yield*/, this.commandService.executeCommand(save_as_sketch_1.SaveAsSketch.Commands.SAVE_AS_SKETCH.id, { openAfterMove: false, execOnlyIfTemp: true })];
                        case 7:
                            saved = _b.sent();
                            if (!saved) { // If it was not saved, do bail the close.
                                return [2 /*return*/];
                            }
                            _b.label = 8;
                        case 8:
                            window.close();
                            return [2 /*return*/];
                    }
                });
            }); }
        });
    };
    CloseSketch.prototype.registerMenus = function (registry) {
        registry.registerMenuAction(arduino_menus_1.ArduinoMenus.FILE__SKETCH_GROUP, {
            commandId: CloseSketch_1.Commands.CLOSE_SKETCH.id,
            label: 'Close',
            order: '5'
        });
    };
    CloseSketch.prototype.registerKeybindings = function (registry) {
        registry.registerKeybinding({
            command: CloseSketch_1.Commands.CLOSE_SKETCH.id,
            keybinding: 'CtrlCmd+W'
        });
    };
    /**
     * If the file was ever touched/modified. We get this based on the `version` of the monaco model.
     */
    CloseSketch.prototype.wasTouched = function (uri) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var editorWidget, editor, versionId;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.editorManager.getByUri(new contribution_1.URI(uri))];
                    case 1:
                        editorWidget = _b.sent();
                        if (editorWidget) {
                            editor = editorWidget.editor;
                            if (editor instanceof monaco_editor_1.MonacoEditor) {
                                versionId = (_a = editor.getControl().getModel()) === null || _a === void 0 ? void 0 : _a.getVersionId();
                                if (Number.isInteger(versionId) && versionId > 1) {
                                    return [2 /*return*/, true];
                                }
                            }
                        }
                        return [2 /*return*/, false];
                }
            });
        });
    };
    var CloseSketch_1;
    __decorate([
        inversify_1.inject(browser_1.EditorManager),
        __metadata("design:type", browser_1.EditorManager)
    ], CloseSketch.prototype, "editorManager", void 0);
    CloseSketch = CloseSketch_1 = __decorate([
        inversify_1.injectable()
    ], CloseSketch);
    return CloseSketch;
}(contribution_1.SketchContribution));
exports.CloseSketch = CloseSketch;
(function (CloseSketch) {
    var Commands;
    (function (Commands) {
        Commands.CLOSE_SKETCH = {
            id: 'arduino-close-sketch'
        };
    })(Commands = CloseSketch.Commands || (CloseSketch.Commands = {}));
})(CloseSketch = exports.CloseSketch || (exports.CloseSketch = {}));
exports.CloseSketch = CloseSketch;
//# sourceMappingURL=close-sketch.js.map