"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var event_1 = require("@theia/core/lib/common/event");
var logger_1 = require("@theia/core/lib/common/logger");
var message_service_1 = require("@theia/core/lib/common/message-service");
var storage_service_1 = require("@theia/core/lib/browser/storage-service");
var CoreServiceClientImpl = /** @class */ (function () {
    function CoreServiceClientImpl() {
        this.onIndexUpdatedEmitter = new event_1.Emitter();
    }
    CoreServiceClientImpl.prototype.notifyIndexUpdated = function () {
        this.info('Index has been updated.');
        this.onIndexUpdatedEmitter.fire();
    };
    Object.defineProperty(CoreServiceClientImpl.prototype, "onIndexUpdated", {
        get: function () {
            return this.onIndexUpdatedEmitter.event;
        },
        enumerable: true,
        configurable: true
    });
    CoreServiceClientImpl.prototype.info = function (message) {
        this.messageService.info(message, { timeout: 3000 });
        this.logger.info(message);
    };
    __decorate([
        inversify_1.inject(logger_1.ILogger),
        __metadata("design:type", Object)
    ], CoreServiceClientImpl.prototype, "logger", void 0);
    __decorate([
        inversify_1.inject(message_service_1.MessageService),
        __metadata("design:type", message_service_1.MessageService)
    ], CoreServiceClientImpl.prototype, "messageService", void 0);
    __decorate([
        inversify_1.inject(storage_service_1.LocalStorageService),
        __metadata("design:type", storage_service_1.LocalStorageService)
    ], CoreServiceClientImpl.prototype, "storageService", void 0);
    CoreServiceClientImpl = __decorate([
        inversify_1.injectable()
    ], CoreServiceClientImpl);
    return CoreServiceClientImpl;
}());
exports.CoreServiceClientImpl = CoreServiceClientImpl;
//# sourceMappingURL=core-service-client-impl.js.map