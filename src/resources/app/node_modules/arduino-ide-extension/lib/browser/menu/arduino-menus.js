"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArduinoMenus = void 0;
var menu_1 = require("@theia/core/lib/common/menu");
var common_frontend_contribution_1 = require("@theia/core/lib/browser/common-frontend-contribution");
var core_1 = require("@theia/core");
var ArduinoMenus;
(function (ArduinoMenus) {
    // Main menu
    // -- File
    ArduinoMenus.FILE__SKETCH_GROUP = __spread(common_frontend_contribution_1.CommonMenus.FILE, ['0_sketch']);
    ArduinoMenus.FILE__PRINT_GROUP = __spread(common_frontend_contribution_1.CommonMenus.FILE, ['1_print']);
    // XXX: on macOS, the settings group is not under `File`
    ArduinoMenus.FILE__SETTINGS_GROUP = __spread((core_1.isOSX ? menu_1.MAIN_MENU_BAR : common_frontend_contribution_1.CommonMenus.FILE), ['2_settings']);
    ArduinoMenus.FILE__QUIT_GROUP = __spread(common_frontend_contribution_1.CommonMenus.FILE, ['3_quit']);
    // -- Edit
    // `Copy`, `Copy to Forum`, `Paste`, etc.
    // Note: `1_undo` is the first group from Theia, we start with `2`
    ArduinoMenus.EDIT__TEXT_CONTROL_GROUP = __spread(common_frontend_contribution_1.CommonMenus.EDIT, ['2_text_control']);
    // `Comment/Uncomment`, etc.
    ArduinoMenus.EDIT__CODE_CONTROL_GROUP = __spread(common_frontend_contribution_1.CommonMenus.EDIT, ['3_code_control']);
    ArduinoMenus.EDIT__FONT_CONTROL_GROUP = __spread(common_frontend_contribution_1.CommonMenus.EDIT, ['4_font_control']);
    ArduinoMenus.EDIT__FIND_GROUP = __spread(common_frontend_contribution_1.CommonMenus.EDIT, ['5_find']);
    // -- Sketch
    ArduinoMenus.SKETCH = __spread(menu_1.MAIN_MENU_BAR, ['3_sketch']);
    ArduinoMenus.SKETCH__MAIN_GROUP = __spread(ArduinoMenus.SKETCH, ['0_main']);
    ArduinoMenus.SKETCH__UTILS_GROUP = __spread(ArduinoMenus.SKETCH, ['1_utils']);
    // -- Tools
    ArduinoMenus.TOOLS = __spread(menu_1.MAIN_MENU_BAR, ['4_tools']);
    // `Auto Format`, `Library Manager...`, `Boards Manager...`
    ArduinoMenus.TOOLS__MAIN_GROUP = __spread(ArduinoMenus.TOOLS, ['0_main']);
    // Core settings, such as `Processor` and `Programmers` for the board.
    ArduinoMenus.TOOLS__BOARD_SETTINGS_GROUP = __spread(ArduinoMenus.TOOLS, ['1_board_settings']);
    // Context menu
    // -- Open
    ArduinoMenus.OPEN_SKETCH__CONTEXT = ['arduino-open-sketch--context'];
    ArduinoMenus.OPEN_SKETCH__CONTEXT__OPEN_GROUP = __spread(ArduinoMenus.OPEN_SKETCH__CONTEXT, ['0_open']);
    ArduinoMenus.OPEN_SKETCH__CONTEXT__RECENT_GROUP = __spread(ArduinoMenus.OPEN_SKETCH__CONTEXT, ['1_recent']);
    ArduinoMenus.OPEN_SKETCH__CONTEXT__EXAMPLES_GROUP = __spread(ArduinoMenus.OPEN_SKETCH__CONTEXT, ['2_examples']);
    // -- Sketch control
    ArduinoMenus.SKETCH_CONTROL__CONTEXT = ['arduino-sketch-control--context'];
    // `New Tab`, `Rename`, `Delete`
    ArduinoMenus.SKETCH_CONTROL__CONTEXT__MAIN_GROUP = __spread(ArduinoMenus.SKETCH_CONTROL__CONTEXT, ['0_main']);
    // `Previous Tab`, `Next Tab`
    ArduinoMenus.SKETCH_CONTROL__CONTEXT__NAVIGATION_GROUP = __spread(ArduinoMenus.SKETCH_CONTROL__CONTEXT, ['1_navigation']);
    // Sketch files opened in editors
    ArduinoMenus.SKETCH_CONTROL__CONTEXT__RESOURCES_GROUP = __spread(ArduinoMenus.SKETCH_CONTROL__CONTEXT, ['2_resources']);
})(ArduinoMenus = exports.ArduinoMenus || (exports.ArduinoMenus = {}));
//# sourceMappingURL=arduino-menus.js.map