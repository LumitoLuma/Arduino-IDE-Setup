"use strict";
/********************************************************************************
 * Copyright (C) 2020 Red Hat, Inc. and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InPluginFileSystemProxy = void 0;
var util_1 = require("util");
var types_impl_1 = require("./types-impl");
/**
 * This class is managing FileSystem proxy
 */
var InPluginFileSystemProxy = /** @class */ (function () {
    function InPluginFileSystemProxy(proxy) {
        this.proxy = proxy;
    }
    InPluginFileSystemProxy.prototype.stat = function (uri) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                try {
                    return [2 /*return*/, this.proxy.$stat(uri)];
                }
                catch (error) {
                    throw this.handleError(error);
                }
                return [2 /*return*/];
            });
        });
    };
    InPluginFileSystemProxy.prototype.readDirectory = function (uri) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                try {
                    return [2 /*return*/, this.proxy.$readDirectory(uri)];
                }
                catch (error) {
                    throw this.handleError(error);
                }
                return [2 /*return*/];
            });
        });
    };
    InPluginFileSystemProxy.prototype.createDirectory = function (uri) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                try {
                    return [2 /*return*/, this.proxy.$createDirectory(uri)];
                }
                catch (error) {
                    throw this.handleError(error);
                }
                return [2 /*return*/];
            });
        });
    };
    InPluginFileSystemProxy.prototype.readFile = function (uri) {
        return __awaiter(this, void 0, void 0, function () {
            var val, error_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.proxy.$readFile(uri)];
                    case 1:
                        val = _a.sent();
                        return [2 /*return*/, new util_1.TextEncoder().encode(val)];
                    case 2:
                        error_1 = _a.sent();
                        throw this.handleError(error_1);
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    InPluginFileSystemProxy.prototype.writeFile = function (uri, content) {
        return __awaiter(this, void 0, void 0, function () {
            var encoded;
            return __generator(this, function (_a) {
                encoded = new util_1.TextDecoder().decode(content);
                try {
                    return [2 /*return*/, this.proxy.$writeFile(uri, encoded)];
                }
                catch (error) {
                    throw this.handleError(error);
                }
                return [2 /*return*/];
            });
        });
    };
    InPluginFileSystemProxy.prototype.delete = function (uri, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                try {
                    return [2 /*return*/, this.proxy.$delete(uri, __assign({ recursive: false }, options))];
                }
                catch (error) {
                    throw this.handleError(error);
                }
                return [2 /*return*/];
            });
        });
    };
    InPluginFileSystemProxy.prototype.rename = function (source, target, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                try {
                    return [2 /*return*/, this.proxy.$rename(source, target, __assign({ overwrite: false }, options))];
                }
                catch (error) {
                    throw this.handleError(error);
                }
                return [2 /*return*/];
            });
        });
    };
    InPluginFileSystemProxy.prototype.copy = function (source, target, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                try {
                    return [2 /*return*/, this.proxy.$copy(source, target, __assign({ overwrite: false }, options))];
                }
                catch (error) {
                    throw this.handleError(error);
                }
                return [2 /*return*/];
            });
        });
    };
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    InPluginFileSystemProxy.prototype.handleError = function (error) {
        if (!(error instanceof Error)) {
            return new types_impl_1.FileSystemError(String(error));
        }
        // file system error
        return new types_impl_1.FileSystemError(error.message, error.name);
    };
    return InPluginFileSystemProxy;
}());
exports.InPluginFileSystemProxy = InPluginFileSystemProxy;
//# sourceMappingURL=in-plugin-filesystem-proxy.js.map